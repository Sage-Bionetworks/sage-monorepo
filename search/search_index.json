{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Sage Monorepo","text":"<p>Build robust biomedical research apps faster</p> <p> </p>"},{"location":"#overview","title":"Overview","text":"<p>Developers building components in silos can lead to a number of problems, including duplicated components, increased maintenance, and reduced visibility.</p> <p>Sage Monorepo addresses these problems by providing a centralized repository for standardized, reusable components. This solution also improves the developer experience (DX), which can lead to increased morale, productivity, retention, and knowledge transfer.</p>"},{"location":"#why-sage-monorepo","title":"Why Sage Monorepo?","text":"<p>Build Products, Not Build Systems - Focus on what matters: solving biomedical research challenges, not wrestling with development infrastructure.</p> <ul> <li>Shared Components: Reusable libraries and components across all projects</li> <li>Modern Tooling: Nx workspace with TypeScript, Angular, Java, Python, and R support</li> <li>Streamlined CI/CD: Automated testing, building, and deployment workflows</li> <li>Developer Experience: Enhanced productivity with intelligent caching and task orchestration</li> </ul>"},{"location":"#getting-started","title":"Getting Started","text":"<p>Ready to start building? Choose your path:</p> \ud83d\ude80 Quick Start <p>Jump right in with our local development setup</p> Get Started \u2192 \ud83d\udcda Learn the Basics <p>Understand the architecture and concepts</p> Learn More \u2192"},{"location":"#our-products","title":"Our Products","text":"<p>Explore the biomedical research platforms built with Sage Monorepo:</p> Product Description Links Agora High-dimensional human transcriptomic, proteomic, and metabolomic evidence for genes associated with Alzheimer's disease Docs \u2022 API AMP-ALS Accelerating Medicines Partnership for ALS research collaboration API BixArena Platform for biomedical data analysis competitions and challenges API Model-AD Resource for Alzheimer's disease model development and validation API OpenChallenges Cloud-native platform for biomedical challenges and citizen science data benchmarking Docs \u2022 API Synapse Collaborative platform for data sharing and analysis in biomedical research API"},{"location":"#platform-statistics","title":"Platform Statistics","text":"<p>Our monorepo powers a comprehensive ecosystem:</p> <ul> <li>145 Active Projects across multiple domains</li> <li>6 Major APIs with comprehensive documentation</li> <li>4 Programming Languages (TypeScript, Java, Python, R)</li> <li>Multiple Frameworks (Angular, Spring Boot, Flask, Shiny)</li> </ul>"},{"location":"#whats-new","title":"What's New","text":"<p>Check out our latest updates and improvements:</p> <ul> <li>Latest Updates - Recent releases and announcements</li> <li>Blog - Technical insights and developer stories</li> <li>Service Catalog - Complete project inventory</li> </ul>"},{"location":"#community","title":"Community","text":"<p>Join our community and contribute to advancing biomedical research:</p> <ul> <li>Contribute: Check our Contributing Guide</li> <li>Issues: Report bugs and request features on GitHub</li> <li>Support: Get help through our FAQ or community channels</li> </ul> <p>Ready to build the future of biomedical research? Get started today! |</p>"},{"location":"api/agora/","title":"Agora API","text":"<p>Version: 1.0.0</p>"},{"location":"api/agora/#servers","title":"Servers","text":"<ul> <li>Server: <code>http://localhost/v1</code></li> </ul>"},{"location":"api/agora/#api-endpoints","title":"API Endpoints","text":"<p>This API provides 11 endpoints:</p>"},{"location":"api/agora/#biodomains","title":"BioDomains","text":"<ul> <li> <p>GET <code>/biodomains</code>   List BioDomains</p> </li> <li> <p>GET <code>/biodomains/{ensg}</code>   Retrieve bioDomain for a given ENSG</p> </li> </ul> <p>Get bioDomain</p>"},{"location":"api/agora/#genes","title":"Genes","text":"<ul> <li>GET <code>/genes</code>   Retrieve a list of genes or filter by Ensembl gene IDs</li> </ul> <p>This endpoint returns all genes or filters genes by Ensembl gene IDs if provided.</p> <ul> <li> <p>GET <code>/genes/{ensg}</code>   Get gene details by Ensembl Gene ID</p> </li> <li> <p>GET <code>/genes/search</code>   Search Genes</p> </li> <li> <p>GET <code>/genes/comparison</code>   Get comparison genes based on category and subcategory</p> </li> <li> <p>GET <code>/genes/nominated</code>   Get nominated genes</p> </li> </ul> <p>Retrieves a list of genes with nominations and relevant information.</p>"},{"location":"api/agora/#dataversion","title":"Dataversion","text":"<ul> <li>GET <code>/dataversion</code>   Get dataversion</li> </ul>"},{"location":"api/agora/#distribution","title":"Distribution","text":"<ul> <li>GET <code>/distribution</code>   Get distribution data</li> </ul>"},{"location":"api/agora/#teams","title":"Teams","text":"<ul> <li> <p>GET <code>/teams</code>   List Teams</p> </li> <li> <p>GET <code>/teamMembers/{name}/image</code>   Get Team Member Image</p> </li> </ul>"},{"location":"api/agora/#interactive-documentation","title":"Interactive Documentation","text":"<p>For detailed API documentation with interactive examples, see:</p> <ul> <li>agora API Docs</li> </ul>"},{"location":"api/agora/#openapi-specification","title":"OpenAPI Specification","text":"<ul> <li>OpenAPI Spec (YAML)</li> </ul> <p>This documentation was automatically generated from the OpenAPI specification. Last updated: 2025-08-23T22:04:00.359Z</p>"},{"location":"api/amp-als/","title":"AMP-ALS API","text":"<p>Version: 1.0.0</p> <p>Discover, explore, and contribute to AMP-ALS datasets.</p>"},{"location":"api/amp-als/#servers","title":"Servers","text":"<ul> <li>Server: <code>http://localhost/v1</code></li> </ul>"},{"location":"api/amp-als/#api-endpoints","title":"API Endpoints","text":"<p>This API provides 3 endpoints:</p>"},{"location":"api/amp-als/#dataset","title":"Dataset","text":"<ul> <li> <p>GET <code>/datasets</code>   List datasets</p> </li> <li> <p>GET <code>/datasets/{datasetId}</code>   Get a dataset</p> </li> </ul> <p>Returns the dataset specified</p>"},{"location":"api/amp-als/#healthcheck","title":"HealthCheck","text":"<ul> <li>GET <code>/healthcheck</code>   Get health check information</li> </ul> <p>Get information about the health of the service</p>"},{"location":"api/amp-als/#interactive-documentation","title":"Interactive Documentation","text":"<p>For detailed API documentation with interactive examples, see:</p> <ul> <li>amp-als API Docs</li> </ul>"},{"location":"api/amp-als/#openapi-specification","title":"OpenAPI Specification","text":"<ul> <li>OpenAPI Spec (YAML)</li> </ul> <p>This documentation was automatically generated from the OpenAPI specification. Last updated: 2025-08-23T22:04:00.355Z</p>"},{"location":"api/bixarena/","title":"BixArena API","text":"<p>Version: 1.0.0</p> <p>Advance bioinformatics by evaluating and ranking AI agents.</p>"},{"location":"api/bixarena/#servers","title":"Servers","text":"<ul> <li>Server: <code>http://localhost/v1</code></li> </ul>"},{"location":"api/bixarena/#api-endpoints","title":"API Endpoints","text":"<p>This API provides 4 endpoints:</p>"},{"location":"api/bixarena/#leaderboard","title":"Leaderboard","text":"<ul> <li>GET <code>/leaderboards</code>   List all available leaderboards</li> </ul> <p>Get a list of all available leaderboards with their metadata</p> <ul> <li>GET <code>/leaderboards/{leaderboardId}</code>   Get leaderboard entries</li> </ul> <p>Get paginated leaderboard entries for a specific leaderboard</p> <ul> <li>GET <code>/leaderboards/{leaderboardId}/history/{modelId}</code>   Get model performance history</li> </ul> <p>Get historical performance data for a specific model in a leaderboard</p> <ul> <li>GET <code>/leaderboards/{leaderboardId}/snapshots</code>   Get leaderboard snapshots</li> </ul> <p>Get a paginated list of available snapshots for a leaderboard</p>"},{"location":"api/bixarena/#interactive-documentation","title":"Interactive Documentation","text":"<p>For detailed API documentation with interactive examples, see:</p> <ul> <li>bixarena API Docs</li> </ul>"},{"location":"api/bixarena/#openapi-specification","title":"OpenAPI Specification","text":"<ul> <li>OpenAPI Spec (YAML)</li> </ul> <p>This documentation was automatically generated from the OpenAPI specification. Last updated: 2025-08-23T22:04:00.349Z</p>"},{"location":"api/model-ad/","title":"Model-AD API","text":"<p>Version: 1.0.0</p>"},{"location":"api/model-ad/#servers","title":"Servers","text":"<ul> <li>Server: <code>http://localhost/v1</code></li> </ul>"},{"location":"api/model-ad/#api-endpoints","title":"API Endpoints","text":"<p>This API provides 4 endpoints:</p>"},{"location":"api/model-ad/#dataversion","title":"Dataversion","text":"<ul> <li>GET <code>/dataversion</code>   Get dataversion</li> </ul>"},{"location":"api/model-ad/#models","title":"Models","text":"<ul> <li>GET <code>/models/{name}</code>   Get details for a specific model</li> </ul> <p>Retrieve detailed information for a specific model by its name</p>"},{"location":"api/model-ad/#comparisontoolconfig","title":"ComparisonToolConfig","text":"<ul> <li>GET <code>/comparison-tool-config</code>   Get Comparison Tool configuration</li> </ul> <p>Retrieve the Comparison Tool configuration schema for the Model-AD application</p>"},{"location":"api/model-ad/#modeloverview","title":"ModelOverview","text":"<ul> <li>GET <code>/comparison-tools/model-overview</code>   Get model overview for comparison tools</li> </ul> <p>Returns a list of model overview objects for use in comparison tools.</p>"},{"location":"api/model-ad/#interactive-documentation","title":"Interactive Documentation","text":"<p>For detailed API documentation with interactive examples, see:</p> <ul> <li>model-ad API Docs</li> </ul>"},{"location":"api/model-ad/#openapi-specification","title":"OpenAPI Specification","text":"<ul> <li>OpenAPI Spec (YAML)</li> </ul> <p>This documentation was automatically generated from the OpenAPI specification. Last updated: 2025-08-23T22:04:00.347Z</p>"},{"location":"api/openchallenges/","title":"OpenChallenges API","text":"<p>Version: 1.0.0</p> <p>Discover, explore, and contribute to open biomedical challenges.</p>"},{"location":"api/openchallenges/#servers","title":"Servers","text":"<ul> <li>Server: <code>https://openchallenges.io/api/v1</code></li> </ul>"},{"location":"api/openchallenges/#api-endpoints","title":"API Endpoints","text":"<p>This API provides 17 endpoints:</p>"},{"location":"api/openchallenges/#authentication","title":"Authentication","text":"<ul> <li>POST <code>/auth/login</code>   User login</li> </ul> <p>Authenticate user and return JWT token</p>"},{"location":"api/openchallenges/#api-key","title":"API Key","text":"<ul> <li>GET <code>/auth/api-keys</code>   List API keys</li> </ul> <p>Get all API keys for the authenticated user</p> <ul> <li>POST <code>/auth/api-keys</code>   Create API key</li> </ul> <p>Generate a new API key for the authenticated user</p> <ul> <li>DELETE <code>/auth/api-keys/{keyId}</code>   Delete API key</li> </ul> <p>Revoke an API key</p>"},{"location":"api/openchallenges/#challenge","title":"Challenge","text":"<ul> <li> <p>GET <code>/challenges</code>   List challenges</p> </li> <li> <p>POST <code>/challenges</code>   Create a challenge</p> </li> </ul> <p>Create a challenge with the specified details</p> <ul> <li>GET <code>/challenges/{challengeId}</code>   Get a challenge</li> </ul> <p>Returns the challenge specified</p> <ul> <li>PUT <code>/challenges/{challengeId}</code>   Update an existing challenge</li> </ul> <p>Updates an existing challenge.</p> <ul> <li>DELETE <code>/challenges/{challengeId}</code>   Delete a challenge</li> </ul> <p>Deletes a challenge by its unique ID.</p> <ul> <li>GET <code>/challenges/{challengeId}/json-ld</code>   Get a challenge in JSON-LD format</li> </ul> <p>Returns the challenge specified in JSON-LD format</p>"},{"location":"api/openchallenges/#challenge-contribution","title":"Challenge Contribution","text":"<ul> <li> <p>GET <code>/challenges/{challengeId}/contributions</code>   List challenge contributions</p> </li> <li> <p>POST <code>/challenges/{challengeId}/contributions</code>   Create a new contribution for a challenge</p> </li> </ul> <p>Creates a new contribution record associated with a challenge ID.</p> <ul> <li>DELETE <code>/challenges/{challengeId}/contributions/{organizationId}/role/{role}</code>   Delete a specific challenge contribution</li> </ul> <p>Delete a specific challenge contribution.</p>"},{"location":"api/openchallenges/#challenge-analytics","title":"Challenge Analytics","text":"<ul> <li>GET <code>/challenge-analytics/challenges-per-year</code>   Get the number of challenges tracked per year</li> </ul> <p>Returns the number of challenges tracked per year</p>"},{"location":"api/openchallenges/#challenge-platform","title":"Challenge Platform","text":"<ul> <li> <p>GET <code>/challenge-platforms</code>   List challenge platforms</p> </li> <li> <p>POST <code>/challenge-platforms</code>   Create a challenge platform</p> </li> </ul> <p>Create a challenge platform with the specified ID</p> <ul> <li>GET <code>/challenge-platforms/{challengePlatformId}</code>   Get a challenge platform</li> </ul> <p>Returns the challenge platform identified by its unique ID</p> <ul> <li>PUT <code>/challenge-platforms/{challengePlatformId}</code>   Update an existing challenge platform</li> </ul> <p>Updates an existing challenge platform.</p> <ul> <li>DELETE <code>/challenge-platforms/{challengePlatformId}</code>   Delete a challenge platform</li> </ul> <p>Deletes a challenge platform by its unique ID. This action is irreversible.</p>"},{"location":"api/openchallenges/#edam-concept","title":"Edam Concept","text":"<ul> <li>GET <code>/edam-concepts</code>   List EDAM concepts</li> </ul>"},{"location":"api/openchallenges/#image","title":"Image","text":"<ul> <li>GET <code>/images</code>   Get an image</li> </ul> <p>Returns the image specified.</p>"},{"location":"api/openchallenges/#organization","title":"Organization","text":"<ul> <li> <p>GET <code>/organizations</code>   List organizations</p> </li> <li> <p>POST <code>/organizations</code>   Create an organization</p> </li> </ul> <p>Create an organization with the specified account name</p> <ul> <li>GET <code>/organizations/{org}</code>   Get an organization</li> </ul> <p>Returns the organization identified by its login or ID.</p> <ul> <li>PUT <code>/organizations/{org}</code>   Update an existing organization</li> </ul> <p>Updates an existing organization.</p> <ul> <li>DELETE <code>/organizations/{org}</code>   Delete an organization</li> </ul> <p>Deletes the organization specified by its login or ID.</p>"},{"location":"api/openchallenges/#authentication_1","title":"Authentication","text":"<ul> <li>apiBearerAuth: http - API key obtained from /auth/login endpoint</li> </ul>"},{"location":"api/openchallenges/#interactive-documentation","title":"Interactive Documentation","text":"<p>For detailed API documentation with interactive examples, see:</p> <ul> <li>openchallenges API Docs</li> </ul>"},{"location":"api/openchallenges/#openapi-specification","title":"OpenAPI Specification","text":"<ul> <li>OpenAPI Spec (YAML)</li> </ul> <p>This documentation was automatically generated from the OpenAPI specification. Last updated: 2025-08-23T22:04:00.344Z</p>"},{"location":"api/overview/","title":"Overview","text":""},{"location":"api/synapse/","title":"Synapse REST API","text":"<p>Version: 0.1.0</p>"},{"location":"api/synapse/#servers","title":"Servers","text":"<ul> <li>Server: <code>http://localhost/api/v1</code></li> </ul>"},{"location":"api/synapse/#api-endpoints","title":"API Endpoints","text":"<p>This API provides 1 endpoints:</p>"},{"location":"api/synapse/#challenge","title":"Challenge","text":"<ul> <li>GET <code>/challenge</code>   List the Challenges for which the given participant is registered.   List the Challenges for which the given participant is registered.   To be in the returned list the caller must have READ permission on the   project associated with the Challenge.</li> </ul>"},{"location":"api/synapse/#interactive-documentation","title":"Interactive Documentation","text":"<p>For detailed API documentation with interactive examples, see:</p> <ul> <li>synapse API Docs</li> </ul>"},{"location":"api/synapse/#openapi-specification","title":"OpenAPI Specification","text":"<ul> <li>OpenAPI Spec (YAML)</li> </ul> <p>This documentation was automatically generated from the OpenAPI specification. Last updated: 2025-08-23T22:04:00.336Z</p>"},{"location":"blog/","title":"Blog","text":"<p>Welcome to the Sage Monorepo blog! Here you'll find the latest updates, insights, and stories from our development teams.</p>"},{"location":"blog/#latest-posts","title":"Latest Posts","text":""},{"location":"blog/#coming-soon","title":"Coming Soon","text":"<p>We're setting up our blog to share:</p> <ul> <li>Technical Deep Dives: In-depth explorations of our architecture, tools, and methodologies</li> <li>Product Updates: Major feature releases and improvements across our platform</li> <li>Developer Stories: Behind-the-scenes looks at how we solve complex problems</li> <li>Community Highlights: Showcasing contributions and collaborations</li> <li>Best Practices: Lessons learned and recommendations for modern development</li> </ul> <p>Stay tuned for our first posts!</p>"},{"location":"blog/#subscribe","title":"Subscribe","text":"<p>To stay updated with our latest blog posts:</p> <ul> <li>Watch this repository on GitHub</li> <li>Follow our Updates page for regular announcements</li> <li>Check back here regularly for new content</li> </ul> <p>Want to contribute a blog post? Check out our Contributing Guidelines to learn how to share your story with the community.</p>"},{"location":"contributions/overview/","title":"Contributing","text":"<p>Thank you contributing to the Sage Monorepo! We welcome any and all feedback, ideas, and suggestions.</p> <p>Contributions can be made via issues and pull requests (PRs).</p> <ul> <li>Reporting a bug</li> <li>Adding a feature</li> </ul>"},{"location":"contributions/overview/#code-of-conduct","title":"Code of Conduct","text":"<p>We take our open source community seriously and hold ourselves and other contributors to high standards of communication. By participating and contributing to this project, you agree to uphold our Code of Conduct.</p>"},{"location":"develop/quick-start/","title":"Quick Start","text":"<p>Content comming soon!</p>"},{"location":"develop/remote-dev/","title":"Remote Development","text":"<p>Content comming soon!</p>"},{"location":"develop/advanced/creating-a-commit-with-multiple-authors/","title":"Creating a commit with multiple authors","text":""},{"location":"develop/advanced/creating-a-commit-with-multiple-authors/#introduction","title":"Introduction","text":"<p>You can attribute a commit to more than one author by adding one or more <code>Co-authored-by</code> trailers to the commit's message. Co-authored commits are visible on GitHub.</p>"},{"location":"develop/advanced/creating-a-commit-with-multiple-authors/#when-to-add-co-authors-to-a-commit","title":"When to add co-authors to a commit?","text":"<p>Annotating commits with <code>Co-authored-by</code> is generally encouraged when copying code from other developers.</p> <p>Annotating commits with <code>Co-authored-by</code> is required when you are committing previously-untracked code written by other users.</p> <p>Example</p> <ol> <li>Bea develops a new feature and submits it as a pull request (PR).</li> <li>Eddy is tasked with refactoring Bea's PR into multiple PRs.</li> <li>Eddy copies and pastes code written by Bea and adapts it.</li> <li>Eddy adds Bea as a co-author to the commits that include code she wrote.</li> </ol>"},{"location":"develop/advanced/creating-a-commit-with-multiple-authors/#adding-co-authors-to-a-commit","title":"Adding co-authors to a commit","text":"<p>Follow the instructions described here.</p> <p>Preview of the commit creation:</p> <pre><code>$ git commit -m \"Refactor usability tests.\n&gt;\n&gt;\nCo-authored-by: NAME &lt;EMAIL&gt;\nCo-authored-by: ANOTHER-NAME &lt;ANOTHER-EMAIL&gt;\"\n</code></pre>"},{"location":"develop/advanced/creating-a-commit-with-multiple-authors/#names-and-emails-of-sage-monorepo-contributors","title":"Names and emails of Sage Monorepo contributors","text":"<p>The name and \"no-reply\" emails of the Sage Monorepo contributors (sorted alphabetically):</p> <pre><code>Co-authored-by: andrewelamb &lt;7220713+andrewelamb@users.noreply.github.com&gt;\n</code></pre> <pre><code>Co-authored-by: gaiaandreoletti &lt;46945609+gaiaandreoletti@users.noreply.github.com&gt;\n</code></pre> <pre><code>Co-authored-by: Lingling &lt;55448354+linglp@users.noreply.github.com&gt;\n</code></pre> <pre><code>Co-authored-by: mdsage1 &lt;122999770+mdsage1@users.noreply.github.com&gt;\n</code></pre> <pre><code>Co-authored-by: Rongrong Chai &lt;73901500+rrchai@users.noreply.github.com&gt;\n</code></pre> <pre><code>Co-authored-by: sagely1 &lt;114952739+sagely1@users.noreply.github.com&gt;\n</code></pre> <pre><code>Co-authored-by: Thomas Schaffter &lt;3056480+tschaffter@users.noreply.github.com&gt;\n</code></pre> <pre><code>Co-authored-by: Verena Chung &lt;9377970+vpchung@users.noreply.github.com&gt;\n</code></pre> <p>Note</p> <p>The names, usernames and user IDs of the contributors are collected from their GitHub profile pages. If a contributor does not specify their name on the profile page, the listing uses their username instead of their name. The user ID can be found in the URL of the user's avatar.</p>"},{"location":"develop/advanced/creating-a-commit-with-multiple-authors/#references","title":"References","text":"<ul> <li>Creating a commit with multiple   authors</li> </ul>"},{"location":"develop/advanced/developing-on-a-remote-host/","title":"Developing on a remote host","text":""},{"location":"develop/advanced/developing-on-a-remote-host/#introduction","title":"Introduction","text":"<p>Team members who develop locally may not benefit from the same compute resources. The most notable resources that can impact the productivity of developers are the number and frequency of the CPU cores, the memory available and internet speed. The worse case is when a machine does not have the resources to run the apps that the team develops, for example when not enough memory is available. On other times, the time required to complete a task may be many times slower on a computer with lower CPU resources.</p> <p>Moreover, working remotely means that developers no longer benefit from the same internet speed, either because of the quality of the internet connection available at their location or because the speed is shared among the members of a household. As a result, tasks that involve downloading or uploading artifacts, like pulling or pushing Docker images, may take significantly longer to complete.</p> <p>This page describes how to setup a environment that enables developers to use VS Code while using the compute resources of a remote host.</p>"},{"location":"develop/advanced/developing-on-a-remote-host/#motivation","title":"Motivation","text":"<p>To illustrate the benefit of developing on a remote host, this table summarizes the local compute resources available to the developers of OpenChallenges in 2023. The same information is displayed for two types of Amazon EC2 instances and one type of GitHub Codespace instance that were selected as candidate alternative development environments for the team members. The table also includes the runtimes in seconds of different tasks such as linting or testing all the projects included in the monorepo (the method used to generate these results is described in the next section).</p> Shirou Rin Sakura m5.2xlarge t3a.xlarge 4-core Codespace 8-core Codespace Computer Type Desktop PC MacBook Pro MacBook Pro Amazon EC2 Amazon EC2 GitHub Codespace GitHub Codespace Architecture 64-bit (x86) 64-bit (x86) 64-bit (x86) 64-bit (x86) 64-bit (x86) 64-bit (x86) 64-bit (x86) CPU Count 8 4 4 8 4 4 8 CPU Frequency (GHz) 3.6 2.4 1.7 2.5 2.2 2.7 2.8 Memory (GB) 32 16 16 32 16 8 16 Runtime: Lint All Projects (s) 15.4 208.9 183.8 18.6 33.4 24.6 16.9 Runtime: Build All Projects (s) 19.4 196.2 162.2 26.7 44.9 32.3 14.1 Runtime: Test All Projects (s) 12.4 117.1 82.8 15.3 29.2 31.6 24.5 Runtime: Test api (s) 6.2 29.6 21.3 7.2 10.4 6.5 6.5 Runtime: Test web-app (s) 5.3 43.0 35.0 6.5 9.2 6.7 6.0 Download speed (Mbit/s) 395.9 52.1 160.1 2165.0 1606.7 8571 8603 Upload speed (Mbit/s) 183.3 15.6 10.3 1861.0 1030.2 4893 5125 On-Demand Cost ($/day) n/a n/a n/a 9.2 3.6 8.64 (1,2) 17.28 (1,2) On-Demand Cost ($/year) n/a n/a n/a 3363.8 1317.5 3153.6 (1,2) 6307.2 (1,2) <p>(1) GitHub codespaces stop automatically after 1h of inactivity. A codespace used by an full-time engineer (8h/day) - without taking into account vacation for the sake of simplicity - would cost 8 hours/day _ 5 days/week _ 52 weeks * $0.36/hour (4-core) = $748/year (see Codespaces pricing). Similarly, the cost for an 8-core codespace would become $1496/year. In addition, GitHub bills $0.07 of GB of storage independently on whether the codespace is running or stopped. Pricing valid on 2023-12-31.</p> <p>(2) GitHub offers core hours and storage. For example, a Free user can use a 2-core instance for 60 hours per month for free or an 8-core instance for 15 hours. You will be notified by email when you have used 75%, 90%, and 100% of your included quotas.</p> <ul> <li>Free users: 120 core hours/month and 15 GB month of storage</li> <li>Pro users: 180 core hours/month and 20 GB month of storage</li> </ul> <p>Note</p> <p>Note that developers have been asked to measure runtimes and internet speeds while keeping open the applications that are usually running when they develop (e.g. Spotify, several instances of VS Code, browser with many tabs open). This could be one reason why runtimes reported by a developer are larger that those reported by another developer who has less compute resources available.</p> <p>The table below shows the number of times a task ran by a developer is faster than the slowest runtime (denoted by \"1.0\").</p> Shirou Rin Sakura m5.2xlarge t3a.xlarge Runtime: Lint All Projects 13.6 1.0 1.1 11.2 6.3 Runtime: Build All Projects 10.1 1.0 1.2 7.3 4.4 Runtime: Test All Projects 9.4 1.0 1.4 7.6 4.0 Runtime: Test api 4.8 1.0 1.4 4.1 2.8 Runtime: Test web-app 8.0 1.0 1.2 6.6 4.6 Download speed 7.6 1.0 3.1 41.5 30.8 Upload speed 17.8 1.5 1.0 180.5 99.9 <p>For example, linting all the projects of this monorepo is 13.6 times faster on Shirou's computer than on Rin's. Moreover, all the developers can benefit from improved download speeds (up to 41.5 faster for Rin) and upload speeds (up to 180.5 times faster for Sakura) when developing on an EC2 instance. This table illustrates well the diversity in compute resources available locally to developers, and how relying on remote hosts like EC2 instances can provide a better working environment to developers.</p>"},{"location":"develop/advanced/developing-on-a-remote-host/#collectings-os-info-and-benchmarking-tasks","title":"Collectings OS info and benchmarking tasks","text":"<p>Runtimes are obtained from this commit.</p> <p>Identification of the compute resources.</p> <pre><code>$ nproc\n$ cat /proc/cpuinfo\n$ cat /proc/meminfo\n</code></pre> <p>Runtimes are averaged over 10 runs that follow a warmup run using hyperfine.</p> <pre><code>$ hyperfine --warmup 1 --runs 10 'nx run-many --all --target=lint --skip-nx-cache'\n$ hyperfine --warmup 1 --runs 10 'nx run-many --all --target=build --skip-nx-cache'\n$ hyperfine --warmup 1 --runs 10 'nx run-many --all --target=test --skip-nx-cache'\n$ hyperfine --warmup 1 --runs 10 'nx test api --skip-nx-cache'\n$ hyperfine --warmup 1 --runs 10 'nx test web-ui --skip-nx-cache'\n</code></pre> <p>Internet speeds are measured with speedtest-cli.</p> <pre><code>$ speedtest\n</code></pre>"},{"location":"develop/advanced/developing-on-a-remote-host/#preparing-the-remote-host-aws-ec2","title":"Preparing the remote host - AWS EC2","text":"<p>This section describes how to instantiate an AWS EC2 as the remote host. Steps outlined below will assume you have access to the Sage AWS Service Catalog.</p>"},{"location":"develop/advanced/developing-on-a-remote-host/#creating-the-ec2-instance","title":"Creating the EC2 instance","text":"<ol> <li>Log in to the Service Catalog with your Synapse credentials.</li> <li>From the list of Products, select EC2: Linux Docker. On the Product page, click on Launch    product in the upper-right corner.</li> <li>On the next page, fill out the wizard as follows:</li> <li>Provisioned product name<ul> <li>Name: <code>{GitHub username}-devcontainers-{yyyymmdd}</code></li> <li>Example: <code>tschaffter-devcontainers-20240404</code></li> </ul> </li> <li>Parameters<ul> <li>EC2 Instance Type: <code>t3a.2xlarge</code></li> <li>Base Image: <code>AmazonLinuxDocker</code> (leave default)</li> <li>Disk Size: 80</li> </ul> </li> <li>Manage tags<ul> <li><code>CostCenter</code>: Select the Cost Center associated to your project</li> </ul> </li> <li>Enable event notifications: SKIP - DO NOT MODIFY</li> <li>Click on Launch product. Your instance will take anywhere between 3-5 minutes to deploy. You    can either wait on this page until \"EC2Instance\" shows up on the list under Resources, or you can    leave and come back at a later time.</li> </ol>"},{"location":"develop/advanced/developing-on-a-remote-host/#stopping-the-ec2-instance","title":"Stopping the EC2 instance","text":"<p>It's not something you should do now as part of this tutorial. This section serves as a reminder that AWS charges for evey hour the EC2 instance is running. As soon as you identify that you will no longer need the instance for the rest of the day, open the Service Catalog to stop it.</p> <ol> <li>Open the Service Catalog, then select Provisioned products.</li> <li>Select the EC2 instance.</li> <li>Click on the button Actions &gt; Service actions &gt; Stop.</li> <li>Confirm the action.</li> </ol> <p>After a few seconds, the EC2 instance will be stopped.</p> <p>Note</p> <p>AWS still charges us for the storage space that the EC2 instance takes even when it's not running. Consider destroying the EC2 instance when you decide that you will no longer need it.</p>"},{"location":"develop/advanced/developing-on-a-remote-host/#connecting-to-the-ec2-instance-with-aws-console","title":"Connecting to the EC2 instance with AWS Console","text":"<p>We will now use the AWS Console to open a terminal to the EC2 instance and setup your public SSH key.</p> <p>Note</p> <p>This section assumes that you already have a public and private SSH key created on your local machine from where you are running VS Code.</p> <ol> <li>Open the Service Catalog, then select Provisioned products.</li> <li>In the section Resources, click on the link for \"EC2Instance\".</li> <li>Click on the checkbox of the new EC2 instance created.</li> <li>Click on the button Actions &gt; Connect.</li> <li>The error \"Failed to describe security groups\" shown by AWS can be ignored.</li> <li>Click on the tab Session Manager.</li> <li>Click on Connect.</li> </ol>"},{"location":"develop/advanced/developing-on-a-remote-host/#configuring-the-ssh-public-key-on-the-ec2-instance","title":"Configuring the SSH public key on the EC2 instance","text":"<ol> <li>Login as the user <code>ec2-user</code> and move to its home directory.    <pre><code>$ sudo -s\n# su ec2-user\n$ cd\n</code></pre></li> <li>Create the folder <code>~/.ssh</code> (if needed).    <pre><code>$ mkdir ~/.ssh\n$ chmod 700 ~/.ssh\n</code></pre></li> <li>Create the file <code>~/.ssh/authorized_keys</code> (if needed).    <pre><code>$ touch ~/.ssh/authorized_keys\n$ chmod 644 ~/.ssh/authorized_keys\n</code></pre></li> <li>Copy and paste your public SSH key at the end of <code>~/.ssh/authorized_keys</code>.</li> <li>Click on the button Terminate to terminate the session and confirm the action.</li> </ol>"},{"location":"develop/advanced/developing-on-a-remote-host/#configuring-ssh-on-the-local-machine","title":"Configuring SSH on the local machine","text":"<p>This section describes how to create a profile for the EC2 instance in your local <code>~/.ssh/config</code> file.</p> <p>Note</p> <p>This section assumes that you already have a public and private SSH key created on your local machine from where you are running VS Code.</p> <p>First, you need to identify the private IP address of the EC2 instance.</p> <ol> <li>Open the Service Catalog, then select Provisioned products.</li> <li>In the section Outputs, the private IP address is the value associated to    \"EC2InstancePrivateIpAddress\".</li> </ol> <p>Then, on your local machine:</p> <ol> <li>Create the file <code>~/.ssh/config</code> (if needed).    <pre><code>$ touch ~/.ssh/config\n$ chmod 600 ~/.ssh/config\n</code></pre></li> <li>Add the following content to your local <code>~/.ssh/config</code>.    <pre><code>Host {alias}\n    HostName {private ip}\n    User ec2-user\n    IdentityFile {path to your private SSH key, e.g. ~/.ssh/id_rsa}\n</code></pre>    where the placeholder values <code>{...}</code> should be replaced with the correct values.</li> </ol>"},{"location":"develop/advanced/developing-on-a-remote-host/#connecting-to-the-ec2-instance-with-vs-code","title":"Connecting to the EC2 instance with VS Code","text":"<ol> <li>Connect to the Sage VPN.</li> <li>Open VS Code.</li> <li>Install the VS Code extension pack \"Remote Development\".</li> <li>Open the command palette with <code>Ctrl+Shit+P</code>.</li> <li><code>Remote-SSH: Connect to Host...</code> &gt; Select the host.</li> <li>Answer the prompts</li> </ol> <p>You are now connected to the EC2 instance! \ud83d\ude80</p> <p>Tip</p> <p>Please remember to stop the EC2 instance at the end of your working day to save on costs.</p>"},{"location":"develop/advanced/developing-on-a-remote-host/#next","title":"Next","text":"<p>Go to the section XXX for the instructions on how to setup your environment to contribute to Sage Monorepo.</p>"},{"location":"develop/advanced/developing-on-a-remote-host/#preparing-the-remote-host-github-codespace","title":"Preparing the remote host - GitHub Codespace","text":"<p>This section describes how to open your fork of Sage Monorepo in a GitHub Codespaces instance.</p> <p>Note</p> <p>In practice, we will prefer to develop in an EC2 instance created from the Service Catalog for security and budget reasons. Please refer to the instructions given above. Using a GitHub Codespace has been proven to be ponctually useful for quick tests that require a fresh environment, as one of Codespaces benefits is that they can be created and destroyed faster than EC2 instances.</p> <ol> <li>Open your browser and go to GitHub Codespaces.</li> <li>Click on the \"New codespace\".</li> <li>Enter the information requested:</li> <li>Repository: Select your fork of the monorepo</li> <li>Branch: Select the default branch</li> <li>Dev container configuration: Select the dev container definition</li> <li>Region: Select your preferred region</li> <li>Machine type: Select the machine type</li> <li>Click on \"Create codespace\".</li> <li>Wait for the codespace to be created.</li> <li>Configure the monorepo and install its dependencies (see README).</li> </ol>"},{"location":"develop/advanced/developing-on-a-remote-host/#stopping-a-codespace-instance","title":"Stopping a Codespace instance","text":"<p>If your codespace is open in your browser, you can stop it with the following step. Note that a codespace stops automatically after one hour of inactivity.</p> <ol> <li>Click on the button \"Codespaces\" located in the bottom-left corner.</li> <li>Click on \"Stop Current Codespace\".</li> </ol>"},{"location":"develop/advanced/developing-on-a-remote-host/#opening-a-codespace-with-vs-code","title":"Opening a Codespace with VS Code","text":"<p>If you prefer to develop with VS Code rather than inside your browser:</p> <ol> <li>Open your browser and go to GitHub Codespaces.</li> <li>Find the codespace that you want to open with VS Code.</li> <li>Click on the three-dot menu &gt; \"Open in ...\" &gt; \"Open in Visual Studio Code\"</li> </ol>"},{"location":"develop/advanced/developing-on-a-remote-host/#changing-the-machine-type","title":"Changing the machine type","text":"<p>The type of machine used by a codespace can be changed at any time, for example when a beefier codespace instance is needed. To change the machine type of an existing codespace.</p> <ol> <li>Stop the codespace.</li> <li>Open your browser and go to GitHub Codespaces.</li> <li>Find the codespace that you want to open with VS Code.</li> <li>Click on the three-dot menu &gt; \"Change machine type\".</li> <li>Update the properties of the machine and click on \"Update codespace\".</li> </ol>"},{"location":"develop/advanced/developing-on-a-remote-host/#accessing-apps-and-services","title":"Accessing apps and services","text":"<p>The devcontainer provided with this project uses the VS Code devcontainer feature <code>docker-in-docker</code>. In addition to isolating the Docker engine running in the devcontainer from the engine running on the host, this feature enables VS Code to forward the ports defined in <code>devcontainer.json</code> to the local envrionment of the developer. Therefore, apps and services can be accessed using the address <code>http://localhost</code> even though they are running on the remote host!</p> <p>Accessing the apps and services using the IP address of the remote host won't work, unless you replace the feature <code>docker-in-docker</code> by <code>docker-from-docker</code>. In this case, <code>http://localhost</code> can no longer be used to access the apps and services.</p>"},{"location":"develop/advanced/developing-on-a-remote-host/#uploading-files","title":"Uploading files","text":"<p>Simply drag and drop files to the VS Code explorer to upload files from your local environment to the remote host.</p>"},{"location":"develop/advanced/developing-on-a-remote-host/#closing-the-remote-connection","title":"Closing the remote connection","text":"<p>Click on the button in the bottom-left corner of VS Code and select one of these options:</p> <ul> <li><code>Close Remote Connection</code> to close the connection with the remote host.</li> <li><code>Reopen Folder in SSH</code> if you want to stop the devcontainer but stay connected to the remote host.</li> </ul>"},{"location":"develop/architecture/what-is-devcontainer/","title":"Dev Containers","text":"<p>Content comming soon!</p>"},{"location":"develop/architecture/what-is-nx/","title":"Nx Workspace","text":"<p>Content comming soon!</p>"},{"location":"develop/maintenance/","title":"Dependency &amp; Base Image Maintenance","text":"<p>This section documents how dependencies and Docker base images are maintained across the monorepo. It provides:</p> <ul> <li>Shared principles &amp; workflows</li> <li>Tooling and automation overview (CI validation)</li> <li>Per-ecosystem maintenance guides (Java, Node/TypeScript, Python, Docker, etc.)</li> </ul>"},{"location":"develop/maintenance/#scope","title":"Scope","text":"<p>Covers version management, update cadence, validation steps, and security considerations for:</p> <ul> <li>Application &amp; library runtime dependencies</li> <li>Build tooling (compilers, test frameworks, linters)</li> <li>Infrastructure/runtime images (Docker base images)</li> <li>Version catalogs and lock files</li> </ul>"},{"location":"develop/maintenance/#goals","title":"Goals","text":"<ul> <li>Ensure consistent, reproducible builds</li> <li>Minimize upgrade risk via automation + validation</li> <li>Surface and remediate security vulnerabilities quickly</li> <li>Provide contributors a clear, repeatable process</li> </ul>"},{"location":"develop/maintenance/#update-cadence-baseline","title":"Update Cadence (Baseline)","text":"Category Patch/Minor Major Security/Critical Java Libraries Weekly (batched) Quarterly or as needed ASAP (hotfix branch) Node/TypeScript Weekly (Renovate) Framework-aligned (e.g., Angular/TS) ASAP Python Bi-weekly or on-demand Semiannual ASAP Docker Base Images Weekly digest scan As runtime LTS shifts ASAP Dev Tooling (lint/test) Weekly With ecosystem majors ASAP <p>(Adjust these values if policy differs.)</p>"},{"location":"develop/maintenance/#roles-responsibilities","title":"Roles &amp; Responsibilities","text":"Actor Responsibility Automation (?) Proposes routine updates, groups safe changes Reviewer (Maintainer) Validates breaking changes, merges safe PRs Security Lead (optional) Prioritizes CVE remediation Release Manager Includes notable upgrades in release notes"},{"location":"develop/maintenance/#standard-workflow","title":"Standard Workflow","text":"<ol> <li>Automation or maintainer opens a branch / PR.</li> <li>CI runs: build, tests, lint, security scan (if configured).</li> <li>Reviewer validates:</li> <li>No unexpected API breaks</li> <li>Performance or memory not degraded (spot check)</li> <li>Release notes for majors referenced</li> <li>Merge with conventional commit message.</li> <li>Aggregate dependency changes into periodic changelog / release notes.</li> </ol>"},{"location":"develop/maintenance/#branch-commit-conventions","title":"Branch &amp; Commit Conventions","text":"<ul> <li>Branch: <code>chore/deps/&lt;ecosystem&gt;-&lt;yyyymmdd&gt;</code> or <code>security/deps/&lt;id&gt;</code></li> <li>Commit: <code>chore(deps): bump &lt;lib&gt; to &lt;version&gt;</code></li> <li>For majors with breaking changes: include a <code>BREAKING CHANGE:</code> footer summarizing migration notes.</li> </ul>"},{"location":"develop/maintenance/#risk-categorization","title":"Risk Categorization","text":"Risk Level Indicators Action Low Patch updates, clearly backward-compatible Auto-merge (if policy allows) Medium Minor updates with possible transitive shifts Manual review High Major version, peer dependency shifts, build tool changes Dedicated test focus, maybe staging deploy Critical Security vulnerability fix Expedite, limited scope branch"},{"location":"develop/maintenance/#validation-checklist-pre-merge","title":"Validation Checklist (Pre-Merge)","text":"<ul> <li> All relevant tests pass</li> <li> Build artifacts produced successfully</li> <li> No new lint/type errors</li> <li> Version catalog / lock file updated (if applicable)</li> <li> For majors: migration notes reviewed</li> <li> For Docker: image builds locally and starts successfully</li> </ul>"},{"location":"develop/maintenance/#ecosystem-guides","title":"Ecosystem Guides","text":"<ul> <li>Java Dependencies</li> <li>Node / TypeScript Dependencies</li> <li>Python Dependencies</li> <li>R Dependencies</li> <li>Docker Base Images</li> <li>Dev Container Updates</li> <li>Security &amp; Compliance</li> <li>Troubleshooting &amp; FAQ</li> </ul> <p>Continue to the Java guide to begin contributing detailed instructions.</p>"},{"location":"develop/maintenance/dev-container/","title":"Dev Container Updates","text":"<p>This guide provides comprehensive instructions for updating the development container used in the Sage Monorepo. The dev container provides a consistent development environment across all contributors and includes all necessary tools and dependencies.</p>"},{"location":"develop/maintenance/dev-container/#overview","title":"Overview","text":"<p>Updating the dev container is an intentionally two-step, two-PR workflow that separates image BUILD from image ACTIVATION. This decoupling lets us publish and test a new image across multiple branches before the whole team is switched over.</p>"},{"location":"develop/maintenance/dev-container/#terminology","title":"Terminology","text":"<ul> <li>Dockerfile (<code>.github/.devcontainer/Dockerfile</code>): Defines the base Ubuntu LTS image, pinned   build ARG versions, and any tools installed directly via shell/apt scripts.</li> <li>Build Definition (Intermediate) devcontainer.json (<code>.github/.devcontainer/devcontainer.json</code>):   Extends the Dockerfile with Dev Container Features (Docker-in-Docker, Java, Go, Kubernetes tooling, etc.).   This file is used only to BUILD &amp; PUBLISH the final composite image to GHCR. It is NOT what VS Code opens.</li> <li>Active devcontainer.json (<code>.devcontainer/devcontainer.json</code>): The definition actually consumed   by VS Code / <code>devcontainer up</code> when developers open the monorepo. It references an already-published   image tag (from GHCR) and should remain stable except when activating a new image.</li> <li>Published Image: <code>ghcr.io/sage-bionetworks/sage-monorepo-devcontainer:&lt;tag&gt;</code> produced by Step 1.</li> </ul>"},{"location":"develop/maintenance/dev-container/#two-step-workflow","title":"Two-Step Workflow","text":"Step PR Focus Touched Files Result Why Separate? 1 BUILD &amp; PUBLISH new image <code>.github/.devcontainer/Dockerfile</code>, <code>.github/.devcontainer/devcontainer.json</code> New image pushed to GHCR (tag = commit SHA or version) Allows iterative hardening &amp; branch testing without forcing all developers onto a possibly unstable image 2 ACTIVATE published image <code>.devcontainer/devcontainer.json</code> Team starts using the new image Minimal diff; easy rollback by reverting single tag change"},{"location":"develop/maintenance/dev-container/#rationale-for-separation","title":"Rationale for Separation","text":"<ol> <li>Safety \u2013 Risky base upgrades (Ubuntu date tag, Docker engine, language majors) are isolated from the day-to-day environment until validated.</li> <li>Parallel Testing \u2013 Multiple feature branches can temporarily reference the newly published image for smoke tests before activation.</li> <li>Fast Rollback \u2013 If problems surface after activation, reverting one commit (image tag change) restores the previous environment.</li> <li>Auditability \u2013 PR 1 documents image construction changes; PR 2 documents operational adoption.</li> </ol>"},{"location":"develop/maintenance/dev-container/#typical-flow","title":"Typical Flow","text":"<ol> <li> <p>Create branch <code>chore/devcontainer/build-&lt;date&gt;</code> and update:</p> <ul> <li>Dockerfile (Ubuntu date tag + tool ARG bumps + removals)</li> <li>Build Definition devcontainer file (feature version bumps, add/remove Features)</li> </ul> </li> <li> <p>Open PR (BUILD). Opening and updating the PR triggers a build of the Docker images.</p> </li> <li>Merge PR (PUBLISH). Builds &amp; publishes image \u2192 GHCR tag.</li> <li>(Optional) Test in other branches by temporarily overriding the active file locally (do NOT commit those overrides) or using <code>devcontainer build/up/exec</code> commands referencing the new image.</li> <li>Once validated, create branch <code>chore/devcontainer/activate-&lt;tag&gt;</code> updating only <code>.devcontainer/devcontainer.json</code> to the new image tag.</li> <li>Open PR (ACTIVATE). After merge, developers rebuild / reopen in container and begin using the new environment.</li> </ol> <p>Note</p> <p>Keep any temporary local tag substitutions (e.g., <code>:local</code>) out of committed code. Only SHA or explicitly versioned tags should appear in the activated definition.</p>"},{"location":"develop/maintenance/dev-container/#summary","title":"Summary","text":"<p>You modify two different <code>devcontainer.json</code> files for two distinct purposes:</p> File Purpose When Edited <code>.github/.devcontainer/devcontainer.json</code> Compose &amp; bake the final published image together with Features Step 1 (BUILD) only <code>.devcontainer/devcontainer.json</code> Point developer workflows at an existing published image Step 2 (ACTIVATE) only <p>The remainder of this guide details how to update the Docker base image, tool versions, Features, test the resulting image, and safely activate it.</p>"},{"location":"develop/maintenance/dev-container/#key-files","title":"Key Files","text":"File / Path Role / Purpose Maintenance Notes <code>.github/.devcontainer/Dockerfile</code> Base layer (Ubuntu LTS date tag + apt + direct installs of some tools). Step 1 only. Pin ARG versions; prefer removing rather than leaving unused tooling. Keep image reproducible (no moving tags). <code>.github/.devcontainer/devcontainer.json</code> BUILD Definition: aggregates the Dockerfile + Dev Container Features to bake the final image that will be published to GHCR. Not used directly by developers in VS Code. Edit in Step 1 only. Use explicit feature versions. Treat as build recipe; never reference a production image tag here\u2014always <code>build</code> from the Dockerfile. <code>.devcontainer/devcontainer.json</code> ACTIVE Definition: points to the published image tag developers consume locally and in CI. Edit in Step 2 only. Single-line diff (image tag) ideally. Keep clean\u2014should not contain build-time Feature composition once image is published. <code>dev-env.sh</code> Workspace initialization (env vars, helper functions, wrappers). Review after major tool/runtime bumps. Sync deprecated tool names or paths. <code>tools/prepare-*-envs.js</code> Language ecosystem setup (Node, Python, Java, R, etc.). Validate they still succeed after base image &amp; feature updates (Node majors, Python minors, JDK changes). Update literals referencing versions/paths. <code>.github/workflows/*devcontainer*.yml</code>* CI workflows that build &amp; push the Step 1 image. Ensure cache key changes when ARGs change. Confirm push includes immutable tag (SHA) and optional semantic tag. <p>* Actual workflow filenames may vary; search for <code>devcontainer</code> in <code>.github/workflows</code> when adjusting build logic.</p> <p>Maintenance Guide Scope</p> <p>Only files directly influencing the container build, configuration, or activation workflow are listed. Application/service Dockerfiles are out of scope for this maintenance guide.</p>"},{"location":"develop/maintenance/dev-container/#step-1a-update-the-docker-base-image","title":"Step 1a: Update the Docker Base Image","text":"<p>Tip</p> <p>See the Update Checklist at the end of this document for an actionable summary of this section.</p>"},{"location":"develop/maintenance/dev-container/#base-image-update","title":"Base Image Update","text":"<p>The dev container uses Ubuntu as its base image. To update:</p> <pre><code># Current example:\nFROM ubuntu:noble-20250910\n\n# To update, change to newer tag with release date:\nFROM ubuntu:noble-20251015  # Use date-specific tag\n</code></pre> <p>Ubuntu Version Requirements &amp; Tagging:</p> <p>Use only Ubuntu LTS date-specific tags for reproducibility (e.g. <code>ubuntu:noble-20250910</code>). Avoid moving tags (<code>noble</code>, <code>latest</code>) and non\u2011LTS releases. Update periodically (e.g. monthly or when security fixes land). Reference: official LTS list at https://releases.ubuntu.com and available date tags at Docker Hub. Always test locally before committing and track EOL to plan major migrations.</p>"},{"location":"develop/maintenance/dev-container/#tool-version-updates","title":"Tool Version Updates","text":"<p>The Dockerfile includes numerous tools with pinned versions. Update the build arguments at the top of the file:</p> <pre><code># Example updates:\nARG hyperfineVersion=\"1.19.0\"        # Check: https://github.com/sharkdp/hyperfine\nARG devcontainerCliVersion=\"0.80.0\"  # Check: https://www.npmjs.com/package/@devcontainers/cli\nARG uvVersion=\"0.7.21\"               # Check: https://github.com/astral-sh/uv\nARG rVersion=\"4.5.1\"                 # Check: https://docs.posit.co/resources/install-r/\nARG trivyVersion=\"0.64.1\"            # Check: https://aquasecurity.github.io/trivy\nARG nodeVersionMajor=\"22\"            # Check: https://nodejs.org/en/about/previous-releases\nARG pnpmVersion=\"10.13.1\"            # Check: https://github.com/pnpm/pnpm/releases\n</code></pre> <p>Selection Criteria (condensed): Prefer LTS where applicable, skip anything &lt;24h old, avoid pre-releases, prefer versions with security fixes, and note breaking changes on major bumps.</p> <p>Process: Check release page \u2192 confirm age \u22651 day \u2192 confirm LTS (when relevant) \u2192 update ARG \u2192 build &amp; smoke test critical tooling.</p> <p>Node.js: Use even-numbered LTS majors (18/20/22). Avoid odd majors. Check the Node.js release schedule for current LTS + EOL.</p>"},{"location":"develop/maintenance/dev-container/#system-package-updates","title":"System Package Updates","text":"<p>System packages are installed via apt. While most use latest available versions, some may be pinned:</p> <pre><code>RUN apt-get update -qq -y &amp;&amp; export DEBIAN_FRONTEND=noninteractive \\\n  &amp;&amp; apt-get install --no-install-recommends -qq -y \\\n    ca-certificates curl git bash-completion gnupg2 lsb-release ssh sudo \\\n    python3-pip python3-dev python-is-python3 pipx openjdk-17-jdk \\\n    # ... other packages\n</code></pre> <p>Considerations:</p> <ul> <li>Most packages will automatically use latest versions from Ubuntu repositories</li> <li>Major Ubuntu version changes may affect package availability</li> <li>Test package installations if changing base Ubuntu version</li> </ul>"},{"location":"develop/maintenance/dev-container/#tool-management-and-removal","title":"Tool Management and Removal","text":"<p>To maintain security and reduce the attack surface, the dev container tool set should be periodically reviewed and pruned.</p> <p>Tool Removal Guidelines:</p> <ul> <li>Security First: Remove rarely used tools to reduce potential attack vectors</li> <li>Usage Analysis: Regularly assess which tools are actively used by the development team</li> <li>Team Consensus: Tool removal requires consensus among team members before implementation</li> <li>Impact Assessment: Evaluate potential workflow disruption before removing any tool</li> </ul> <p>Review Process:</p> <ol> <li>Quarterly Reviews: Conduct tool usage reviews every 3-4 months</li> <li>Usage Tracking: Monitor which tools are being used in CI/CD pipelines and development workflows (future work)</li> <li>Team Survey: Poll team members about tool usage and necessity</li> <li>Deprecation Notice: Provide advance notice before removing tools to allow workflow adjustments</li> <li>Documentation: Update documentation when tools are removed</li> </ol> <p>Tools to Monitor for Removal:</p> <ul> <li>Development utilities with overlapping functionality</li> <li>Language-specific tools for unused programming languages</li> <li>CLI tools that haven't been used in recent projects</li> <li>Legacy tools that have modern replacements</li> </ul> <p>Before Removing a Tool:</p> <ul> <li> Confirm tool is not used in any CI/CD pipelines</li> <li> Check if tool is referenced in documentation</li> <li> Verify no active projects depend on the tool</li> <li> Get explicit approval from team leads</li> <li> Plan migration path if tool replacement is needed</li> </ul>"},{"location":"develop/maintenance/dev-container/#step-1b-update-dev-container-features","title":"Step 1b: Update Dev Container Features","text":"<p>Tip</p> <p>See the Update Checklist at the end of this document for an actionable summary of this section.</p> <p>After updating the Dockerfile (Step 1a), update <code>.github/.devcontainer/devcontainer.json</code> (feature set &amp; runtime configuration). This remains part of Step 1 (BUILD &amp; PUBLISH).</p>"},{"location":"develop/maintenance/dev-container/#feature-set","title":"Feature Set","text":"<p>The <code>devcontainer.json</code> file references the updated Dockerfile and uses pre-built features from the Dev Containers specification:</p> <pre><code>\"features\": {\n  \"ghcr.io/devcontainers/features/docker-in-docker:2.12.2\": {\n    \"version\": \"28.3.2\",\n    \"installDockerComposeSwitch\": false\n  },\n  \"ghcr.io/devcontainers/features/java:1.6.3\": {\n    \"version\": \"21.0.7-ms\",\n    \"additionalVersions\": [\"21.0.7-graal\"]\n  },\n  \"ghcr.io/devcontainers/features/go:1.3.2\": {\n    \"version\": \"1.24.5\",\n    \"golangciLintVersion\": \"2.2.2\"\n  },\n  \"ghcr.io/devcontainers/features/kubectl-helm-minikube:1.2.2\": {\n    \"version\": \"1.33.3\",\n    \"helm\": \"3.17.0\",\n    \"minikube\": \"1.36.0\"\n  }\n}\n</code></pre> <p>Selection &amp; Trust (condensed): Prefer official sources (<code>devcontainers</code>, <code>microsoft</code>, <code>docker</code>, major vendors). For community features: \u226550 stars, active in last 3 months, multi-contributor, semantic releases, documented, responsive issues, passes source/security skim. Always pin immutable version tags.</p> <p>Mini Process: Look up latest \u2192 validate trust \u2192 pin explicit version \u2192 ensure cross-feature compatibility \u2192 test build.</p>"},{"location":"develop/maintenance/dev-container/#community-feature-evaluation-checklist","title":"Community Feature Evaluation Checklist","text":"<p>When considering features from smaller communities, use this evaluation checklist:</p> <p>Tip</p> <p>The checkboxes below are clickable\u2014check them as you evaluate a community feature for inclusion in the dev container to track your review progress.</p> <p>Repository Assessment:</p> <ul> <li> GitHub repository has 50+ stars</li> <li> Repository is actively maintained (commits within last 3 months)</li> <li> Issues are actively triaged and responded to</li> <li> Multiple contributors (not single-person projects)</li> <li> Clear contribution guidelines and code of conduct</li> </ul> <p>Release Management:</p> <ul> <li> Regular release cadence (at least quarterly)</li> <li> Semantic versioning is used</li> <li> Release notes document changes clearly</li> <li> No breaking changes without major version bumps</li> </ul> <p>Code Quality:</p> <ul> <li> Comprehensive README with usage examples</li> <li> Automated testing (CI/CD pipelines)</li> <li> Security scanning in place</li> <li> Code follows security best practices</li> <li> Dependencies are up-to-date and secure</li> </ul> <p>Community Health:</p> <ul> <li> Active maintainer response to issues</li> <li> Community discussions and engagement</li> <li> Clear project roadmap or vision</li> <li> Responsive to security vulnerability reports</li> </ul> <p>Feature-Specific Review:</p> <ul> <li> Source code review for security vulnerabilities</li> <li> Feature functionality aligns with monorepo needs</li> <li> No unnecessary privileges or access requirements</li> <li> Compatible with existing features and tools</li> <li> Performance impact is acceptable</li> </ul> <p>Approval Process:</p> <ol> <li>Complete evaluation checklist</li> <li>Document findings and recommendation</li> <li>Get approval from security team (if applicable)</li> <li>Test feature in isolated environment</li> <li>Get team consensus before adding to production</li> </ol>"},{"location":"develop/maintenance/dev-container/#feature-specific-notes","title":"Feature-Specific Notes","text":""},{"location":"develop/maintenance/dev-container/#docker-in-docker","title":"Docker-in-Docker","text":"<ul> <li>Update Docker version to latest stable</li> </ul>"},{"location":"develop/maintenance/dev-container/#java","title":"Java","text":"<ul> <li>Coordinate with project Java version requirements</li> <li>Update both primary and additional JDK versions</li> <li>Ensure compatibility with Gradle configurations</li> </ul>"},{"location":"develop/maintenance/dev-container/#go","title":"Go","text":"<ul> <li>Update Go version for latest language features</li> <li>Update golangci-lint for latest linting rules</li> </ul>"},{"location":"develop/maintenance/dev-container/#kubernetes-tools","title":"Kubernetes Tools","text":"<ul> <li>Update kubectl to match target Kubernetes versions</li> <li>Update Helm for latest chart compatibility</li> <li>Update Minikube for local development</li> </ul>"},{"location":"develop/maintenance/dev-container/#step-1c-test-the-dev-container-locally","title":"Step 1c: Test the Dev Container Locally","text":"<p>Tip</p> <p>See the Update Checklist at the end of this document for an actionable summary of this section.</p>"},{"location":"develop/maintenance/dev-container/#manual-dev-container-testing","title":"Manual Dev Container Testing","text":"<p>After updating both the Dockerfile and <code>devcontainer.json</code>, perform comprehensive testing using the devcontainer CLI.</p>"},{"location":"develop/maintenance/dev-container/#build-the-dev-container-image","title":"Build the Dev Container Image","text":"<p>The dev container includes the devcontainer CLI, so you can build the new container from within an existing dev container.</p> <p>From the root workspace directory:</p> <pre><code>devcontainer build \\\n  --workspace-folder .github \\\n  --image-name ghcr.io/sage-bionetworks/sage-monorepo-devcontainer:local\n</code></pre> <p>Build Troubleshooting:</p> <ul> <li> <p>Docker Version Issues: If build fails, the Docker engine version in <code>devcontainer.json</code> might be too recent</p> <ul> <li>Try specifying an older Docker version in the <code>docker-in-docker</code> feature</li> <li>Example: Change from <code>\"version\": \"28.3.2\"</code> to <code>\"version\": \"27.3.2\"</code> or earlier</li> <li>Check Docker releases for stable versions</li> </ul> </li> </ul>"},{"location":"develop/maintenance/dev-container/#test-container-startup-and-functionality","title":"Test Container Startup and Functionality","text":"<ol> <li> <p>Start the dev container:     <pre><code>devcontainer up --workspace-folder .github\n</code></pre></p> </li> <li> <p>Connect to the running container:     <pre><code>docker exec -it sage-monorepo-devcontainer-prebuild bash\n</code></pre></p> </li> <li> <p>Verify tool installations, especially new and updates tools:     <pre><code># Test key tools are available and working\ndocker --version\ngo version\njava --version\nkubectl version --client\nnode --version\npython --version\ntrivy --version\nuv --version\n</code></pre></p> </li> <li> <p>Exit the container:     <pre><code># Use Ctrl+C to exit the container session or enter:\nexit\n</code></pre></p> </li> <li> <p>Clean up the test container:     <pre><code>docker rm -f sage-monorepo-devcontainer-prebuild\n</code></pre></p> </li> </ol>"},{"location":"develop/maintenance/dev-container/#headless-monorepo-runtime-testing","title":"Headless Monorepo Runtime Testing","text":"<p>After basic functionality testing, run a comprehensive, CLI\u2011driven test pass with the entire monorepo mounted into the container using the devcontainer CLI without opening the workspace in VS Code (i.e. VS Code is not attached to this container yet). This validates the baked image + features + toolchain against real workspace code (builds, tests, scripts) but does not exercise:</p> <ul> <li>VS Code extension set / settings sync</li> <li>Editor\u2011integrated language servers started via the active <code>devcontainer.json</code></li> <li>Any VS Code tasks, launch configs, or UI workflows</li> </ul> <p>For those editor integration aspects, see the later section IDE &amp; CI Integration Testing which performs an actual VS Code rebuild using the active dev container definition.</p> <p>Why 'Headless'?</p> <p>\"Headless\" here means the container is running and the repo is mounted, but VS Code has not been reopened against it, so no editor extensions, language servers, tasks, or settings from the active devcontainer definition have initialized. It\u2019s a fast runtime/tooling validation step before paying the cost of a full VS Code rebuild &amp; attachment.</p>"},{"location":"develop/maintenance/dev-container/#verify-local-image-availability","title":"Verify Local Image Availability","text":"<p>Confirm the dev container image was built successfully:</p> <pre><code>docker images | grep devcontainer\n# Expected output:\n# ghcr.io/sage-bionetworks/sage-monorepo-devcontainer   local   &lt;image-id&gt;   &lt;time&gt;   ~5GB\n</code></pre>"},{"location":"develop/maintenance/dev-container/#update-dev-container-definition","title":"Update Dev Container Definition","text":"<p>Update the main dev container configuration file (<code>.devcontainer/devcontainer.json</code>) to reference the new local image if needed for testing.</p> <p>Example diff (do NOT commit this change; for local testing only):</p> <pre><code> // .devcontainer/devcontainer.json\n {\n    \"name\": \"Sage Monorepo Dev Container\",\n-  \"image\": \"ghcr.io/sage-bionetworks/sage-monorepo-devcontainer:sha-6269b9b3d863831c296f843edd84b2c7e1d4733d\",\n+  \"image\": \"ghcr.io/sage-bionetworks/sage-monorepo-devcontainer:local\",\n    // ... rest of configuration\n }\n</code></pre> <p>After testing, revert the image line back to the published SHA tag before opening or updating any PRs.</p>"},{"location":"develop/maintenance/dev-container/#deploy-with-monorepo-codebase","title":"Deploy with Monorepo Codebase","text":"<p>Instead of manually stepping into the test container, you can run the comprehensive test from your current dev container:</p> <p>Workspace Side Effects</p> <p>The steps below mount your current monorepo working copy into a throwaway dev container. Any tasks you run (e.g. <code>workspace-install</code>, Nx builds, tests) will mutate files on your host, not inside an isolated scratch layer. Typical side effects include updates to:</p> <ul> <li><code>node_modules/</code></li> <li>Nx / build caches (e.g. <code>.nx/cache</code>)</li> <li>Generated artifacts (dist / build folders)</li> <li>Potential lockfile adjustments if dependency resolution differs</li> </ul> <p>These changes persist after you remove the test container. To avoid unexpected diffs or performance regressions when you return to other feature work, choose one of the following strategies:</p> <p>Safer Approaches</p> <ol> <li>Use a temporary clone or worktree:<ul> <li><code>git worktree add ../sage-devcontainer-test &lt;branch&gt;</code></li> <li>Run all container tests from that directory</li> <li>Remove when done: <code>git worktree remove ../sage-devcontainer-test</code></li> </ul> </li> <li>Copy the repo for testing (choose one):<ul> <li>Tar stream (preserves permissions, excludes .git):    <pre><code>mkdir -p ../sage-devcontainer-test-copy\ntar --exclude .git -cf - . | tar -C ../sage-devcontainer-test-copy -xf -\n</code></pre></li> <li>Simple cp fallback (copies .git then removes it):    <pre><code>cp -a . ../sage-devcontainer-test-copy\nrm -rf ../sage-devcontainer-test-copy/.git\n</code></pre></li> </ul> </li> <li>If testing in-place, plan cleanup:<ul> <li>Remove build caches: <code>rm -rf .nx/cache</code> (and any <code>dist/</code> or <code>build/</code> dirs)</li> <li>Recreate dependencies fresh: <code>rm -rf node_modules &amp;&amp; workspace-install</code></li> <li>Discard unintended changes: <code>git restore .</code> / <code>git clean -fdX</code> (review before running)</li> </ul> </li> </ol> <p>If you notice unexplained build speed regressions after testing, clear caches as above before investigating further.</p> <ol> <li>Start dev container with monorepo:</li> </ol> <pre><code># From the root of the monorepo\ndevcontainer up --workspace-folder .\n</code></pre> <ol> <li>Execute comprehensive test directly:</li> </ol> <pre><code>devcontainer exec --workspace-folder . bash -c \". ./dev-env.sh \\\n  &amp;&amp; workspace-install \\\n  &amp;&amp; nx run-many --target=create-config,build,test --skip-nx-cache\"\n</code></pre> <ol> <li>Clean up test container:</li> </ol> <pre><code># After the command completes, remove the test container\ndocker rm -f sage-monorepo-devcontainer\n</code></pre> <p>Benefits of this approach:</p> <ul> <li>Streamlined: No need to manually connect and navigate inside the test container</li> <li>Automated: Single command runs the entire test suite</li> <li>Clean: Remains in your active development environment throughout</li> <li>Efficient: Uses <code>--skip-nx-cache</code> to ensure fresh builds and tests</li> </ul>"},{"location":"develop/maintenance/dev-container/#ide-ci-integration-testing","title":"IDE &amp; CI Integration Testing","text":"<ol> <li> <p>Test in VS Code:</p> <ul> <li>Open the project in VS Code</li> <li>Select \"Rebuild and Reopen in Container\"</li> <li>Verify all extensions load correctly</li> <li>Test basic development workflows</li> </ul> </li> <li> <p>Test CI/CD compatibility:</p> <ul> <li>Ensure GitHub Actions continue to work</li> <li>Verify any external integrations still function</li> </ul> </li> </ol>"},{"location":"develop/maintenance/dev-container/#step-1d-build-publish-image-pr-1","title":"Step 1d: Build &amp; Publish Image (PR 1)","text":"<p>The checklist later includes an abbreviated version of these PR 1 steps.</p>"},{"location":"develop/maintenance/dev-container/#creating-the-build-pr","title":"Creating the Build PR","text":"<p>After successful local testing:</p> <ol> <li> <p>Revert local testing changes:</p> <ul> <li>Critical: Revert any image tag changes in <code>.devcontainer/devcontainer.json</code> made for local testing</li> <li>Ensure the file references the current production image tag, not \"local\" or test configurations</li> <li>Example: Change from <code>\"image\": \"ghcr.io/sage-bionetworks/sage-monorepo-devcontainer:local\"</code> back to the current SHA-based tag</li> </ul> </li> <li> <p>Create feature branch PR:</p> <ul> <li>Create a pull request with all dev container changes</li> <li>Include comprehensive description of updates made</li> <li>Document any breaking changes or new requirements</li> <li>Verify <code>.devcontainer/devcontainer.json</code> uses production image reference</li> </ul> </li> <li> <p>PR triggers automated build:</p> <ul> <li>GitHub workflow will build the new dev container image</li> <li>Automated tests will validate the container functionality</li> <li>Review any build failures or test issues</li> </ul> </li> </ol>"},{"location":"develop/maintenance/dev-container/#publishing-the-new-image","title":"Publishing the New Image","text":"<p>Upon merging the PR to the main branch:</p> <ol> <li> <p>Automated image build and publish:</p> <ul> <li>Docker image is built automatically via GitHub Actions</li> <li>Image is published to GitHub Container Registry (GHCR)</li> <li>New image receives a unique tag based on commit SHA</li> </ul> </li> <li> <p>Image availability:</p> <ul> <li>Published image becomes available at <code>ghcr.io/sage-bionetworks/sage-monorepo-devcontainer:&lt;tag&gt;</code></li> <li>Tag format typically includes commit SHA or version identifier</li> </ul> </li> </ol>"},{"location":"develop/maintenance/dev-container/#step-2-activate-published-image-pr-2","title":"Step 2: Activate Published Image (PR 2)","text":"<p>Tip</p> <p>See the Update Checklist at the end of this document for an actionable summary of this section.</p>"},{"location":"develop/maintenance/dev-container/#activation-overview","title":"Activation Overview","text":"<p>Activation PR</p> <p>Important: Using the new dev container requires a second PR. This activation PR is what actually enables the new image for all contributors. Until it merges, only users who temporarily point their local <code>.devcontainer/devcontainer.json</code> at the new image (or use a local <code>:local</code> tag) will experience the changes.</p> <p>After the activation PR is merged into <code>main</code>:</p> <ul> <li>When contributors pull the updated <code>main</code> branch, VS Code detects the changed dev container   image reference and pops a notification prompting them to \"Rebuild\" / \"Reopen in Container\".</li> <li>A reminder line is also printed in their terminal the next time the workspace starts inside   the prior container, advising a rebuild to pick up the new environment.</li> <li>Rebuilding pulls the published GHCR image directly (does not re-run the full Docker build   locally unless the layer cache is cold).</li> </ul> <p>If a developer dismisses the prompt, they can manually trigger it later via the command palette (\"Dev Containers: Rebuild and Reopen in Container\"). They remain on the previous environment until they rebuild, which can explain version skew in support questions.</p> <ol> <li> <p>Update image reference:</p> <ul> <li>Create a new PR updating <code>.devcontainer/devcontainer.json</code></li> <li>Change the image tag to reference the newly published image</li> <li>Example: Update from previous tag to new GHCR tag</li> </ul> </li> <li> <p>Two-step deployment rationale:</p> <ul> <li>Safety: Separates image building from activation</li> <li>Validation: Allows testing of published image before activation</li> <li>Rollback: Easy to revert to previous working image if issues arise</li> </ul> </li> <li> <p>Activation process: <pre><code>// In .devcontainer/devcontainer.json\n{\n  \"name\": \"Sage Monorepo Dev Container\",\n  \"image\": \"ghcr.io/sage-bionetworks/sage-monorepo-devcontainer:&lt;new-tag&gt;\",\n  // ... rest of configuration\n}\n</code></pre></p> </li> </ol>"},{"location":"develop/maintenance/dev-container/#post-deployment-verification","title":"Post-Deployment Verification","text":"<p>After the activation PR is merged:</p> <ol> <li> <p>Team notification:</p> <ul> <li>(Auto) Notify team members of the new dev container availability</li> <li>Provide any migration notes or new requirements</li> <li>Document any workflow changes</li> </ul> </li> <li> <p>Monitor for issues:</p> <ul> <li>Watch for team reports of container problems</li> <li>Check CI/CD pipeline functionality</li> <li>Be prepared to quickly rollback if critical issues arise</li> </ul> </li> </ol>"},{"location":"develop/maintenance/dev-container/#update-checklist","title":"Update Checklist","text":"<p>Interactive Checklist</p> <p>The checkboxes below are clickable in rendered docs. Use them to track your progress while performing an update; you can clear them to rehearse or review the process later. Their state lives only in your browser and is not persisted or shared. Opening the page in another browser or device, or after clearing site data, resets all boxes.</p>"},{"location":"develop/maintenance/dev-container/#pre-update","title":"Pre-Update","text":"<ul> <li> Document current versions for rollback reference</li> <li> Check changelogs for breaking changes in tools being updated</li> <li> Coordinate with team on timing of updates</li> <li> Review tool usage and identify candidates for removal</li> <li> Get team consensus on any tool removals</li> </ul>"},{"location":"develop/maintenance/dev-container/#during-update","title":"During Update","text":"<ul> <li> Update base Ubuntu image tag (LTS with date-specific tag only)</li> <li> Verify all tool releases are at least 1 day old</li> <li> Ensure Node.js uses LTS version (even-numbered major versions)</li> <li> Update all tool versions in Dockerfile build args to latest stable releases</li> <li> Update dev container features using non-moving version tags only</li> <li> Verify all features are from trusted organizations or approved community sources</li> <li> Complete community feature evaluation for any new features</li> <li> Update any hardcoded version references in scripts</li> <li> Remove approved unused tools to reduce attack surface</li> </ul>"},{"location":"develop/maintenance/dev-container/#testing","title":"Testing","text":""},{"location":"develop/maintenance/dev-container/#basic-functionality-testing","title":"Basic Functionality Testing","text":"<ul> <li> Build prebuild image</li> <li> If build fails, consult \"Build Troubleshooting\" (adjust Docker version if needed)</li> <li> Start container</li> <li> Attach shell</li> <li> Spot\u2011check core tools (all versions print successfully)</li> <li> Exercise representative workflows (package install, Gradle tasks, Docker, kubectl) \u2014 no errors</li> <li> Remove prebuild container</li> </ul>"},{"location":"develop/maintenance/dev-container/#headless-monorepo-runtime-testing_1","title":"Headless Monorepo Runtime Testing","text":"<p>Headless = dev container started via CLI (devcontainer up / exec) with the monorepo mounted, but VS Code not reopened inside that container yet. Editor extensions/settings activation is validated later under \"VS Code Integration Testing\".</p> <p>Option A: Manual Testing (step-by-step)</p> <ul> <li> (Optional) Temporarily point <code>.devcontainer/devcontainer.json</code> to <code>:local</code> for this session \u2014 do NOT commit</li> <li> (If using interactive flow) Attach a shell to the running container</li> <li> Initialize environment &amp; install dependencies (source <code>dev-env.sh</code>, then install; see prior section for details)</li> <li> Run full create-config / build / test targets (refer to combined Nx targets described earlier)</li> <li> Verify all projects succeed (review output; no failures reported)</li> <li> Remove the throwaway test container</li> </ul> <p>Option B: Streamlined Testing (automated)</p> <ul> <li> Confirm local image built</li> <li> Run the single exec-based end\u2011to\u2011end test flow</li> <li> Review output for failures (all targets should pass)</li> <li> Remove test container</li> </ul>"},{"location":"develop/maintenance/dev-container/#vs-code-integration-testing","title":"VS Code Integration Testing","text":"<ul> <li> Test in VS Code dev container environment (\"Rebuild and Reopen in Container\")</li> <li> Verify all extensions load correctly and development workflows function</li> </ul>"},{"location":"develop/maintenance/dev-container/#post-update","title":"Post-Update","text":""},{"location":"develop/maintenance/dev-container/#first-pr-dev-container-changes","title":"First PR - Dev Container Changes","text":"<ul> <li> Revert local testing changes: Ensure <code>.devcontainer/devcontainer.json</code> uses production image tag, not \"local\"</li> <li> Update documentation if new tools added/removed</li> <li> Create PR with clear description of changes (Dockerfile, devcontainer.json, etc.)</li> <li> Verify PR includes only production-ready configurations</li> <li> Ensure PR includes comprehensive changelog of all updates</li> <li> Monitor GitHub Actions build of new dev container image</li> <li> Verify successful image publication to GHCR after merge</li> </ul>"},{"location":"develop/maintenance/dev-container/#second-pr-activate-new-container","title":"Second PR - Activate New Container","text":"<ul> <li> Create second PR updating <code>.devcontainer/devcontainer.json</code> image reference</li> <li> Update image tag to newly published GHCR image</li> <li> Test the published image before merging activation PR</li> <li> Monitor CI/CD pipelines after activation merge</li> <li> Notify team of new dev container availability and any workflow changes</li> </ul>"},{"location":"develop/maintenance/dev-container/#troubleshooting","title":"Troubleshooting","text":""},{"location":"develop/maintenance/dev-container/#common-issues","title":"Common Issues","text":""},{"location":"develop/maintenance/dev-container/#build-failures","title":"Build Failures","text":"<ul> <li>Package not found: Check if package names changed in new Ubuntu version</li> <li>Version conflicts: Ensure all pinned versions are still available</li> <li>Architecture issues: Verify all tools support the target architecture</li> </ul>"},{"location":"develop/maintenance/dev-container/#dev-container-build-failures","title":"Dev Container Build Failures","text":"Issue Description Solution Additional Checks / Notes Docker version compatibility Latest Docker versions in <code>docker-in-docker</code> feature may cause build failures Specify an older, stable Docker version (e.g. <code>\"version\": \"27.3.2\"</code> instead of <code>\"28.3.2\"</code>) Check logs for Docker daemon startup errors or compatibility issues Feature conflicts Multiple features trying to install the same tools Remove duplicate installations or use feature-specific configurations Review feature documentation for known conflicts Memory / disk space Large feature installations may exceed available resources Increase Docker Desktop memory/disk limits or use smaller base images Monitor Docker system resource usage during build Network issues Features downloading from external sources may fail Retry build or check network connectivity Use cached or mirror sources when available Permission errors Features may fail to install due to user permission issues Ensure proper user configuration in <code>devcontainer.json</code> Verify the <code>remoteUser</code> setting matches the Dockerfile user"},{"location":"develop/maintenance/dev-container/#dev-container-runtime-issues","title":"Dev Container Runtime Issues","text":"Issue Description Solution Additional Checks / Notes Container won't start <code>devcontainer up</code> fails to start container Verify all required ports are available and not in use Ensure Docker daemon is running and accessible Tools not available Installed tools not found in PATH Check if feature installation completed successfully Connect to container and manually verify tool locations VS Code integration fails Container starts but VS Code can't connect Rebuild container with \"Rebuild and Reopen in Container\" Verify VS Code Dev Containers extension is updated"},{"location":"develop/maintenance/dev-container/#runtime-issues","title":"Runtime Issues","text":"<ul> <li>Tool missing: Check if installation commands succeeded</li> <li>Permission errors: Verify user permissions and sudo access</li> <li>Path issues: Ensure all tools are in PATH correctly</li> </ul>"},{"location":"develop/maintenance/dev-container/#performance-issues","title":"Performance Issues","text":"<ul> <li>Slow builds: Consider multi-stage builds or caching strategies</li> <li>Large image size: Remove unused packages and clean up in same RUN command</li> <li>Memory usage: Monitor resource consumption of new tools</li> </ul>"},{"location":"develop/maintenance/dev-container/#recovery-process","title":"Recovery Process","text":"<p>If issues arise after an update:</p> <ol> <li>Immediate rollback: Revert to previous Dockerfile/devcontainer.json</li> <li>Isolate the issue: Test changes incrementally</li> <li>Check compatibility: Verify tool versions work together</li> <li>Consult documentation: Review tool-specific upgrade guides</li> </ol>"},{"location":"develop/maintenance/dev-container/#security-considerations","title":"Security Considerations","text":""},{"location":"develop/maintenance/dev-container/#image-security","title":"Image Security","text":"<ul> <li>Regularly scan base images for vulnerabilities</li> <li>Use minimal base images when possible</li> <li>Keep system packages updated</li> </ul>"},{"location":"develop/maintenance/dev-container/#tool-security","title":"Tool Security","text":"<ul> <li>Verify checksums/signatures when downloading tools</li> <li>Use official distribution sources</li> <li>Monitor security advisories for installed tools</li> </ul>"},{"location":"develop/maintenance/dev-container/#access-security","title":"Access Security","text":"<ul> <li>Limit container privileges</li> <li>Use non-root user when possible</li> <li>Secure secrets and credentials</li> </ul>"},{"location":"develop/maintenance/dev-container/#automation-opportunities","title":"Automation Opportunities","text":"<p>Consider automating parts of the update process:</p> <ul> <li>Dependabot: For automatic dependency updates</li> <li>Scheduled builds: Regular container rebuilds with latest packages</li> <li>Security scanning: Automated vulnerability scanning</li> <li>Version checking: Scripts to check for tool updates</li> </ul>"},{"location":"develop/maintenance/dev-container/#resources","title":"Resources","text":"<ul> <li>Dev Containers Specification</li> <li>Dev Container Features</li> <li>Ubuntu Docker Images</li> <li>VS Code Dev Containers Documentation</li> </ul> <p>For questions or issues with dev container updates, please create an issue in the repository or reach out to the maintenance team.</p>"},{"location":"develop/maintenance/docker-images/","title":"Docker Base Image Maintenance","text":"<p>(Placeholder \u2013 to be populated later.)</p>"},{"location":"develop/maintenance/java/","title":"Java Build &amp; Dependency Maintenance","text":"<p>This guide covers governance of Java dependencies and maintenance of the Java build toolchain (Gradle wrapper and JDK) for the monorepo. It emphasizes a centralized version catalog for consistency plus clearly isolated procedures for upgrading Gradle and the JDK.</p> <p>The dependency model is described below; build tool &amp; JDK upgrade procedures live at the end under \"Build Tool &amp; JDK Upgrades\".</p>"},{"location":"develop/maintenance/java/#dependency-model","title":"Dependency Model","text":"<p>Java dependencies are managed primarily via the Gradle Version Catalog located at <code>gradle/libs.versions.toml</code>. Individual <code>build.gradle.kts</code> files reference aliases defined there. Centralizing versions:</p> <ul> <li>Ensures alignment across services and libraries</li> <li>Simplifies upgrades and security remediation</li> <li>Reduces dependency drift</li> </ul>"},{"location":"develop/maintenance/java/#key-files","title":"Key Files","text":"File / Path Role / Purpose Maintenance Notes <code>gradle/libs.versions.toml</code> Central Gradle Version Catalog (aliases, bundles, plugin &amp; lib versions) Primary source of truth for versions <code>settings.gradle.kts</code> Declares included projects &amp; (optionally) plugin management Keep aligned with catalog usage <code>build.gradle.kts</code> (root) Common repositories, shared plugin/application of conventions Avoid hard\u2011coded versions; delegate to catalog <code>apps/*/build.gradle.kts</code>, <code>libs/*/build.gradle.kts</code> Module build scripts consuming catalog aliases Should not redefine versions directly <code>gradle.properties</code> JVM &amp; Gradle configuration (memory, flags, toolchain hints) Version bumps rarely here <code>buildSrc/</code> Local convention plugins (Java, Spring Boot, Lombok, Jacoco, publishing) Contains a few hard\u2011coded versions (JUnit, Lombok, Jacoco) that must be manually synced <p>buildSrc maintenance</p> <p>Individual plugin scripts inside <code>buildSrc</code> are intentionally not listed here; treat the directory as a single maintenance surface. During updates, grep for literal versions inside <code>buildSrc</code> and align them with the catalog.</p>"},{"location":"develop/maintenance/java/#version-catalog-conventions","title":"Version Catalog Conventions","text":"<p>The goal of the catalog is to provide a single, predictable naming scheme that makes it obvious which family a dependency belongs to and how versions are shared. Consistent aliasing reduces diffs, improves discoverability, and prevents accidental version divergence.</p>"},{"location":"develop/maintenance/java/#general-rules","title":"General Rules","text":"<ol> <li>Derive library family aliases from the dependency <code>group</code> (not the full <code>group:artifact</code>) when multiple artifacts share a version (e.g., <code>com.fasterxml.jackson.core</code> \u2192 <code>jackson</code>).</li> <li>Use kebab-case for all aliases: <code>spring-boot</code>, <code>spring-cloud</code>, <code>jackson</code>, <code>logback</code>, <code>micrometer</code>, <code>junit</code>, <code>lombok</code>.</li> <li>Use a single version key per family in <code>[versions]</code>; individual artifacts reference it via <code>version.ref</code>.</li> <li>Do not encode version numbers in alias names (avoid <code>jackson-2-18</code>).</li> <li>Use suffixes only when they add semantic clarity:</li> <li><code>-bom</code> for Bill of Materials / platform entries (e.g., <code>spring-boot-bom</code>).</li> <li><code>-plugin</code> for Gradle plugin entries where an ID could collide (<code>spotless-plugin</code>).</li> <li>Keep aliases stable; renaming causes repo\u2011wide churn. Only rename to correct a clear inconsistency.</li> <li>Prefer short, unambiguous roots. If a group has a long prefix chain (<code>io.github.resilience4j</code>), choose <code>resilience4j</code>.</li> <li>For a single artifact with no family context, derive alias from the artifact, trimming redundant prefixes (e.g., <code>micrometer-registry-prometheus</code> \u2192 <code>micrometer-prometheus</code>).</li> </ol>"},{"location":"develop/maintenance/java/#recommended-catalog-structure-excerpt","title":"Recommended Catalog Structure (Excerpt)","text":"<pre><code>[versions]\njackson = \"2.18.0\"\nspring-boot = \"3.3.3\"\njunit = \"5.10.2\"\n\n[libraries]\njackson-core = { group = \"com.fasterxml.jackson.core\", name = \"jackson-core\", version.ref = \"jackson\" }\njackson-databind = { group = \"com.fasterxml.jackson.core\", name = \"jackson-databind\", version.ref = \"jackson\" }\njunit-jupiter = { group = \"org.junit.jupiter\", name = \"junit-jupiter\", version.ref = \"junit\" }\n\n[bundles]\njackson = [\"jackson-core\", \"jackson-databind\"]\n\n[plugins]\nspring-boot = { id = \"org.springframework.boot\", version.ref = \"spring-boot\" }\n</code></pre>"},{"location":"develop/maintenance/java/#naming-transformation-examples","title":"Naming Transformation Examples","text":"Group / Artifact Rationale Alias / Pattern <code>com.fasterxml.jackson.core</code> (family) Shared version across multiple artifacts <code>jackson</code> (version key) <code>org.springframework.boot</code> Core Spring Boot ecosystem / plugin <code>spring-boot</code> <code>org.springframework.cloud</code> Distinct Spring sub-ecosystem <code>spring-cloud</code> <code>io.micrometer:micrometer-registry-prometheus</code> Artifact-specific; family root <code>micrometer</code> <code>micrometer-prometheus</code> <code>ch.qos.logback</code> Simple unique family <code>logback</code> <code>org.projectlombok:lombok</code> Single artifact; group &amp; artifact align <code>lombok</code>"},{"location":"develop/maintenance/java/#antipatterns-vs-preferred","title":"Anti\u2011Patterns vs Preferred","text":"Anti\u2011Pattern Issue Preferred <code>com-fasterxml-jackson-core</code> Leaks full group, verbose <code>jackson</code> <code>springBoot</code> Mixed casing, not kebab <code>spring-boot</code> <code>jackson-databind-version</code> key Version name tied to specific artifact <code>jackson</code> (family version) <code>micrometerRegistryPrometheus</code> CamelCase and artifact untrimmed <code>micrometer-prometheus</code> <p>When to introduce a new version key</p> <p>Create a new version entry only when artifacts within the same group must intentionally diverge in version. Document the divergence with an inline comment to avoid future \u201ccleanup\u201d PRs that accidentally re\u2011align them.</p> <p>Renaming Aliases</p> <p>Renaming an existing alias creates a large diff across the repository. Avoid unless the current name is misleading or blocks adoption of a consistent pattern.</p>"},{"location":"develop/maintenance/java/#update-sources","title":"Update Sources","text":"<p>Planned (Cadence) Updates</p> <p>Run a scheduled dependency refresh (e.g., monthly for patch/minor; quarterly review for majors / platform upgrades) even if no urgent trigger appears. This prevents large, risky jumps later.</p> <p>Typical triggers for an update:</p> <ul> <li>Scheduled maintenance window (planned cadence refresh)</li> <li>Security advisory (CVE) or transitive vulnerability exposure</li> <li>Framework / BOM alignment (e.g., Spring Boot + Spring Cloud compatibility)</li> <li>New feature / API needed in a newer library version</li> <li>Upcoming EOL (JDK, framework, or library support window closing)</li> <li>Performance / memory / stability regression fix available upstream</li> <li>Build warnings or deprecations indicating future breakage</li> <li>(Future) Automated bot PR (Renovate / Dependabot) once enabled</li> </ul>"},{"location":"develop/maintenance/java/#workflow-routine-upgrade-patch-minor","title":"Workflow: Routine Upgrade (Patch / Minor)","text":"<ol> <li>Identify candidate updates with <code>./gradlew dependencyUpdates</code>.</li> <li>Edit the target version(s) in <code>gradle/libs.versions.toml</code>.</li> <li>Manually synchronize any hard\u2011coded versions in <code>buildSrc</code> (JUnit, JUnit Platform launcher, Lombok, Jacoco).    Update those literals to match the catalog (or the selected new version) and add an inline comment if deliberate divergence.</li> <li>Rerun <code>./gradlew dependencyUpdates</code> to confirm that the updates have been applied.</li> <li>Run a clean build:    <pre><code>./gradlew clean build\n</code></pre></li> <li>Run tests selectively if change is scoped, otherwise full test suite.</li> <li>Commit with message: <code>chore(deps): bump &lt;lib&gt; to &lt;version&gt;</code>.</li> <li>Push branch &amp; open/refresh PR.</li> </ol>"},{"location":"develop/maintenance/java/#batching-patch-minor-updates","title":"Batching Patch &amp; Minor Updates","text":"<p>Batching several low\u2011risk version bumps into a single PR reduces review overhead and keeps the catalog tidy. Follow these guidelines to keep risk controlled:</p> <p>Safe to Batch When</p> <ul> <li>All changes are patch or minor (no majors / milestones / RCs / betas).</li> <li>No code changes or API migrations required (catalog + lock + <code>buildSrc</code> literals only).</li> <li>All libraries belong to a small number of logical families (e.g., testing, logging, serialization) OR are clearly unrelated but trivially safe (pure patch).</li> <li>Build, tests, and lint produce no new warnings that demand immediate action.</li> </ul> <p>Good Grouping Examples</p> <ul> <li>Testing stack: JUnit, Mockito, AssertJ, Testcontainers.</li> <li>Jackson family (core / databind / annotations) at the same patch.</li> <li>Spring Boot + compatible Spring Cloud patch/minor (after checking release notes).</li> <li>Observability: Micrometer core + registry modules.</li> </ul> <p>When to Split Instead</p> <ul> <li>Any major version is involved.</li> <li>A dependency has known behavioral change even in a minor (e.g., Hibernate SQL generation tweaks, Netty event loop adjustments).</li> <li>A security fix (CVE) needs fast\u2011track isolation for audit clarity.</li> <li>A build tool / Gradle plugin upgrade could impact cache keys or task wiring.</li> <li>You must add resolution strategy rules or exclusions to resolve conflicts.</li> </ul> <p>Practical Limits</p> <ul> <li>Aim for \u2264 ~15 edited version lines (catalog + <code>buildSrc</code>) per batch PR.</li> <li>If reviewing the diff requires excessive scrolling, split by family.</li> </ul> <p>Commit / PR Style</p> <ul> <li>Single commit: <code>chore(deps): batch patch/minor updates (testing + jackson)</code></li> <li>Or one commit per family inside one PR if you want granular blame.</li> </ul> <p>Checklist for a Batched PR</p> <ul> <li> Only patch/minor versions included</li> <li> <code>gradle/libs.versions.toml</code> updated &amp; tidy (no orphaned commented versions)</li> <li> <code>buildSrc</code> literals (JUnit / Jacoco / Lombok) synced if touched</li> <li> <code>./gradlew dependencyUpdates</code> now shows only pending majors (or nothing relevant)</li> <li> <code>./gradlew clean build</code> passes</li> <li> Targeted / affected integration tests run (if any)</li> <li> No new deprecation floods (or documented in PR description)</li> <li> PR description lists families updated + highlights anything security\u2011related</li> </ul> <p>Avoid over\u2011broad batches</p> <p>Mixing unrelated ecosystems (e.g., database driver + logging + Spring + build plugins) increases risk and review fatigue. Smaller, coherent batches are merged faster.</p> <p>Automate grouping later</p> <p>A future enhancement could script grouping by scanning the catalog diff and clustering changes by group prefix (e.g., <code>com.fasterxml.jackson.*</code>).</p>"},{"location":"develop/maintenance/java/#workflow-major-upgrade","title":"Workflow: Major Upgrade","text":"<ol> <li>Review upstream release notes &amp; migration guide.</li> <li>Create a dedicated branch: <code>chore/deps/java-&lt;lib&gt;-&lt;major&gt;-upgrade</code>.</li> <li>Update version in <code>libs.versions.toml</code>.</li> <li>Run build &amp; inspect compilation/runtime failures.</li> <li>Apply required code/config migrations (document in PR description).</li> <li>Run extended test matrix (integration, contract, API compatibility if applicable).</li> <li>Add <code>BREAKING CHANGE:</code> footer to the PR description if public API impact.</li> <li>Request second reviewer (recommended for high-risk changes).</li> </ol>"},{"location":"develop/maintenance/java/#security-cve-response","title":"Security / CVE Response","text":"<ol> <li>Open branch: <code>security/deps/&lt;cve-id&gt;-&lt;lib&gt;</code>.</li> <li>Update only the affected library versions.</li> <li>Run targeted tests + any security scan tasks.</li> <li>Merge promptly after review.</li> <li>Include mitigation note in release summary.</li> </ol>"},{"location":"develop/maintenance/java/#tooling-commands","title":"Tooling &amp; Commands","text":"Action Command Notes List dependency insights <code>./gradlew dependencies</code> Per module (Optional) Check for new versions <code>./gradlew dependencyUpdates</code> Requires versions plugin Build &amp; test all <code>./gradlew clean build</code> Ensures no stale outputs Run a single module build <code>./gradlew :path:to:module:build</code> Faster feedback Generate dependency report <code>./gradlew htmlDependencyReport</code> If report plugin configured"},{"location":"develop/maintenance/java/#dependency-scopes","title":"Dependency Scopes","text":"Scope Use For Notes <code>implementation</code> Internal library use Not exposed transitively <code>api</code> Libraries whose APIs leak to consumers Use sparingly <code>compileOnly</code> Annotation processors, compile-time only Avoid runtime reliance <code>runtimeOnly</code> Drivers, logging impls Not needed at compile time <code>testImplementation</code> Test frameworks &amp; utilities Keep isolation"},{"location":"develop/maintenance/java/#managing-transitive-dependencies","title":"Managing Transitive Dependencies","text":"<ul> <li>Prefer allowing Gradle to resolve transitives unless a direct version is required to fix a CVE or conflict.</li> <li>Use <code>strictly</code> or <code>reject</code> rules only when necessary.</li> <li>Document any enforced versions in a dedicated section (e.g., below) to avoid accidental removal.</li> </ul>"},{"location":"develop/maintenance/java/#example-enforcement-block","title":"Example Enforcement Block","text":"<pre><code>configurations.all {\n    resolutionStrategy {\n        force(\"com.fasterxml.jackson.core:jackson-databind:2.18.0\")\n    }\n}\n</code></pre> <p>(Shift to version catalog alignment if possible instead of forcing.)</p>"},{"location":"develop/maintenance/java/#when-rarely-to-use-forcing","title":"When (Rarely) to Use Forcing","text":"<p>Use a forced version only as a short\u2011lived mitigation when one of these applies:</p> <ul> <li>A transitive dependency pulls an older vulnerable version (security / CVE hotfix).</li> <li>Upstream libraries have not yet released an aligned version and you must unblock a build.</li> <li>You are bisecting a regression and need to pin a single suspect artifact temporarily.</li> </ul> <p>Forces are global</p> <p>A <code>force</code> statement affects every configuration it touches. It can hide legitimate incompatibilities and introduce subtle runtime or test failures later. Treat it as an exception, not a pattern.</p>"},{"location":"develop/maintenance/java/#prefer-these-alternatives-first","title":"Prefer These Alternatives First","text":"Goal Preferred Mechanism Keep related artifacts aligned Shared version key in <code>libs.versions.toml</code> Enforce a coherent ecosystem version Import a BOM/platform (<code>platform(libs.spring.boot.bom)</code>) Override one problematic transitive Dependency constraint (<code>constraints { implementation(...) }</code>) Remove obsolete / conflicting module Exclusion on the specific dependency (<code>exclude(group = \"...\", module = \"...\")</code>) Document intentional divergence Inline comment + constraint (not a force) <p>Example constraint (scoped, clearer intent than a global force):</p> <pre><code>dependencies {\n    constraints {\n        implementation(\"com.fasterxml.jackson.core:jackson-databind:2.18.0\") {\n            because(\"CVE-2024-XXXX fixed in 2.18.0\")\n        }\n    }\n}\n</code></pre>"},{"location":"develop/maintenance/java/#temporary-force-checklist","title":"Temporary Force Checklist","text":"<ul> <li> Justification (CVE, blocking regression) noted as a code comment.</li> <li> Issue / ticket created to remove the force.</li> <li> Catalog already reflects the target version (avoid hidden divergence).</li> <li> Evaluated BOM / constraint alternative and documented why not used.</li> <li> Full build + tests + key integration tests pass.</li> </ul>"},{"location":"develop/maintenance/java/#migration-off-a-force","title":"Migration Off a Force","text":"<ol> <li>Monitor upstream releases until dependencies naturally resolve to the desired version.</li> <li>Remove the <code>force</code> clause.</li> <li>Run dependency insight to ensure the resolved graph is clean:    <pre><code>./gradlew dependencyInsight --dependency jackson-databind\n</code></pre></li> <li>If multiple versions remain, add a constraint instead of re\u2011adding the force.</li> <li>Commit: <code>chore(deps): remove temporary force on jackson-databind</code>.</li> </ol>"},{"location":"develop/maintenance/java/#auditing-existing-forces","title":"Auditing Existing Forces","text":"<p>Quick commands to discover and validate enforced versions:</p> Purpose Command List all places using strategy <code>grep -R \"resolutionStrategy\" -n .</code> Inspect resolution path <code>./gradlew dependencyInsight --dependency jackson-databind</code> View runtime graph (sample) <code>./gradlew dependencies --configuration runtimeClasspath</code> <p>Automate enforcement hygiene</p> <p>Consider a small CI script that fails if new <code>force(</code> usages are added without an inline <code># justified:</code> marker, encouraging disciplined use.</p>"},{"location":"develop/maintenance/java/#version-alignment-boms","title":"Version Alignment / BOMs","text":"<p>If a platform (BOM) is used (e.g., Spring Boot):</p> <pre><code>dependencies {\n    implementation(platform(libs.spring.boot.bom))\n    implementation(libs.spring.boot.starter.web)\n}\n</code></pre> <p>Keep BOM version updates isolated to ease troubleshooting.</p>"},{"location":"develop/maintenance/java/#testing-strategy-after-upgrades","title":"Testing Strategy After Upgrades","text":"<ol> <li>Unit tests (fast feedback)</li> <li>Integration tests (service wiring, DB migrations)</li> <li>Contract/API tests (if publishing endpoints or libraries)</li> <li>Performance smoke (optional: startup time, memory)</li> </ol>"},{"location":"develop/maintenance/java/#performance-regression-checks-optional","title":"Performance &amp; Regression Checks (Optional)","text":"<p>Track key metrics (startup time, heap, request latency). For significant framework upgrades, capture before/after diffs.</p>"},{"location":"develop/maintenance/java/#common-issues-resolutions","title":"Common Issues &amp; Resolutions","text":"Issue Cause Resolution <code>NoSuchMethodError</code> Mixed library versions Ensure single version in catalog Annotation processor conflicts Duplicate processors Exclude older processor Classpath length errors Deep transitive graph Prune unused libs, prefer lighter alternatives Build cache misses Unstable inputs Pin plugin versions, avoid timestamp-based tasks"},{"location":"develop/maintenance/java/#pr-review-checklist-java","title":"PR Review Checklist (Java)","text":"<ul> <li> Versions updated only in <code>libs.versions.toml</code></li> <li> No stray version strings left in module <code>build.gradle.kts</code></li> <li> All tests pass locally/CI</li> <li> Release notes/migration doc referenced (for majors)</li> <li> No forced resolutions added without justification</li> <li> Security concerns addressed / CVE linked if relevant</li> </ul>"},{"location":"develop/maintenance/java/#future-improvements","title":"Future Improvements","text":"<ul> <li>Adopt automated version report in CI</li> <li>Add SBOM generation (e.g., CycloneDX Gradle plugin)</li> <li>Integrate vulnerability scanning (OWASP, Snyk, etc.)</li> </ul>"},{"location":"develop/maintenance/java/#references","title":"References","text":"<ul> <li>Gradle Version Catalogs: https://docs.gradle.org/current/userguide/platforms.html</li> <li>Dependency Management Best Practices: https://docs.gradle.org</li> </ul>"},{"location":"develop/maintenance/java/#custom-gradle-extensions-buildsrc","title":"Custom Gradle Extensions (buildSrc)","text":"<p>The monorepo defines reusable Gradle convention plugins and helper scripts in <code>buildSrc/</code>. These act like lightweight, locally published plugins automatically available to every build without extra coordinates.</p>"},{"location":"develop/maintenance/java/#what-are-they","title":"What Are They?","text":"<p>Gradle loads any code under <code>buildSrc/</code> as an included build. Kotlin script files under <code>buildSrc/src/main/kotlin/</code> (e.g. <code>sage.java-library.gradle.kts</code>) are effectively precompiled script plugins. Applying <code>id(\"sage.java-library\")</code> in a module delegates to the corresponding file.</p>"},{"location":"develop/maintenance/java/#where-they-live","title":"Where They Live","text":"File Purpose <code>sage.java-common.gradle.kts</code> Base Java configuration (Java 21, encoding) <code>sage.java-library.gradle.kts</code> Library conventions + JUnit (publishing) <code>sage.spring-boot-application.gradle.kts</code> Spring Boot app conventions (tests, image) <code>sage.spring-boot-library.gradle.kts</code> Spring Boot library conventions (no bootJar) <code>sage.lombok.gradle.kts</code> Lombok annotation processing/version override support <code>sage.jacoco-coverage.gradle.kts</code> Jacoco coverage + verification rules"},{"location":"develop/maintenance/java/#why-versions-are-duplicated-here","title":"Why Versions Are Duplicated Here","text":"<p>These scripts cannot (directly) consume the central version catalog (<code>libs.versions.toml</code>) because Gradle resolves <code>buildSrc</code> earlier in the lifecycle. As a result, any dependency or tool versions hard-coded inside these scripts (e.g., JUnit, Jacoco, Lombok) must be kept manually in sync with the catalog to avoid drift.</p>"},{"location":"develop/maintenance/java/#manual-sync-required","title":"Manual Sync Required","text":"<p>When updating versions (e.g., via <code>./gradlew dependencyUpdates</code>):</p> <ol> <li>Update <code>gradle/libs.versions.toml</code> for runtime &amp; library use.</li> <li>Manually inspect <code>buildSrc/src/main/kotlin/*.gradle.kts</code> for hard-coded versions:</li> <li>JUnit (<code>org.junit.jupiter:junit-jupiter:&lt;ver&gt;</code>)</li> <li>JUnit Platform launcher</li> <li>Lombok default version in <code>LombokExtension</code></li> <li>Jacoco <code>toolVersion</code></li> <li>Bump those values to match the catalog (if defined there) or to the chosen new version if catalog does not track it yet.</li> <li>Run a clean build to detect mismatches:    <pre><code>./gradlew clean build\n</code></pre></li> <li>If a version in <code>buildSrc</code> intentionally differs (rare), document the rationale in an inline comment.</li> </ol>"},{"location":"develop/maintenance/java/#suggested-future-improvement","title":"Suggested Future Improvement","text":"<ul> <li>Introduce a verification task that parses <code>buildSrc</code> for known version literals and compares them to <code>libs.versions.toml</code>, failing the build when they diverge.</li> <li>Optionally migrate to an included build (composite) plugin project that can itself use a version catalog.</li> </ul>"},{"location":"develop/maintenance/java/#pr-review-checklist-additions","title":"PR Review Checklist Additions","text":"<ul> <li> <code>buildSrc</code> scripts updated for any dependency bumped in catalog</li> <li> JUnit / Jacoco / Lombok versions aligned</li> <li> Inline comment added if intentional divergence</li> </ul>"},{"location":"develop/maintenance/java/#build-tool-jdk-upgrades","title":"Build Tool &amp; JDK Upgrades","text":"<p>This section covers upgrading the Gradle build tool itself and the Java toolchain used by the monorepo. Perform these upgrades separately from routine library dependency batches for clearer review and rollback.</p>"},{"location":"develop/maintenance/java/#upgrading-gradle","title":"Upgrading Gradle","text":"<p>Upgrading Gradle keeps build performance, security, and deprecation coverage current. Wrapper\u2011based upgrades are low risk when validated systematically.</p>"},{"location":"develop/maintenance/java/#when-to-upgrade","title":"When to Upgrade","text":"<ul> <li>New major or minor with performance improvements or important bug fixes</li> <li>Deprecation warnings appearing in current builds that will become errors next release</li> <li>Plugin ecosystem (e.g., Spring Boot plugin) now officially supports a newer Gradle baseline</li> <li>Security advisory in an older Gradle distribution</li> </ul>"},{"location":"develop/maintenance/java/#preflight-checklist","title":"Pre\u2011Flight Checklist","text":"<ul> <li> Review latest Gradle release and its release notes</li> <li> Verify core &amp; third\u2011party plugins declare compatibility</li> <li> Ensure CI images / dev container already have a compatible JDK (Gradle 9 requires Java 21+)</li> <li> No custom init scripts or build logic relying on removed APIs</li> </ul>"},{"location":"develop/maintenance/java/#upgrade-procedure-example-910","title":"Upgrade Procedure (Example: 9.1.0)","text":"<ol> <li>Baseline build:    <pre><code>./gradlew clean build\n</code></pre></li> <li>Regenerate wrapper:    <pre><code>./gradlew wrapper --gradle-version 9.1.0 --distribution-type bin\n</code></pre></li> <li>Inspect changes:</li> <li><code>gradle/wrapper/gradle-wrapper.properties</code> updated (distributionUrl points to <code>gradle-9.1.0-bin.zip</code>)</li> <li><code>gradlew</code> / <code>gradlew.bat</code> updated (commit them)</li> <li>Do not manually edit wrapper JAR/scripts; regenerate if unexpected</li> <li>Verify version:</li> </ol> <pre><code>./gradlew --version\n</code></pre> <p>Expected style of output:</p> <pre><code>------------------------------------------------------------\nGradle 9.1.0\n------------------------------------------------------------\n\nBuild time:    2025-09-18 13:05:56 UTC\nRevision:      e45a8dbf2470c2e2474ccc25be9f49331406a07e\n\nKotlin:        2.2.0\nGroovy:        4.0.28\nAnt:           Apache Ant(TM) version 1.10.15 compiled on August 25 2024\nLauncher JVM:  21.0.7 (Microsoft 21.0.7+6-LTS)\nDaemon JVM:    /usr/local/sdkman/candidates/java/21.0.7-ms\nOS:            Linux 6.1.148-173.267.amzn2023.x86_64 amd64\n</code></pre> <ol> <li>Full rebuild to surface deprecations:    <pre><code>./gradlew clean build\n</code></pre></li> <li>Validate multi\u2011project &amp; Docker image builds:    <pre><code>nx run-many --target=build,build-image --projects=tag:language:java\n</code></pre></li> <li>Remove the Gradle wrapper for Windows:    <pre><code>rm -fr gradlew.bat\n</code></pre></li> <li>Commit:    <pre><code>git add gradle/wrapper/gradle-wrapper.properties gradlew\ngit commit -m \"build: upgrade to Gradle 9.1.0\"\n</code></pre></li> <li>PR description should include:</li> <li>Release notes link</li> <li>Summary of any new deprecation warnings (or none)</li> <li>Confirmation of successful full + Docker image builds</li> </ol>"},{"location":"develop/maintenance/java/#postupgrade-validation","title":"Post\u2011Upgrade Validation","text":"<ul> <li> CI pipelines green</li> <li> No new flaky tests introduced</li> <li> (If using scans) No major regression in configuration time</li> <li> Team notified to clear local caches only if necessary</li> </ul>"},{"location":"develop/maintenance/java/#rollback","title":"Rollback","text":"<p>If a blocking issue appears:</p> <pre><code>./gradlew wrapper --gradle-version &lt;previous-version&gt; --distribution-type bin\ngit add gradle/wrapper/gradle-wrapper.properties gradlew gradlew.bat\ngit commit -m \"revert: downgrade Gradle to &lt;previous-version&gt; (regression)\"\n</code></pre> <p>Plugin Compatibility</p> <p>Confirm critical plugins (Spring Boot, Spotless, Jacoco, Testcontainers, publishing) list the new Gradle version in their matrix. Upgrade lagging plugins first.</p> <p>Wrapper Integrity</p> <p>Always regenerate rather than manually editing wrapper files to ensure checksum authenticity.</p>"},{"location":"develop/maintenance/java/#updating-java-placeholder","title":"Updating Java (Placeholder)","text":""},{"location":"develop/maintenance/node/","title":"Node.js / TypeScript Dependency Maintenance","text":"<p>This guide describes the process for updating and validating Node.js and TypeScript dependencies in the monorepo. It focuses on using pnpm workspaces with a centralized <code>package.json</code> and ensuring consistent, reproducible builds across Angular, React, and Node.js applications.</p>"},{"location":"develop/maintenance/node/#overview","title":"Overview","text":"<p>Node.js dependencies are managed primarily via the root <code>package.json</code> file in conjunction with pnpm workspaces. Individual projects reference shared dependencies from the root, ensuring:</p> <ul> <li>Version alignment across all applications and libraries</li> <li>Simplified upgrades and security remediation</li> <li>Reduced dependency drift and bundle duplication</li> <li>Efficient disk usage through symlinked <code>node_modules</code></li> </ul>"},{"location":"develop/maintenance/node/#key-files","title":"Key Files","text":"File / Path Role / Purpose Maintenance Notes <code>package.json</code> (root) Central dependency management for all TypeScript/Node.js projects Primary source of truth for versions <code>pnpm-workspace.yaml</code> Defines workspace packages and exclusions Keep aligned with project structure <code>tsconfig.base.json</code> TypeScript path mapping and compiler configuration Update path mappings when adding/removing libraries <code>nx.json</code> Nx workspace configuration and task execution Configure build, test, and lint tasks <code>apps/*/project.json</code>, <code>libs/*/project.json</code> Individual project configurations Should reference root dependencies via Nx or workspace resolution <code>apps/*/package.json</code>, <code>libs/*/package.json</code> Local package configurations for publishable libraries or deployable artifacts Used for publishable libraries or deployment artifacts (e.g., Lambda functions); must be excluded from pnpm workspace in <code>pnpm-workspace.yaml</code> if using shared <code>node_modules</code> <code>pnpm-lock.yaml</code> Lock file ensuring reproducible installations Automatically updated; commit changes <code>jest.config.ts</code>, <code>jest.preset.js</code> Testing framework configuration Align with testing library versions <code>stylelint.config.mjs</code>, <code>tsconfig.base.json</code> Linting and TypeScript configuration Keep linter versions synchronized <p>Workspace dependency resolution</p> <p>Individual projects within the workspace automatically inherit dependencies from the root <code>package.json</code>. Local <code>package.json</code> files are used in a minority of projects, usually when a library is publishable or when the <code>package.json</code> is an artifact that can be deployed (e.g., as part of an AWS Lambda function). If a project has a local <code>package.json</code> but still uses the shared (root) <code>node_modules</code>, then the project must be excluded from the pnpm workspace in <code>pnpm-workspace.yaml</code>. There is a risk of package definition drift if local <code>package.json</code> files are not regularly reviewed and updated to align with the root dependencies and the libraries actually used by the project.</p>"},{"location":"develop/maintenance/node/#dependency-management-strategy","title":"Dependency Management Strategy","text":"<p>The monorepo uses several strategies to maintain consistent and efficient dependency management:</p>"},{"location":"develop/maintenance/node/#centralized-dependencies","title":"Centralized Dependencies","text":"<p>All shared dependencies are defined in the root <code>package.json</code>, including:</p> <ul> <li>Framework dependencies: Angular, React, Express</li> <li>Testing frameworks: Jest, Playwright, Testing Library</li> <li>Build tools: Nx, TypeScript, Vite, webpack</li> <li>Linting tools: ESLint, Prettier, Stylelint</li> <li>Development utilities: Husky, lint-staged</li> </ul>"},{"location":"develop/maintenance/node/#version-management-conventions","title":"Version Management Conventions","text":""},{"location":"develop/maintenance/node/#general-rules","title":"General Rules","text":"<ol> <li>Single version per package: Maintain one version of each package across the entire monorepo to prevent conflicts</li> <li>Pin exact versions: Use exact version numbers (e.g., <code>\"1.2.3\"</code>) rather than version ranges (e.g., <code>\"^1.2.3\"</code> or <code>\"~1.2.3\"</code>) to ensure reproducible builds and prevent unexpected updates</li> <li>Semantic versioning awareness: Understand the impact of major, minor, and patch updates</li> <li>Framework alignment: Keep related packages (e.g., all Angular packages) at the same version</li> <li>Security priority: Prioritize security updates even for major version jumps</li> <li>Testing coverage: Ensure all version updates are covered by existing test suites</li> </ol>"},{"location":"develop/maintenance/node/#dependency-categories","title":"Dependency Categories","text":"Category Examples Update Strategy Framework Core <code>@angular/core</code>, <code>react</code>, <code>express</code> Coordinated updates with migration guides Nx Ecosystem <code>@nx/angular</code>, <code>@nx/react</code>, <code>nx</code> Keep versions aligned, follow Nx migration guides Testing <code>jest</code>, <code>@playwright/test</code>, <code>@testing-library/*</code> Regular updates, ensure test compatibility Build Tools <code>typescript</code>, <code>vite</code>, <code>webpack</code> Test thoroughly, may require configuration changes Linting/Formatting <code>eslint</code>, <code>prettier</code>, <code>stylelint</code> Regular updates, check for breaking rule changes Development <code>husky</code>, <code>lint-staged</code> Low-risk updates, test development workflows"},{"location":"develop/maintenance/node/#version-alignment-examples","title":"Version Alignment Examples","text":"<p>All dependencies should use exact version numbers without ranges:</p> <pre><code>{\n  \"dependencies\": {\n    \"@angular/animations\": \"20.1.8\",\n    \"@angular/common\": \"20.1.8\",\n    \"@angular/core\": \"20.1.8\",\n    \"@angular/forms\": \"20.1.8\"\n  },\n  \"devDependencies\": {\n    \"@nx/angular\": \"21.4.1\",\n    \"@nx/jest\": \"21.4.1\",\n    \"@nx/workspace\": \"21.4.1\"\n  }\n}\n</code></pre> <p>Avoid version ranges</p> <p>Do not use caret (<code>^1.2.3</code>) or tilde (<code>~1.2.3</code>) ranges as they can lead to inconsistent builds across environments. Always specify exact versions.</p>"},{"location":"develop/maintenance/node/#workflow-routine-upgrade-patch-minor","title":"Workflow: Routine Upgrade (Patch / Minor)","text":"<ol> <li>Check for updates using npm or third-party tools:    <pre><code>pnpm outdated\n</code></pre></li> <li>Update target versions in the root <code>package.json</code>. Always specify exact versions (e.g., <code>\"20.1.8\"</code>) in package.json. If pnpm adds ranges, manually edit to remove them.    <pre><code># Update specific packages\npnpm update echarts ngx-echarts\n# or manually edit package.json with exact versions\n</code></pre></li> <li>Install and update lockfile:    <pre><code>pnpm install\n</code></pre></li> <li>Run quality checks:    <pre><code># Build all projects (includes TypeScript compilation)\nnx run-many -t build\n\n# Run tests\nnx run-many -t test\n\n# Run linting (includes TypeScript/ESLint checks)\nnx run-many -t lint\n</code></pre></li> <li>Test applications locally (sample of key apps):    <pre><code>agora-build-images &amp;&amp; agora-docker-start\nmodel-ad-build-images &amp;&amp; model-ad-docker-start\n</code></pre></li> <li>Commit changes:    <pre><code>git add package.json pnpm-lock.yaml\ngit commit -m \"chore(deps): update dependencies (patch/minor)\"\n</code></pre></li> </ol>"},{"location":"develop/maintenance/node/#batching-updates","title":"Batching Updates","text":"<p>Safe to Batch When:</p> <ul> <li>All changes are patch or minor versions</li> <li>No breaking changes in release notes</li> <li>All packages belong to related ecosystems</li> <li>Build and tests pass without modifications</li> </ul> <p>Good Grouping Examples:</p> <ul> <li>Nx ecosystem: All packages updated by <code>nx migrate latest</code></li> <li>Testing stack: Jest, Testing Library, Playwright</li> <li>Linting tools: ESLint, Prettier, Stylelint and their plugins</li> </ul> <p>Commit Style for Batched Updates:</p> <pre><code>git commit -m \"chore(deps): batch minor updates (nx ecosystem)\"\ngit commit -m \"chore(deps): update testing dependencies\"\n</code></pre>"},{"location":"develop/maintenance/node/#framework-migration-workflows","title":"Framework Migration Workflows","text":"<p>For framework updates that may include breaking changes, automated migrations can handle most of the heavy lifting. This is especially important for Angular and Nx updates.</p> <p>Unified Migration Strategy</p> <p>Always use <code>nx migrate latest</code> as the primary migration command. Nx expects all Nx-related packages (including Angular packages) to be on the same version for compatibility. Attempting to migrate individual packages separately can cause version conflicts and missed migrations.</p>"},{"location":"develop/maintenance/node/#migration-workflow","title":"Migration Workflow","text":"<p>Use When:</p> <ul> <li>Updating any Nx-related packages (<code>@nx/*</code>, <code>@angular/*</code>, <code>@angular-devkit/*</code>)</li> <li>Regular maintenance updates</li> <li>Major framework version jumps</li> </ul> <pre><code># Migrate all Nx and Angular packages together\nnx migrate latest\n\n# Review the changes to package.json then install\npnpm install --no-frozen-lockfile\n\n# This creates migrations.json with pending migrations\n# Review migrations.json to understand what will change\ncat migrations.json\n\n# Run the migrations (this modifies code)\nnx migrate --run-migrations\n\n# Copy and paste the content of migrations.json into the PR description\n\n# Commit the migrations file for posterity\ngit add --force migrations.json\ngit commit -m \"chore(deps): add migrations.json for posterity\"\n\n# Clean up after successful migration\ngit rm --cached migrations.json\ngit commit -m \"chore(deps): remove migrations.json from tracking\"\nrm migrations.json\n</code></pre>"},{"location":"develop/maintenance/node/#migration-troubleshooting","title":"Migration Troubleshooting","text":"Issue Solution Migration fails with conflicts Reset branch, update packages manually, then run specific migrations <code>migrations.json</code> not generated Ensure you're in workspace root, check package versions compatibility Partial migration completion Check git status, commit successful changes, manually handle remaining Build failures after migration Review migration logs, check for custom code that needs manual updates Peer dependency warnings Install missing peers or use <code>pnpm install --ignore-peerDeps</code> temporarily"},{"location":"develop/maintenance/node/#migration-vs-manual-updates","title":"Migration vs Manual Updates","text":"<p>Use migrations for:</p> <ul> <li>Major version jumps (Angular 17 \u2192 18 \u2192 19)</li> <li>Cross-cutting changes (workspace structure, build configs)</li> <li>Breaking API changes</li> </ul> <p>Use manual updates for:</p> <ul> <li>Patch versions (20.1.8 \u2192 20.1.9)</li> <li>Simple dependency version bumps</li> <li>Packages without migration support</li> </ul>"},{"location":"develop/maintenance/node/#workflow-major-upgrade","title":"Workflow: Major Upgrade","text":"<p>Use Migrations First</p> <p>For Angular and Nx major updates, try the Migration Workflows first. Fall back to manual upgrade only if migrations fail or are incomplete.</p> <ol> <li>Create dedicated branch:    <pre><code>git checkout -b chore/deps/node-&lt;package&gt;-&lt;major&gt;-upgrade\n</code></pre></li> <li>Try automated migration for Nx and Angular updates. Follow the steps in Migration Workflows. If the migration succeeds, skip to step 6.</li> <li>Review upstream changes (if migration unavailable/fails):<ul> <li>Read migration guides and breaking changes</li> <li>Check compatibility with other dependencies</li> <li>Review Angular/React update guides if applicable</li> </ul> </li> <li>Update package.json with new major version</li> <li>Install and check for conflicts:    <pre><code>pnpm install\n# Resolve any peer dependency warnings\n</code></pre></li> <li>Run build and address compilation errors:    <pre><code>nx run-many -t build\n# Fix TypeScript errors, import changes, API modifications\n</code></pre></li> <li>Update configurations as needed:<ul> <li>Jest configurations for testing framework updates</li> <li>ESLint rules for linter updates</li> <li>Angular/React configuration files</li> </ul> </li> <li>Run comprehensive tests:    <pre><code>nx run-many -t test\nnx run-many -t e2e\n</code></pre></li> <li>Test critical user paths manually</li> <li>Document breaking changes in PR description</li> </ol>"},{"location":"develop/maintenance/node/#security-cve-response","title":"Security / CVE Response","text":"<ol> <li>Identify affected packages:    <pre><code>pnpm audit\n# or use GitHub Security alerts\n</code></pre></li> <li>Create security branch:    <pre><code>git checkout -b security/deps/&lt;cve-id&gt;-&lt;package&gt;\n</code></pre></li> <li>Update to secure version:    <pre><code>pnpm update &lt;vulnerable-package&gt;\n</code></pre></li> <li>Use overrides if necessary. Use exact versions in overrides to ensure security fixes are applied consistently.    <pre><code>{\n  \"pnpm\": {\n    \"overrides\": {\n      \"vulnerable-package\": \"1.2.3\"\n    }\n  }\n}\n</code></pre></li> <li>Verify fix:    <pre><code>pnpm audit\n</code></pre></li> <li>Test, create PR, and merge promptly</li> </ol>"},{"location":"develop/maintenance/node/#tooling-commands","title":"Tooling &amp; Commands","text":"Action Command Notes Check outdated packages <code>pnpm outdated</code> Shows available updates Interactive updates <code>pnpm dlx npm-check-updates -i</code> Select updates interactively Install dependencies <code>pnpm install</code> Updates lockfile Security audit <code>pnpm audit</code> Check for vulnerabilities Framework Migrations Nx &amp; Angular migration <code>nx migrate latest</code> Migrate all Nx/Angular packages Run migrations <code>nx migrate --run-migrations</code> Execute pending migrations Quality Checks Build all projects <code>nx run-many -t build</code> Parallel builds Test all projects <code>nx run-many -t test</code> Run all tests Lint all projects <code>nx run-many -t lint</code> Code quality checks Affected projects only <code>nx affected -t build</code> Build only changed projects"},{"location":"develop/maintenance/node/#managing-transitive-dependencies","title":"Managing Transitive Dependencies","text":""},{"location":"develop/maintenance/node/#pnpm-overrides","title":"PNPM Overrides","text":"<p>Use pnpm overrides to force specific versions of transitive dependencies:</p> <pre><code>{\n  \"pnpm\": {\n    \"overrides\": {\n      \"axios\": \"1.8.2\",\n      \"cross-spawn\": \"7.0.6\"\n    }\n  }\n}\n</code></pre> <p>Pin all overrides</p> <p>Always use exact versions in pnpm overrides to ensure predictable dependency resolution.</p>"},{"location":"develop/maintenance/node/#when-to-use-overrides","title":"When to Use Overrides","text":"<ul> <li>Security fixes: Force secure versions of transitive dependencies</li> <li>Compatibility issues: Resolve version conflicts between packages</li> <li>Bug fixes: Apply fixes not yet propagated through dependency tree</li> </ul> <p>Overrides are global</p> <p>Overrides affect the entire dependency tree. Use sparingly and document reasons.</p>"},{"location":"develop/maintenance/node/#peer-dependencies","title":"Peer Dependencies","text":"<p>Handle peer dependency warnings appropriately:</p> <ul> <li>Install missing peers if they're genuinely needed</li> <li>Use <code>pnpm install --ignore-peerDeps</code> only temporarily during upgrades</li> <li>Document peer dependency choices in commit messages</li> </ul>"},{"location":"develop/maintenance/node/#framework-specific-considerations","title":"Framework-Specific Considerations","text":""},{"location":"develop/maintenance/node/#angular-projects","title":"Angular Projects","text":"<ul> <li>Use unified migrations: Always use <code>nx migrate latest</code> to keep all Angular and Nx packages aligned</li> <li>Incremental major updates: For major Angular version jumps (e.g., 17 \u2192 18 \u2192 19), consider migrating one major version at a time</li> <li>Migration schematics: Refer to Migration Workflows for proper migration approach</li> </ul>"},{"location":"develop/maintenance/node/#react-projects","title":"React Projects","text":"<ul> <li>React version compatibility: Keep <code>react</code> and <code>react-dom</code> aligned</li> <li>Hook dependencies: Update libraries that depend on React hooks together</li> <li>Build tools: Coordinate React updates with Vite/webpack configurations</li> </ul>"},{"location":"develop/maintenance/node/#nodejs-applications","title":"Node.js Applications","text":"<ul> <li>Runtime compatibility: Ensure packages work with the project's Node.js version</li> <li>Express middleware: Test middleware compatibility after Express updates</li> <li>Database drivers: Coordinate database client updates with schema changes</li> </ul>"},{"location":"develop/maintenance/node/#common-issues-resolutions","title":"Common Issues &amp; Resolutions","text":"Issue Cause Resolution <code>Module not found</code> errors Path mapping or dependency issues Check <code>tsconfig.base.json</code> paths, verify package installation <code>Peer dependency warnings</code> Version mismatches Install compatible peer dependencies or use overrides <code>Jest configuration errors</code> Testing framework updates Update Jest config, preset, and transform settings <code>Build failures</code> TypeScript or tooling incompatibilities Check TypeScript version compatibility, update build configs <code>Memory issues during builds</code> Large dependency trees Increase Node.js memory limit, optimize dependencies"},{"location":"develop/maintenance/node/#pr-review-checklist","title":"PR Review Checklist","text":"<ul> <li> Only <code>package.json</code> and <code>pnpm-lock.yaml</code> modified (for simple updates)</li> <li> All versions are exact (no caret <code>^</code> or tilde <code>~</code> ranges)</li> <li> All related packages updated together (e.g., all Angular packages)</li> <li> <code>pnpm audit</code> shows no new vulnerabilities</li> <li> All builds pass: <code>nx run-many -t build</code></li> <li> All tests pass: <code>nx run-many -t test</code></li> <li> No breaking changes without migration documentation</li> <li> Path mappings updated if new libraries added</li> </ul>"},{"location":"develop/maintenance/python/","title":"Python Dependency Maintenance","text":"<p>(Placeholder \u2013 to be populated later.)</p>"},{"location":"develop/maintenance/r/","title":"R Dependency Maintenance","text":"<p>(Placeholder \u2013 to be populated later.)</p>"},{"location":"develop/maintenance/security/","title":"Security &amp; Compliance","text":"<p>(Placeholder \u2013 to be populated later.)</p>"},{"location":"develop/maintenance/troubleshooting/","title":"Troubleshooting &amp; FAQ","text":"<p>(Placeholder \u2013 to be populated later.)</p>"},{"location":"develop/tutorials/angular/add-api-client/","title":"Add API Client","text":"<p>Content coming soon!</p>"},{"location":"develop/tutorials/angular/add-app/","title":"Create App","text":"<p>Content coming soon!</p>"},{"location":"develop/tutorials/angular/add-component/","title":"Add Component","text":"<p>Content coming soon!</p>"},{"location":"develop/tutorials/angular/add-library/","title":"Add Library","text":"<p>Content coming soon!</p>"},{"location":"develop/tutorials/docker/new-project/","title":"New Project","text":"<p>Content coming soon!</p>"},{"location":"develop/tutorials/java/add-library/","title":"Add Library","text":"<p>Content coming soon!</p>"},{"location":"develop/tutorials/java/add-rest-api/","title":"Add REST API","text":"<p>Content coming soon!</p>"},{"location":"develop/tutorials/r/new-project/","title":"New Project","text":"<p>Content coming soon!</p>"},{"location":"products/agora/","title":"Agora","text":"<p>Content coming soon!</p>"},{"location":"products/openchallenges/","title":"OpenChallenges","text":"<p>Content coming soon!</p>"},{"location":"products/services/","title":"Service Catalog","text":"<p>This page provides an overview of all services and applications in the Sage Monorepo.</p> <p>Last updated: 2025-08-23T22:04:00.590Z</p>"},{"location":"products/services/#overview","title":"Overview","text":"<ul> <li>Total Projects: 145</li> <li>Applications: 61</li> <li>Libraries: 84</li> </ul>"},{"location":"products/services/#by-language","title":"By Language","text":"<ul> <li>typescript: 71 projects</li> <li>unknown: 41 projects</li> <li>java: 14 projects</li> <li>python: 12 projects</li> <li>openapi: 6 projects</li> <li>javascript: 1 projects</li> </ul>"},{"location":"products/services/#by-scope","title":"By Scope","text":"<ul> <li>backend: 41 projects</li> <li>shared: 36 projects</li> <li>agora: 20 projects</li> <li>openchallenges: 16 projects</li> <li>model-ad: 13 projects</li> <li>explorers: 10 projects</li> <li>monorepo: 3 projects</li> <li>results-visualization-framework: 1 projects</li> <li>bixarena: 1 projects</li> <li>amp-als: 1 projects</li> <li>frontend: 1 projects</li> <li>admin: 1 projects</li> <li>client: 1 projects</li> </ul>"},{"location":"products/services/#admin-projects","title":"Admin Projects","text":""},{"location":"products/services/#applications","title":"Applications","text":""},{"location":"products/services/#openchallenges-infra","title":"openchallenges-infra","text":"<p>This project describe how to deploy the OpenChallenges stack with [Terraform CDK].</p> <ul> <li>Language: unknown</li> <li>Location: <code>apps/openchallenges/infra</code></li> <li>Available Tasks: build, lint, lint-fix, test</li> <li>Documentation: README</li> </ul>"},{"location":"products/services/#agora-projects","title":"Agora Projects","text":""},{"location":"products/services/#libraries","title":"Libraries","text":""},{"location":"products/services/#agora-about","title":"agora-about","text":"<p>This library was generated with Nx.</p> <ul> <li>Type: feature</li> <li>Language: typescript</li> <li>Location: <code>libs/agora/about</code></li> <li>Available Tasks: test, lint, lint-fix</li> <li>Documentation: README</li> </ul>"},{"location":"products/services/#agora-api-client-angular","title":"agora-api-client-angular","text":"<ul> <li>Type: unknown</li> <li>Language: typescript</li> <li>Location: <code>libs/agora/api-client-angular</code></li> <li>Available Tasks: test, generate</li> </ul>"},{"location":"products/services/#agora-api-description","title":"agora-api-description","text":"<ul> <li>Type: unknown</li> <li>Language: openapi</li> <li>Location: <code>libs/agora/api-description</code></li> <li>Available Tasks: build-individuals, build, lint, clean</li> </ul>"},{"location":"products/services/#agora-charts","title":"agora-charts","text":"<p>This library was generated with Nx.</p> <ul> <li>Type: feature</li> <li>Language: typescript</li> <li>Location: <code>libs/agora/charts</code></li> <li>Available Tasks: test, lint, lint-fix</li> <li>Documentation: README</li> </ul>"},{"location":"products/services/#agora-config","title":"agora-config","text":"<p>This library was generated with Nx.</p> <ul> <li>Type: feature</li> <li>Language: typescript</li> <li>Location: <code>libs/agora/config</code></li> <li>Available Tasks: test, lint, lint-fix</li> <li>Documentation: README</li> </ul>"},{"location":"products/services/#agora-gene-comparison-tool","title":"agora-gene-comparison-tool","text":"<p>This library was generated with Nx.</p> <ul> <li>Type: feature</li> <li>Language: typescript</li> <li>Location: <code>libs/agora/gene-comparison-tool</code></li> <li>Available Tasks: test, lint, lint-fix</li> <li>Documentation: README</li> </ul>"},{"location":"products/services/#agora-genes","title":"agora-genes","text":"<p>This library was generated with Nx.</p> <ul> <li>Type: feature</li> <li>Language: typescript</li> <li>Location: <code>libs/agora/genes</code></li> <li>Available Tasks: test, lint, lint-fix</li> <li>Documentation: README</li> </ul>"},{"location":"products/services/#agora-home","title":"agora-home","text":"<p>This library was generated with Nx.</p> <ul> <li>Type: feature</li> <li>Language: typescript</li> <li>Location: <code>libs/agora/home</code></li> <li>Available Tasks: test, lint, lint-fix</li> <li>Documentation: README</li> </ul>"},{"location":"products/services/#agora-news","title":"agora-news","text":"<p>This library was generated with Nx.</p> <ul> <li>Type: feature</li> <li>Language: typescript</li> <li>Location: <code>libs/agora/news</code></li> <li>Available Tasks: test, lint, lint-fix</li> <li>Documentation: README</li> </ul>"},{"location":"products/services/#agora-nominated-targets","title":"agora-nominated-targets","text":"<p>This library was generated with Nx.</p> <ul> <li>Type: feature</li> <li>Language: typescript</li> <li>Location: <code>libs/agora/nominated-targets</code></li> <li>Available Tasks: test, lint, lint-fix</li> <li>Documentation: README</li> </ul>"},{"location":"products/services/#agora-not-found","title":"agora-not-found","text":"<p>This library was generated with Nx.</p> <ul> <li>Type: feature</li> <li>Language: typescript</li> <li>Location: <code>libs/agora/not-found</code></li> <li>Available Tasks: test, lint, lint-fix</li> <li>Documentation: README</li> </ul>"},{"location":"products/services/#agora-services","title":"agora-services","text":"<p>This library was generated with Nx.</p> <ul> <li>Type: services</li> <li>Language: typescript</li> <li>Location: <code>libs/agora/services</code></li> <li>Available Tasks: test, lint</li> <li>Documentation: README</li> </ul>"},{"location":"products/services/#agora-shared","title":"agora-shared","text":"<p>This library was generated with Nx.</p> <ul> <li>Type: feature</li> <li>Language: typescript</li> <li>Location: <code>libs/agora/shared</code></li> <li>Available Tasks: test, lint, lint-fix</li> <li>Documentation: README</li> </ul>"},{"location":"products/services/#agora-storybook","title":"agora-storybook","text":"<p>This library was generated with Nx.</p> <ul> <li>Type: docs</li> <li>Language: typescript</li> <li>Location: <code>libs/agora/storybook</code></li> <li>Available Tasks: lint, storybook, build-storybook, static-storybook</li> <li>Documentation: README</li> </ul>"},{"location":"products/services/#agora-styles","title":"agora-styles","text":"<ul> <li>Type: styles</li> <li>Language: typescript</li> <li>Location: <code>libs/agora/styles</code></li> <li>Available Tasks:</li> <li>Documentation: README</li> </ul>"},{"location":"products/services/#agora-teams","title":"agora-teams","text":"<p>This library was generated with Nx.</p> <ul> <li>Type: feature</li> <li>Language: typescript</li> <li>Location: <code>libs/agora/teams</code></li> <li>Available Tasks: test, lint, lint-fix</li> <li>Documentation: README</li> </ul>"},{"location":"products/services/#agora-testing","title":"agora-testing","text":"<p>This library was generated with Nx.</p> <ul> <li>Type: feature</li> <li>Language: typescript</li> <li>Location: <code>libs/agora/testing</code></li> <li>Available Tasks: test, lint, lint-fix</li> <li>Documentation: README</li> </ul>"},{"location":"products/services/#agora-themes","title":"agora-themes","text":"<ul> <li>Type: themes</li> <li>Language: typescript</li> <li>Location: <code>libs/agora/themes</code></li> <li>Available Tasks:</li> <li>Documentation: README</li> </ul>"},{"location":"products/services/#agora-ui","title":"agora-ui","text":"<p>This library was generated with Nx.</p> <ul> <li>Type: feature</li> <li>Language: typescript</li> <li>Location: <code>libs/agora/ui</code></li> <li>Available Tasks: test, lint, lint-fix</li> <li>Documentation: README</li> </ul>"},{"location":"products/services/#agora-util","title":"agora-util","text":"<p>This library was generated with Nx.</p> <ul> <li>Type: util</li> <li>Language: typescript</li> <li>Location: <code>libs/agora/util</code></li> <li>Available Tasks: test, lint</li> <li>Documentation: README</li> </ul>"},{"location":"products/services/#amp-als-projects","title":"Amp-als Projects","text":""},{"location":"products/services/#libraries_1","title":"Libraries","text":""},{"location":"products/services/#amp-als-app-config-data","title":"amp-als-app-config-data","text":"<ul> <li>Type: library</li> <li>Language: java</li> <li>Location: <code>libs/amp-als/app-config-data</code></li> <li>Available Tasks:</li> </ul>"},{"location":"products/services/#backend-projects","title":"Backend Projects","text":""},{"location":"products/services/#applications_1","title":"Applications","text":""},{"location":"products/services/#agora-apex","title":"agora-apex","text":"<ul> <li>Language: unknown</li> <li>Location: <code>apps/agora/apex</code></li> <li>Available Tasks: create-config, serve-detach, scan-image</li> </ul>"},{"location":"products/services/#agora-api-docs","title":"agora-api-docs","text":"<ul> <li>Language: unknown</li> <li>Location: <code>apps/agora/api-docs</code></li> <li>Available Tasks: create-config, build, serve, serve-detach, scan-image</li> </ul>"},{"location":"products/services/#agora-api-next","title":"agora-api-next","text":"<ul> <li>Language: java</li> <li>Location: <code>tmp/api-next-tmp</code></li> <li>Available Tasks: create-config, build-dev, serve, serve-detach, build-image-base, scan-image, generate</li> </ul>"},{"location":"products/services/#agora-data","title":"agora-data","text":"<p>This Python project downloads an Agora data release from Synapse, then seeds and indexes the data in</p> <ul> <li>Language: python</li> <li>Location: <code>apps/agora/data</code></li> <li>Available Tasks: create-config, prepare, serve, serve-detach, scan-image</li> <li>Documentation: README</li> </ul>"},{"location":"products/services/#agora-mongo","title":"agora-mongo","text":"<ul> <li>Language: unknown</li> <li>Location: <code>apps/agora/mongo</code></li> <li>Available Tasks: create-config, serve-detach, scan-image</li> </ul>"},{"location":"products/services/#amp-als-apex","title":"amp-als-apex","text":"<ul> <li>Language: unknown</li> <li>Location: <code>apps/amp-als/apex</code></li> <li>Available Tasks: create-config, serve-detach, scan-image</li> </ul>"},{"location":"products/services/#amp-als-api-docs","title":"amp-als-api-docs","text":"<ul> <li>Language: unknown</li> <li>Location: <code>apps/amp-als/api-docs</code></li> <li>Available Tasks: create-config, build, serve, serve-detach, scan-image</li> </ul>"},{"location":"products/services/#amp-als-dataset-service","title":"amp-als-dataset-service","text":"<ul> <li>Language: java</li> <li>Location: <code>apps/amp-als/dataset-service</code></li> <li>Available Tasks: create-config, build-dev, serve, serve-detach, build-image-base, scan-image, generate</li> </ul>"},{"location":"products/services/#amp-als-keycloak","title":"amp-als-keycloak","text":"<ul> <li>Language: unknown</li> <li>Location: <code>apps/amp-als/keycloak</code></li> <li>Available Tasks: create-config, serve-detach, scan-image</li> </ul>"},{"location":"products/services/#amp-als-opensearch","title":"amp-als-opensearch","text":"<ul> <li>Language: unknown</li> <li>Location: <code>apps/amp-als/opensearch</code></li> <li>Available Tasks: create-config, serve-detach, scan-image</li> </ul>"},{"location":"products/services/#amp-als-postgres","title":"amp-als-postgres","text":"<ul> <li>Language: unknown</li> <li>Location: <code>apps/amp-als/postgres</code></li> <li>Available Tasks: create-config, serve-detach</li> </ul>"},{"location":"products/services/#amp-als-user-service","title":"amp-als-user-service","text":"<ul> <li>Language: java</li> <li>Location: <code>apps/amp-als/user-service</code></li> <li>Available Tasks: create-config, build-dev, serve, serve-detach, build-image-base, scan-image, generate</li> </ul>"},{"location":"products/services/#bixarena-apex","title":"bixarena-apex","text":"<ul> <li>Language: unknown</li> <li>Location: <code>apps/bixarena/apex</code></li> <li>Available Tasks: create-config, serve-detach, scan-image</li> </ul>"},{"location":"products/services/#bixarena-api","title":"bixarena-api","text":"<ul> <li>Language: java</li> <li>Location: <code>apps/bixarena/api</code></li> <li>Available Tasks: create-config, build-dev, serve, serve-detach, build-image-base, scan-image, generate</li> </ul>"},{"location":"products/services/#bixarena-app","title":"bixarena-app","text":"<ul> <li>Language: python</li> <li>Location: <code>apps/bixarena/app</code></li> <li>Available Tasks: create-config, prepare, show-packages, serve, serve-detach, serve-demo, scan-image</li> <li>Documentation: README</li> </ul>"},{"location":"products/services/#bixarena-postgres","title":"bixarena-postgres","text":"<ul> <li>Language: unknown</li> <li>Location: <code>apps/bixarena/postgres</code></li> <li>Available Tasks: create-config, serve-detach</li> </ul>"},{"location":"products/services/#iatlas-postgres","title":"iatlas-postgres","text":"<p>This project provides a containerized PostgreSQL database for the iAtlas application.</p> <ul> <li>Language: unknown</li> <li>Location: <code>apps/iatlas/postgres</code></li> <li>Available Tasks: create-config, serve-detach, scan-image</li> <li>Documentation: README</li> </ul>"},{"location":"products/services/#model-ad-apex","title":"model-ad-apex","text":"<ul> <li>Language: unknown</li> <li>Location: <code>apps/model-ad/apex</code></li> <li>Available Tasks: create-config, serve-detach, scan-image</li> </ul>"},{"location":"products/services/#model-ad-api","title":"model-ad-api","text":"<ul> <li>Language: typescript</li> <li>Location: <code>apps/model-ad/api</code></li> <li>Available Tasks: create-config, build, serve, serve-detach, lint, lint-fix, scan-image, test</li> </ul>"},{"location":"products/services/#model-ad-api-docs","title":"model-ad-api-docs","text":"<ul> <li>Language: unknown</li> <li>Location: <code>apps/model-ad/api-docs</code></li> <li>Available Tasks: create-config, build, serve, serve-detach, scan-image</li> </ul>"},{"location":"products/services/#model-ad-data","title":"model-ad-data","text":"<p>This Python project downloads a Model-AD data release from Synapse, then seeds and indexes the data in</p> <ul> <li>Language: python</li> <li>Location: <code>apps/model-ad/data</code></li> <li>Available Tasks: create-config, prepare, serve, serve-detach, scan-image</li> <li>Documentation: README</li> </ul>"},{"location":"products/services/#model-ad-mongo","title":"model-ad-mongo","text":"<ul> <li>Language: unknown</li> <li>Location: <code>apps/model-ad/mongo</code></li> <li>Available Tasks: create-config, serve-detach, scan-image</li> </ul>"},{"location":"products/services/#observability-apex","title":"observability-apex","text":"<ul> <li>Language: unknown</li> <li>Location: <code>apps/observability/apex</code></li> <li>Available Tasks: create-config, serve-detach, scan-image</li> </ul>"},{"location":"products/services/#observability-grafana","title":"observability-grafana","text":"<ul> <li>Language: unknown</li> <li>Location: <code>apps/observability/grafana</code></li> <li>Available Tasks: serve-detach, scan-image</li> </ul>"},{"location":"products/services/#observability-loki","title":"observability-loki","text":"<ul> <li>Language: unknown</li> <li>Location: <code>apps/observability/loki</code></li> <li>Available Tasks: serve-detach, scan-image</li> </ul>"},{"location":"products/services/#observability-otel-collector","title":"observability-otel-collector","text":"<ul> <li>Language: unknown</li> <li>Location: <code>apps/observability/otel-collector</code></li> <li>Available Tasks: serve-detach, scan-image</li> </ul>"},{"location":"products/services/#observability-prometheus","title":"observability-prometheus","text":"<ul> <li>Language: unknown</li> <li>Location: <code>apps/observability/prometheus</code></li> <li>Available Tasks: serve-detach, scan-image</li> </ul>"},{"location":"products/services/#observability-pyroscope","title":"observability-pyroscope","text":"<ul> <li>Language: unknown</li> <li>Location: <code>apps/observability/pyroscope</code></li> <li>Available Tasks: serve-detach, scan-image</li> </ul>"},{"location":"products/services/#observability-tempo","title":"observability-tempo","text":"<ul> <li>Language: unknown</li> <li>Location: <code>apps/observability/tempo</code></li> <li>Available Tasks: serve-detach, scan-image</li> </ul>"},{"location":"products/services/#openchallenges-apex","title":"openchallenges-apex","text":"<ul> <li>Language: unknown</li> <li>Location: <code>apps/openchallenges/apex</code></li> <li>Available Tasks: create-config, serve-detach, scan-image</li> </ul>"},{"location":"products/services/#openchallenges-api-gateway","title":"openchallenges-api-gateway","text":"<ul> <li>Language: java</li> <li>Location: <code>apps/openchallenges/api-gateway</code></li> <li>Available Tasks: create-config, build-dev, serve, serve-detach, build-image-base, scan-image</li> </ul>"},{"location":"products/services/#openchallenges-auth-service","title":"openchallenges-auth-service","text":"<ul> <li>Language: java</li> <li>Location: <code>apps/openchallenges/auth-service</code></li> <li>Available Tasks: create-config, build-dev, serve, serve-detach, build-image-base, scan-image, generate, demo</li> </ul>"},{"location":"products/services/#openchallenges-challenge-service","title":"openchallenges-challenge-service","text":"<ul> <li>Language: java</li> <li>Location: <code>apps/openchallenges/challenge-service</code></li> <li>Available Tasks: create-config, build-dev, serve, serve-detach, build-image-base, scan-image, generate</li> </ul>"},{"location":"products/services/#openchallenges-image-service","title":"openchallenges-image-service","text":"<p>...</p> <ul> <li>Language: java</li> <li>Location: <code>apps/openchallenges/image-service</code></li> <li>Available Tasks: create-config, build-dev, serve, serve-detach, build-image-base, scan-image, generate</li> <li>Documentation: README</li> </ul>"},{"location":"products/services/#openchallenges-mcp-server","title":"openchallenges-mcp-server","text":"<p>The OpenChallenges Model Context Protocol (MCP) Server is a Spring Boot application that serves as a bridge between Large Language Models (LLMs) and the OpenChallenges platform. Built with Spring AI a...</p> <ul> <li>Language: java</li> <li>Location: <code>apps/openchallenges/mcp-server</code></li> <li>Available Tasks: create-config, build-dev, serve, serve-detach, build-image-base, scan-image, inspect</li> <li>Documentation: README</li> </ul>"},{"location":"products/services/#openchallenges-opensearch","title":"openchallenges-opensearch","text":"<ul> <li>Language: unknown</li> <li>Location: <code>apps/openchallenges/opensearch</code></li> <li>Available Tasks: create-config, serve-detach, scan-image</li> </ul>"},{"location":"products/services/#openchallenges-organization-service","title":"openchallenges-organization-service","text":"<ul> <li>Language: java</li> <li>Location: <code>apps/openchallenges/organization-service</code></li> <li>Available Tasks: create-config, build-dev, serve, serve-detach, build-image-base, scan-image, generate, demo-auth</li> </ul>"},{"location":"products/services/#openchallenges-postgres","title":"openchallenges-postgres","text":"<ul> <li>Language: unknown</li> <li>Location: <code>apps/openchallenges/postgres</code></li> <li>Available Tasks: create-config, serve-detach</li> </ul>"},{"location":"products/services/#openchallenges-thumbor","title":"openchallenges-thumbor","text":"<p>This component is based on [Thumbor S3 Docker].</p> <ul> <li>Language: unknown</li> <li>Location: <code>apps/openchallenges/thumbor</code></li> <li>Available Tasks: create-config, serve-detach, scan-image</li> <li>Documentation: README</li> </ul>"},{"location":"products/services/#sandbox-observability-python","title":"sandbox-observability-python","text":"<p>Develop a sample Python project that implements the \"three pillars of observability\" plus profiling</p> <ul> <li>Language: python</li> <li>Location: <code>apps/sandbox/observability-python</code></li> <li>Available Tasks: create-config, prepare, serve, serve-detach</li> <li>Documentation: README</li> </ul>"},{"location":"products/services/#synapse-api-docs","title":"synapse-api-docs","text":"<ul> <li>Language: unknown</li> <li>Location: <code>apps/synapse/api-docs</code></li> <li>Available Tasks: create-config, build, serve, serve-detach, build-image, scan-image</li> <li>Documentation: README</li> </ul>"},{"location":"products/services/#bixarena-projects","title":"Bixarena Projects","text":""},{"location":"products/services/#libraries_2","title":"Libraries","text":""},{"location":"products/services/#bixarena-api-description","title":"bixarena-api-description","text":"<ul> <li>Type: unknown</li> <li>Language: openapi</li> <li>Location: <code>libs/bixarena/api-description</code></li> <li>Available Tasks: build-individuals, build, lint, clean</li> </ul>"},{"location":"products/services/#client-projects","title":"Client Projects","text":""},{"location":"products/services/#applications_2","title":"Applications","text":""},{"location":"products/services/#openchallenges-app","title":"openchallenges-app","text":"<ul> <li>Language: typescript</li> <li>Location: <code>apps/openchallenges/app</code></li> <li>Available Tasks: build, serve, extract-i18n, lint, test, serve-static, serve-detach, e2e</li> </ul>"},{"location":"products/services/#explorers-projects","title":"Explorers Projects","text":""},{"location":"products/services/#libraries_3","title":"Libraries","text":""},{"location":"products/services/#explorers-comparison-tools","title":"explorers-comparison-tools","text":"<p>This library was generated with Nx.</p> <ul> <li>Type: feature</li> <li>Language: typescript</li> <li>Location: <code>libs/explorers/comparison-tools</code></li> <li>Available Tasks: test, lint, lint-fix</li> <li>Documentation: README</li> </ul>"},{"location":"products/services/#explorers-constants","title":"explorers-constants","text":"<p>This library was generated with Nx.</p> <ul> <li>Type: feature</li> <li>Language: typescript</li> <li>Location: <code>libs/explorers/constants</code></li> <li>Available Tasks: test, lint, lint-fix</li> <li>Documentation: README</li> </ul>"},{"location":"products/services/#explorers-models","title":"explorers-models","text":"<p>This library was generated with Nx.</p> <ul> <li>Type: feature</li> <li>Language: typescript</li> <li>Location: <code>libs/explorers/models</code></li> <li>Available Tasks: test, lint, lint-fix</li> <li>Documentation: README</li> </ul>"},{"location":"products/services/#explorers-services","title":"explorers-services","text":"<p>This library was generated with Nx.</p> <ul> <li>Type: services</li> <li>Language: typescript</li> <li>Location: <code>libs/explorers/services</code></li> <li>Available Tasks: test, lint</li> <li>Documentation: README</li> </ul>"},{"location":"products/services/#explorers-shared","title":"explorers-shared","text":"<p>This library was generated with Nx.</p> <ul> <li>Type: feature</li> <li>Language: typescript</li> <li>Location: <code>libs/explorers/shared</code></li> <li>Available Tasks: test, lint, lint-fix</li> <li>Documentation: README</li> </ul>"},{"location":"products/services/#explorers-styles","title":"explorers-styles","text":"<ul> <li>Type: styles</li> <li>Language: typescript</li> <li>Location: <code>libs/explorers/styles</code></li> <li>Available Tasks:</li> <li>Documentation: README</li> </ul>"},{"location":"products/services/#explorers-testing","title":"explorers-testing","text":"<p>This library was generated with Nx.</p> <ul> <li>Type: feature</li> <li>Language: typescript</li> <li>Location: <code>libs/explorers/testing</code></li> <li>Available Tasks: test, lint, lint-fix</li> <li>Documentation: README</li> </ul>"},{"location":"products/services/#explorers-themes","title":"explorers-themes","text":"<ul> <li>Type: themes</li> <li>Language: typescript</li> <li>Location: <code>libs/explorers/themes</code></li> <li>Available Tasks:</li> <li>Documentation: README</li> </ul>"},{"location":"products/services/#explorers-ui","title":"explorers-ui","text":"<p>This library was generated with Nx.</p> <ul> <li>Type: feature</li> <li>Language: typescript</li> <li>Location: <code>libs/explorers/ui</code></li> <li>Available Tasks: test, lint, lint-fix</li> <li>Documentation: README</li> </ul>"},{"location":"products/services/#explorers-util","title":"explorers-util","text":"<p>This library was generated with Nx.</p> <ul> <li>Type: feature</li> <li>Language: typescript</li> <li>Location: <code>libs/explorers/util</code></li> <li>Available Tasks: test, lint, lint-fix</li> <li>Documentation: README</li> </ul>"},{"location":"products/services/#frontend-projects","title":"Frontend Projects","text":""},{"location":"products/services/#applications_3","title":"Applications","text":""},{"location":"products/services/#openchallenges-opensearch-dashboards","title":"openchallenges-opensearch-dashboards","text":"<ul> <li>Language: unknown</li> <li>Location: <code>apps/openchallenges/opensearch-dashboards</code></li> <li>Available Tasks: serve-detach, scan-image</li> </ul>"},{"location":"products/services/#model-ad-projects","title":"Model-ad Projects","text":""},{"location":"products/services/#libraries_4","title":"Libraries","text":""},{"location":"products/services/#model-ad-api-client-angular","title":"model-ad-api-client-angular","text":"<ul> <li>Type: unknown</li> <li>Language: typescript</li> <li>Location: <code>libs/model-ad/api-client-angular</code></li> <li>Available Tasks: test, generate</li> </ul>"},{"location":"products/services/#model-ad-api-description","title":"model-ad-api-description","text":"<ul> <li>Type: unknown</li> <li>Language: openapi</li> <li>Location: <code>libs/model-ad/api-description</code></li> <li>Available Tasks: build-individuals, build, lint, clean</li> </ul>"},{"location":"products/services/#model-ad-config","title":"model-ad-config","text":"<p>This library was generated with Nx.</p> <ul> <li>Type: feature</li> <li>Language: typescript</li> <li>Location: <code>libs/model-ad/config</code></li> <li>Available Tasks: test, lint, lint-fix</li> <li>Documentation: README</li> </ul>"},{"location":"products/services/#model-ad-disease-correlation-comparison-tool","title":"model-ad-disease-correlation-comparison-tool","text":"<p>This library was generated with Nx.</p> <ul> <li>Type: feature</li> <li>Language: typescript</li> <li>Location: <code>libs/model-ad/disease-correlation-comparison-tool</code></li> <li>Available Tasks: test, lint, lint-fix</li> <li>Documentation: README</li> </ul>"},{"location":"products/services/#model-ad-gene-expression-comparison-tool","title":"model-ad-gene-expression-comparison-tool","text":"<p>This library was generated with Nx.</p> <ul> <li>Type: feature</li> <li>Language: typescript</li> <li>Location: <code>libs/model-ad/gene-expression-comparison-tool</code></li> <li>Available Tasks: test, lint, lint-fix</li> <li>Documentation: README</li> </ul>"},{"location":"products/services/#model-ad-home","title":"model-ad-home","text":"<p>This library was generated with Nx.</p> <ul> <li>Type: feature</li> <li>Language: typescript</li> <li>Location: <code>libs/model-ad/home</code></li> <li>Available Tasks: test, lint, lint-fix</li> <li>Documentation: README</li> </ul>"},{"location":"products/services/#model-ad-model-details","title":"model-ad-model-details","text":"<p>This library was generated with Nx.</p> <ul> <li>Type: feature</li> <li>Language: typescript</li> <li>Location: <code>libs/model-ad/model-details</code></li> <li>Available Tasks: test, lint, lint-fix</li> <li>Documentation: README</li> </ul>"},{"location":"products/services/#model-ad-model-overview-comparison-tool","title":"model-ad-model-overview-comparison-tool","text":"<p>This library was generated with Nx.</p> <ul> <li>Type: feature</li> <li>Language: typescript</li> <li>Location: <code>libs/model-ad/model-overview-comparison-tool</code></li> <li>Available Tasks: test, lint, lint-fix</li> <li>Documentation: README</li> </ul>"},{"location":"products/services/#model-ad-services","title":"model-ad-services","text":"<p>This library was generated with Nx.</p> <ul> <li>Type: services</li> <li>Language: typescript</li> <li>Location: <code>libs/model-ad/services</code></li> <li>Available Tasks: test, lint</li> <li>Documentation: README</li> </ul>"},{"location":"products/services/#model-ad-styles","title":"model-ad-styles","text":"<ul> <li>Type: styles</li> <li>Language: typescript</li> <li>Location: <code>libs/model-ad/styles</code></li> <li>Available Tasks:</li> <li>Documentation: README</li> </ul>"},{"location":"products/services/#model-ad-testing","title":"model-ad-testing","text":"<p>This library was generated with Nx.</p> <ul> <li>Type: feature</li> <li>Language: typescript</li> <li>Location: <code>libs/model-ad/testing</code></li> <li>Available Tasks: test, lint, lint-fix</li> <li>Documentation: README</li> </ul>"},{"location":"products/services/#model-ad-themes","title":"model-ad-themes","text":"<ul> <li>Type: themes</li> <li>Language: typescript</li> <li>Location: <code>libs/model-ad/themes</code></li> <li>Available Tasks:</li> <li>Documentation: README</li> </ul>"},{"location":"products/services/#model-ad-util","title":"model-ad-util","text":"<p>This library was generated with Nx.</p> <ul> <li>Type: util</li> <li>Language: typescript</li> <li>Location: <code>libs/model-ad/util</code></li> <li>Available Tasks: test, lint</li> <li>Documentation: README</li> </ul>"},{"location":"products/services/#monorepo-projects","title":"Monorepo Projects","text":""},{"location":"products/services/#applications_4","title":"Applications","text":""},{"location":"products/services/#monorepo-dev-qa-agent","title":"monorepo-dev-qa-agent","text":"<ul> <li>Language: typescript</li> <li>Location: <code>apps/monorepo/dev-qa-agent</code></li> <li>Available Tasks: build, serve, lint, test</li> </ul>"},{"location":"products/services/#monorepo-docs-maintainer-agent","title":"monorepo-docs-maintainer-agent","text":"<ul> <li>Language: typescript</li> <li>Location: <code>apps/monorepo/docs-maintainer-agent</code></li> <li>Available Tasks: build, serve, run, run-dry, run-propose, lint, test</li> </ul>"},{"location":"products/services/#monorepo-tools","title":"monorepo-tools","text":"<p>A powerful script to analyze OpenAPI dependencies\ud83d\udd17 Used Files with Dependency Chains:</p> <ul> <li>Language: typescript</li> <li>Location: <code>apps/monorepo/tools</code></li> <li>Available Tasks: analyze-openapi</li> <li>Documentation: README</li> </ul>"},{"location":"products/services/#openchallenges-projects","title":"Openchallenges Projects","text":""},{"location":"products/services/#libraries_5","title":"Libraries","text":""},{"location":"products/services/#openchallenges-about","title":"openchallenges-about","text":"<p>This library was generated with Nx.</p> <ul> <li>Type: feature</li> <li>Language: typescript</li> <li>Location: <code>libs/openchallenges/about</code></li> <li>Available Tasks: test, lint, lint-fix</li> <li>Documentation: README</li> </ul>"},{"location":"products/services/#openchallenges-api-client-java","title":"openchallenges-api-client-java","text":"<p>OpenChallenges API</p> <ul> <li>Type: library</li> <li>Language: java</li> <li>Location: <code>libs/openchallenges/api-client-java</code></li> <li>Available Tasks: generate</li> <li>Documentation: README</li> </ul>"},{"location":"products/services/#openchallenges-app-config-data","title":"openchallenges-app-config-data","text":"<ul> <li>Type: library</li> <li>Language: java</li> <li>Location: <code>libs/openchallenges/app-config-data</code></li> <li>Available Tasks:</li> </ul>"},{"location":"products/services/#openchallenges-assets","title":"openchallenges-assets","text":"<p>This library was generated with Nx.</p> <ul> <li>Type: assets</li> <li>Language: typescript</li> <li>Location: <code>libs/openchallenges/assets</code></li> <li>Available Tasks:</li> <li>Documentation: README</li> </ul>"},{"location":"products/services/#openchallenges-challenge","title":"openchallenges-challenge","text":"<p>This library was generated with Nx.</p> <ul> <li>Type: feature</li> <li>Language: typescript</li> <li>Location: <code>libs/openchallenges/challenge</code></li> <li>Available Tasks: test, lint, lint-fix</li> <li>Documentation: README</li> </ul>"},{"location":"products/services/#openchallenges-challenge-search","title":"openchallenges-challenge-search","text":"<p>This library was generated with Nx.</p> <ul> <li>Type: feature</li> <li>Language: typescript</li> <li>Location: <code>libs/openchallenges/challenge-search</code></li> <li>Available Tasks: test, lint, lint-fix</li> <li>Documentation: README</li> </ul>"},{"location":"products/services/#openchallenges-config","title":"openchallenges-config","text":"<p>This library was generated with Nx.</p> <ul> <li>Type: feature</li> <li>Language: typescript</li> <li>Location: <code>libs/openchallenges/config</code></li> <li>Available Tasks: test, lint, lint-fix</li> <li>Documentation: README</li> </ul>"},{"location":"products/services/#openchallenges-home","title":"openchallenges-home","text":"<p>This library was generated with Nx.</p> <ul> <li>Type: feature</li> <li>Language: typescript</li> <li>Location: <code>libs/openchallenges/home</code></li> <li>Available Tasks: test, lint, lint-fix</li> <li>Documentation: README</li> </ul>"},{"location":"products/services/#openchallenges-not-found","title":"openchallenges-not-found","text":"<p>This library was generated with Nx.</p> <ul> <li>Type: feature</li> <li>Language: typescript</li> <li>Location: <code>libs/openchallenges/not-found</code></li> <li>Available Tasks: test, lint</li> <li>Documentation: README</li> </ul>"},{"location":"products/services/#openchallenges-org-profile","title":"openchallenges-org-profile","text":"<p>This library was generated with Nx.</p> <ul> <li>Type: feature</li> <li>Language: typescript</li> <li>Location: <code>libs/openchallenges/org-profile</code></li> <li>Available Tasks: test, lint, lint-fix</li> <li>Documentation: README</li> </ul>"},{"location":"products/services/#openchallenges-org-search","title":"openchallenges-org-search","text":"<p>This library was generated with Nx.</p> <ul> <li>Type: feature</li> <li>Language: typescript</li> <li>Location: <code>libs/openchallenges/org-search</code></li> <li>Available Tasks: test, lint, lint-fix</li> <li>Documentation: README</li> </ul>"},{"location":"products/services/#openchallenges-styles","title":"openchallenges-styles","text":"<p>This library was generated with Nx.</p> <ul> <li>Type: styles</li> <li>Language: typescript</li> <li>Location: <code>libs/openchallenges/styles</code></li> <li>Available Tasks:</li> <li>Documentation: README</li> </ul>"},{"location":"products/services/#openchallenges-team","title":"openchallenges-team","text":"<p>This library was generated with Nx.</p> <ul> <li>Type: feature</li> <li>Language: typescript</li> <li>Location: <code>libs/openchallenges/team</code></li> <li>Available Tasks: test, lint, lint-fix</li> <li>Documentation: README</li> </ul>"},{"location":"products/services/#openchallenges-themes","title":"openchallenges-themes","text":"<p>This library was generated with Nx.</p> <ul> <li>Type: themes</li> <li>Language: typescript</li> <li>Location: <code>libs/openchallenges/themes</code></li> <li>Available Tasks:</li> <li>Documentation: README</li> </ul>"},{"location":"products/services/#openchallenges-ui","title":"openchallenges-ui","text":"<p>This library was generated with Nx.</p> <ul> <li>Type: feature</li> <li>Language: typescript</li> <li>Location: <code>libs/openchallenges/ui</code></li> <li>Available Tasks: test, lint, lint-fix</li> <li>Documentation: README</li> </ul>"},{"location":"products/services/#openchallenges-util","title":"openchallenges-util","text":"<p>This library was generated with Nx.</p> <ul> <li>Type: util</li> <li>Language: typescript</li> <li>Location: <code>libs/openchallenges/util</code></li> <li>Available Tasks: test, lint</li> <li>Documentation: README</li> </ul>"},{"location":"products/services/#results-visualization-framework-projects","title":"Results-visualization-framework Projects","text":""},{"location":"products/services/#libraries_6","title":"Libraries","text":""},{"location":"products/services/#results-visualization-framework-ui","title":"results-visualization-framework-ui","text":"<p>This library was generated with Nx.</p> <ul> <li>Type: feature</li> <li>Language: typescript</li> <li>Location: <code>libs/results-visualization-framework/ui</code></li> <li>Available Tasks: test, lint, storybook, build-storybook, static-storybook</li> <li>Documentation: README</li> </ul>"},{"location":"products/services/#shared-projects","title":"Shared Projects","text":""},{"location":"products/services/#applications_5","title":"Applications","text":""},{"location":"products/services/#agora-api","title":"agora-api","text":"<ul> <li>Language: unknown</li> <li>Location: <code>apps/agora/api</code></li> <li>Available Tasks: create-config, build, serve, serve-detach, lint, lint-fix, scan-image, test</li> </ul>"},{"location":"products/services/#agora-app","title":"agora-app","text":"<ul> <li>Language: unknown</li> <li>Location: <code>apps/agora/app</code></li> <li>Available Tasks: create-config, build, serve, test, extract-i18n, lint, lint-fix, serve-static, serve-detach, scan-image, e2e</li> </ul>"},{"location":"products/services/#agora-locust","title":"agora-locust","text":"<p>A Locust-based load testing project to benchmark the performance and scalability of Agora's REST API</p> <ul> <li>Language: python</li> <li>Location: <code>apps/agora/locust</code></li> <li>Available Tasks: prepare, serve</li> <li>Documentation: README</li> </ul>"},{"location":"products/services/#bixarena-tools","title":"bixarena-tools","text":"<p>Project description here.</p> <ul> <li>Language: python</li> <li>Location: <code>apps/bixarena/tools</code></li> <li>Available Tasks: lock, sync, add, update, remove, build, lint, format, test, install, run-hello</li> <li>Documentation: README</li> </ul>"},{"location":"products/services/#iatlas-api","title":"iatlas-api","text":"<p>A GraphQL API that serves data from the iAtlas Data Database. This is built in Python and developed</p> <ul> <li>Language: python</li> <li>Location: <code>apps/iatlas/api</code></li> <li>Available Tasks: create-config, prepare, serve-detach, test-depends-on-db</li> <li>Documentation: README</li> </ul>"},{"location":"products/services/#iatlas-data","title":"iatlas-data","text":"<p>This project provides a containerized solution for downloading iAtlas data and its schema from</p> <ul> <li>Language: python</li> <li>Location: <code>apps/iatlas/data</code></li> <li>Available Tasks: create-config, prepare, serve, serve-detach</li> <li>Documentation: README</li> </ul>"},{"location":"products/services/#model-ad-app","title":"model-ad-app","text":"<ul> <li>Language: unknown</li> <li>Location: <code>apps/model-ad/app</code></li> <li>Available Tasks: create-config, build, serve, test, extract-i18n, lint, lint-fix, serve-static, serve-detach, scan-image, e2e</li> </ul>"},{"location":"products/services/#openchallenges-api-docs","title":"openchallenges-api-docs","text":"<ul> <li>Language: unknown</li> <li>Location: <code>apps/openchallenges/api-docs</code></li> <li>Available Tasks: build, serve</li> <li>Documentation: README</li> </ul>"},{"location":"products/services/#openchallenges-tools","title":"openchallenges-tools","text":"<p>Project description here.</p> <ul> <li>Language: python</li> <li>Location: <code>apps/openchallenges/tools</code></li> <li>Available Tasks: create-config, lock, sync, add, update, remove, build, lint, format, test, install, run-get-challenge, index-kaggle-challenges</li> <li>Documentation: README</li> </ul>"},{"location":"products/services/#sage-otel-collector","title":"sage-otel-collector","text":"<p>As discussed in this Github Issue: https://github.com/open-telemetry/opentelemetry-collector-contrib/issues/30798#issuecomment-2009233014</p> <ul> <li>Language: unknown</li> <li>Location: <code>apps/sage/otel-collector</code></li> <li>Available Tasks: serve-detach, scan-image</li> <li>Documentation: README</li> </ul>"},{"location":"products/services/#sage-shiny-base","title":"sage-shiny-base","text":"<p>Base Docker image for Shiny applications</p> <ul> <li>Language: unknown</li> <li>Location: <code>apps/sage/shiny-base</code></li> <li>Available Tasks: scan-image</li> <li>Documentation: README</li> </ul>"},{"location":"products/services/#sandbox-lambda","title":"sandbox-lambda","text":"<ul> <li> <p>Environments</p> </li> <li> <p>Language: unknown</p> </li> <li>Location: <code>tmp/lambda</code></li> <li>Available Tasks: cdk, deploy, deploy-all, destroy, diff, ls, synth, watch, generate-event, invoke, start-api, start-lambda, lint, test</li> <li>Documentation: README</li> </ul>"},{"location":"products/services/#sandbox-lambda-e2e","title":"sandbox-lambda-e2e","text":"<ul> <li>Language: unknown</li> <li>Location: <code>tmp/lambda-e2e</code></li> <li>Available Tasks: e2e, generate-event, lint</li> </ul>"},{"location":"products/services/#sandbox-lambda-nodejs","title":"sandbox-lambda-nodejs","text":"<p>nx build sandbox-lambda-nodejs</p> <ul> <li>Language: javascript</li> <li>Location: <code>apps/sandbox/lambda-nodejs</code></li> <li>Available Tasks: build, serve, serve-detach, invoke</li> <li>Documentation: README</li> </ul>"},{"location":"products/services/#libraries_7","title":"Libraries","text":""},{"location":"products/services/#amp-als-api-client-angular","title":"amp-als-api-client-angular","text":"<ul> <li>Type: unknown</li> <li>Language: typescript</li> <li>Location: <code>libs/amp-als/api-client-angular</code></li> <li>Available Tasks: build, test, lint-fix, generate</li> </ul>"},{"location":"products/services/#amp-als-api-description","title":"amp-als-api-description","text":"<ul> <li>Type: unknown</li> <li>Language: openapi</li> <li>Location: <code>libs/amp-als/api-description</code></li> <li>Available Tasks: build-individuals, build, lint, clean</li> </ul>"},{"location":"products/services/#bixarena-api-client-python","title":"bixarena-api-client-python","text":"<p>Advance bioinformatics by evaluating and ranking AI agents.</p> <ul> <li>Type: unknown</li> <li>Language: python</li> <li>Location: <code>libs/bixarena/api-client-python</code></li> <li>Available Tasks: lock, sync, add, update, remove, build, lint-excluded, test, install, run-python-version, generate</li> <li>Documentation: README</li> </ul>"},{"location":"products/services/#explorers-storybook","title":"explorers-storybook","text":"<p>This library was generated with Nx.</p> <ul> <li>Type: unknown</li> <li>Language: unknown</li> <li>Location: <code>libs/explorers/storybook</code></li> <li>Available Tasks: lint, storybook, build-storybook, static-storybook</li> <li>Documentation: README</li> </ul>"},{"location":"products/services/#openchallenges-api-client-angular","title":"openchallenges-api-client-angular","text":"<ul> <li>Type: unknown</li> <li>Language: typescript</li> <li>Location: <code>libs/openchallenges/api-client-angular</code></li> <li>Available Tasks: test, generate</li> </ul>"},{"location":"products/services/#openchallenges-api-client-python","title":"openchallenges-api-client-python","text":"<p>Project description here.</p> <ul> <li>Type: unknown</li> <li>Language: unknown</li> <li>Location: <code>tmp/api-client-python-bak</code></li> <li>Available Tasks: lock, sync, add, update, remove, build, lint, format, test, install</li> <li>Documentation: README</li> </ul>"},{"location":"products/services/#openchallenges-api-client-python_1","title":"openchallenges-api-client-python","text":"<p>Discover, explore, and contribute to open biomedical challenges.</p> <ul> <li>Type: unknown</li> <li>Language: python</li> <li>Location: <code>libs/openchallenges/api-client-python</code></li> <li>Available Tasks: lock, sync, add, update, remove, build, lint-excluded, test, install, run-python-version, generate</li> <li>Documentation: README</li> </ul>"},{"location":"products/services/#openchallenges-api-client-python_2","title":"openchallenges-api-client-python","text":"<p>No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)</p> <ul> <li>Type: library</li> <li>Language: python</li> <li>Location: <code>tmp/api-client-python-bak/tmp/api-client-python-bak</code></li> <li>Available Tasks: prepare, generate, release</li> <li>Documentation: README</li> </ul>"},{"location":"products/services/#openchallenges-api-description","title":"openchallenges-api-description","text":"<ul> <li>Type: unknown</li> <li>Language: openapi</li> <li>Location: <code>libs/openchallenges/api-description</code></li> <li>Available Tasks: build-individuals, build, lint, clean</li> </ul>"},{"location":"products/services/#sage-monorepo","title":"sage-monorepo","text":"<p>This library was generated with Nx.</p> <ul> <li>Type: unknown</li> <li>Language: unknown</li> <li>Location: <code>tmp/sage-monorepo-plugin/nx-sage-monorepo</code></li> <li>Available Tasks: build, lint, test</li> <li>Documentation: README</li> </ul>"},{"location":"products/services/#sage-monorepo-nx-plugin","title":"sage-monorepo-nx-plugin","text":"<p>This library was generated with Nx.</p> <ul> <li>Type: unknown</li> <li>Language: unknown</li> <li>Location: <code>libs/sage-monorepo/nx-plugin</code></li> <li>Available Tasks: build, lint, test</li> <li>Documentation: README</li> </ul>"},{"location":"products/services/#sandbox-angular-lib","title":"sandbox-angular-lib","text":"<p>This library was generated with Nx.</p> <ul> <li>Type: unknown</li> <li>Language: unknown</li> <li>Location: <code>libs/sandbox/angular-lib</code></li> <li>Available Tasks: test, lint</li> <li>Documentation: README</li> </ul>"},{"location":"products/services/#shared-java-util","title":"shared-java-util","text":"<ul> <li>Type: feature</li> <li>Language: java</li> <li>Location: <code>libs/shared/java/util</code></li> <li>Available Tasks:</li> <li>Documentation: README</li> </ul>"},{"location":"products/services/#shared-typescript-assets","title":"shared-typescript-assets","text":"<p>This library was generated with Nx.</p> <ul> <li>Type: assets</li> <li>Language: typescript</li> <li>Location: <code>libs/shared/typescript/assets</code></li> <li>Available Tasks:</li> <li>Documentation: README</li> </ul>"},{"location":"products/services/#shared-typescript-charts","title":"shared-typescript-charts","text":"<p>This library was generated with Nx.</p> <ul> <li>Type: util</li> <li>Language: typescript</li> <li>Location: <code>libs/shared/typescript/charts</code></li> <li>Available Tasks: build, lint, lint-fix, test</li> <li>Documentation: README</li> </ul>"},{"location":"products/services/#shared-typescript-charts-angular","title":"shared-typescript-charts-angular","text":"<p>This library was generated with Nx.</p> <ul> <li>Type: util</li> <li>Language: typescript</li> <li>Location: <code>libs/shared/typescript/charts-angular</code></li> <li>Available Tasks: test, lint, lint-fix, storybook, build-storybook, static-storybook</li> <li>Documentation: README</li> </ul>"},{"location":"products/services/#shared-typescript-google-tag-manager","title":"shared-typescript-google-tag-manager","text":"<p>A reusable Google Tag Manager integration component for Angular applications in the sage-monorepo.</p> <ul> <li>Type: util</li> <li>Language: typescript</li> <li>Location: <code>libs/shared/typescript/google-tag-manager</code></li> <li>Available Tasks: test, lint, lint-fix</li> <li>Documentation: README</li> </ul>"},{"location":"products/services/#shared-typescript-styles","title":"shared-typescript-styles","text":"<p>This library was generated with Nx.</p> <ul> <li>Type: styles</li> <li>Language: typescript</li> <li>Location: <code>libs/shared/typescript/styles</code></li> <li>Available Tasks:</li> <li>Documentation: README</li> </ul>"},{"location":"products/services/#shared-typescript-themes","title":"shared-typescript-themes","text":"<p>This library was generated with Nx.</p> <ul> <li>Type: themes</li> <li>Language: typescript</li> <li>Location: <code>libs/shared/typescript/themes</code></li> <li>Available Tasks:</li> <li>Documentation: README</li> </ul>"},{"location":"products/services/#shared-typescript-util","title":"shared-typescript-util","text":"<p>This library was generated with Nx.</p> <ul> <li>Type: util</li> <li>Language: typescript</li> <li>Location: <code>libs/shared/typescript/util</code></li> <li>Available Tasks: test, lint, lint-fix</li> <li>Documentation: README</li> </ul>"},{"location":"products/services/#synapse-api-client-angular","title":"synapse-api-client-angular","text":"<ul> <li>Type: unknown</li> <li>Language: typescript</li> <li>Location: <code>libs/synapse/api-client-angular</code></li> <li>Available Tasks: test, generate</li> </ul>"},{"location":"products/services/#synapse-api-description","title":"synapse-api-description","text":"<ul> <li>Type: unknown</li> <li>Language: openapi</li> <li>Location: <code>libs/synapse/api-description</code></li> <li>Available Tasks: get, build, lint</li> </ul> <p>This catalog was automatically generated from the Nx workspace configuration. Last updated: 2025-08-23T22:04:00.614Z</p>"},{"location":"resources/bug-report/","title":"Bug Reports","text":"<p>Issues should be used to report problems with this project, request a new feature, or to discuss potential changes before a pull request (PR) is created. When you create a new issue, a template will be loaded that will guide you through collecting and providing the information we need to investigate.</p> <p>If you find an issue that addresses the problem you're having, please add your own reproduction information to the existing issue rather than creating a new one. Adding a reaction can also help be indicating to our maintainers that a particular problem is affecting more than just the reporter.</p>"},{"location":"resources/faq/","title":"Frequently Asked Questions","text":""},{"location":"resources/faq/#getting-started","title":"Getting Started","text":""},{"location":"resources/faq/#what-is-the-sage-monorepo","title":"What is the Sage Monorepo?","text":"<p>The Sage Monorepo is a comprehensive development platform for building biomedical research applications. It provides shared components, modern tooling, and standardized development practices across multiple programming languages and frameworks.</p>"},{"location":"resources/faq/#how-do-i-get-started","title":"How do I get started?","text":"<p>Check out our Quick Start Guide to set up your local development environment. For a deeper understanding, explore our Architecture Overview.</p>"},{"location":"resources/faq/#what-technologies-are-supported","title":"What technologies are supported?","text":"<p>We support:</p> <ul> <li>Frontend: TypeScript, Angular, React</li> <li>Backend: Java (Spring Boot), Python (Flask), R (Shiny)</li> <li>Databases: PostgreSQL, MongoDB</li> <li>Infrastructure: Docker, Kubernetes, AWS</li> </ul>"},{"location":"resources/faq/#development","title":"Development","text":""},{"location":"resources/faq/#how-do-i-create-a-new-project","title":"How do I create a new project?","text":"<p>Follow our technology-specific tutorials:</p> <ul> <li>Angular App</li> <li>Java REST API</li> <li>Python REST API</li> <li>Docker Project</li> </ul>"},{"location":"resources/faq/#how-do-i-share-code-between-projects","title":"How do I share code between projects?","text":"<p>Use our library creation guides:</p> <ul> <li>Angular Library</li> <li>Java Library</li> </ul>"},{"location":"resources/faq/#can-i-develop-remotely","title":"Can I develop remotely?","text":"<p>Yes! We support remote development through:</p> <ul> <li>Dev Containers</li> <li>Remote Host Development</li> </ul>"},{"location":"resources/faq/#platform-services","title":"Platform &amp; Services","text":""},{"location":"resources/faq/#what-services-are-available","title":"What services are available?","text":"<p>See our Service Catalog for a complete list of all 145 projects, or explore our main products:</p> <ul> <li>Agora</li> <li>OpenChallenges</li> </ul>"},{"location":"resources/faq/#how-do-i-access-the-apis","title":"How do I access the APIs?","text":"<p>All our APIs are documented in the API section. Each service provides OpenAPI specifications and client libraries.</p>"},{"location":"resources/faq/#where-can-i-find-api-documentation","title":"Where can I find API documentation?","text":"<p>API documentation is auto-generated and available for:</p> <ul> <li>Agora API</li> <li>AMP-ALS API</li> <li>BixArena API</li> <li>Model-AD API</li> <li>OpenChallenges API</li> <li>Synapse API</li> </ul>"},{"location":"resources/faq/#contributing","title":"Contributing","text":""},{"location":"resources/faq/#how-can-i-contribute","title":"How can I contribute?","text":"<p>We welcome contributions! Check out our Contributing Guidelines to get started. You can:</p> <ul> <li>Report bugs using our Bug Report Template</li> <li>Request features using our Feature Request Guidelines</li> <li>Submit pull requests with improvements</li> </ul>"},{"location":"resources/faq/#how-do-i-report-issues","title":"How do I report issues?","text":"<p>Use our GitHub Issues page. Please use the appropriate template:</p> <ul> <li>Bug reports</li> <li>Feature requests</li> <li>Documentation improvements</li> </ul>"},{"location":"resources/faq/#can-i-collaborate-with-multiple-authors-on-commits","title":"Can I collaborate with multiple authors on commits?","text":"<p>Yes! See our guide on Creating Multi-author Commits.</p>"},{"location":"resources/faq/#troubleshooting","title":"Troubleshooting","text":""},{"location":"resources/faq/#my-local-setup-isnt-working","title":"My local setup isn't working","text":"<p>Common solutions:</p> <ol> <li>Ensure you have the required dependencies installed</li> <li>Check that your environment variables are set correctly</li> <li>Verify your Docker setup if using containers</li> <li>Review the local development guide</li> </ol>"},{"location":"resources/faq/#build-or-test-failures","title":"Build or test failures","text":"<ol> <li>Clear your cache: <code>nx reset</code></li> <li>Reinstall dependencies: <code>pnpm install</code></li> <li>Check for any environment-specific requirements</li> <li>Review recent changes that might affect your project</li> </ol>"},{"location":"resources/faq/#api-connection-issues","title":"API connection issues","text":"<ol> <li>Verify your API endpoints and credentials</li> <li>Check network connectivity</li> <li>Review the specific API documentation</li> <li>Ensure you're using the correct API version</li> </ol>"},{"location":"resources/faq/#updates-news","title":"Updates &amp; News","text":""},{"location":"resources/faq/#how-do-i-stay-updated","title":"How do I stay updated?","text":"<ul> <li>Follow our Updates page for the latest announcements</li> <li>Subscribe to our Blog for technical insights</li> <li>Watch our GitHub repository for releases</li> </ul>"},{"location":"resources/faq/#where-can-i-find-release-notes","title":"Where can I find release notes?","text":"<p>Check our Updates page for version-specific release notes and feature announcements.</p>"},{"location":"resources/faq/#still-need-help","title":"Still Need Help?","text":"<p>If you can't find the answer to your question:</p> <ol> <li>Search our GitHub Issues</li> <li>Create a new issue with the appropriate template</li> <li>Contact our development team through GitHub</li> </ol> <p>This FAQ is continuously updated. If you think a question should be added, please let us know!</p>"},{"location":"resources/feature-requests/","title":"Feature Requests","text":"<p>PRs to our repositories are always welcome and can be a quick way to get your fix or improvement slated for the next release. In general, PRs should:</p> <ul> <li>Only fix/add the functionality in question OR address wide-spread   whitespace/style issues, not both.</li> <li>Add unit or integration tests for fixed or changed functionality (if a test   suite already exists).</li> <li>Address a single concern in the least number of changed lines as possible.</li> <li>Include documentation in the repo or on our [docs site].</li> <li>Be accompanied by a complete Pull Request template (loaded automatically when   a PR is created).</li> </ul> <p>For changes that address core functionality or would require breaking changes (e.g. a major release), it's best to open an Issue to discuss your proposal first. This is not required but can save time creating and reviewing changes.</p> <p>In general, we follow the Forking Workflow:</p> <ol> <li>Fork the repository to your own Github account</li> <li>Clone the project to your machine</li> <li>Create a branch locally with a succinct but descriptive name</li> </ol> <p>git checkout -b \uff1cnew-branch\uff1e main</p> <ol> <li>Commit changes to the branch</li> <li>Following any formatting and testing guidelines specific to this repo</li> <li>Push changes to your fork</li> <li>Open a PR in our repository and follow the PR template so that we can    efficiently review the changes.</li> </ol> <p>We recommend that you add this repository as an upstream remote to your local git repository so that you can fetch the latest updates.</p> <pre><code>$ git remote add upstream https://github.com/Sage-Bionetworks/sage-monorepo.git\n$ git remote -v\n&gt; ...\n&gt; upstream  https://github.com/Sage-Bionetworks/sage-monorepo.git (fetch)\n&gt; upstream  https://github.com/Sage-Bionetworks/sage-monorepo.git (push)\n</code></pre> <p>On your local machine make sure you have the latest version of the <code>main</code> branch from this upstream repository:</p> <pre><code>git checkout main\ngit fetch upstream\ngit rebase upstream/main\n</code></pre>"},{"location":"resources/feature-requests/#setup-development-environment","title":"Setup Development Environment","text":"<p>This project relies on Node tools and project-specific commands defined in package.json to streamline the development and testing. The command below will install the required development tools.</p> <p>Source <code>dev-env.sh</code>.</p> <pre><code>. dev-env.sh\n</code></pre> <p>Prepare the development environment.</p> <pre><code>openchallenges-prepare\n</code></pre>"},{"location":"resources/feature-requests/#linting","title":"Linting","text":"<p>Lint all the projects.</p> <pre><code>yarn lint\n</code></pre>"},{"location":"resources/feature-requests/#testing","title":"Testing","text":"<p>Build and test all the projects.</p> <pre><code>yarn build\nyarn test\n</code></pre>"},{"location":"resources/feature-requests/#start-the-openchallenges","title":"Start the OpenChallenges","text":"<p>Start the web app and its dependencies (API, API database).</p> <pre><code>yarn start\n</code></pre>"},{"location":"resources/feature-requests/#release-procedure","title":"Release Procedure","text":"<p>Maintainers are required to follow the procedure below when creating a new release.</p> <p>TBA</p>"},{"location":"resources/feature-requests/#getting-help","title":"Getting Help","text":"<p>Join us on the XXX and post your question to the channel that best matches the topic of your request.</p>"},{"location":"resources/oc-schemas/","title":"OpenChallenges Schemas","text":"<p>Content coming soon!</p>"},{"location":"updates/","title":"Updates","text":"<p>Welcome to the Sage Monorepo updates! This section contains release notes, feature announcements, and important updates about our platform and tools.</p>"},{"location":"updates/#recent-updates","title":"Recent Updates","text":"<p>Browse our latest updates to stay informed about new features, improvements, and platform changes:</p> <ul> <li>September 2025 - Synapse automation, Model-AD UX, OpenChallenges gateway</li> <li>June 2022 - Backend Microservices &amp; UI Modernization</li> <li>May 2022 - Microservices Architecture &amp; Authentication Infrastructure</li> <li>April 2022 - Development Environment Standardization &amp; UI Enhancements</li> <li>March 2022 - Coverage Reporting &amp; Development Environment Evolution</li> <li>February 2022 - Platform Foundation &amp; Initial Launch</li> </ul>"},{"location":"updates/#stay-updated","title":"Stay Updated","text":"<ul> <li>Watch our repository to get notifications</li> <li>Report issues if you encounter problems</li> <li>Request features to help shape our roadmap</li> </ul> <p>Updates are published monthly or as significant features become available. Each update includes detailed information about new features, improvements, bug fixes, and breaking changes.</p>"},{"location":"updates/april-2022/","title":"April 2022","text":"<p>Published on May 1, 2022</p> <p>Welcome to our April 2022 update! This month brought continued progress in the Challenge Registry platform with 15 pull requests merged to the main branch. Our development efforts were led by @tschaffter and @rrchai, focusing on foundational development tools, platform architecture, and user experience enhancements.</p>"},{"location":"updates/april-2022/#summary","title":"Summary","text":"<ul> <li>Total Pull Requests: 15 merged PRs</li> <li>Key Focus: Development environment standardization and testing infrastructure</li> <li>Major Projects: Challenge Registry platform development, HTML linting integration, UI component improvements</li> </ul>"},{"location":"updates/april-2022/#technical-architecture-overview","title":"Technical architecture overview","text":""},{"location":"updates/april-2022/#development-environment-standardization","title":"Development environment standardization","text":"<p>April marked significant progress in establishing consistent development environments across the monorepo. We upgraded our development container infrastructure and implemented standardized tooling to ensure all contributors have access to the same development experience.</p>"},{"location":"updates/april-2022/#quality-assurance-framework-expansion","title":"Quality assurance framework expansion","text":"<p>We expanded our testing and linting capabilities by introducing HTML linting through webhint, complementing our existing JavaScript and TypeScript quality checks. This addition ensures our web applications maintain high standards for accessibility and semantic correctness.</p>"},{"location":"updates/april-2022/#platform-infrastructure-evolution","title":"Platform infrastructure evolution","text":"<p>The Challenge Registry platform continued to grow with new page components and routing infrastructure. We established the foundation for challenge and organization search functionality, setting the stage for comprehensive challenge discovery features.</p>"},{"location":"updates/april-2022/#user-interface-enhancement-initiatives","title":"User interface enhancement initiatives","text":"<p>Focused improvements to the About page styling and component testing coverage demonstrate our commitment to both user experience and code quality. These enhancements ensure our platform remains both visually appealing and technically robust.</p>"},{"location":"updates/april-2022/#pull-requests-merged","title":"Pull requests merged","text":""},{"location":"updates/april-2022/#challenge-registry-platform-development","title":"Challenge Registry platform development","text":"<ul> <li>#135: Add org search page</li> <li>#134: Add challenge search page</li> <li>#133: Add Challenge page</li> <li>#139: Update styling on About page</li> </ul>"},{"location":"updates/april-2022/#development-environment-and-tooling","title":"Development environment and tooling","text":"<ul> <li>#161: Add 4g memory requirement for devcontainer</li> <li>#160: Add vscode extension to manage GH PRs</li> <li>#148: Use dev container image <code>sagebionetworks/python-3-node:0.2.0</code></li> <li>#128: Update dev container to v0.1.0</li> </ul>"},{"location":"updates/april-2022/#testing-and-quality-assurance","title":"Testing and quality assurance","text":"<ul> <li>#153: Increase TS coverage for ui library</li> <li>#152: Add --runInBand to jest testing on large components</li> <li>#138: Add HTML linter</li> </ul>"},{"location":"updates/april-2022/#documentation-and-governance","title":"Documentation and governance","text":"<ul> <li>#140: Add documentation <code>Using Nx</code></li> <li>#142: Update codeowners</li> <li>#132: Re-use CoC from Sage-Bionetworks/developer-handbook</li> <li>#131: Use Sage Code of Conduct</li> </ul>"},{"location":"updates/april-2022/#community-impact","title":"Community impact","text":"<p>April's contributions demonstrate our commitment to building a robust development ecosystem that supports both current and future platform growth. The focus on development environment standardization ensures that new contributors can quickly become productive, while our expanded testing infrastructure maintains the high quality standards essential for research platform reliability.</p> <p>The establishment of challenge and organization search page foundations represents a significant step toward making biomedical challenges more discoverable and accessible to the research community.</p>"},{"location":"updates/april-2022/#thank-you","title":"Thank you","text":"<p>Last but certainly not least, a big Thank You to the contributors of the Sage monorepo.</p> <ul> <li>@tschaffter</li> <li>@rrchai</li> </ul> <p>We're building something amazing together, and every contribution moves us closer to our vision of advancing biomedical research through innovative technology platforms. Join us in shaping the future of collaborative research.</p>"},{"location":"updates/february-2022/","title":"February 2022","text":"<p>Published on February 28, 2022</p> <p>February 2022 represents the foundational month for the sage-monorepo project, marking the transition to a comprehensive Nx monorepo architecture. This period saw the establishment of core infrastructure, development tooling, and the initial application and library ecosystem that would support future development across multiple technology stacks.</p> <p>During this month, 28 pull requests were successfully merged, establishing the essential infrastructure and initial applications for the monorepo. The primary contributor was @tschaffter, who led the architectural design and implementation of the workspace foundation.</p>"},{"location":"updates/february-2022/#summary","title":"Summary","text":"<ul> <li>Total Pull Requests: 28 merged PRs</li> <li>Key Focus: Foundational monorepo architecture establishment and core infrastructure development</li> <li>Major Projects: Nx workspace setup, containerization strategy, development tooling, and initial application ecosystem</li> </ul>"},{"location":"updates/february-2022/#technical-architecture-overview","title":"Technical architecture overview","text":"<p>February 2022 was a pivotal month focused on establishing robust architectural foundations and development infrastructure. The team implemented a sophisticated Nx monorepo structure designed to support multiple applications and shared libraries across different technology stacks while maintaining code quality and development efficiency.</p>"},{"location":"updates/february-2022/#monorepo-workspace-establishment","title":"Monorepo workspace establishment","text":"<p>The development team established a comprehensive Nx workspace architecture designed to support multiple applications and shared libraries across TypeScript, Angular, React, and Web Components technologies. This architectural foundation enables efficient code sharing, dependency management, and coordinated development across different technology stacks. The workspace structure provides clear separation of concerns between applications, libraries, and shared resources while maintaining consistent development patterns and build processes.</p>"},{"location":"updates/february-2022/#containerization-and-deployment-infrastructure","title":"Containerization and deployment infrastructure","text":"<p>A comprehensive containerization strategy was implemented using Docker to ensure consistent deployment across different environments. Each application received its own Docker configuration with optimized build processes, enabling independent deployment and scaling capabilities. The team established Docker Compose orchestration for local development, simplifying the setup process for new contributors and ensuring environment consistency across the development team.</p>"},{"location":"updates/february-2022/#development-tooling-and-quality-assurance","title":"Development tooling and quality assurance","text":"<p>Significant investment was made in development tooling and quality assurance infrastructure to maintain high code quality standards. This included implementing pre-commit hooks with lint-staged configurations, continuous integration pipelines with GitHub Actions, and comprehensive linting and testing frameworks. The team also established cross-platform development support using tools like shx to accommodate different development environments and ensure consistent behavior across operating systems.</p>"},{"location":"updates/february-2022/#pull-requests-merged","title":"Pull requests merged","text":""},{"location":"updates/february-2022/#workspace-foundation-and-initial-setup","title":"Workspace foundation and initial setup","text":"<ul> <li>#1: Scafold workspace</li> </ul>"},{"location":"updates/february-2022/#platform-infrastructure","title":"Platform infrastructure","text":"<ul> <li>#6: Add CI workflow</li> <li>#8: Fix CI workflow</li> <li>#10: Replace npm commands by yarn in CI workflow</li> <li>#12: Add targets <code>build</code> and <code>test</code></li> <li>#21: Add pre-commit hook</li> <li>#38: Use bash -c in package.json to call sourced functions</li> <li>#39: Set yarn min version required</li> <li>#46: Run cp command with shx</li> </ul>"},{"location":"updates/february-2022/#libraries-and-shared-components","title":"Libraries and shared components","text":"<ul> <li>#2: Add lib api-docs</li> <li>#7: Configure target <code>lint</code> and <code>lint-fix</code> for existing apps and libs</li> <li>#28: Show how to use a Web Components UI library in Angular and React</li> <li>#29: Import UI components from forked sage-angular library</li> <li>#30: Import sage-angular lib</li> <li>#31: Add Web Components (WC) component example</li> </ul>"},{"location":"updates/february-2022/#applications","title":"Applications","text":"<ul> <li>#4: Add API app</li> <li>#5: Add db-cli</li> <li>#16: Add project <code>api-db</code></li> <li>#20: Create project <code>web-app</code></li> <li>#25: Dockerize the projects <code>api</code> and <code>api-db</code></li> <li>#33: Integrate <code>api-angular</code> into <code>web-app</code></li> <li>#35: Dockerize <code>web-app</code></li> </ul>"},{"location":"updates/february-2022/#documentation-and-developer-experience","title":"Documentation and developer experience","text":"<ul> <li>#13: Move initial README generated by Nx to docs/nx.md</li> <li>#40: Document how to start the web app with Docker</li> <li>#43: Add docs/legacy.md</li> <li>#44: Add Code Of Conduct and Contributing Guide</li> <li>#48: Add documentation</li> <li>#49: Fix doc on how to start with Docker</li> </ul>"},{"location":"updates/february-2022/#community-impact","title":"Community Impact","text":"<p>February 2022 represents a pivotal moment in Sage Bionetworks' software development approach, transitioning from isolated application development to a unified, collaborative ecosystem. The establishment of this monorepo architecture demonstrates the organization's commitment to open science principles, code reusability, and efficient development practices.</p> <p>This foundational work enables multiple research teams to collaborate more effectively, share common components, and maintain consistent quality standards across all biomedical software projects. The emphasis on comprehensive documentation and developer experience ensures that the platform remains accessible to both current team members and future contributors.</p>"},{"location":"updates/february-2022/#thank-you","title":"Thank You","text":"<p>Last but certainly not least, a big Thank You to the contributors of the Sage monorepo.</p> <ul> <li>@tschaffter</li> </ul> <p>This inaugural month sets the stage for revolutionizing biomedical research application development. The infrastructure established in February 2022 would support rapid development of multiple scientific applications throughout the year. Join us in building the future of research software!</p>"},{"location":"updates/june-2022/","title":"June 2022","text":"<p>Published on July 1, 2022</p> <p>Welcome to our June 2022 update! This month marked a transformative period for the Challenge Registry platform with 43 pull requests merged to the main branch. Our development efforts were led by @tschaffter, @rrchai, and @vpchung, focusing on major architectural restructuring, Java ecosystem expansion, and comprehensive UI modernization.</p>"},{"location":"updates/june-2022/#summary","title":"Summary","text":"<ul> <li>Total Pull Requests: 43 merged PRs</li> <li>Key Focus: Microservices architecture transformation and multi-application platform evolution</li> <li>Major Projects: Challenge Registry platform restructuring, Java shared libraries, UI v3 implementation</li> </ul>"},{"location":"updates/june-2022/#technical-architecture-overview","title":"Technical Architecture Overview","text":""},{"location":"updates/june-2022/#multi-application-platform-transformation","title":"Multi-application platform transformation","text":"<p>June represented a pivotal month in our platform evolution with the complete restructuring of the monorepo to support multi-application and microservice architecture. We implemented comprehensive project renaming conventions, established database service isolation with dedicated MariaDB, MongoDB, and PostgreSQL instances, and created standardized development workflows that support both standalone and integrated service deployment.</p>"},{"location":"updates/june-2022/#java-ecosystem-foundation","title":"Java ecosystem foundation","text":"<p>The introduction of shared Java libraries marked a significant milestone in our backend development strategy. We established Maven-based dependency management, implemented comprehensive linting and testing frameworks, and created reusable components that streamline microservice development across the platform ecosystem.</p>"},{"location":"updates/june-2022/#user-interface-modernization-initiative","title":"User interface modernization initiative","text":"<p>Our frontend development reached new heights with the implementation of UI v3 design standards across critical user interfaces. We modernized the login experience, transformed navigation components with enhanced theming capabilities, and established consistent design patterns that improve both accessibility and user engagement throughout the platform.</p>"},{"location":"updates/june-2022/#development-environment-standardization","title":"Development environment standardization","text":"<p>Significant improvements to our development infrastructure included comprehensive devcontainer integration, automated dependency caching in CI workflows, and enhanced project management tools. These changes ensure consistent development experiences across different environments while optimizing build performance and developer productivity.</p>"},{"location":"updates/june-2022/#pull-requests-merged","title":"Pull Requests Merged","text":""},{"location":"updates/june-2022/#platform-infrastructure","title":"Platform infrastructure","text":"<ul> <li>#390: Restore challenge-registry-ui tests</li> <li>#389: Fix error 130</li> <li>#387: Fix lombok extension</li> <li>#381: Add rest client icon</li> <li>#379: Fix target <code>build-image</code> of microservices that depend on a local lib</li> <li>#376: Lint challenge-user-service and challenge-core-service</li> <li>#373: Setup maven cache in CI workflow</li> <li>#366: Explore the creation of a shared Java library</li> <li>#360: Fix coverage in CI workflow</li> <li>#284: Upgrade monorepo to support multi-app and microservice architecture</li> <li>#282: Remove extension <code>orta.vscode-jest</code></li> <li>#275: Remove duplicated vs code settings</li> <li>#272: Source dev-env.sh if found in current directory</li> <li>#270: Use <code>docker run</code> to import and export KC data</li> <li>#265: Use challenge-devcontainer:5ad791b9</li> <li>#264: Fix devcontainer definition</li> </ul>"},{"location":"updates/june-2022/#challenge-registry-platform","title":"Challenge registry platform","text":"<ul> <li>#359: Update Footer Component</li> <li>#354: Update login page to UI v3</li> <li>#353: Update navbar to UI v3</li> <li>#278: Fix challenge registry blank page</li> <li>#287: Rename project <code>db-cli</code> to <code>challenge-db-cli</code></li> <li>#290: Remove login projects</li> <li>#304: Add alias <code>challenge-docker-stop</code> to stop running containers</li> <li>#305: Add challenge-registry-prepare alias</li> </ul>"},{"location":"updates/june-2022/#development-environment-enhancements","title":"Development environment enhancements","text":"<ul> <li>#374: Update draw.io library and instructions</li> <li>#281: Add badge to open repo in devcontainer</li> <li>#271: Add unzip and vim to devcontainer</li> <li>#269: Remove Google identity provider data</li> <li>#254: Push devcontainer to new Docker Hub repository</li> </ul>"},{"location":"updates/june-2022/#documentation-and-project-management","title":"Documentation and project management","text":"<ul> <li>#295: Update readme</li> <li>#294: Add install alias</li> <li>#303: Add list of contributors to the README</li> </ul>"},{"location":"updates/june-2022/#community-impact","title":"Community Impact","text":"<p>June 2022 marked a turning point in our platform's architectural maturity and development velocity. The successful implementation of multi-application support demonstrates our commitment to building scalable, maintainable solutions that serve the broader scientific community. Our focus on standardizing development practices and improving user experience reflects our dedication to creating tools that researchers can rely on for critical computational challenges.</p> <p>The establishment of comprehensive Java ecosystem support opens new possibilities for backend service development, while our UI modernization efforts ensure that users have access to intuitive, accessible interfaces. These foundational improvements position the platform for sustained growth and enhanced community engagement.</p>"},{"location":"updates/june-2022/#thank-you","title":"Thank You","text":"<p>Last but certainly not least, a big Thank You to the contributors of the Sage monorepo.</p> <ul> <li>@tschaffter</li> <li>@rrchai</li> <li>@vpchung</li> </ul> <p>We're building the future of computational challenges, and every contribution brings us closer to empowering researchers worldwide. Join us in creating tools that advance scientific discovery.</p>"},{"location":"updates/march-2022/","title":"March 2022","text":"<p>Published on March 31, 2022</p> <p>Welcome to our March 2022 update! This month brought impressive development momentum with 34 pull requests merged, primarily contributed by @tschaffter and @vpchung. March was a pivotal month focused on implementing comprehensive test coverage, establishing development workflows, and building out core platform features for the Challenge Registry.</p>"},{"location":"updates/march-2022/#summary","title":"Summary","text":"<ul> <li>Total Pull Requests: 34 merged PRs</li> <li>Key Focus: Test coverage implementation, CI/CD optimization, web application development</li> <li>Major Projects: Challenge Registry frontend development, development environment standardization, coverage reporting system</li> </ul>"},{"location":"updates/march-2022/#technical-architecture-overview","title":"Technical Architecture Overview","text":""},{"location":"updates/march-2022/#coverage-reporting-system","title":"Coverage reporting system","text":"<p>March introduced a comprehensive test coverage reporting system that aggregates coverage data across all TypeScript and Python projects in the monorepo. The implementation combines Jest for TypeScript testing with Python's coverage tools, automatically merging reports during CI/CD execution. This unified approach provides clear visibility into code quality metrics while supporting the diverse technology stack of the Sage ecosystem.</p>"},{"location":"updates/march-2022/#development-environment-standardization","title":"Development environment standardization","text":"<p>The development workflow received significant improvements with the introduction of standardized development container configurations and streamlined dependency management. These changes eliminate environment-specific issues and provide consistent development experiences across different platforms. The new approach separates Docker-based deployment from local development requirements, making it easier for contributors to get started.</p>"},{"location":"updates/march-2022/#challenge-registry-platform-evolution","title":"Challenge Registry platform evolution","text":"<p>The Challenge Registry web application saw substantial progress with the implementation of core user interface components and routing infrastructure. The development focused on creating reusable component libraries and establishing clear architectural patterns for future feature development. The platform now supports user profiles, organization pages, and authentication workflows.</p>"},{"location":"updates/march-2022/#pull-requests-merged","title":"Pull Requests Merged","text":""},{"location":"updates/march-2022/#platform-infrastructure","title":"Platform infrastructure","text":"<ul> <li>#122: Fix API coverage file paths</li> <li>#121: Fix api coverage</li> <li>#119: Generate coverage report in lcov format for the API</li> <li>#117: Add coverage badge and a few TS unit tests</li> <li>#115: Generate coverage score</li> <li>#99: Use dev container sagebionetworks/python-3-node:0.0.1</li> <li>#97: Fix web-app docker issue related to CA</li> <li>#89: Use Node.js 16 (LTS) in CI workflow</li> <li>#88: Cache node_modules in CI workflow</li> <li>#87: Make use of Node.js cache in CI workflow</li> <li>#85: Add pyenv to development requirements</li> <li>#81: Cleanup nx cache</li> <li>#67: Mirror VS Code settings to dev container config</li> <li>#66: Set docker service name of web-app</li> <li>#64: Enable nx scan option</li> <li>#60: Add CODEOWNERS</li> </ul>"},{"location":"updates/march-2022/#challenge-registry-application","title":"Challenge Registry application","text":"<ul> <li>#112: Document how to add a theme to a component</li> <li>#105: Document how styles, assets and themes work</li> <li>#104: Add Challenges page</li> <li>#102: Add org page</li> <li>#101: Patch user profile</li> <li>#96: Add user page</li> <li>#94: Add Log in page</li> <li>#92: Generate Sign up page</li> <li>#90: Rename search-viewer to challenge-search</li> <li>#82: Add about page</li> <li>#79: Add sections to navbar</li> <li>#78: Add not found page</li> <li>#68: Import homepage</li> </ul>"},{"location":"updates/march-2022/#documentation-and-governance","title":"Documentation and governance","text":"<ul> <li>#95: update readme</li> </ul>"},{"location":"updates/march-2022/#community-impact","title":"Community Impact","text":"<p>March 2022 marked a significant milestone in the Challenge Registry project's evolution toward a modern, maintainable platform. The focus on test coverage and development standardization demonstrates the team's commitment to sustainable development practices. These foundational improvements will enable faster, more reliable feature development while maintaining the high quality standards expected in the biomedical research community.</p> <p>The comprehensive approach to development environment setup and documentation ensures that new contributors can quickly become productive, supporting the open-source nature of the Sage Bionetworks mission.</p>"},{"location":"updates/march-2022/#thank-you","title":"Thank You","text":"<p>Last but certainly not least, a big Thank You to the contributors of the Sage monorepo.</p> <ul> <li>@tschaffter</li> <li>@vpchung</li> </ul> <p>Your dedication to building robust, well-tested software infrastructure continues to enable groundbreaking research in the biomedical community. Together, we're creating tools that empower scientists and accelerate discovery.</p>"},{"location":"updates/may-2022/","title":"May 2022","text":"<p>Published on June 1, 2022</p> <p>Welcome to our May 2022 update! This month brought significant expansion in the Challenge Registry platform architecture with 21 pull requests merged to the main branch. Our development efforts were led by @tschaffter and @rrchai, focusing on microservices architecture, authentication systems, and comprehensive platform tooling.</p>"},{"location":"updates/may-2022/#summary","title":"Summary","text":"<ul> <li>Total Pull Requests: 21 merged PRs</li> <li>Key Focus: Microservices architecture expansion and authentication infrastructure</li> <li>Major Projects: Keycloak integration, Challenge Service Registry, npm scope standardization</li> </ul>"},{"location":"updates/may-2022/#technical-architecture-overview","title":"Technical Architecture Overview","text":""},{"location":"updates/may-2022/#microservices-infrastructure-evolution","title":"Microservices infrastructure evolution","text":"<p>May marked a pivotal month in our platform architecture with the introduction of comprehensive microservices infrastructure. We established the Challenge Service Registry, API Gateway, and User Service foundations, creating a robust distributed system architecture that supports scalable challenge management.</p>"},{"location":"updates/may-2022/#authentication-and-authorization-framework","title":"Authentication and authorization framework","text":"<p>The integration of Keycloak as our identity and access management solution represents a major architectural milestone. We implemented OAuth 2.0 authentication flows, established protected resource access patterns, and created the foundation for comprehensive user management across the platform ecosystem.</p>"},{"location":"updates/may-2022/#development-environment-modernization","title":"Development environment modernization","text":"<p>Significant improvements to our development infrastructure included devcontainer integration with CI/CD workflows, comprehensive Docker composition updates, and enhanced documentation for remote development scenarios. These changes ensure consistent development experiences across different environments and deployment targets.</p>"},{"location":"updates/may-2022/#package-management-standardization","title":"Package management standardization","text":"<p>The transition to the <code>@sagebionetworks</code> npm scope aligns our JavaScript ecosystem with organizational standards and provides better package namespace management. This standardization supports future package publishing and cross-project dependency management.</p>"},{"location":"updates/may-2022/#pull-requests-merged","title":"Pull Requests Merged","text":""},{"location":"updates/may-2022/#microservices-architecture","title":"Microservices architecture","text":"<ul> <li>#243: Create Challenge Service Registry</li> <li>#247: Integrate keycloak to microserve infra</li> <li>#245: Rename keycloak projects</li> <li>#234: Create project <code>challenge-platform-app</code></li> </ul>"},{"location":"updates/may-2022/#authentication-and-security","title":"Authentication and security","text":"<ul> <li>#206: Login with KC and access protected movie resources</li> <li>#192: Add movie REST API to test Keycloak integration</li> <li>#136: Explore Keycloak as workspace IAM</li> </ul>"},{"location":"updates/may-2022/#containerization-and-infrastructure","title":"Containerization and infrastructure","text":"<ul> <li>#253: Add devcontainer definition</li> <li>#205: Update workspace docker compose</li> <li>#204: Create project <code>apps/keycloak-db</code></li> <li>#203: Rename project task <code>docker</code> to <code>build-image</code></li> <li>#182: Use devcontainer in CI/CD workflow</li> </ul>"},{"location":"updates/may-2022/#challenge-registry-platform-features","title":"Challenge Registry platform features","text":"<ul> <li>#207: Add challenge sponsor</li> </ul>"},{"location":"updates/may-2022/#development-tools-and-configuration","title":"Development tools and configuration","text":"<ul> <li>#256: Use npm scope @sagebionetworks</li> <li>#228: Rename workspace npm scope</li> <li>#240: Add VS Code extensions for Java</li> <li>#162: Add GUI plugin in vscode for jest</li> <li>#163: Restore pipenv cache in CI/CD workflow</li> </ul>"},{"location":"updates/may-2022/#documentation-and-guides","title":"Documentation and guides","text":"<ul> <li>#201: Describe how to start api before contributing to the web-app</li> <li>#200: Update remote host setup doc</li> <li>#181: Document how to setup development for devcontainers running on EC2</li> </ul>"},{"location":"updates/may-2022/#community-impact","title":"Community Impact","text":"<p>May's contributions represent a fundamental shift toward a mature, enterprise-ready platform architecture. The introduction of microservices patterns and comprehensive authentication systems positions the Challenge Registry as a scalable foundation for biomedical research collaboration.</p> <p>The establishment of Keycloak-based authentication creates secure, standardized access patterns that will support future multi-tenant capabilities and fine-grained authorization controls. This infrastructure investment ensures the platform can grow to support larger research communities while maintaining security and performance standards.</p>"},{"location":"updates/may-2022/#thank-you","title":"Thank You","text":"<p>Last but certainly not least, a big Thank You to the contributors of the Sage monorepo.</p> <ul> <li>@tschaffter</li> <li>@rrchai</li> </ul> <p>We're building something amazing together, and every contribution moves us closer to our vision of advancing biomedical research through innovative technology platforms. Join us in shaping the future of collaborative research.</p>"},{"location":"updates/september-2025/","title":"September 2025","text":"<p>Published on October 1, 2025</p> <p>September advanced platform coherence, developer reliability, and scientific user experience across the Sage monorepo with 96 pull requests merged. Highlights included centralized authentication and gateway evolution, resilient Synapse workflow hardening, Model-AD data+UX refinements, systematic OpenAPI normalization, and stronger local/compose infrastructure. Primary contributors included @tschaffter, @hallieswan, @rrchai, @sagely1, and automation support from @github-actions[bot].</p>"},{"location":"updates/september-2025/#summary","title":"Summary","text":"<ul> <li>Total Pull Requests: 96 merged PRs</li> <li>Key Focus: Gateway &amp; auth consolidation, Synapse workflow resilience, Model-AD data/model version alignment &amp; UX, OpenAPI governance, infrastructure composability</li> <li>Major Projects: OpenChallenges authorization redesign, Model-AD mv84\u2192mv85 transition, Synapse automated update pipeline, cross-project OpenAPI/tag normalization, Caddy &amp; Docker compose unification</li> </ul>"},{"location":"updates/september-2025/#technical-architecture-overview","title":"Technical Architecture Overview","text":""},{"location":"updates/september-2025/#platform-evolution","title":"Platform evolution","text":"<p>Authentication moved toward centralized mediation via the OpenChallenges API gateway while BixArena added its own gateway foundation. Caddy image consolidation and consistent reverse-proxy patterns reduced divergence and simplified operational updates.</p>"},{"location":"updates/september-2025/#developer-experience","title":"Developer experience","text":"<p>Deterministic environments improved through Gradle 9 adoption, ES target unification, dependency hygiene, and pruning unused config (implicit dependencies, deprecated libraries). A refreshed, security\u2011scanned dev container ships a fully pinned multi\u2011language toolchain so every contributor builds and tests with the same versions\u2014eliminating \"works on my machine\" drift and shortening onboarding/setup time. Together these changes decrease friction and accelerate iterative feature delivery.</p>"},{"location":"updates/september-2025/#api-modernization-initiative","title":"API modernization initiative","text":"<p>Kebab-case path/file conventions, tag singularization, vendor extension standardization (<code>x-audience</code>\u2192<code>x-internal</code>), and removal of deprecated annotations drove a cleaner, more discoverable OpenAPI surface across Agora, Model-AD, AMP-ALS, Synapse, and Explorers\u2014laying groundwork for consistent client generation.</p>"},{"location":"updates/september-2025/#user-interface-enhancements","title":"User interface enhancements","text":"<p>Model-AD received iterative accessibility and interaction upgrades (keyboard navigation, highlight, scrolling behavior, adaptive layouts, improved placeholders, legend visibility) plus new data-driven conditional panels. Cross\u2011project search and visualization components were tuned for clarity and responsiveness.</p>"},{"location":"updates/september-2025/#data-schema-lifecycle","title":"Data &amp; schema lifecycle","text":"<p>Successive data bumps (mv84, mv85), new comparative disease correlation endpoint, and alignment of omics card logic modernized scientific insights delivery while tightening frontend\u2013backend semantic parity.</p>"},{"location":"updates/september-2025/#workflow-automation-resilience","title":"Workflow &amp; automation resilience","text":"<p>The Synapse update workflow underwent multi-stage stabilization culminating in reliable automated artifact regeneration, while broader CI triggers and concurrency controls prevented redundant runs. It now executes a once\u2011per\u2011day scheduled check of the official upstream Synapse OpenAPI description; if a content diff is detected it regenerates the monorepo's OpenAPI\u2011derived client artifacts (including the Angular client) and raises a PR, otherwise it terminates as a no\u2011op. The generated Angular client, for example, is leveraged by Agora and Model-AD to interact with Synapse Wikis, keeping downstream integrations current without manual intervention.</p>"},{"location":"updates/september-2025/#pull-requests-merged","title":"Pull Requests Merged","text":""},{"location":"updates/september-2025/#authentication-gateway-centralization","title":"Authentication &amp; gateway centralization","text":"<ul> <li>#3438: feat(openchallenges): centralize authentication (JWT tokens &amp; API keys) in the API gateway (SMR-444, SMR-445, SMR-446)</li> <li>#3505: feat(bixarena): add BixArena API gateway (SMR-504)</li> <li>#3485: fix(openchallenges): hotfix org login, replace <code>org.acronym</code> by <code>org.shortName</code> and adopt <code>x-sage-internal</code> (SMR-480, SMR-489)</li> </ul>"},{"location":"updates/september-2025/#workflow-ci-resilience","title":"Workflow &amp; CI resilience","text":"<ul> <li>#3534: chore: update trigger for Lint PR workflow and CI workflow (SMR-507)</li> <li>#3532: chore(synapse): disable Nx Cloud in the Synapse API workflow</li> <li>#3528: fix(synapse): set <code>COREPACK_ENABLE_DOWNLOAD_PROMPT</code> in Synapse API workflow (SMR-507)</li> <li>#3527: fix(synapse): update the Synapse API workflow to create PR that triggers downstream workflows (SMR-507)</li> <li>#3523: fix(synapse): use alternative method to run the dev container to update Synapse API (SMR-435)</li> <li>#3521: feat(synapse): simplify the workflow that update the Synapse API</li> <li>#3520: fix(synapse): specify base branch in workflow that updates the API</li> <li>#3519: refactor(synapse): create commit inside the dev container in the update workflow</li> <li>#3518: refactor(synapse): rewrite the Synapse update workflow</li> <li>#3517: fix(synapse): pass env var <code>GITHUB_TOKEN</code> to the dev container in the workflow that updates Synapse API</li> <li>#3515: fix(synapse): simplify PR description in the workflow that updates the API description and clients</li> <li>#3514: fix(synapse): fix issue because of missing GitHub env var inside the dev container</li> <li>#3513: fix(synapse): fix nested single quotes in GitHub workflow that updates Synapse API (SMR-435)</li> <li>#3512: fix(synapse): fix GitHub workflow that updates Synapse API - Take 4 (SMR-435)</li> <li>#3511: fix(synapse): fix GitHub workflow that updates Synapse API - Take 3 (SMR-435)</li> <li>#3510: fix(synapse): fix GitHub workflow that updates Synapse API - Take 2 (SMR-435)</li> <li>#3509: fix(synapse): fix GitHub workflow that updates Synapse API (SMR-435)</li> <li>#3467: fix(explorers): skip nx cloud for e2e tests (SMR-463)</li> </ul>"},{"location":"updates/september-2025/#openapi-governance-consistency","title":"OpenAPI governance &amp; consistency","text":"<ul> <li>#3469: chore: replace OpenAPI extension <code>x-audience</code> by <code>x-internal</code> (SMR-465)</li> <li>#3457: chore(amp-als): remove x-java annotations from AMP-ALS OpenAPI description (SMR-385)</li> <li>#3455: chore(model-ad): update API paths and files to use kebab case (MG-405)</li> <li>#3454: chore(amp-als): generate Angular API client files in kebab case for AMP-ALS (SMR-416)</li> <li>#3443: chore(agora): remove @ from Agora openapi file and directory names (AG-1844, SMR-336)</li> <li>#3441: chore(synapse): generate Angular API client files in kebab case (SMR-415)</li> <li>#3440: chore(agora): update Agora OpenAPI tags to use spaces and singular form (SMR-338)</li> <li>#3439: chore(model-ad): update Model-AD OpenAPI tags to use spaces and singular form (SMR-337)</li> <li>#3436: chore(explorers): generate Angular API client files in kebab case (MG-383, AG-1851)</li> </ul>"},{"location":"updates/september-2025/#uiux-accessibility-refinement","title":"UI/UX &amp; accessibility refinement","text":"<ul> <li>#3484: fix(model-ad): ensure scroll to section after same-document navigation (MG-413)</li> <li>#3483: fix(model-ad): copying section links shouldn't change the current URL (MG-412)</li> <li>#3481: fix(model-ad): clean up section link fragments (MG-414)</li> <li>#3479: fix(model-ad): conditionally display omics tab, fallback to default tab when invalid or disabled tab in URL (MG-282, MG-415)</li> <li>#3471: fix(model-ad): update 'no results' message in search input (MG-409)</li> <li>#3465: fix(model-ad): wrap boxplots grid to enable complete image downloads (MG-407)</li> <li>#3463: feat(model-ad): align boxplot style with design (MG-298)</li> <li>#3462: feat(model-ad): allow search results to be selected with mouse or keyboard (MG-361)</li> <li>#3460: chore(explorers): update boxplot chart to use axis tooltips built into echarts 5.6.0+ (MG-270)</li> <li>#3456: fix(model-ad): unstick the toc (MG-403)</li> <li>#3453: feat(model-ad): matched control(s) value(s) in hero link to JAX (MG-397)</li> <li>#3450: feat(model-ad): update search tile wording (MG-366)</li> <li>#3449: fix(model-ad): update hero image (MG-303)</li> <li>#3451: fix(model-ad): style terms of service content (MG-296)</li> <li>#3448: feat(model-ad): scroll to panel content when tab specified in url, delay scroll when changing between tabs to give content time to load (MG-390)</li> <li>#3447: fix(model-ad): move allen institute card to resources (MG-396)</li> <li>#3446: feat(model-ad): highlight search query in search results, modernize search input to use signals, fix display of long search results (MG-360)</li> <li>#3445: fix(model-ad): reset model details variables when route is updated to ensure default tab is loaded for each model (MG-394)</li> <li>#3444: feat(model-ad): share link tooltip and copy behavior improvements (MG-399)</li> <li>#3442: fix(model-ad): allow model details boxplots container to stretch wider than the section (MG-330)</li> <li>#3435: feat(model-ad): align style of \"no data\" boxplot placeholder with design, fix bug where legend is not displayed when last boxplot doesn't have data (MG-317)</li> <li>#3433: fix(model-ad): fix bug preventing display of all boxplots (MG-387, MG-392)</li> </ul>"},{"location":"updates/september-2025/#data-schema-lifecycle-evolution","title":"Data &amp; schema lifecycle evolution","text":"<ul> <li>#3464: chore(model-ad): bump model-ad-data to mv85 and align e2e tests with available data (MG-398)</li> <li>#3434: chore(model-ad): bump model-ad-data to mv84 and align models with updated data structure (MG-362)</li> <li>#3470: feat(model-ad): conditionally display omics cards (MG-278)</li> <li>#3452: feat(model-ad): create api description and route for disease_correlation (MG-237)</li> <li>#3472: fix(model-ad): remove frontend search query sanitization in favor of backend query escaping (MG-408)</li> <li>#3488: feat(explorers): update site version in model-ad footer, create shared service to manage data version and site version (MG-373)</li> </ul>"},{"location":"updates/september-2025/#developer-environment-determinism","title":"Developer environment determinism","text":"<ul> <li>#3531: chore(deps): remove <code>packageManager</code> from <code>package.json</code> (SMR-507)</li> <li>#3530: chore: activate the dev container <code>sha-db91d6849b048b6ef69472cdeb80caad262b3e68</code> (SMR-497)</li> <li>#3526: chore(bixarena): switch bixarena-app task names to serve different versions</li> <li>#3504: refactor: remove \"-angular\" suffix from TypeScript aliases</li> <li>#3502: chore(deps): upgrade to Gradle 9 (SMR-494)</li> <li>#3495: chore(deps): update dependencies with nx migrate latest and add SOP for updating packages (SMR-469)</li> <li>#3494: chore(deps): adopt pnpm minimumReleaseAge (SMR-492)</li> <li>#3501: chore(deps): update testing and storybook dependencies (SMR-469)</li> <li>#3507: chore(deps): update dependencies with security vulnerabilities (SMR-469)</li> <li>#3476: chore(deps): update all es targets to <code>es2024</code> (SMR-284)</li> <li>#3458: chore: remove empty <code>implicitDependencies</code> in <code>project.json</code> files (SMR-362)</li> <li>#3437: chore(sage-monorepo): use chat.tools.terminal.autoApprove instead (SMR-388)</li> </ul>"},{"location":"updates/september-2025/#infrastructure-local-composability","title":"Infrastructure &amp; local composability","text":"<ul> <li>#3474: feat: centralize all Caddy images and update to Caddy 2.10.2 - Take 2 (SMR-433)</li> <li>#3459: feat: add Docker Compose <code>extra_hosts</code> to OC, Agora and Model-AD apexes (SMR-384)</li> <li>#3466: chore(openchallenges): migrate from sse to streamable http transport</li> <li>#3468: chore(sage-monorepo): remove the deprecated shiny-base Docker project</li> <li>#3486: feat(openchallenges): make the image service zero-config (SMR-478)</li> <li>#3487: feat(openchallenges): set allowlist used by Thumbor's HTTP loader (SMR-478)</li> <li>#3480: feat(openchallenges): switch default Thumbor loader to <code>thumbor.loaders.http_loader</code> (SMR-477)</li> <li>#3492: refactor(openchallenges): update app properties of the MCP server (SMR-479)</li> <li>#3489: chore(openchallenges): remove unused Terraform infra project</li> <li>#3508: refactor(openchallenges): remove the <code>openchallenges-app-config-data</code> Java library (SMR-462)</li> </ul>"},{"location":"updates/september-2025/#security-scope-taxonomy-authorization-redesign","title":"Security scope taxonomy &amp; authorization redesign","text":"<p>No direct scope taxonomy\u2013only PRs merged this month (authorization semantics were bundled with gateway consolidation above).</p>"},{"location":"updates/september-2025/#automation-generated-artifacts","title":"Automation &amp; generated artifacts","text":"<ul> <li>#3535: chore(synapse): update Synapse API description and generated artifacts</li> </ul>"},{"location":"updates/september-2025/#documentation-framework-foundation","title":"Documentation framework foundation","text":"<ul> <li>#3473: chore: batch patch/minor Java dependencies update (SMR-468)</li> <li>#3493: docs(sage-monorepo): redesign the main README (SMR-496)</li> <li>#3431: docs(sage-monorepo): update nav structure of the docs site and add first monthly updates - Take 2 (SMR-418, SMR-419)</li> </ul>"},{"location":"updates/september-2025/#community-impact","title":"Community Impact","text":"<p>Consistent OpenAPI governance and automated regeneration reduce integration friction for downstream tools and clients. Centralized authentication plus emerging gateway patterns strengthen security posture while simplifying service composition. Model-AD\u2019s refined interaction patterns and data alignment accelerate hypothesis exploration. Resilient Synapse workflows and deterministic dev environments shrink feedback cycles, and unified Caddy + Docker compose strategies make local multi-application orchestration more intuitive for contributors.</p>"},{"location":"updates/september-2025/#thank-you","title":"Thank You","text":"<p>Last but certainly not least, a big Thank You to the contributors of the Sage monorepo.</p> <ul> <li>@tschaffter</li> <li>@hallieswan</li> <li>@rrchai</li> <li>@sagely1</li> <li>@github-actions[bot]</li> </ul> <p>We continue to build an open, interoperable research platform that empowers communities to accelerate discovery. Join us and help shape the next wave of scientific tooling.</p>"}]}