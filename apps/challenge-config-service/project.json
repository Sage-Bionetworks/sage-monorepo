{
  "$schema": "../../node_modules/nx/schemas/project-schema.json",
  "sourceRoot": "apps/challenge-config-service/src",
  "projectType": "application",
  "targets": {
    "build": {
      "executor": "@nxrocks/nx-spring-boot:build",
      "options": {
        "root": "apps/challenge-config-service"
      }
    },
    "test": {
      "executor": "@nxrocks/nx-spring-boot:test",
      "options": {
        "root": "apps/challenge-config-service"
      }
    },
    "clean": {
      "executor": "@nxrocks/nx-spring-boot:clean",
      "options": {
        "root": "apps/challenge-config-service"
      }
    },
    "format": {
      "executor": "@nxrocks/nx-spring-boot:format",
      "options": {
        "root": "apps/challenge-config-service"
      }
    },
    "format-check": {
      "executor": "@nxrocks/nx-spring-boot:format-check",
      "options": {
        "root": "apps/challenge-config-service"
      }
    },
    "serve": {
      "executor": "@nxrocks/nx-spring-boot:serve",
      "options": {
        "root": "apps/challenge-config-service"
      },
      "dependsOn": [
        {
          "target": "build",
          "projects": "self"
        },
        {
          "target": "prepare",
          "projects": "self"
        },
        {
          "target": "serve-detach",
          "projects": "dependencies"
        }
      ]
    },
    "serve-detach": {
      "executor": "@nrwl/workspace:run-commands",
      "options": {
        "command": "docker compose up -d",
        "cwd": "apps/challenge-config-service"
      },
      "dependsOn": [
        {
          "target": "build-image",
          "projects": "self"
        },
        {
          "target": "serve-detach",
          "projects": "dependencies"
        }
      ]
    },
    "build-image": {
      "executor": "@nxrocks/nx-spring-boot:buildImage",
      "options": {
        "root": "apps/challenge-config-service",
        "args": [
          "-Dspring-boot.build-image.imageName=sagebionetworks/challenge-config-service:latest"
        ]
      },
      "dependsOn": [
        {
          "target": "install",
          "projects": "dependencies"
        }
      ]
    }
  },
  "tags": ["type:service", "scope:backend"]
}
