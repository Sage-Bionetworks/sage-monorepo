# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from schematic_api.models.base_model_ import Model
from schematic_api.models.file_metadata import FileMetadata
from schematic_api import util

from schematic_api.models.file_metadata import FileMetadata  # noqa: E501


class FileMetadataPageAllOf(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, files=None):  # noqa: E501
        """FileMetadataPageAllOf - a model defined in OpenAPI

        :param files: The files of this FileMetadataPageAllOf.  # noqa: E501
        :type files: List[FileMetadata]
        """
        self.openapi_types = {"files": List[FileMetadata]}

        self.attribute_map = {"files": "files"}

        self._files = files

    @classmethod
    def from_dict(cls, dikt) -> "FileMetadataPageAllOf":
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The FileMetadataPage_allOf of this FileMetadataPageAllOf.  # noqa: E501
        :rtype: FileMetadataPageAllOf
        """
        return util.deserialize_model(dikt, cls)

    @property
    def files(self):
        """Gets the files of this FileMetadataPageAllOf.

        A list of file metadata.  # noqa: E501

        :return: The files of this FileMetadataPageAllOf.
        :rtype: List[FileMetadata]
        """
        return self._files

    @files.setter
    def files(self, files):
        """Sets the files of this FileMetadataPageAllOf.

        A list of file metadata.  # noqa: E501

        :param files: The files of this FileMetadataPageAllOf.
        :type files: List[FileMetadata]
        """
        if files is None:
            raise ValueError(
                "Invalid value for `files`, must not be `None`"
            )  # noqa: E501

        self._files = files
