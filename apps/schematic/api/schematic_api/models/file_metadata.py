# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from schematic_api.models.base_model_ import Model
from schematic_api import util


class FileMetadata(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name=None, id=None):  # noqa: E501
        """FileMetadata - a model defined in OpenAPI

        :param name: The name of this FileMetadata.  # noqa: E501
        :type name: str
        :param id: The id of this FileMetadata.  # noqa: E501
        :type id: str
        """
        self.openapi_types = {"name": str, "id": str}

        self.attribute_map = {"name": "name", "id": "id"}

        self._name = name
        self._id = id

    @classmethod
    def from_dict(cls, dikt) -> "FileMetadata":
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The FileMetadata of this FileMetadata.  # noqa: E501
        :rtype: FileMetadata
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this FileMetadata.

        The name of the file.  # noqa: E501

        :return: The name of this FileMetadata.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this FileMetadata.

        The name of the file.  # noqa: E501

        :param name: The name of this FileMetadata.
        :type name: str
        """
        if name is None:
            raise ValueError(
                "Invalid value for `name`, must not be `None`"
            )  # noqa: E501

        self._name = name

    @property
    def id(self):
        """Gets the id of this FileMetadata.

        The ID of the file.  # noqa: E501

        :return: The id of this FileMetadata.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this FileMetadata.

        The ID of the file.  # noqa: E501

        :param id: The id of this FileMetadata.
        :type id: str
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")  # noqa: E501

        self._id = id
