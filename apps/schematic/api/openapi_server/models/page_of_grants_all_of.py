# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.grant import Grant
from openapi_server import util

from openapi_server.models.grant import Grant  # noqa: E501

class PageOfGrantsAllOf(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, grants=None):  # noqa: E501
        """PageOfGrantsAllOf - a model defined in OpenAPI

        :param grants: The grants of this PageOfGrantsAllOf.  # noqa: E501
        :type grants: List[Grant]
        """
        self.openapi_types = {
            'grants': List[Grant]
        }

        self.attribute_map = {
            'grants': 'grants'
        }

        self._grants = grants

    @classmethod
    def from_dict(cls, dikt) -> 'PageOfGrantsAllOf':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The PageOfGrants_allOf of this PageOfGrantsAllOf.  # noqa: E501
        :rtype: PageOfGrantsAllOf
        """
        return util.deserialize_model(dikt, cls)

    @property
    def grants(self):
        """Gets the grants of this PageOfGrantsAllOf.

        An array of Grants  # noqa: E501

        :return: The grants of this PageOfGrantsAllOf.
        :rtype: List[Grant]
        """
        return self._grants

    @grants.setter
    def grants(self, grants):
        """Sets the grants of this PageOfGrantsAllOf.

        An array of Grants  # noqa: E501

        :param grants: The grants of this PageOfGrantsAllOf.
        :type grants: List[Grant]
        """
        if grants is None:
            raise ValueError("Invalid value for `grants`, must not be `None`")  # noqa: E501

        self._grants = grants
