# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.challenge import Challenge
from openapi_server import util

from openapi_server.models.challenge import Challenge  # noqa: E501

class PageOfChallengesAllOf(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, challenges=None):  # noqa: E501
        """PageOfChallengesAllOf - a model defined in OpenAPI

        :param challenges: The challenges of this PageOfChallengesAllOf.  # noqa: E501
        :type challenges: List[Challenge]
        """
        self.openapi_types = {
            'challenges': List[Challenge]
        }

        self.attribute_map = {
            'challenges': 'challenges'
        }

        self._challenges = challenges

    @classmethod
    def from_dict(cls, dikt) -> 'PageOfChallengesAllOf':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The PageOfChallenges_allOf of this PageOfChallengesAllOf.  # noqa: E501
        :rtype: PageOfChallengesAllOf
        """
        return util.deserialize_model(dikt, cls)

    @property
    def challenges(self):
        """Gets the challenges of this PageOfChallengesAllOf.

        An array of Challenges  # noqa: E501

        :return: The challenges of this PageOfChallengesAllOf.
        :rtype: List[Challenge]
        """
        return self._challenges

    @challenges.setter
    def challenges(self, challenges):
        """Sets the challenges of this PageOfChallengesAllOf.

        An array of Challenges  # noqa: E501

        :param challenges: The challenges of this PageOfChallengesAllOf.
        :type challenges: List[Challenge]
        """
        if challenges is None:
            raise ValueError("Invalid value for `challenges`, must not be `None`")  # noqa: E501

        self._challenges = challenges
