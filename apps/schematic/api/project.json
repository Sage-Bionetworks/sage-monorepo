{
  "name": "schematic-api",
  "$schema": "../../../node_modules/nx/schemas/project-schema.json",
  "sourceRoot": "apps/schematic/api/src",
  "projectType": "application",
  "targets": {
    "prepare": {
      "executor": "nx:run-commands",
      "options": {
        "command": "shx cp -n .env.example .env",
        "cwd": "apps/schematic/api"
      }
    },
    "prepare-python": {
      "executor": "nx:run-commands",
      "options": {
        "command": "./prepare-python.sh",
        "cwd": "apps/schematic/api"
      }
    },
    "serve": {
      "executor": "nx:run-commands",
      "options": {
        "command": "poetry run python -m schematic_api",
        "cwd": "apps/schematic/api"
      }
    },
    "serve-detach": {
      "executor": "nx:run-commands",
      "options": {
        "command": "docker/schematic/serve-detach.sh schematic-api"
      }
    },
    "build-image": {
      "executor": "@nx-tools/nx-container:build",
      "options": {
        "context": "apps/schematic/api",
        "metadata": {
          "images": ["ghcr.io/sage-bionetworks/schematic-api"],
          "tags": ["type=edge,branch=main", "type=raw,value=local", "type=sha"]
        },
        "push": false
      }
    },
    "publish-image": {
      "executor": "@nx-tools/nx-container:build",
      "options": {
        "context": "apps/schematic/api",
        "metadata": {
          "images": ["ghcr.io/sage-bionetworks/schematic-api"],
          "tags": ["type=edge,branch=main", "type=sha"]
        },
        "push": true
      },
      "dependsOn": ["build-image"]
    },
    "publish-and-remove-image": {
      "executor": "nx:run-commands",
      "options": {
        "command": "docker rmi $(docker images --filter=reference=ghcr.io/sage-bionetworks/schematic-api:* --quiet) --force"
      },
      "dependsOn": ["publish-image"]
    },
    "build-and-remove-image": {
      "executor": "nx:run-commands",
      "options": {
        "command": "docker rmi $(docker images --filter=reference=ghcr.io/sage-bionetworks/schematic-api:* --quiet) --force"
      },
      "dependsOn": ["build-image"]
    },
    "scan-image": {
      "executor": "nx:run-commands",
      "options": {
        "command": "trivy image ghcr.io/sage-bionetworks/schematic-api:local --quiet",
        "color": true
      }
    },
    "openapi-generate": {
      "executor": "nx:run-commands",
      "options": {
        "commands": ["xargs rm -fr <.openapi-generator/FILES", "openapi-generator-cli generate"],
        "cwd": "apps/schematic/api",
        "parallel": false
      }
    },
    "lint": {
      "executor": "nx:run-commands",
      "options": {
        "commands": [
          "poetry run black ./schematic_api --exclude 'models'",
          "poetry run mypy --non-interactive --install-types --disallow-untyped-defs schematic_api/controllers/*impl.py schematic_api/test/test*.py",
          "poetry run pylint schematic_api/controllers/*impl.py schematic_api/test/test*.py"
        ],
        "cwd": "apps/schematic/api"
      }
    },
    "lint-fix": {
      "executor": "nx:run-commands",
      "options": {
        "command": "poetry run black ./schematic_api --exclude 'models'",
        "cwd": "apps/schematic/api"
      }
    },
    "mypy": {
      "executor": "nx:run-commands",
      "options": {
        "command": "poetry run mypy --non-interactive --install-types --disallow-untyped-defs schematic_api/controllers/*impl.py schematic_api/test/test*.py",
        "cwd": "apps/schematic/api"
      }
    },
    "pylint": {
      "executor": "nx:run-commands",
      "options": {
        "command": "poetry run pylint schematic_api/controllers/*impl.py schematic_api/test/test*.py",
        "cwd": "apps/schematic/api"
      }
    },
    "test": {
      "executor": "nx:run-commands",
      "options": {
        "command": "poetry run tox",
        "cwd": "apps/schematic/api"
      }
    },
    "sonar": {
      "executor": "nx:run-commands",
      "options": {
        "command": "bash $WORKSPACE_DIR/tools/sonar-scanner.sh {projectName}",
        "cwd": "{projectRoot}"
      }
    }
  },
  "tags": ["type:service", "scope:backend", "language:python", "package-manager:poetry"],
  "implicitDependencies": ["schematic-api-description"]
}
