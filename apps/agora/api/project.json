{
  "name": "agora-api",
  "$schema": "../../../node_modules/nx/schemas/project-schema.json",
  "sourceRoot": "apps/agora/api/src",
  "projectType": "application",
  "tags": [],
  "targets": {
    "create-config": {
      "executor": "nx:run-commands",
      "options": {
        "command": "cp -n .env.example .env",
        "cwd": "{projectRoot}"
      }
    },
    "build": {
      "executor": "@nx/webpack:webpack",
      "outputs": ["{options.outputPath}"],
      "defaultConfiguration": "production",
      "options": {
        "target": "node",
        "compiler": "tsc",
        "outputPath": "dist/apps/agora/api",
        "main": "apps/agora/api/src/main.ts",
        "tsConfig": "apps/agora/api/tsconfig.app.json",
        "assets": ["apps/agora/api/src/assets"],
        "webpackConfig": "apps/agora/api/webpack.config.js",
        "externalDependencies": []
      },
      "configurations": {
        "development": {},
        "production": {}
      }
    },
    "serve": {
      "executor": "@nx/js:node",
      "defaultConfiguration": "development",
      "options": {
        "buildTarget": "agora-api:build"
      },
      "configurations": {
        "development": {
          "buildTarget": "agora-api:build:development"
        },
        "production": {
          "buildTarget": "agora-api:build:production"
        }
      }
    },
    "serve-detach": {
      "executor": "nx:run-commands",
      "options": {
        "command": "docker/agora/serve-detach.sh agora-api"
      }
    },
    "lint": {
      "executor": "@nx/eslint:lint"
    },
    "lint-fix": {
      "executor": "@nx/eslint:lint",
      "options": {
        "fix": true
      }
    },
    "scan-image": {
      "executor": "nx:run-commands",
      "options": {
        "command": "trivy image ghcr.io/sage-bionetworks/agora-api:local --quiet",
        "color": true
      }
    },
    "test": {
      "executor": "@nx/jest:jest",
      "outputs": ["{workspaceRoot}/coverage/{projectRoot}"],
      "options": {
        "jestConfig": "apps/agora/api/jest.config.ts"
      }
    }
  }
}
