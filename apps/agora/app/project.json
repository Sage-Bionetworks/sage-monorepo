{
  "name": "agora-app",
  "$schema": "../../../node_modules/nx/schemas/project-schema.json",
  "projectType": "application",
  "prefix": "app",
  "sourceRoot": "apps/agora/app/src",
  "tags": [],
  "implicitDependencies": ["agora-styles", "agora-themes", "shared-typescript-assets"],
  "targets": {
    "create-config": {
      "executor": "nx:run-commands",
      "options": {
        "command": "cp -n .env.example .env",
        "cwd": "{projectRoot}"
      }
    },
    "build": {
      "executor": "@nx/angular:application",
      "outputs": ["{options.outputPath}"],
      "options": {
        "outputPath": "dist/apps/agora/app",
        "index": "apps/agora/app/src/index.html",
        "browser": "apps/agora/app/src/main.ts",
        "polyfills": ["zone.js"],
        "tsConfig": "apps/agora/app/tsconfig.app.json",
        "inlineStyleLanguage": "scss",
        "assets": [
          "apps/agora/app/src/assets",
          "apps/agora/app/src/config",
          "apps/agora/app/src/humans.txt",
          "apps/agora/app/src/robots.txt",
          {
            "input": "libs/shared/typescript/assets/src/assets",
            "glob": "**/*",
            "output": "assets"
          },
          {
            "input": "libs/agora/assets",
            "glob": "**/*",
            "output": "agora-assets"
          },
          {
            "input": "libs/explorers/assets",
            "glob": "**/*",
            "output": "explorers-assets"
          },
          {
            "input": "libs/agora/assets/favicon",
            "glob": "**/*",
            "output": "/"
          }
        ],
        "stylePreprocessorOptions": {
          "includePaths": ["libs"]
        },
        "styles": ["apps/agora/app/src/styles.scss", "node_modules/primeicons/primeicons.css"],
        "scripts": [],
        "server": "apps/agora/app/src/main.server.ts",
        "prerender": false,
        "ssr": {
          "entry": "apps/agora/app/server.ts"
        }
      },
      "configurations": {
        "production": {
          "budgets": [
            {
              "type": "initial",
              "maximumWarning": "1mb",
              "maximumError": "4mb"
            },
            {
              "type": "anyComponentStyle",
              "maximumWarning": "2kb",
              "maximumError": "20kb"
            }
          ],
          "outputHashing": "all"
        },
        "development": {
          "optimization": false,
          "extractLicenses": false,
          "sourceMap": true
        }
      },
      "defaultConfiguration": "production"
    },
    "serve": {
      "executor": "@nx/angular:dev-server",
      "options": {
        "host": "0.0.0.0",
        "port": 4200
      },
      "configurations": {
        "production": {
          "buildTarget": "agora-app:build:production"
        },
        "development": {
          "buildTarget": "agora-app:build:development"
        }
      },
      "defaultConfiguration": "development",
      "continuous": true
    },
    "test": {
      "executor": "@nx/jest:jest",
      "outputs": ["{workspaceRoot}/coverage/{projectRoot}"],
      "options": {
        "jestConfig": "apps/agora/app/jest.config.ts"
      }
    },
    "extract-i18n": {
      "executor": "@nx/angular:extract-i18n",
      "options": {
        "buildTarget": "agora-app:build"
      }
    },
    "lint": {
      "executor": "@nx/eslint:lint"
    },
    "lint-fix": {
      "executor": "@nx/eslint:lint",
      "options": {
        "fix": true
      }
    },
    "serve-static": {
      "executor": "@nx/web:file-server",
      "options": {
        "buildTarget": "agora-app:build",
        "staticFilePath": "dist/apps/agora/app/browser",
        "spa": true
      }
    },
    "serve-detach": {
      "executor": "nx:run-commands",
      "options": {
        "command": "docker/agora/serve-detach.sh agora-app"
      },
      "dependsOn": []
    },
    "scan-image": {
      "executor": "nx:run-commands",
      "options": {
        "command": "trivy image ghcr.io/sage-bionetworks/agora-app:local --quiet",
        "color": true
      }
    },
    "e2e": {
      "executor": "@nx/playwright:playwright",
      "outputs": ["{workspaceRoot}/dist/.playwright/{projectRoot}"],
      "options": {
        "config": "{projectRoot}/playwright.config.ts"
      }
    }
  }
}
