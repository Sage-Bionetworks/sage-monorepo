plugins {
  id 'java'
  id 'org.springframework.boot' version '2.7.3'
}

ext {
  fasterxmlVersion = '2.13.4'
  keycloakVersion = '18.0.0'
  springBootVersion = '2.7.3'
  springCloudVersion = '3.1.3'
  springDataVersion = '2.7.2'
}

repositories {
  mavenCentral()
  mavenLocal()
}

dependencies {
  implementation "com.fasterxml.jackson.core:jackson-databind:${fasterxmlVersion}"
  implementation "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:${fasterxmlVersion}"
  implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${fasterxmlVersion}"
  implementation 'com.google.code.findbugs:jsr305:3.0.2'
  implementation 'org.openapitools:jackson-databind-nullable:0.2.2'
  implementation 'org.springdoc:springdoc-openapi-ui:1.6.8'
  implementation "org.springframework.boot:spring-boot-starter-validation:${springBootVersion}"
  implementation "org.springframework.boot:spring-boot-starter-web:${springBootVersion}"
  implementation "org.springframework.data:spring-data-commons:${springDataVersion}"
  testImplementation "org.springframework.boot:spring-boot-starter-test:${springBootVersion}"
}

group = 'org.sagebionetworks.challenge'
version = '0.0.1-SNAPSHOT'

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(17)
  }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

spotless {
  // format 'misc', {
  //   target '*.gradle', '*.md', '.gitignore'

  //   trimTrailingWhitespace()
  //   indentWithSpaces(2)
  //   endWithNewline()
  // }

  java {
    target 'src/*/java/**/*.java'

    importOrder()
    removeUnusedImports()
    googleJavaFormat()
  }
}
