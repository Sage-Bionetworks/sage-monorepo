@serviceRegistryHost = http://challenge-service-registry:8081
@apiGatewayHost = http://challenge-registry-api-gateway:8082
@userServiceHost = http://challenge-user-service:8083
@keycloakHost = http://challenge-registry-keycloak:8080

### Check user service info

# GET {{userServiceHost}}/actuator/info

### Check API gateway actuator (expected to redirect to Keycloak login page)

# GET {{apiGatewayHost}}/actuator/info

### Check user service info via the API gateway (expected to redirect to
### Keycloak login page)

# GET {{apiGatewayHost}}/user/actuator/info

### Get access token from Keycloak

# @clientId = challenge-core-client
# @clientSecret = O0cNRMWg3LHsdHW8BNPlY96qKooDPhPX
@clientId = challenge-api-client
@clientSecret = mg2DrRcxHx19PIITibdOnbNEbJUKjGKb
@username = luke
@password = changeme

# @name login

POST {{keycloakHost}}/realms/test/protocol/openid-connect/token
Content-Type: application/x-www-form-urlencoded

grant_type=password
&scope=email
&client_id={{clientId}}
&client_secret={{clientSecret}}
&username={{username}}
&password={{password}}

### Check user service info

# GET {{apiGatewayHost}}/user/actuator/info
# Authorization: Bearer {{login.response.body.$.access_token}}

### Create user (autorized without token)

POST {{apiGatewayHost}}/api/v1/users/register
Content-Type: application/json

{
  "username": "test",
  "email": "test@gmail.com",
  "password": "changeme"
}

### List all the users

GET {{apiGatewayHost}}/api/v1/users
Authorization: Bearer {{login.response.body.$.access_token}}

### List all the users (bypass the API gateway)

GET {{userServiceHost}}/api/v1/users
Authorization: Bearer {{login.response.body.$.access_token}}

