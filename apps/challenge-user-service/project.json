{
  "$schema": "../../node_modules/nx/schemas/project-schema.json",
  "sourceRoot": "apps/challenge-user-service/src",
  "projectType": "application",
  "targets": {
    "prepare": {
      "executor": "@nrwl/workspace:run-commands",
      "options": {
        "command": "shx cp -n .env.example .env",
        "cwd": "apps/challenge-user-service"
      }
    },
    "prepare-java": {
      "executor": "@nrwl/workspace:run-commands",
      "options": {
        "commands": [
          "./gradlew --version 1> /dev/null"
        ],
        "cwd": "apps/challenge-user-service"
      }
    },
    "build": {
      "executor": "@nxrocks/nx-spring-boot:build",
      "options": {
        "root": "apps/challenge-user-service"
      },
      "outputs": [
        "apps/challenge-user-service"
      ],
      "dependsOn": [
        "^install"
      ]
    },
    "test": {
      "executor": "@nxrocks/nx-spring-boot:test",
      "options": {
        "root": "apps/challenge-user-service"
      },
      "dependsOn": ["build"]
    },
    "integration-test": {
      "executor": "@nrwl/workspace:run-commands",
      "options": {
        "commands": [
          "./gradlew integrationTest"
        ],
        "cwd": "apps/challenge-user-service"
      }
    },
    "clean": {
      "executor": "@nxrocks/nx-spring-boot:clean",
      "options": {
        "root": "apps/challenge-user-service"
      }
    },
    "format": {
      "executor": "@nxrocks/nx-spring-boot:format",
      "options": {
        "root": "apps/challenge-user-service"
      }
    },
    "format-check": {
      "executor": "@nxrocks/nx-spring-boot:format-check",
      "options": {
        "root": "apps/challenge-user-service"
      }
    },
    "serve": {
      "executor": "@nxrocks/nx-spring-boot:serve",
      "options": {
        "root": "apps/challenge-user-service"
      },
      "dependsOn": [
        "build",
        "prepare",
        "^serve-detach"
      ]
    },
    "serve-detach": {
      "executor": "@nrwl/workspace:run-commands",
      "options": {
        "command": "docker compose up -d",
        "cwd": "apps/challenge-user-service"
      },
      "dependsOn": [
        "build-image",
        "prepare",
        "^serve-detach"
      ]
    },
    "build-image": {
      "executor": "@nxrocks/nx-spring-boot:build-image",
      "options": {
        "root": "apps/challenge-user-service",
        "args": [
          "-Dspring-boot.build-image.imageName=sagebionetworks/challenge-user-service:latest"
        ]
      },
      "dependsOn": [
        "^install"
      ]
    }
  },
  "tags": [
    "type:service",
    "scope:backend"
  ],
  "implicitDependencies": [
    "challenge-mariadb",
    "challenge-keycloak",
    "challenge-service-registry",
    "challenge-api-gateway",
    "shared-java-challenge-util"
  ]
}
