"""
The "StatusEnum" scalar will always be either `Mut` or `Wt`.
"""
scalar StatusEnum

"""
The "GeneMutation" type may return:

- The 'id' of the mutation. Please note that this `id` is generated by the database and may not be consistent in the long term.
- The "gene" related to the mutation
- The "mutation code" related to that mutation
- The "mutation type" related to that mutation
- A list of "samples" related to that mutation
"""
type GeneMutation {
  id: Int!
  gene: SimpleGene!
  mutationCode: String!
  mutationType: MutationType
  samples: [MutationRelatedSample!]
}



"""
The "GeneMutationToSample" type may return:

- The 'id' of the mutation. Please note that this `id` is generated by the database and may not be consistent in the long term.
- The "gene" related to the mutation
- The "mutation code" related to that mutation
- The "mutation type" related to that mutation
- The "status" of the sample related to that mutation.
"""
type GeneMutationToSample {
  id: Int!
  gene: SimpleGene!
  mutationCode: String!
  mutationType: MutationType
  status: StatusEnum!
}

"""
The "MutationsBySamplePage" type may return:

- "name", the name of the sample related to the list of mutations
- "mutations", a list of returned GeneMutationToSample

See `GeneMutationToSample`
"""
type MutationsBySample {
  name: String!
  mutations: [GeneMutationToSample!]
}

"""
The "MutationsBySamplePage" type may return:

- "items", a list of returned MutationsBySample
- "page", the current page of returned MutationsBySample (a maximum 100,000 of row returned in a page)
- "pages", the total number of pages available
- "total", the total number of results (all pages summed).

See `MutationsBySample`
"""
type MutationsBySamplePage {
  items: [MutationsBySample!]!
  page: Int!
  pages: Int!
  total: Int!
}

"""
The "MutationType" type may return:

- The "diplay", a friendly name of the mutation type
- The proper "name" of the mutation type
"""
type MutationType {
  display: String
  name: String!
}
