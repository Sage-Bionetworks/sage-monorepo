type Query {
  """
  The "copyNumberResults" query accepts:

    - "dataSet", a list of data set names associated with the copy number results to filter by.
    - "feature", a list of feature names associated with the copy number results to filter by.
    - "entrez", a list of gene entrez ids associated with the copy number results to filter by.
    - "tag", a list of tag names associated with the copy number results to filter by.
    - "direction", the direction of the copy number results to filter by. (either 'Amp' or 'Del')
    - "minPValue", a minimum P value to filter the copy number results by.
    - "maxPValue", a maximum P value to filter the copy number results by.
    - "minLog10PValue", a minimum log10 calcualtion of the P value to filter the copy number results by.
    - "maxLog10PValue", a maximum log10 calcualtion of the P value to filter the copy number results by.
    - "maxPValue", a maximum mean normal to filter the copy number results by.
    - "maxPValue", a maximum mean CNV to filter the copy number results by.
    - "maxPValue", a maximum T stat to filter the copy number results by.
    - "page", the page of results to get. Defaults to 1 (the first page)

  If no arguments are passed, this will return all copy number results.
  """
  copyNumberResults(
    dataSet: [String!]
    feature: [String!]
    entrez: [Int!]
    tag: [String!]
    direction: DirectionEnum
    minPValue: Float
    maxPValue: Float
    minLog10PValue: Float
    maxLog10PValue: Float
    minMeanNormal: Float
    minMeanCnv: Float
    minTStat: Float
    page: Int
  ): CopyNumberResultPage!

  """
  The "dataSets" query accepts:

    - "dataSet", a list of data set names to look up.
    - "sample", a list of sample names associated with the data sets to filter by.

  If no arguments are passed, this will return all data sets.
  """
  dataSets(dataSet: [String!], sample: [String!]): [DataSet!]!

  """
  The "driverResults" query accepts:

    - "dataSet", a list of data set names associated with the driver results to filter by.
    - "entrez", a list of gene entrez ids associated with the driver results to filter by.
    - "feature", a list of feature names associated with the driver results to filter by.
    - "mutationCode", a list of mutation code names associated with the driver results to filter by.
    - "tag", a list of tag names associated with the driver results to filter by.
    - "maxPValue", a maximum P value to filter the driver results by.
    - "minPValue", a minimum P value to filter the driver results by.

    - "maxLog10PValue", a maximum log10 calcualtion of the P value to filter the driver results by.
    - "minLog10PValue", a minimum log10 calcualtion of the P value to filter the driver results by.
    - "minFoldChange", a minimum fold change to filter the driver results by.
    - "minLog10FoldChange", a minimum log10 calcualtion of the fold change to filter the driver results by.
    - "minNumWildTypes", a minimum of wild type genes to filter the driver results by.
    - "minNumMutants", a minimum mutant genes to filter the driver results by.

  If no arguments are passed, this will return all driver results.
  """
  driverResults(
    dataSet: [String!]
    entrez: [Int!]
    feature: [String!]
    mutationCode: [String!]
    tag: [String!]
    maxPValue: Float
    minPValue: Float
    maxLog10PValue: Float
    minLog10PValue: Float
    minFoldChange: Float
    minLog10FoldChange: Float
    minNumWildTypes: Int
    minNumMutants: Int
  ): [DriverResult!]!

  """
  The "features" query accepts:

    - "dataSet", a list of data set names associated with the features to filter by.
    - "related", a list of "related" tag names associated with the data set that is associated with the features to filter by.
    - "tag", a list of tag names associated with the sample that is associated with the features to filter by.
    - "feature", a list of feature names to filter by.
    - "featureClass", a list of feature class names associated with the features to filter by.
    - "sample", a list of sample names associated with the feature to filter by.

  If no arguments are passed, this will return all features.

  See also: featuresByClass and featuresByTag
  """
  features(
    dataSet: [String!]
    related: [String!]
    tag: [String!]
    feature: [String!]
    featureClass: [String!]
    sample: [String!]
    maxValue: Float
    minValue: Float
  ): [Feature!]!

  """
  The "featuresByClass" query accepts:

    - "dataSet", a list of data set names associated with the features to filter by.
    - "related", a list of "related" tag names associated with the data set that is associated with the features to filter by.
    - "tag", a list of tag names associated with the sample that is associated with the features to filter by.
    - "feature", a list of feature names to filter by.
    - "featureClass", a list of feature class names associated with the features to filter by.
    - "sample", a list of sample names associated with the feature to filter by.

  If no arguments are passed, this will return all features organized by feature class.
  """
  featuresByClass(
    dataSet: [String!]
    related: [String!]
    tag: [String!]
    feature: [String!]
    featureClass: [String!]
    sample: [String!]
    maxValue: Float
    minValue: Float
  ): [FeaturesByClass!]!

  """
  The "featuresByTag" query accepts:

    - "dataSet", a list of data set names associated with the features to filter by.
    - "related", a list of "related" tag names associated with the data set that is associated with the features to filter by.
    - "tag", a list of tag names associated with the sample that is associated with the features to filter by.
    - "feature", a list of feature names to filter by.
    - "featureClass", a list of feature class names associated with the features to filter by.
    - "sample", a list of sample names associated with the feature to filter by.

  If no arguments are passed, this will return all features organized by tag.
  """
  featuresByTag(
    dataSet: [String!]
    related: [String!]
    tag: [String!]
    feature: [String!]
    featureClass: [String!]
    sample: [String!]
    maxValue: Float
    minValue: Float
  ): [FeaturesByTag!]!

  """
  The "gene" query accepts:

    - "entrez", the entrez id of the gene to look up.
    - "sample", a list of sample names associated with the gene (used to look up RNA sequence expressions).
  """
  gene(entrez: Int!, sample: [String!]): Gene

  """
  The "geneFamilies" query accepts:

    - "name", a list of names of the gene families to look up.
  """
  geneFamilies(name: [String!]): [GeneFamily!]

  """
  The "geneTypes" query accepts:

    - "name", a list of names of the gene functions to look up.
  """
  geneFunctions(name: [String!]): [GeneFunction!]

  """
  The "genes" query accepts:

    - "entrez", a list of entrez ids for the genes to look up.
    - "geneType", a list of gene types related to the genes to look up.
    - "sample", a list of sample names associated with the gene (used to look up RNA sequence expressions).

  If no arguments are passed, this will return all genes.
  """
  genes(entrez: [Int!], geneType: [String!], sample: [String!]): [Gene!]!

  """
  The "genesByTag" query accepts:

    - "dataSet", a list of data set names to filter by (required).
    - "related", a list of tag names associated with the data sets to filter by (required).
    - "tag", a list of tag names associated with the related to filter by.
    - "feature", a list of feature names to filter by.
    - "featureClass", a list of feature class names associated with the features to filter by.
    - "entrez", a list of gene entrez ids to filter by.
    - "geneType", a list of gene type names associated with the genes to filter by.
    - "sample", a list of sample names associated with the gene (used to look up RNA sequence expressions).

  If no arguments are passed, this will return all genes organized by tag.
  """
  genesByTag(
    dataSet: [String!]!
    related: [String!]!
    tag: [String!]
    feature: [String!]
    featureClass: [String!]
    entrez: [Int!]
    geneType: [String!]
    sample: [String!]
  ): [GenesByTag!]!

  """
  The "geneTypes" query accepts:

    - "name", a list of names of the gene types to look up.
  """
  geneTypes(name: [String!]): [GeneType!]!

  """
  The "ImmuneCheckpoints" query accepts:

    - "name", a list of names of the immune checkpoints to look up.
  """
  immuneCheckpoints(name: [String!]): [ImmuneCheckpoint!]

  """
  The "methodTags" query accepts:

    - "name", a list of names of the method tags to look up.
  """
  methodTags(name: [String!]): [MethodTag!]!

  """
  The "mutations" query accepts:

    - "entrez", a list of gene entrez ids associated with the mutations to filter by.
    - "mutationCode", a list of mutation code names associated with the mutations to filter by.
    - "mutationType", a list of mutation type names associated with the mutations to filter by.

  If no arguments are passed, this will return all mutations.
  """
  mutations(
    entrez: [Int!]
    mutationCode: [String!]
    mutationType: [String!]
  ): [GeneMutation!]!

  """
  The "mutationTypes" query returns all mutation types.
  """
  mutationTypes: [MutationType!]!

  """
  The "nodes" query accepts:

    - "dataSet", a list of data set names associated with the nodes to filter by.
    - "related", a list of tag names related to the data set associated with the nodes to filter by.
    - "network", a list of tag names associated with the nodes that are also associated with the "network" tag to filter by.
    - "page", the page of results to get. Defaults to 1 (the first page)

  If no arguments are passed, this will return all nodes (please note, there will be a LOT of results).
  """
  nodes(
    dataSet: [String!]
    related: [String!]
    network: [String!]
    page: Int
  ): NodePage

  """
  The "patients" query accepts:

    - "barcode", a list of patient barcodes of the patients to look up.

  If no barcodes are passed, this will return all patients.
  """
  patients(barcode: [String!]): [Patient!]!

  """
  The "Pathways" query accepts:

    - "name", a list of names of the pathways to look up.
  """
  pathways(name: [String!]): [Pathway!]

  """
  The "related" query accepts:

    - "dataSet", a list of data set names
    - "related", a list of tag (related) names related to the data set(s)

  If no filters are passed, this will return all tags related to data sets.
  """
  related(dataSet: [String!], related: [String!]): [RelatedByDataSet!]!

  """
  The "samples" query accepts a list of sample names or a list of patient barcodes.
  If no filters are passed, this will return all samples.
  """
  samples(name: [String!], patient: [String!]): [Sample!]!

  """
  The "samplesByMutationStatus" query accepts:

    - "mutationId", a list of mutation ids
    - "mutationStatus", a StatusEnum value to filter the samples by
    - "sample", a list of sample names

  If no filters are passed, this will return a list of all mutation statuses with lists of all related samples.
  """
  samplesByMutationStatus(
    mutationId: [Int!]
    mutationStatus: StatusEnum
    sample: [String!]
  ): [SampleByMutationStatus!]!

  """
  The "samplesByTag" query accepts:

    - "sample", a list of sample names
    - "patient", a list of patient barcodes
    - "dataSet", a list of data set names
    - "related", a list of tag names related to the data set(s)
    - "tag", a list of tag names
    - "feature", a list of feature names
    - "featureClass", a list of feature class names

  If no filters are passed, this will return all samples organized by tag.
  """
  samplesByTag(
    dataSet: [String!]
    related: [String!]
    tag: [String!]
    feature: [String!]
    featureClass: [String!]
    name: [String!]
    patient: [String!]
  ): [SamplesByTag!]!

  """
  The "slides" query accepts:

    - "name", a list of names of the slides to look up.
  """
  slides(name: [String!]): [Slide!]!

  """
  The "superCategories" query accepts:

    - "name", a list of names of the super categories to look up.
  """
  superCategories(name: [String!]): [SuperCategory!]!

  """
  The "tags" query accepts:

    - "dataSet", a list of data set names (required)
    - "related", a list of tag names related to the data set(s) (required)
    - "tag", a list of tag names
    - "feature", a list of feature names
    - "featureClass", a list of feature class names
  """
  tags(
    dataSet: [String!]!
    related: [String!]!
    tag: [String!]
    feature: [String!]
    featureClass: [String!]
    sample: [String!]
  ): [Tag!]!

  """
  A simple test query that is independent of the database.
  """
  test: String!

  """
  The "therapyTypes" query accepts:

    - "name", a list of names of the therapy types to look up.
  """
  therapyTypes(name: [String!]): [TherapyType!]!
}
