type Query {
  dataSets(dataSet: [String!], sample: [String!]): [DataSet!]!
  driverResults(
    feature: [String!]
    entrez: [Int!]
    mutationCode: [String!]
    tag: [String!]
    dataSet: [String!]
    limit: Int
  ): [DriverResult!]!
  features(
    dataSet: [String!]
    related: [String!]
    feature: [String!]
    featureClass: [String!]
  ): [Feature!]!
  featuresByClass(
    dataSet: [String!]
    related: [String!]
    feature: [String!]
    featureClass: [String!]
  ): [FeaturesByClass!]!
  featuresByTag(
    dataSet: [String!]!
    related: [String!]!
    feature: [String!]
    featureClass: [String!]
  ): [FeaturesByTag!]!
  gene(entrez: Int!): Gene
  genes(entrez: [Int!], geneType: [String!]): [Gene!]!
  genesByTag(
    dataSet: [String!]!
    related: [String!]!
    tag: [String!]
    feature: [String!]
    featureClass: [String!]
    entrez: [Int!]
    geneType: [String!]
  ): [GenesByTag!]!
  mutations(
    entrez: [Int!]
    mutationCode: [String!]
    mutationType: [String!]
  ): [Mutation!]!
  mutationTypes: [MutationType!]!
  patient(barcode: String): Patient
  patients(barcode: [String!]): [Patient!]!

  """
  The "related" query accepts:

    - "dataSet", a list of data set names
    - "related", a list of tag (related) names related to the dataset(s)

  If no filters are passed, this will return all tags related to data sets.
  """
  related(dataSet: [String!], related: [String!]): [RelatedByDataSet!]!

  """
  The "samples" query accepts a list of sample names or a list of patient barcodes.
  If no filters are passed, this will return all samples.
  """
  samples(name: [String!], patient: [String!]): [Sample!]!

  """
  The "samplesByTag" query accepts:

    - "sample", a list of sample names
    - "patient", a list of patient barcodes
    - "dataSet", a list of data set names
    - "related", a list of tag names related to the dataset(s)
    - "tag", a list of tag names
    - "feature", a list of feature names
    - "featureClass", a list of feature class names

  If no filters are passed, this will return all samples organized by tag.
  """
  samplesByTag(
    dataSet: [String!]
    related: [String!]
    tag: [String!]
    feature: [String!]
    featureClass: [String!]
    name: [String!]
    patient: [String!]
  ): [SamplesByTag!]!
  slide(id: Int, name: String): Slide
  slides(id: [Int!], name: [String!]): [Slide!]!

  """
  The "tags" query accepts:

    - "dataSet", a list of data set names (required)
    - "related", a list of tag names related to the dataset(s) (required)
    - "tag", a list of tag names
    - "feature", a list of feature names
    - "featureClass", a list of feature class names
  """
  tags(
    dataSet: [String!]!
    related: [String!]!
    tag: [String!]
    feature: [String!]
    featureClass: [String!]
  ): [Tag!]!
  test: String!
}
