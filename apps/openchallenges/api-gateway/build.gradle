buildscript {
  repositories {
    mavenCentral()
  }
}

plugins {
  id 'java'
  id 'org.springframework.boot' version "${springBootVersion}"
  id "io.spring.dependency-management" version "${springDependencyManagementVersion}"
}

repositories {
  mavenCentral()
  mavenLocal()
}

dependencies {
  implementation "org.springframework.boot:spring-boot-devtools:${springBootVersion}"
  implementation "org.springframework.boot:spring-boot-starter-actuator:${springBootVersion}"
  implementation "org.springframework.boot:spring-boot-starter-oauth2-client:${springBootVersion}"
  implementation "org.springframework.boot:spring-boot-starter-oauth2-resource-server:${springBootVersion}"
  implementation "org.springframework.boot:spring-boot-starter-security:${springBootVersion}"
  implementation "org.springframework.cloud:spring-cloud-starter-config:${springCloudVersion}"
  implementation "org.springframework.cloud:spring-cloud-starter-gateway:${springCloudVersion}"
  implementation "org.springframework.cloud:spring-cloud-starter-netflix-eureka-client:${springCloudVersion}"
  testImplementation "org.springframework.boot:spring-boot-starter-test:${springBootVersion}"
  implementation "org.sagebionetworks.openchallenges:openchallenges-app-config-data:${openchallengesVersion}"
}

group = 'org.sagebionetworks.openchallenges'
version = '0.0.1-SNAPSHOT'

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(17)
  }
}

tasks.withType(JavaCompile) {
  options.encoding = 'UTF-8'
}

bootBuildImage {
  imageName = 'sagebionetworks/openchallenges-api-gateway:latest'
}
