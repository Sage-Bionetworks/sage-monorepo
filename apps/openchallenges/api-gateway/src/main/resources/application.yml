openchallenges-api-gateway:
  welcome-message: 'Welcome to OpenChallenges API Gateway.'

# Auth Service configuration
openchallenges:
  auth:
    service-url: ${AUTH_SERVICE_URL:http://openchallenges-auth-service:8080/v1}

server:
  port: 8082

spring:
  application:
    name: openchallenges-api-gateway
  cloud:
    gateway:
      server:
        webflux:
          globalcors:
            cors-configurations:
              '[/**]':
                allowedorigins: '*'
                allowedmethods:
                  - GET
                  - POST
                  - DELETE
                  - PUT
          routes:
            - id: openchallenges-auth-service
              uri: http://openchallenges-auth-service:8080
              predicates:
                - Path=/api/v1/auth/**,/api/v1/users/register
              filters:
                - StripPrefix=1
            - id: openchallenges-organization-service
              uri: http://openchallenges-organization-service:8084
              predicates:
                - Path=/api/v1/organizations/**
              filters:
                - StripPrefix=1
            - id: openchallenges-challenge-service
              uri: http://openchallenges-challenge-service:8085
              predicates:
                - Path=/api/v1/challenges/**,/api/v1/challenge-analytics/**,/api/v1/challenge-platforms/**,/api/v1/edam-concepts/**
              filters:
                - StripPrefix=1
            - id: openchallenges-image-service
              uri: http://openchallenges-image-service:8086
              predicates:
                - Path=/api/v1/images/**
              filters:
                - StripPrefix=1
  profiles:
    active: dev

management:
  endpoints:
    web:
      base-path: /actuator
      exposure:
        include: health, prometheus, refresh
      path-mapping:
        prometheus: metrics
  health:
    readiness-state:
      enabled: true
    liveness-state:
      enabled: true
  endpoint:
    health:
      probes:
        enabled: true
    prometheus:
      cache.time-to-live: 1ms

info:
  application:
    name: ${spring.application.name}
