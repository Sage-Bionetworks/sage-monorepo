{
  "name": "openchallenges-app",
  "$schema": "../../../node_modules/nx/schemas/project-schema.json",
  "projectType": "application",
  "sourceRoot": "apps/openchallenges/app/src",
  "prefix": "openchallenges",
  "targets": {
    "create-config": {
      "executor": "nx:run-commands",
      "options": {
        "command": "cp -n .env.example .env",
        "cwd": "{projectRoot}"
      }
    },
    "sonar": {
      "executor": "nx:run-commands",
      "options": {
        "command": "bash $WORKSPACE_DIR/tools/sonar-scanner.sh {projectName}",
        "cwd": "{projectRoot}"
      }
    },
    "build": {
      "executor": "@angular-devkit/build-angular:browser",
      "outputs": ["{options.outputPath}"],
      "options": {
        "outputPath": "dist/apps/openchallenges/app/browser/browser",
        "index": "apps/openchallenges/app/src/index.html",
        "main": "apps/openchallenges/app/src/main.ts",
        "polyfills": ["zone.js"],
        "tsConfig": "apps/openchallenges/app/tsconfig.app.json",
        "inlineStyleLanguage": "scss",
        "assets": [
          "apps/openchallenges/app/src/assets",
          "apps/openchallenges/app/src/config",
          "apps/openchallenges/app/src/humans.txt",
          "apps/openchallenges/app/src/robots.txt",
          "apps/openchallenges/app/src/sitemap.xml",
          {
            "input": "libs/shared/typescript/assets/src/assets",
            "glob": "**/*",
            "output": "assets"
          },
          {
            "input": "libs/openchallenges/assets/src/assets",
            "glob": "**/*",
            "output": "openchallenges-assets"
          },
          {
            "input": "libs/openchallenges/assets/src",
            "glob": "favicon.ico",
            "output": ""
          }
        ],
        "styles": [
          "apps/openchallenges/app/src/styles.scss",
          "node_modules/primeicons/primeicons.css",
          "node_modules/primeng/resources/themes/lara-light-blue/theme.css",
          "node_modules/primeng/resources/primeng.min.css"
        ],
        "scripts": []
      },
      "configurations": {
        "production": {
          "budgets": [
            {
              "type": "initial",
              "maximumWarning": "1mb",
              "maximumError": "2mb"
            },
            {
              "type": "anyComponentStyle",
              "maximumWarning": "2kb",
              "maximumError": "100kb"
            }
          ],
          "outputHashing": "all"
        },
        "development": {
          "buildOptimizer": false,
          "optimization": false,
          "vendorChunk": true,
          "extractLicenses": false,
          "sourceMap": true,
          "namedChunks": true
        }
      },
      "defaultConfiguration": "production"
    },
    "serve": {
      "executor": "@angular-devkit/build-angular:dev-server",
      "configurations": {
        "production": {
          "browserTarget": "openchallenges-app:build:production"
        },
        "development": {
          "browserTarget": "openchallenges-app:build:development"
        }
      },
      "defaultConfiguration": "development",
      "options": {
        "host": "127.0.0.1",
        "port": 4200,
        "proxyConfig": "apps/openchallenges/app/src/proxy.conf.json"
      }
    },
    "serve-detach": {
      "executor": "nx:run-commands",
      "options": {
        "command": "docker/openchallenges/serve-detach.sh openchallenges-app"
      },
      "dependsOn": []
    },
    "extract-i18n": {
      "executor": "@angular-devkit/build-angular:extract-i18n",
      "options": {
        "browserTarget": "openchallenges-app:build"
      }
    },
    "lint": {
      "executor": "@nx/linter:eslint",
      "options": {
        "lintFilePatterns": ["apps/openchallenges/app/**/*.ts", "apps/openchallenges/app/**/*.html"]
      }
    },
    "lint-fix": {
      "executor": "@nx/linter:eslint",
      "options": {
        "lintFilePatterns": [
          "apps/openchallenges/app/src/**/*.ts",
          "apps/openchallenges/app/src/**/*.html"
        ],
        "fix": true
      }
    },
    "test": {
      "executor": "@nx/jest:jest",
      "outputs": ["{workspaceRoot}/coverage/apps/openchallenges/app"],
      "options": {
        "jestConfig": "apps/openchallenges/app/jest.config.ts",
        "passWithNoTests": true
      }
    },
    "build-image": {
      "executor": "@nx-tools/nx-container:build",
      "options": {
        "context": ".",
        "file": "apps/openchallenges/app/Dockerfile.csr",
        "metadata": {
          "images": ["ghcr.io/sage-bionetworks/openchallenges-app"],
          "tags": ["type=edge,branch=main", "type=raw,value=local", "type=sha"]
        },
        "push": false
      },
      "dependsOn": ["build"]
    },
    "publish-image": {
      "executor": "@nx-tools/nx-container:build",
      "options": {
        "context": ".",
        "file": "apps/openchallenges/app/Dockerfile.csr",
        "metadata": {
          "images": ["ghcr.io/sage-bionetworks/openchallenges-app"],
          "tags": ["type=edge,branch=main", "type=sha"]
        },
        "push": true
      },
      "dependsOn": ["build-image"]
    },
    "publish-and-remove-image": {
      "executor": "nx:run-commands",
      "options": {
        "command": "docker rmi $(docker images --filter=reference=ghcr.io/sage-bionetworks/openchallenges-app:* --quiet) --force"
      },
      "dependsOn": ["publish-image"]
    },
    "build-and-remove-image": {
      "executor": "nx:run-commands",
      "options": {
        "command": "docker rmi $(docker images --filter=reference=ghcr.io/sage-bionetworks/openchallenges-app:* --quiet) --force"
      },
      "dependsOn": ["build-image"]
    },
    "scan-image": {
      "executor": "nx:run-commands",
      "options": {
        "command": "trivy image ghcr.io/sage-bionetworks/openchallenges-app:local --quiet",
        "color": true
      }
    },
    "server": {
      "dependsOn": ["build"],
      "executor": "@angular-devkit/build-angular:server",
      "options": {
        "outputPath": "dist/apps/openchallenges/app/browser/server",
        "main": "apps/openchallenges/app/server.ts",
        "tsConfig": "apps/openchallenges/app/tsconfig.server.json",
        "inlineStyleLanguage": "scss"
      },
      "configurations": {
        "production": {
          "outputHashing": "media"
        },
        "development": {
          "buildOptimizer": false,
          "optimization": false,
          "sourceMap": true,
          "extractLicenses": false,
          "vendorChunk": true
        }
      },
      "defaultConfiguration": "production"
    },
    "serve-ssr": {
      "executor": "@nguniversal/builders:ssr-dev-server",
      "configurations": {
        "development": {
          "browserTarget": "openchallenges-app:build:development",
          "serverTarget": "openchallenges-app:server:development"
        },
        "production": {
          "browserTarget": "openchallenges-app:build:production",
          "serverTarget": "openchallenges-app:server:production"
        }
      },
      "defaultConfiguration": "development"
    },
    "prerender": {
      "executor": "@nguniversal/builders:prerender",
      "options": {
        "routes": ["/"]
      },
      "configurations": {
        "development": {
          "browserTarget": "openchallenges-app:build:development",
          "serverTarget": "openchallenges-app:server:development"
        },
        "production": {
          "browserTarget": "openchallenges-app:build:production",
          "serverTarget": "openchallenges-app:server:production"
        }
      },
      "defaultConfiguration": "production"
    },
    "build-sitemap": {
      "executor": "nx:run-commands",
      "options": {
        "command": "node tools/generate-sitemap.js http://localhost:4200 apps/openchallenges/app/src/sitemap.xml"
      }
    }
  },
  "tags": ["type:app", "scope:client", "language:typescript"],
  "implicitDependencies": [
    "openchallenges-styles",
    "openchallenges-themes",
    "shared-typescript-assets"
  ]
}
