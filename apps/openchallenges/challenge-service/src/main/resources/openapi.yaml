openapi: 3.0.3
info:
  contact:
    name: Support
    url: https://github.com/Sage-Bionetworks/sage-monorepo
  description: "Discover, explore, and contribute to open biomedical challenges."
  license:
    name: Apache 2.0
    url: https://github.com/Sage-Bionetworks/sage-monorepo/blob/main/LICENSE.txt
  title: OpenChallenges Challenge API
  version: 1.0.0
  x-logo:
    url: https://dev.openchallenges.io/img/unsafe/logo/OpenChallenges-logo.png
servers:
- url: http://localhost/v1
tags:
- description: Operations about challenges.
  name: Challenge
  x-audience:
  - public
- description: Operations about challenge contributions.
  name: Challenge Contribution
  x-audience:
  - public
- description: Operations about challenge analytics.
  name: ChallengeAnalytics
  x-audience:
  - public
- description: Operations about challenge platforms.
  name: ChallengePlatform
  x-audience:
  - public
- description: Operations about EDAM concepts.
  name: EdamConcept
  x-audience:
  - public
paths:
  /challenges:
    get:
      description: List challenges
      operationId: listChallenges
      parameters:
      - description: The search query used to find challenges.
        explode: true
        in: query
        name: challengeSearchQuery
        required: false
        schema:
          $ref: '#/components/schemas/ChallengeSearchQuery'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChallengesPage'
          description: Success
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BasicError'
          description: Invalid request
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BasicError'
          description: The request cannot be fulfilled due to an unexpected server
            error
      summary: List challenges
      tags:
      - Challenge
      x-audience:
      - public
      x-accepts:
      - application/json
      - application/problem+json
      x-tags:
      - tag: Challenge
    post:
      description: Create a challenge with the specified details
      operationId: createChallenge
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChallengeCreateRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Challenge'
          description: Challenge created successfully
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BasicError'
          description: Invalid request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BasicError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BasicError'
          description: The user does not have the permission to perform this action
        "409":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BasicError'
          description: The request conflicts with current state of the target resource
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BasicError'
          description: The request cannot be fulfilled due to an unexpected server
            error
      security:
      - apiBearerAuth: []
      summary: Create a challenge
      tags:
      - Challenge
      x-audience:
      - public
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/problem+json
      x-tags:
      - tag: Challenge
  /challenges/{challengeId}:
    delete:
      description: Deletes a challenge by its unique ID.
      operationId: deleteChallenge
      parameters:
      - description: The unique identifier of the challenge.
        explode: false
        in: path
        name: challengeId
        required: true
        schema:
          $ref: '#/components/schemas/ChallengeId'
        style: simple
      responses:
        "204":
          description: Challenge successfully deleted
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BasicError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BasicError'
          description: The user does not have the permission to perform this action
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BasicError'
          description: The specified resource was not found
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BasicError'
          description: The request cannot be fulfilled due to an unexpected server
            error
      security:
      - apiBearerAuth: []
      summary: Delete a challenge
      tags:
      - Challenge
      x-audience:
      - public
      x-accepts:
      - application/problem+json
      x-tags:
      - tag: Challenge
    get:
      description: Returns the challenge specified
      operationId: getChallenge
      parameters:
      - description: The unique identifier of the challenge.
        explode: false
        in: path
        name: challengeId
        required: true
        schema:
          $ref: '#/components/schemas/ChallengeId'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Challenge'
          description: A challenge
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BasicError'
          description: The specified resource was not found
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BasicError'
          description: The request cannot be fulfilled due to an unexpected server
            error
      summary: Get a challenge
      tags:
      - Challenge
      x-audience:
      - public
      x-accepts:
      - application/json
      - application/problem+json
      x-tags:
      - tag: Challenge
    put:
      description: Updates an existing challenge.
      operationId: updateChallenge
      parameters:
      - description: The unique identifier of the challenge.
        explode: false
        in: path
        name: challengeId
        required: true
        schema:
          $ref: '#/components/schemas/ChallengeId'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChallengeUpdateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Challenge'
          description: Challenge successfully updated
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BasicError'
          description: Invalid request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BasicError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BasicError'
          description: The user does not have the permission to perform this action
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BasicError'
          description: The specified resource was not found
        "409":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BasicError'
          description: The request conflicts with current state of the target resource
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BasicError'
          description: The request cannot be fulfilled due to an unexpected server
            error
      security:
      - apiBearerAuth: []
      summary: Update an existing challenge
      tags:
      - Challenge
      x-audience:
      - public
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/problem+json
      x-tags:
      - tag: Challenge
  /challenges/{challengeId}/json-ld:
    get:
      description: Returns the challenge specified in JSON-LD format
      operationId: getChallengeJsonLd
      parameters:
      - description: The unique identifier of the challenge.
        explode: false
        in: path
        name: challengeId
        required: true
        schema:
          $ref: '#/components/schemas/ChallengeId'
        style: simple
      responses:
        "200":
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ChallengeJsonLd'
          description: A challenge
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BasicError'
          description: The specified resource was not found
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BasicError'
          description: The request cannot be fulfilled due to an unexpected server
            error
      summary: Get a challenge in JSON-LD format
      tags:
      - Challenge
      x-audience:
      - public
      x-accepts:
      - application/ld+json
      - application/problem+json
      x-tags:
      - tag: Challenge
  /challenges/{challengeId}/contributions:
    delete:
      description: "Deletes the associated contributions for a given challenge, identified\
        \ by its ID."
      operationId: deleteChallengeContributions
      parameters:
      - description: The unique identifier of the challenge.
        explode: false
        in: path
        name: challengeId
        required: true
        schema:
          $ref: '#/components/schemas/ChallengeId'
        style: simple
      responses:
        "204":
          description: Deletion successful
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BasicError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BasicError'
          description: The user does not have the permission to perform this action
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BasicError'
          description: The specified resource was not found
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BasicError'
          description: The request cannot be fulfilled due to an unexpected server
            error
      security:
      - apiBearerAuth: []
      summary: Delete the contributions for a specific challenge
      tags:
      - Challenge Contribution
      x-audience:
      - internal
      x-accepts:
      - application/problem+json
      x-tags:
      - tag: Challenge Contribution
    get:
      description: List challenge contributions
      operationId: listChallengeContributions
      parameters:
      - description: The unique identifier of the challenge.
        explode: false
        in: path
        name: challengeId
        required: true
        schema:
          $ref: '#/components/schemas/ChallengeId'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChallengeContributionsPage'
          description: Success
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BasicError'
          description: Invalid request
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BasicError'
          description: The request cannot be fulfilled due to an unexpected server
            error
      summary: List challenge contributions
      tags:
      - Challenge Contribution
      x-audience:
      - public
      x-accepts:
      - application/json
      - application/problem+json
      x-tags:
      - tag: Challenge Contribution
    post:
      description: |
        Creates a new contribution record associated with a challenge ID.
      operationId: createChallengeContribution
      parameters:
      - description: The unique identifier of the challenge.
        explode: false
        in: path
        name: challengeId
        required: true
        schema:
          $ref: '#/components/schemas/ChallengeId'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChallengeContributionCreateRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChallengeContribution'
          description: Contribution created successfully
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BasicError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BasicError'
          description: The user does not have the permission to perform this action
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BasicError'
          description: The specified resource was not found
        "409":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BasicError'
          description: The request conflicts with current state of the target resource
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BasicError'
          description: The request cannot be fulfilled due to an unexpected server
            error
      security:
      - apiBearerAuth: []
      summary: Create a new contribution for a challenge
      tags:
      - Challenge Contribution
      x-audience:
      - public
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/problem+json
      x-tags:
      - tag: Challenge Contribution
  /challenges/{challengeId}/contributions/{organizationId}/role/{role}:
    delete:
      description: Delete a specific challenge contribution.
      operationId: deleteChallengeContribution
      parameters:
      - description: The unique identifier of the challenge.
        explode: false
        in: path
        name: challengeId
        required: true
        schema:
          $ref: '#/components/schemas/ChallengeId'
        style: simple
      - description: The unique identifier of the organization.
        explode: false
        in: path
        name: organizationId
        required: true
        schema:
          $ref: '#/components/schemas/OrganizationId'
        style: simple
      - description: A challenge contribution role.
        explode: false
        in: path
        name: role
        required: true
        schema:
          $ref: '#/components/schemas/ChallengeContributionRole'
        style: simple
      responses:
        "204":
          description: Contribution deleted successfully
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BasicError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BasicError'
          description: The user does not have the permission to perform this action
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BasicError'
          description: The specified resource was not found
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BasicError'
          description: The request cannot be fulfilled due to an unexpected server
            error
      security:
      - apiBearerAuth: []
      summary: Delete a specific challenge contribution
      tags:
      - Challenge Contribution
      x-audience:
      - public
      x-accepts:
      - application/problem+json
      x-tags:
      - tag: Challenge Contribution
    get:
      description: |
        Retrieves a specific contribution record for a challenge, identified by its ID.
      operationId: getChallengeContribution
      parameters:
      - description: The unique identifier of the challenge.
        explode: false
        in: path
        name: challengeId
        required: true
        schema:
          $ref: '#/components/schemas/ChallengeId'
        style: simple
      - description: The unique identifier of the organization.
        explode: false
        in: path
        name: organizationId
        required: true
        schema:
          $ref: '#/components/schemas/OrganizationId'
        style: simple
      - description: A challenge contribution role.
        explode: false
        in: path
        name: role
        required: true
        schema:
          $ref: '#/components/schemas/ChallengeContributionRole'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChallengeContribution'
          description: Challenge contribution retrieved successfully
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BasicError'
          description: Invalid request
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BasicError'
          description: The specified resource was not found
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BasicError'
          description: The request cannot be fulfilled due to an unexpected server
            error
      summary: Get a specific challenge contribution
      tags:
      - Challenge Contribution
      x-audience:
      - public
      x-accepts:
      - application/json
      - application/problem+json
      x-tags:
      - tag: Challenge Contribution
  /challenge-analytics/challenges-per-year:
    get:
      description: Returns the number of challenges tracked per year
      operationId: getChallengesPerYear
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChallengesPerYear'
          description: An object
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BasicError'
          description: The request cannot be fulfilled due to an unexpected server
            error
      summary: Get the number of challenges tracked per year
      tags:
      - Challenge Analytics
      x-audience:
      - public
      x-accepts:
      - application/json
      - application/problem+json
      x-tags:
      - tag: Challenge Analytics
  /challenge-platforms:
    get:
      description: List challenge platforms
      operationId: listChallengePlatforms
      parameters:
      - description: The search query used to find challenge platforms.
        explode: true
        in: query
        name: challengePlatformSearchQuery
        required: false
        schema:
          $ref: '#/components/schemas/ChallengePlatformSearchQuery'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChallengePlatformsPage'
          description: Success
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BasicError'
          description: Invalid request
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BasicError'
          description: The request cannot be fulfilled due to an unexpected server
            error
      summary: List challenge platforms
      tags:
      - Challenge Platform
      x-audience:
      - public
      x-accepts:
      - application/json
      - application/problem+json
      x-tags:
      - tag: Challenge Platform
    post:
      description: Create a challenge platform with the specified ID
      operationId: createChallengePlatform
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChallengePlatformCreateRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChallengePlatform'
          description: Success
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BasicError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BasicError'
          description: The user does not have the permission to perform this action
        "409":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BasicError'
          description: The request conflicts with current state of the target resource
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BasicError'
          description: The request cannot be fulfilled due to an unexpected server
            error
      security:
      - apiBearerAuth: []
      summary: Create a challenge platform
      tags:
      - Challenge Platform
      x-audience:
      - public
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/problem+json
      x-tags:
      - tag: Challenge Platform
  /challenge-platforms/{challengePlatformId}:
    delete:
      description: |
        Deletes a challenge platform by its unique ID. This action is irreversible.
      operationId: deleteChallengePlatform
      parameters:
      - description: The unique identifier of the challenge platform.
        explode: false
        in: path
        name: challengePlatformId
        required: true
        schema:
          $ref: '#/components/schemas/ChallengePlatformId'
        style: simple
      responses:
        "204":
          description: Deletion successful
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BasicError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BasicError'
          description: The user does not have the permission to perform this action
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BasicError'
          description: The specified resource was not found
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BasicError'
          description: The request cannot be fulfilled due to an unexpected server
            error
      security:
      - apiBearerAuth: []
      summary: Delete a challenge platform
      tags:
      - Challenge Platform
      x-audience:
      - public
      x-accepts:
      - application/problem+json
      x-tags:
      - tag: Challenge Platform
    get:
      description: Returns the challenge platform identified by its unique ID
      operationId: getChallengePlatform
      parameters:
      - description: The unique identifier of the challenge platform.
        explode: false
        in: path
        name: challengePlatformId
        required: true
        schema:
          $ref: '#/components/schemas/ChallengePlatformId'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChallengePlatform'
          description: Success
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BasicError'
          description: The specified resource was not found
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BasicError'
          description: The request cannot be fulfilled due to an unexpected server
            error
      summary: Get a challenge platform
      tags:
      - Challenge Platform
      x-audience:
      - public
      x-accepts:
      - application/json
      - application/problem+json
      x-tags:
      - tag: Challenge Platform
    put:
      description: |
        Updates an existing challenge platform.
      operationId: updateChallengePlatform
      parameters:
      - description: The unique identifier of the challenge platform.
        explode: false
        in: path
        name: challengePlatformId
        required: true
        schema:
          $ref: '#/components/schemas/ChallengePlatformId'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChallengePlatformUpdateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChallengePlatform'
          description: Challange platform updated successfully
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BasicError'
          description: Invalid request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BasicError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BasicError'
          description: The user does not have the permission to perform this action
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BasicError'
          description: The specified resource was not found
        "409":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BasicError'
          description: The request conflicts with current state of the target resource
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BasicError'
          description: The request cannot be fulfilled due to an unexpected server
            error
      security:
      - apiBearerAuth: []
      summary: Update an existing challenge platform
      tags:
      - Challenge Platform
      x-audience:
      - public
      x-content-type: application/json
      x-accepts:
      - application/json
      - application/problem+json
      x-tags:
      - tag: Challenge Platform
  /edam-concepts:
    get:
      description: List EDAM concepts
      operationId: listEdamConcepts
      parameters:
      - description: The search query used to find EDAM concepts.
        explode: true
        in: query
        name: edamConceptSearchQuery
        required: false
        schema:
          $ref: '#/components/schemas/EdamConceptSearchQuery'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EdamConceptsPage'
          description: Success
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BasicError'
          description: Invalid request
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BasicError'
          description: The request cannot be fulfilled due to an unexpected server
            error
      summary: List EDAM concepts
      tags:
      - Edam Concept
      x-audience:
      - public
      x-accepts:
      - application/json
      - application/problem+json
      x-tags:
      - tag: Edam Concept
components:
  parameters:
    challengeSearchQuery:
      description: The search query used to find challenges.
      explode: true
      in: query
      name: challengeSearchQuery
      required: false
      schema:
        $ref: '#/components/schemas/ChallengeSearchQuery'
      style: form
    challengeId:
      description: The unique identifier of the challenge.
      explode: false
      in: path
      name: challengeId
      required: true
      schema:
        $ref: '#/components/schemas/ChallengeId'
      style: simple
    organizationId:
      description: The unique identifier of the organization.
      explode: false
      in: path
      name: organizationId
      required: true
      schema:
        $ref: '#/components/schemas/OrganizationId'
      style: simple
    challengeContributionRole:
      description: A challenge contribution role.
      explode: false
      in: path
      name: role
      required: true
      schema:
        $ref: '#/components/schemas/ChallengeContributionRole'
      style: simple
    challengePlatformSearchQuery:
      description: The search query used to find challenge platforms.
      explode: true
      in: query
      name: challengePlatformSearchQuery
      required: false
      schema:
        $ref: '#/components/schemas/ChallengePlatformSearchQuery'
      style: form
    challengePlatformId:
      description: The unique identifier of the challenge platform.
      explode: false
      in: path
      name: challengePlatformId
      required: true
      schema:
        $ref: '#/components/schemas/ChallengePlatformId'
      style: simple
    edamConceptSearchQuery:
      description: The search query used to find EDAM concepts.
      explode: true
      in: query
      name: edamConceptSearchQuery
      required: false
      schema:
        $ref: '#/components/schemas/EdamConceptSearchQuery'
      style: form
  responses:
    BadRequest:
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/BasicError'
      description: Invalid request
    InternalServerError:
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/BasicError'
      description: The request cannot be fulfilled due to an unexpected server error
    Unauthorized:
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/BasicError'
      description: Unauthorized
    Forbidden:
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/BasicError'
      description: The user does not have the permission to perform this action
    Conflict:
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/BasicError'
      description: The request conflicts with current state of the target resource
    NotFound:
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/BasicError'
      description: The specified resource was not found
  schemas:
    ChallengeSort:
      default: relevance
      description: What to sort results by.
      enum:
      - created
      - random
      - relevance
      - starred
      - start_date
      - end_date
      type: string
    ChallengeDirection:
      description: The direction to sort the results by.
      enum:
      - asc
      - desc
      nullable: true
      type: string
    ChallengeIncentive:
      description: The incentive type of the challenge.
      enum:
      - monetary
      - publication
      - speaking_engagement
      - other
      example: publication
      type: string
    ChallengePlatformSlug:
      description: The slug of the challenge platform.
      example: example-challenge-platform
      maxLength: 30
      minLength: 3
      pattern: "^[a-z0-9]+(?:-[a-z0-9]+)*$"
      type: string
    OrganizationId:
      description: The unique identifier of an organization
      example: 1
      format: int64
      type: integer
    ChallengeStatus:
      description: The status of the challenge.
      enum:
      - upcoming
      - active
      - completed
      example: active
      type: string
    ChallengeSubmissionType:
      description: The submission type of the challenge.
      enum:
      - container_image
      - prediction_file
      - notebook
      - mlcube
      - other
      example: container_image
      type: string
    EdamConceptId:
      description: The unique identifier of the EDAM concept.
      example: 1
      format: int64
      type: integer
    ChallengeCategory:
      description: The category of the challenge.
      enum:
      - featured
      - benchmark
      - hackathon
      - starting_soon
      - ending_soon
      - recently_started
      - recently_ended
      example: featured
      type: string
    ChallengeSearchQuery:
      description: A challenge search query.
      properties:
        pageNumber:
          default: 0
          description: The page number.
          format: int32
          minimum: 0
          type: integer
        pageSize:
          default: 100
          description: The number of items in a single page.
          format: int32
          minimum: 1
          type: integer
        sort:
          $ref: '#/components/schemas/ChallengeSort'
        sortSeed:
          description: The seed that initializes the random sorter.
          format: int32
          maximum: 2147483647
          minimum: 0
          nullable: true
          type: integer
        direction:
          $ref: '#/components/schemas/ChallengeDirection'
        incentives:
          description: An array of challenge incentive types used to filter the results.
          items:
            $ref: '#/components/schemas/ChallengeIncentive'
          type: array
        minStartDate:
          description: Keep the challenges that start at this date or later.
          example: 2017-07-21
          format: date
          nullable: true
          type: string
        maxStartDate:
          description: Keep the challenges that start at this date or sooner.
          example: 2017-07-21
          format: date
          nullable: true
          type: string
        platforms:
          description: An array of challenge platform ids used to filter the results.
          items:
            $ref: '#/components/schemas/ChallengePlatformSlug'
          type: array
        organizations:
          description: An array of organization ids used to filter the results.
          items:
            $ref: '#/components/schemas/OrganizationId'
          type: array
        status:
          description: An array of challenge status used to filter the results.
          items:
            $ref: '#/components/schemas/ChallengeStatus'
          type: array
        submissionTypes:
          description: An array of challenge submission types used to filter the results.
          items:
            $ref: '#/components/schemas/ChallengeSubmissionType'
          type: array
        inputDataTypes:
          description: An array of EDAM concept ID used to filter the results.
          items:
            $ref: '#/components/schemas/EdamConceptId'
          type: array
        operations:
          description: An array of EDAM concept ID used to filter the results.
          items:
            $ref: '#/components/schemas/EdamConceptId'
          type: array
        categories:
          description: The array of challenge categories used to filter the results.
          items:
            $ref: '#/components/schemas/ChallengeCategory'
          type: array
        searchTerms:
          description: A string of search terms used to filter the results.
          example: dream challenge
          type: string
      type: object
    PageMetadata:
      description: The metadata of a page.
      properties:
        number:
          description: The page number.
          example: 99
          format: int32
          type: integer
        size:
          description: The number of items in a single page.
          example: 99
          format: int32
          type: integer
        totalElements:
          description: Total number of elements in the result set.
          example: 99
          format: int64
          type: integer
        totalPages:
          description: Total number of pages in the result set.
          example: 99
          format: int32
          type: integer
        hasNext:
          description: Returns if there is a next page.
          example: true
          type: boolean
        hasPrevious:
          description: Returns if there is a previous page.
          example: true
          type: boolean
      required:
      - hasNext
      - hasPrevious
      - number
      - size
      - totalElements
      - totalPages
      type: object
    ChallengeId:
      description: The unique identifier of the challenge.
      example: 1
      format: int64
      type: integer
    ChallengeSlug:
      description: The unique slug of the challenge.
      example: awesome-challenge
      maxLength: 255
      minLength: 3
      pattern: "^[a-z0-9]+(?:-[a-z0-9]+)*$"
      type: string
    ChallengeName:
      description: The name of the challenge.
      maxLength: 255
      minLength: 3
      type: string
    ChallengeHeadline:
      description: The headline of the challenge.
      example: Example challenge headline
      maxLength: 80
      minLength: 0
      nullable: true
      type: string
    ChallengeDescription:
      description: The description of the challenge.
      example: This is an example description of the challenge.
      maxLength: 1000
      minLength: 0
      type: string
    ChallengeDoi:
      description: The DOI of the challenge.
      example: https://doi.org/123/abc
      format: url
      maxLength: 120
      nullable: true
      type: string
    ChallengePlatformId:
      description: The unique identifier of a challenge platform.
      example: 1
      format: int64
      type: integer
    ChallengePlatformName:
      description: The display name of the challenge platform.
      example: Example Challenge Platform
      maxLength: 50
      minLength: 3
      type: string
    SimpleChallengePlatform:
      description: A simple challenge platform.
      example:
        name: Example Challenge Platform
        id: 1
        slug: example-challenge-platform
      nullable: true
      properties:
        id:
          description: The unique identifier of a challenge platform.
          example: 1
          format: int64
          type: integer
        slug:
          description: The slug of the challenge platform.
          example: example-challenge-platform
          maxLength: 30
          minLength: 3
          pattern: "^[a-z0-9]+(?:-[a-z0-9]+)*$"
          type: string
        name:
          description: The display name of the challenge platform.
          example: Example Challenge Platform
          maxLength: 50
          minLength: 3
          type: string
      required:
      - id
      - name
      - slug
      type: object
    Url:
      description: A URL to the website or image.
      example: https://openchallenges.io
      format: url
      maxLength: 500
      nullable: true
      type: string
    EdamConcept:
      description: The EDAM concept.
      example:
        classId: http://edamontology.org/data_0850
        preferredLabel: Sequence set
        id: 1
      nullable: true
      properties:
        id:
          description: The unique identifier of the EDAM concept.
          example: 1
          format: int64
          type: integer
        classId:
          example: http://edamontology.org/data_0850
          maxLength: 60
          type: string
        preferredLabel:
          example: Sequence set
          maxLength: 80
          type: string
      required:
      - classId
      - id
      - preferredLabel
      type: object
    ChallengeStartDate:
      description: The start date of the challenge.
      example: 2017-07-21
      format: date
      nullable: true
      type: string
    ChallengeEndDate:
      description: The end date of the challenge.
      example: 2017-07-21
      format: date
      nullable: true
      type: string
    CreatedDateTime:
      description: Datetime when the object was added to the database.
      example: 2022-07-04T22:19:11Z
      format: date-time
      type: string
    UpdatedDateTime:
      description: Datetime when the object was last modified in the database.
      example: 2022-07-04T22:19:11Z
      format: date-time
      type: string
    Challenge:
      description: A challenge
      example:
        avatarUrl: https://openchallenges.io
        endDate: 2017-07-21
        description: This is an example description of the challenge.
        platform:
          name: Example Challenge Platform
          id: 1
          slug: example-challenge-platform
        starredCount: 100
        createdAt: 2022-07-04T22:19:11Z
        incentives:
        - publication
        - publication
        submissionTypes:
        - container_image
        - container_image
        websiteUrl: https://openchallenges.io
        name: name
        id: 1
        categories:
        - featured
        - featured
        headline: Example challenge headline
        operation:
          classId: http://edamontology.org/data_0850
          preferredLabel: Sequence set
          id: 1
        slug: awesome-challenge
        startDate: 2017-07-21
        doi: https://doi.org/123/abc
        status: active
        inputDataTypes:
        - classId: http://edamontology.org/data_0850
          preferredLabel: Sequence set
          id: 1
        - classId: http://edamontology.org/data_0850
          preferredLabel: Sequence set
          id: 1
        updatedAt: 2022-07-04T22:19:11Z
      properties:
        id:
          description: The unique identifier of the challenge.
          example: 1
          format: int64
          type: integer
        slug:
          description: The unique slug of the challenge.
          example: awesome-challenge
          maxLength: 255
          minLength: 3
          pattern: "^[a-z0-9]+(?:-[a-z0-9]+)*$"
          type: string
        name:
          description: The name of the challenge.
          maxLength: 255
          minLength: 3
          type: string
        headline:
          description: The headline of the challenge.
          example: Example challenge headline
          maxLength: 80
          minLength: 0
          nullable: true
          type: string
        description:
          description: The description of the challenge.
          example: This is an example description of the challenge.
          maxLength: 1000
          minLength: 0
          type: string
        doi:
          description: The DOI of the challenge.
          example: https://doi.org/123/abc
          format: url
          maxLength: 120
          nullable: true
          type: string
        status:
          $ref: '#/components/schemas/ChallengeStatus'
        platform:
          $ref: '#/components/schemas/SimpleChallengePlatform'
        websiteUrl:
          description: A URL to the website or image.
          example: https://openchallenges.io
          format: url
          maxLength: 500
          nullable: true
          type: string
        avatarUrl:
          description: A URL to the website or image.
          example: https://openchallenges.io
          format: url
          maxLength: 500
          nullable: true
          type: string
        incentives:
          items:
            $ref: '#/components/schemas/ChallengeIncentive'
          type: array
        submissionTypes:
          items:
            $ref: '#/components/schemas/ChallengeSubmissionType'
          type: array
        inputDataTypes:
          items:
            $ref: '#/components/schemas/EdamConcept'
          type: array
        categories:
          items:
            $ref: '#/components/schemas/ChallengeCategory'
          type: array
        startDate:
          description: The start date of the challenge.
          example: 2017-07-21
          format: date
          nullable: true
          type: string
        endDate:
          description: The end date of the challenge.
          example: 2017-07-21
          format: date
          nullable: true
          type: string
        starredCount:
          default: 0
          description: The number of times the challenge has been starred by users.
          example: 100
          minimum: 0
          type: integer
        operation:
          $ref: '#/components/schemas/EdamConcept'
        createdAt:
          description: Datetime when the object was added to the database.
          example: 2022-07-04T22:19:11Z
          format: date-time
          type: string
        updatedAt:
          description: Datetime when the object was last modified in the database.
          example: 2022-07-04T22:19:11Z
          format: date-time
          type: string
      required:
      - categories
      - createdAt
      - description
      - id
      - incentives
      - name
      - slug
      - starredCount
      - status
      - submissionTypes
      - updatedAt
      type: object
    ChallengesPage:
      allOf:
      - $ref: '#/components/schemas/PageMetadata'
      - properties:
          challenges:
            description: A list of challenges.
            items:
              $ref: '#/components/schemas/Challenge'
            type: array
        required:
        - challenges
        type: object
      description: A page of challenges.
      example:
        number: 99
        size: 99
        challenges:
        - avatarUrl: https://openchallenges.io
          endDate: 2017-07-21
          description: This is an example description of the challenge.
          platform:
            name: Example Challenge Platform
            id: 1
            slug: example-challenge-platform
          starredCount: 100
          createdAt: 2022-07-04T22:19:11Z
          incentives:
          - publication
          - publication
          submissionTypes:
          - container_image
          - container_image
          websiteUrl: https://openchallenges.io
          name: name
          id: 1
          categories:
          - featured
          - featured
          headline: Example challenge headline
          operation:
            classId: http://edamontology.org/data_0850
            preferredLabel: Sequence set
            id: 1
          slug: awesome-challenge
          startDate: 2017-07-21
          doi: https://doi.org/123/abc
          status: active
          inputDataTypes:
          - classId: http://edamontology.org/data_0850
            preferredLabel: Sequence set
            id: 1
          - classId: http://edamontology.org/data_0850
            preferredLabel: Sequence set
            id: 1
          updatedAt: 2022-07-04T22:19:11Z
        - avatarUrl: https://openchallenges.io
          endDate: 2017-07-21
          description: This is an example description of the challenge.
          platform:
            name: Example Challenge Platform
            id: 1
            slug: example-challenge-platform
          starredCount: 100
          createdAt: 2022-07-04T22:19:11Z
          incentives:
          - publication
          - publication
          submissionTypes:
          - container_image
          - container_image
          websiteUrl: https://openchallenges.io
          name: name
          id: 1
          categories:
          - featured
          - featured
          headline: Example challenge headline
          operation:
            classId: http://edamontology.org/data_0850
            preferredLabel: Sequence set
            id: 1
          slug: awesome-challenge
          startDate: 2017-07-21
          doi: https://doi.org/123/abc
          status: active
          inputDataTypes:
          - classId: http://edamontology.org/data_0850
            preferredLabel: Sequence set
            id: 1
          - classId: http://edamontology.org/data_0850
            preferredLabel: Sequence set
            id: 1
          updatedAt: 2022-07-04T22:19:11Z
        totalPages: 99
        hasPrevious: true
        hasNext: true
        totalElements: 99
      type: object
      x-java-class-annotations:
      - '@lombok.Builder'
    BasicError:
      description: Problem details (tools.ietf.org/html/rfc7807)
      properties:
        title:
          description: A human readable documentation for the problem type
          type: string
        status:
          description: The HTTP status code
          type: integer
        detail:
          description: A human readable explanation specific to this occurrence of
            the problem
          type: string
        type:
          description: An absolute URI that identifies the problem type
          type: string
      required:
      - status
      - title
      type: object
      x-java-class-annotations:
      - '@lombok.AllArgsConstructor'
      - '@lombok.Builder'
    ChallengeCreateRequest:
      description: The information used to create a challenge
      properties:
        name:
          description: The name of the challenge.
          maxLength: 255
          minLength: 3
          type: string
        headline:
          description: The headline of the challenge.
          example: Example challenge headline
          maxLength: 80
          minLength: 0
          nullable: true
          type: string
        description:
          description: The description of the challenge.
          example: This is an example description of the challenge.
          maxLength: 1000
          minLength: 0
          type: string
        status:
          $ref: '#/components/schemas/ChallengeStatus'
      required:
      - description
      - name
      - status
      type: object
    ChallengeUpdateRequest:
      description: The information required to update a challenge
      properties:
        slug:
          description: The unique slug of the challenge.
          example: awesome-challenge
          maxLength: 255
          minLength: 3
          pattern: "^[a-z0-9]+(?:-[a-z0-9]+)*$"
          type: string
        name:
          description: The name of the challenge.
          maxLength: 255
          minLength: 3
          type: string
        headline:
          description: The headline of the challenge.
          example: Example challenge headline
          maxLength: 80
          minLength: 0
          nullable: true
          type: string
        description:
          description: The description of the challenge.
          example: This is an example description of the challenge.
          maxLength: 1000
          minLength: 0
          type: string
        doi:
          description: The DOI of the challenge.
          example: https://doi.org/123/abc
          format: url
          maxLength: 120
          nullable: true
          type: string
        status:
          $ref: '#/components/schemas/ChallengeStatus'
        websiteUrl:
          description: A URL to the website or image.
          example: https://openchallenges.io
          format: url
          maxLength: 500
          nullable: true
          type: string
        avatarUrl:
          description: A URL to the website or image.
          example: https://openchallenges.io
          format: url
          maxLength: 500
          nullable: true
          type: string
      required:
      - avatarUrl
      - description
      - doi
      - headline
      - name
      - slug
      - status
      - websiteUrl
      type: object
    ChallengeJsonLd:
      allOf:
      - $ref: '#/components/schemas/Challenge'
      - properties:
          '@context':
            example: https://schema.org
            type: string
          '@id':
            example: https://openchallenges.io/api/v1/challenges/1
            type: string
          '@type':
            example: Challenge
            type: string
        required:
        - '@context'
        - '@id'
        - '@type'
        type: object
      description: A challenge
      type: object
    ChallengeContributionId:
      description: The unique identifier of a challenge contribution
      example: 1
      format: int64
      type: integer
    ChallengeContributionRole:
      description: The nature of a challenge contribution.
      enum:
      - challenge_organizer
      - data_contributor
      - sponsor
      example: challenge_organizer
      type: string
    ChallengeContribution:
      description: A challenge contribution.
      example:
        organizationId: 1
        challengeId: 1
        role: challenge_organizer
        id: 1
      properties:
        id:
          description: The unique identifier of a challenge contribution
          example: 1
          format: int64
          type: integer
        challengeId:
          description: The unique identifier of the challenge.
          example: 1
          format: int64
          type: integer
        organizationId:
          description: The unique identifier of an organization
          example: 1
          format: int64
          type: integer
        role:
          $ref: '#/components/schemas/ChallengeContributionRole'
      required:
      - challengeId
      - id
      - organizationId
      - role
      type: object
    ChallengeContributionsPage:
      allOf:
      - $ref: '#/components/schemas/PageMetadata'
      - properties:
          challengeContributions:
            description: A list of challenge contributions.
            items:
              $ref: '#/components/schemas/ChallengeContribution'
            type: array
        required:
        - challengeContributions
        type: object
      description: A page of challenge challenge contributions.
      example:
        number: 99
        size: 99
        challengeContributions:
        - organizationId: 1
          challengeId: 1
          role: challenge_organizer
          id: 1
        - organizationId: 1
          challengeId: 1
          role: challenge_organizer
          id: 1
        totalPages: 99
        hasPrevious: true
        hasNext: true
        totalElements: 99
      type: object
      x-java-class-annotations:
      - '@lombok.Builder'
    ChallengeContributionCreateRequest:
      description: A challenge contribution to be created.
      properties:
        organizationId:
          description: The unique identifier of an organization
          example: 1
          format: int64
          type: integer
        role:
          $ref: '#/components/schemas/ChallengeContributionRole'
      required:
      - organizationId
      - role
      type: object
    ChallengesPerYear:
      description: An object
      example:
        undatedChallengeCount: 0
        challengeCounts:
        - 0
        - 0
        years:
        - years
        - years
      properties:
        years:
          items:
            type: string
          type: array
        challengeCounts:
          items:
            type: integer
          type: array
        undatedChallengeCount:
          default: 0
          example: 0
          minimum: 0
          type: integer
      required:
      - challengeCounts
      - undatedChallengeCount
      - years
      type: object
      x-java-class-annotations:
      - '@lombok.Builder'
    ChallengePlatformSort:
      default: relevance
      description: What to sort results by.
      enum:
      - name
      - relevance
      type: string
    ChallengePlatformDirection:
      description: The direction to sort the results by.
      enum:
      - asc
      - desc
      nullable: true
      type: string
    ChallengePlatformSearchQuery:
      description: A challenge platform search query.
      properties:
        pageNumber:
          default: 0
          description: The page number.
          format: int32
          minimum: 0
          type: integer
        pageSize:
          default: 100
          description: The number of items in a single page.
          format: int32
          minimum: 1
          type: integer
        sort:
          $ref: '#/components/schemas/ChallengePlatformSort'
        direction:
          $ref: '#/components/schemas/ChallengePlatformDirection'
        slugs:
          description: An array of challenge platform slugs used to filter the results.
          items:
            $ref: '#/components/schemas/ChallengePlatformSlug'
          type: array
        searchTerms:
          description: A string of search terms used to filter the results.
          example: synapse
          type: string
      type: object
    AvatarKey:
      description: The avatar key
      example: logo/dream.png
      type: string
    ChallengePlatform:
      description: A challenge platform
      example:
        avatarKey: logo/dream.png
        websiteUrl: https://openchallenges.io
        name: Example Challenge Platform
        id: 1
        slug: example-challenge-platform
      properties:
        id:
          description: The unique identifier of a challenge platform.
          example: 1
          format: int64
          type: integer
        slug:
          description: The slug of the challenge platform.
          example: example-challenge-platform
          maxLength: 30
          minLength: 3
          pattern: "^[a-z0-9]+(?:-[a-z0-9]+)*$"
          type: string
        name:
          description: The display name of the challenge platform.
          example: Example Challenge Platform
          maxLength: 50
          minLength: 3
          type: string
        avatarKey:
          description: The avatar key
          example: logo/dream.png
          type: string
        websiteUrl:
          description: A URL to the website or image.
          example: https://openchallenges.io
          format: url
          maxLength: 500
          nullable: true
          type: string
      required:
      - avatarKey
      - id
      - name
      - slug
      - websiteUrl
      type: object
    ChallengePlatformsPage:
      allOf:
      - $ref: '#/components/schemas/PageMetadata'
      - properties:
          challengePlatforms:
            description: A list of challenge platforms.
            items:
              $ref: '#/components/schemas/ChallengePlatform'
            type: array
        required:
        - challengePlatforms
        type: object
      description: A page of challenge platforms.
      example:
        number: 99
        size: 99
        challengePlatforms:
        - avatarKey: logo/dream.png
          websiteUrl: https://openchallenges.io
          name: Example Challenge Platform
          id: 1
          slug: example-challenge-platform
        - avatarKey: logo/dream.png
          websiteUrl: https://openchallenges.io
          name: Example Challenge Platform
          id: 1
          slug: example-challenge-platform
        totalPages: 99
        hasPrevious: true
        hasNext: true
        totalElements: 99
      type: object
      x-java-class-annotations:
      - '@lombok.Builder'
    ChallengePlatformCreateRequest:
      description: The information used to create a challenge platform
      properties:
        slug:
          description: The slug of the challenge platform.
          example: example-challenge-platform
          maxLength: 30
          minLength: 3
          pattern: "^[a-z0-9]+(?:-[a-z0-9]+)*$"
          type: string
        name:
          description: The display name of the challenge platform.
          example: Example Challenge Platform
          maxLength: 50
          minLength: 3
          type: string
        avatarKey:
          description: The avatar key
          example: logo/dream.png
          type: string
        websiteUrl:
          description: A URL to the website or image.
          example: https://openchallenges.io
          format: url
          maxLength: 500
          nullable: true
          type: string
      required:
      - avatarKey
      - name
      - slug
      - websiteUrl
      type: object
    ChallengePlatformUpdateRequest:
      description: A challenge platform update request.
      properties:
        slug:
          description: The slug of the challenge platform.
          example: example-challenge-platform
          maxLength: 30
          minLength: 3
          pattern: "^[a-z0-9]+(?:-[a-z0-9]+)*$"
          type: string
        name:
          description: The display name of the challenge platform.
          example: Example Challenge Platform
          maxLength: 50
          minLength: 3
          type: string
        avatarKey:
          description: The avatar key
          example: logo/dream.png
          type: string
        websiteUrl:
          description: A URL to the website or image.
          example: https://openchallenges.io
          format: url
          maxLength: 500
          nullable: true
          type: string
      required:
      - avatarKey
      - name
      - slug
      - websiteUrl
      type: object
    EdamConceptSort:
      default: relevance
      description: What to sort results by.
      enum:
      - preferred_label
      - relevance
      type: string
    EdamConceptDirection:
      description: The direction to sort the results by.
      enum:
      - asc
      - desc
      nullable: true
      type: string
    EdamSection:
      description: The EDAM section (sub-ontology).
      enum:
      - data
      - format
      - identifier
      - operation
      - topic
      example: data
      type: string
    EdamConceptSearchQuery:
      description: An EDAM concept search query.
      properties:
        pageNumber:
          default: 0
          description: The page number.
          format: int32
          minimum: 0
          type: integer
        pageSize:
          default: 100
          description: The number of items in a single page.
          format: int32
          minimum: 1
          type: integer
        sort:
          $ref: '#/components/schemas/EdamConceptSort'
        direction:
          $ref: '#/components/schemas/EdamConceptDirection'
        ids:
          description: An array of EDAM concept ids used to filter the results.
          items:
            $ref: '#/components/schemas/EdamConceptId'
          type: array
        searchTerms:
          description: A string of search terms used to filter the results.
          example: sequence image
          type: string
        sections:
          description: An array of EDAM sections (sub-ontologies) used to filter the
            results.
          items:
            $ref: '#/components/schemas/EdamSection'
          type: array
      type: object
    EdamConceptsPage:
      allOf:
      - $ref: '#/components/schemas/PageMetadata'
      - properties:
          edamConcepts:
            description: A list of EDAM concepts.
            items:
              $ref: '#/components/schemas/EdamConcept'
            type: array
        required:
        - edamConcepts
        type: object
      description: A page of EDAM concepts.
      example:
        number: 99
        size: 99
        totalPages: 99
        hasPrevious: true
        hasNext: true
        edamConcepts:
        - classId: http://edamontology.org/data_0850
          preferredLabel: Sequence set
          id: 1
        - classId: http://edamontology.org/data_0850
          preferredLabel: Sequence set
          id: 1
        totalElements: 99
      type: object
      x-java-class-annotations:
      - '@lombok.Builder'
  securitySchemes:
    apiBearerAuth:
      bearerFormat: api_key
      description: API key obtained from /auth/login endpoint
      scheme: bearer
      type: http
