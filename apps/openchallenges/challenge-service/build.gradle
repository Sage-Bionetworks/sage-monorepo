buildscript {
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath "org.flywaydb:flyway-mysql:${flywaydbVersion}"
  }
}

plugins {
  id 'com.diffplug.spotless' version "${spotlessVersion}"
  id 'java'
  id 'org.springframework.boot' version "${springBootVersion}"
  id "io.spring.dependency-management" version "${springDependencyManagementVersion}"
  id "org.flywaydb.flyway" version "${flywaydbVersion}"
}

repositories {
  mavenCentral()
  mavenLocal()
}

dependencies {
  implementation "org.hibernate.search:hibernate-search-mapper-orm:${hibernateSearchVersion}"
  implementation "org.hibernate.search:hibernate-search-backend-elasticsearch:${hibernateSearchVersion}"

  annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

  compileOnly "org.projectlombok:lombok:${lombokVersion}"
  implementation 'com.google.code.findbugs:jsr305:3.0.2'
  implementation 'org.openapitools:jackson-databind-nullable:0.2.3'
  implementation 'org.springdoc:springdoc-openapi-ui:1.6.12'
  implementation "com.fasterxml.jackson.core:jackson-databind:${fasterxmlVersion}"
  implementation "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:${fasterxmlVersion}"
  implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${fasterxmlVersion}"
  implementation "org.flywaydb:flyway-core:${flywaydbVersion}"
  implementation "org.flywaydb:flyway-mysql:${flywaydbVersion}"
  implementation "org.keycloak:keycloak-admin-client:${keycloakVersion}"
  implementation "org.keycloak:keycloak-spring-boot-starter:${keycloakVersion}"
  implementation "org.sagebionetworks:util:${openchallengesVersion}"

  implementation 'org.springframework.boot:spring-boot-starter-amqp:2.7.7'

  implementation "org.springframework.boot:spring-boot-devtools:${springBootVersion}"
  // developmentOnly 'org.springframework.boot:spring-boot-devtools'

  implementation "org.springframework.boot:spring-boot-starter-actuator:${springBootVersion}"
  implementation "org.springframework.boot:spring-boot-starter-data-jpa:${springBootVersion}"
  implementation "org.springframework.boot:spring-boot-starter-security:${springBootVersion}"
  implementation "org.springframework.boot:spring-boot-starter-validation:${springBootVersion}"
  implementation "org.springframework.boot:spring-boot-starter-web:${springBootVersion}"
  implementation "org.springframework.cloud:spring-cloud-starter-netflix-eureka-client:${springCloudVersion}"
  implementation "org.springframework.data:spring-data-commons:${springDataVersion}"
  runtimeOnly 'mysql:mysql-connector-java:8.0.30'
  testImplementation "org.springframework.boot:spring-boot-starter-test:${springBootVersion}"

  // Enable distributed tracing
  implementation "org.springframework.cloud:spring-cloud-starter-sleuth:${springCloudVersion}"
  implementation "org.springframework.cloud:spring-cloud-sleuth-zipkin:${springCloudVersion}"
}

group = 'org.sagebionetworks.openchallenges'
version = '0.0.1-SNAPSHOT'

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(17)
  }
}

tasks.withType(JavaCompile) {
  options.encoding = 'UTF-8'
}

bootBuildImage {
  imageName = 'sagebionetworks/openchallenges-challenge-service:latest'
}

spotless {
  // format 'misc', {
  //   target '*.gradle', '*.md', '.gitignore'

  //   trimTrailingWhitespace()
  //   indentWithSpaces(2)
  //   endWithNewline()
  // }

  java {
    target 'src/*/java/**/*.java'

    importOrder()
    removeUnusedImports()
    googleJavaFormat()
  }
}

flyway {
  url = 'jdbc:mysql://openchallenges-mariadb:3306/challenge'
  user = 'maria'
  password = 'changeme'
  // cleanDisabled = false
  // schemas = ['schema1', 'schema2', 'schema3']
  // placeholders = [
  //   'keyABC': 'valueXYZ',
  //   'otherplaceholder': 'value123'
  // ]
}

