# Build in a container with Oracle GraalVM Native Image and MUSL
FROM container-registry.oracle.com/graalvm/native-image:21-muslib AS nativebuild
WORKDIR /build

# Install UPX
ARG UPX_VERSION=4.2.2
ARG UPX_ARCHIVE=upx-${UPX_VERSION}-amd64_linux.tar.xz
RUN microdnf -y install wget xz unzip findutils && \
    wget -q https://github.com/upx/upx/releases/download/v${UPX_VERSION}/${UPX_ARCHIVE} && \
    tar -xJf ${UPX_ARCHIVE} && \
    rm -rf ${UPX_ARCHIVE} && \
    mv upx-${UPX_VERSION}-amd64_linux/upx . && \
    rm -rf upx-${UPX_VERSION}-amd64_linux

# Install Gradle
ARG GRADLE_VERSION=8.14
ARG GRADLE_ARCHIVE=gradle-${GRADLE_VERSION}-bin.zip
RUN wget -q https://services.gradle.org/distributions/${GRADLE_ARCHIVE} && \
    unzip ${GRADLE_ARCHIVE} && \
    rm -f ${GRADLE_ARCHIVE}

ENV PATH="/build/gradle-${GRADLE_VERSION}/bin:$PATH"

# Prepare application
COPY gradle gradle
COPY build.gradle* gradle* settings.gradle* ./
COPY src src
# RUN gradle clean build --no-daemon
RUN gradle clean nativeCompile --no-daemon

# Build a native executable with native-image
# RUN native-image -Os --static --libc=musl -jar build/libs/*-all.jar -o notes
# RUN ls -lh notes

# Compress the executable with UPX
RUN ./upx --lzma --best -o openchallenges-mcp-server.upx build/native/nativeCompile/openchallenges-mcp-server
RUN ls -lh openchallenges-mcp-server.upx

FROM busybox:1.36.1 AS busybox

# Copy the compressed executable into a scratch container
FROM scratch
COPY --from=busybox /tmp /tmp
COPY --from=nativebuild /build/openchallenges-mcp-server.upx /openchallenges-mcp-server.upx
# COPY static /static
ENTRYPOINT ["/openchallenges-mcp-server.upx"]