openapi: 3.0.3
info:
  contact:
    name: Support
    url: https://github.com/Sage-Bionetworks/sage-monorepo
  license:
    name: Apache 2.0
    url: https://github.com/Sage-Bionetworks/sage-monorepo
  title: Challenge Organization API
  version: 1.0.0
  x-logo:
    url: https://Sage-Bionetworks.github.io/rocc-schemas/logo.png
servers:
  - url: http://localhost/v1
tags:
  - description: Operations about organizations
    name: Organization
paths:
  /organizations:
    get:
      description: Returns the organizations
      operationId: listOrganizations
      parameters:
        - description: The page number
          explode: true
          in: query
          name: pageNumber
          required: false
          schema:
            default: 0
            format: int32
            minimum: 0
            type: integer
          style: form
        - description: The number of items in a single page
          explode: true
          in: query
          name: pageSize
          required: false
          schema:
            default: 100
            format: int32
            minimum: 1
            type: integer
          style: form
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationsPage'
          description: Success
        '400':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BasicError'
          description: Invalid request
        '500':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BasicError'
          description: The request cannot be fulfilled due to an unexpected server
            error
      summary: Get all organizations
      tags:
        - Organization
      x-accepts: application/json
      x-tags:
        - tag: Organization
  /organizations/{organizationLogin}:
    get:
      description: Returns the organization specified
      operationId: getOrganization
      parameters:
        - description: The login of the organization
          explode: false
          in: path
          name: organizationLogin
          required: true
          schema:
            $ref: '#/components/schemas/OrganizationLogin'
          style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: An organization
        '404':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BasicError'
          description: The specified resource was not found
        '500':
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BasicError'
          description: The request cannot be fulfilled due to an unexpected server
            error
      summary: Get an organization
      tags:
        - Organization
      x-accepts: application/json
      x-tags:
        - tag: Organization
components:
  parameters:
    pageNumber:
      description: The page number
      explode: true
      in: query
      name: pageNumber
      required: false
      schema:
        default: 0
        format: int32
        minimum: 0
        type: integer
      style: form
    pageSize:
      description: The number of items in a single page
      explode: true
      in: query
      name: pageSize
      required: false
      schema:
        default: 100
        format: int32
        minimum: 1
        type: integer
      style: form
    organizationLogin:
      description: The login of the organization
      explode: false
      in: path
      name: organizationLogin
      required: true
      schema:
        $ref: '#/components/schemas/OrganizationLogin'
      style: simple
  responses:
    BadRequest:
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/BasicError'
      description: Invalid request
    InternalServerError:
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/BasicError'
      description: The request cannot be fulfilled due to an unexpected server error
    NotFound:
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/BasicError'
      description: The specified resource was not found
  schemas:
    PageMetadata:
      description: The metadata of a page.
      properties:
        number:
          description: The page number.
          example: 99
          format: int32
          type: integer
        size:
          description: The number of items in a single page.
          example: 99
          format: int32
          type: integer
        totalElements:
          description: Total number of elements in the result set.
          example: 99
          format: int64
          type: integer
        totalPages:
          description: Total number of pages in the result set.
          example: 99
          format: int32
          type: integer
        hasNext:
          description: Returns if there is a next page.
          example: true
          type: boolean
        hasPrevious:
          description: Returns if there is a previous page.
          example: true
          type: boolean
      required:
        - hasNext
        - hasPrevious
        - number
        - size
        - totalElements
        - totalPages
      type: object
    Email:
      description: An email address.
      example: john.smith@example.com
      format: email
      type: string
    OrganizationLogin:
      description: The login of an organization
      example: example-org
      maxLength: 25
      minLength: 3
      pattern: '^[a-z0-9]+(?:-[a-z0-9]+)*$'
      type: string
    OrganizationCreateRequest:
      description: The information required to create an org account
      properties:
        email:
          description: An email address.
          example: john.smith@example.com
          format: email
          type: string
        login:
          description: The login of an organization
          example: example-org
          maxLength: 25
          minLength: 3
          pattern: '^[a-z0-9]+(?:-[a-z0-9]+)*$'
          type: string
        name:
          example: Example organization
          type: string
        avatarUrl:
          example: https://via.placeholder.com/300.png
          format: url
          nullable: true
          type: string
        websiteUrl:
          example: https://example.com
          format: url
          type: string
        description:
          example: A short description of the organization.
          type: string
      required:
        - login
      type: object
    OrganizationId:
      description: The unique identifier of an organization
      example: 1
      format: int64
      type: integer
    Organization:
      allOf:
        - $ref: '#/components/schemas/OrganizationCreateRequest'
        - $ref: '#/components/schemas/Organization_allOf'
      description: An organization
      type: object
    OrganizationsPage:
      allOf:
        - $ref: '#/components/schemas/PageMetadata'
        - $ref: '#/components/schemas/OrganizationsPage_allOf'
      description: A page of organizations
      type: object
      x-java-class-annotations:
        - '@lombok.Builder'
    BasicError:
      description: Problem details (tools.ietf.org/html/rfc7807)
      properties:
        title:
          description: A human readable documentation for the problem type
          type: string
        status:
          description: The HTTP status code
          type: integer
        detail:
          description: A human readable explanation specific to this occurrence of
            the problem
          type: string
        type:
          description: An absolute URI that identifies the problem type
          type: string
      required:
        - status
        - title
      type: object
      x-java-class-annotations:
        - '@lombok.Builder'
    Organization_allOf:
      properties:
        id:
          description: The unique identifier of an organization
          example: 1
          format: int64
          type: integer
        createdAt:
          example: 2022-07-04T22:19:11Z
          format: date-time
          type: string
        updatedAt:
          example: 2022-07-04T22:19:11Z
          format: date-time
          type: string
      required:
        - createdAt
        - id
        - updatedAt
      type: object
    OrganizationsPage_allOf:
      properties:
        organizations:
          description: A list of organizations
          items:
            $ref: '#/components/schemas/Organization'
          type: array
      required:
        - organizations
      type: object
