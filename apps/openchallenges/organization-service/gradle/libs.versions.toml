[versions]
findbugs = "3.0.2"
flyway = "11.9.1"
h2database = "2.3.232"
hibernate-search = "7.2.3.Final"
jackson = "2.18.3"
lombok = "1.18.38"
openchallenges = "0.0.1-SNAPSHOT"
postgresql = "42.7.7"
sagebionetworks = "0.0.1-SNAPSHOT"
spring-boot = "3.4.5"
spring-cloud = "4.3.0"
spring-data = "3.4.5"
spring-security = "6.5.1"
springdoc = "2.8.6"

[libraries]
findbugs-jsr305 = { module = "com.google.code.findbugs:jsr305", version.ref = "findbugs" }
flyway-core = { module = "org.flywaydb:flyway-core", version.ref = "flyway" }
flyway-database-postgresql = { module = "org.flywaydb:flyway-database-postgresql", version.ref = "flyway" }
h2database-h2 = { module = "com.h2database:h2", version.ref = "h2database" }
hibernate-search-backend-elasticsearch = { module = "org.hibernate.search:hibernate-search-backend-elasticsearch", version.ref = "hibernate-search" }
hibernate-search-mapper-orm = { module = "org.hibernate.search:hibernate-search-mapper-orm", version.ref = "hibernate-search" }
jackson-databind = { module = "com.fasterxml.jackson.core:jackson-databind", version.ref = "jackson" }
jackson-dataformat-yaml = { module = "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml", version.ref = "jackson" }
jackson-datatype-jsr310 = { module = "com.fasterxml.jackson.datatype:jackson-datatype-jsr310", version.ref = "jackson" }
lombok = { module = "org.projectlombok:lombok", version.ref = "lombok" }
openchallenges-app-config-data = { group = "org.sagebionetworks.openchallenges", name = "openchallenges-app-config-data", version.ref = "openchallenges" }
postgresql = { module = "org.postgresql:postgresql", version.ref = "postgresql" }
sagebionetworks-util = { group = "org.sagebionetworks", name = "util", version.ref = "sagebionetworks" }
spring-boot-dependencies = { module = "org.springframework.boot:spring-boot-dependencies", version.ref = "spring-boot" }
spring-boot-devtools = { module = "org.springframework.boot:spring-boot-devtools", version.ref = "spring-boot" }
spring-boot-starter-actuator = { module = "org.springframework.boot:spring-boot-starter-actuator", version.ref = "spring-boot" }
spring-boot-starter-data-jpa = { module = "org.springframework.boot:spring-boot-starter-data-jpa", version.ref = "spring-boot" }
spring-boot-starter-jdbc = { module = "org.springframework.boot:spring-boot-starter-jdbc", version.ref = "spring-boot" }
spring-boot-starter-security = { group = "org.springframework.boot", name = "spring-boot-starter-security", version.ref = "spring-boot" }
spring-boot-starter-test = { module = "org.springframework.boot:spring-boot-starter-test", version.ref = "spring-boot" }
spring-boot-starter-validation = { module = "org.springframework.boot:spring-boot-starter-validation", version.ref = "spring-boot" }
spring-boot-starter-web = { module = "org.springframework.boot:spring-boot-starter-web", version.ref = "spring-boot" }
spring-cloud-starter-netflix-eureka-client = { module = "org.springframework.cloud:spring-cloud-starter-netflix-eureka-client", version.ref = "spring-cloud" }
spring-cloud-starter-openfeign = { module = "org.springframework.cloud:spring-cloud-starter-openfeign", version.ref = "spring-cloud" }
spring-data-commons = { module = "org.springframework.data:spring-data-commons", version.ref = "spring-data" }
spring-security-test = { module = "org.springframework.security:spring-security-test", version.ref = "spring-security" }
springdoc-openapi-ui = { module = "org.springdoc:springdoc-openapi-starter-webmvc-ui", version.ref = "springdoc" }

[plugins]
flyway = { id = "org.flywaydb.flyway", version.ref = "flyway" }
spring-boot = { id = "org.springframework.boot", version.ref = "spring-boot" }