openapi: 3.0.3
info:
  contact:
    name: Support
    url: https://github.com/Sage-Bionetworks/sage-monorepo
  license:
    name: Apache 2.0
    url: https://github.com/Sage-Bionetworks/sage-monorepo/blob/main/LICENSE.txt
  title: OpenChallenges Organization REST API
  version: 1.0.0
  x-logo:
    url: https://dev.openchallenges.io/img/unsafe/logo/OpenChallenges-logo.png
servers:
- url: http://localhost/v1
tags:
- description: Operations about organizations
  name: Organization
paths:
  /organizations:
    get:
      description: List organizations
      operationId: listOrganizations
      parameters:
      - description: The search query used to find organizations.
        explode: true
        in: query
        name: organizationSearchQuery
        required: false
        schema:
          $ref: '#/components/schemas/OrganizationSearchQuery'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationsPage'
          description: Success
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BasicError'
          description: Invalid request
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BasicError'
          description: The request cannot be fulfilled due to an unexpected server
            error
      summary: List organizations
      tags:
      - Organization
      x-accepts: application/json
      x-tags:
      - tag: Organization
  /organizations/{org}:
    get:
      description: Returns the organization specified
      operationId: getOrganization
      parameters:
      - description: The id or login of the organization.
        examples:
          byString:
            value: dream
          byId:
            value: "1"
        explode: false
        in: path
        name: org
        required: true
        schema:
          maxLength: 64
          minLength: 1
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: An organization
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BasicError'
          description: The specified resource was not found
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BasicError'
          description: The request cannot be fulfilled due to an unexpected server
            error
      summary: Get an organization
      tags:
      - Organization
      x-accepts: application/json
      x-tags:
      - tag: Organization
components:
  parameters:
    organizationSearchQuery:
      description: The search query used to find organizations.
      explode: true
      in: query
      name: organizationSearchQuery
      required: false
      schema:
        $ref: '#/components/schemas/OrganizationSearchQuery'
      style: form
    org:
      description: The id or login of the organization.
      examples:
        byString:
          value: dream
        byId:
          value: "1"
      explode: false
      in: path
      name: org
      required: true
      schema:
        maxLength: 64
        minLength: 1
        type: string
      style: simple
  responses:
    BadRequest:
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/BasicError'
      description: Invalid request
    InternalServerError:
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/BasicError'
      description: The request cannot be fulfilled due to an unexpected server error
    NotFound:
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/BasicError'
      description: The specified resource was not found
  schemas:
    OrganizationCategory:
      description: The category of the organization.
      enum:
      - featured
      example: featured
      type: string
    ChallengeContributionRole:
      description: The nature of a challenge contribution.
      enum:
      - challenge_organizer
      - data_contributor
      - sponsor
      example: challenge_organizer
      type: string
    OrganizationSort:
      default: relevance
      description: What to sort results by.
      enum:
      - challenge_count
      - created
      - name
      - relevance
      type: string
    OrganizationDirection:
      description: The direction to sort the results by.
      enum:
      - asc
      - desc
      nullable: true
      type: string
    OrganizationId:
      description: The unique identifier of an organization
      example: 1
      format: int64
      type: integer
    OrganizationSearchQuery:
      description: An organization search query.
      properties:
        pageNumber:
          default: 0
          description: The page number.
          format: int32
          minimum: 0
          type: integer
        pageSize:
          default: 100
          description: The number of items in a single page.
          format: int32
          minimum: 1
          type: integer
        categories:
          description: The array of organization categories used to filter the results.
          items:
            $ref: '#/components/schemas/OrganizationCategory'
          type: array
        challengeContributionRoles:
          description: An array of challenge contribution roles used to filter the
            results.
          items:
            $ref: '#/components/schemas/ChallengeContributionRole'
          type: array
        sort:
          $ref: '#/components/schemas/OrganizationSort'
        direction:
          $ref: '#/components/schemas/OrganizationDirection'
        ids:
          description: An array of organization ids used to filter the results.
          items:
            $ref: '#/components/schemas/OrganizationId'
          type: array
        searchTerms:
          description: A string of search terms used to filter the results.
          example: data provider
          type: string
      type: object
    PageMetadata:
      description: The metadata of a page.
      properties:
        number:
          description: The page number.
          example: 99
          format: int32
          type: integer
        size:
          description: The number of items in a single page.
          example: 99
          format: int32
          type: integer
        totalElements:
          description: Total number of elements in the result set.
          example: 99
          format: int64
          type: integer
        totalPages:
          description: Total number of pages in the result set.
          example: 99
          format: int32
          type: integer
        hasNext:
          description: Returns if there is a next page.
          example: true
          type: boolean
        hasPrevious:
          description: Returns if there is a previous page.
          example: true
          type: boolean
      required:
      - hasNext
      - hasPrevious
      - number
      - size
      - totalElements
      - totalPages
      type: object
    OrganizationLogin:
      description: The unique login of an organization.
      example: example-org
      maxLength: 64
      minLength: 2
      pattern: "^[a-z0-9]+(?:-[a-z0-9]+)*$"
      type: string
    Url:
      description: A URL to the website or image.
      example: https://openchallenges.io
      format: url
      maxLength: 500
      nullable: true
      type: string
    CreatedDateTime:
      description: Datetime when the object was added to the database.
      example: 2022-07-04T22:19:11Z
      format: date-time
      type: string
    UpdatedDateTime:
      description: Datetime when the object was last modified in the database.
      example: 2022-07-04T22:19:11Z
      format: date-time
      type: string
    Organization:
      description: An organization
      example:
        createdAt: 2022-07-04T22:19:11Z
        avatarKey: logo/dream.png
        websiteUrl: https://openchallenges.io
        acronym: OC
        name: Example organization
        description: A description of the organization.
        id: 1
        challengeCount: 10
        login: example-org
        updatedAt: 2022-07-04T22:19:11Z
      properties:
        id:
          description: The unique identifier of an organization
          example: 1
          format: int64
          type: integer
        name:
          description: The name of the organization.
          example: Example organization
          type: string
        login:
          description: The unique login of an organization.
          example: example-org
          maxLength: 64
          minLength: 2
          pattern: "^[a-z0-9]+(?:-[a-z0-9]+)*$"
          type: string
        description:
          description: A description of the organization.
          example: A description of the organization.
          nullable: true
          type: string
        avatarKey:
          example: logo/dream.png
          type: string
        websiteUrl:
          description: A URL to the website or image.
          example: https://openchallenges.io
          format: url
          maxLength: 500
          nullable: true
          type: string
        challengeCount:
          default: 0
          description: The number of challenges involving this organization.
          example: 10
          minimum: 0
          type: integer
        createdAt:
          description: Datetime when the object was added to the database.
          example: 2022-07-04T22:19:11Z
          format: date-time
          type: string
        updatedAt:
          description: Datetime when the object was last modified in the database.
          example: 2022-07-04T22:19:11Z
          format: date-time
          type: string
        acronym:
          description: An acronym of the organization.
          example: OC
          maxLength: 10
          type: string
      required:
      - createdAt
      - id
      - login
      - name
      - updatedAt
      type: object
    OrganizationsPage:
      allOf:
      - $ref: '#/components/schemas/PageMetadata'
      - $ref: '#/components/schemas/OrganizationsPage_allOf'
      description: A page of organizations
      type: object
      x-java-class-annotations:
      - '@lombok.Builder'
    BasicError:
      description: Problem details (tools.ietf.org/html/rfc7807)
      properties:
        title:
          description: A human readable documentation for the problem type
          type: string
        status:
          description: The HTTP status code
          type: integer
        detail:
          description: A human readable explanation specific to this occurrence of
            the problem
          type: string
        type:
          description: An absolute URI that identifies the problem type
          type: string
      required:
      - status
      - title
      type: object
      x-java-class-annotations:
      - '@lombok.AllArgsConstructor'
      - '@lombok.Builder'
    OrganizationsPage_allOf:
      properties:
        organizations:
          description: A list of organizations
          items:
            $ref: '#/components/schemas/Organization'
          type: array
      required:
      - organizations
      type: object
      example: null
