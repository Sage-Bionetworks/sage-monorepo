openapi: 3.0.3
info:
  contact:
    name: Support
    url: https://github.com/Sage-Bionetworks/sage-monorepo
  description: 'Discover, explore, and contribute to open biomedical challenges.'
  license:
    name: Apache 2.0
    url: https://github.com/Sage-Bionetworks/sage-monorepo/blob/main/LICENSE.txt
  title: OpenChallenges Organization API
  version: 1.0.0
  x-logo:
    url: https://dev.openchallenges.io/img/unsafe/logo/OpenChallenges-logo.png
servers:
  - url: http://localhost/v1
tags:
  - description: Operations about organizations
    name: Organization
    x-audience:
      - public
  - description: Operations about a challenge participation
    name: Challenge Participation
    x-audience:
      - internal
paths:
  /organizations:
    get:
      description: List organizations
      operationId: listOrganizations
      parameters:
        - description: The search query used to find organizations.
          explode: true
          in: query
          name: organizationSearchQuery
          required: false
          schema:
            $ref: '#/components/schemas/OrganizationSearchQuery'
          style: form
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationsPage'
          description: Success
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'
      summary: List organizations
      tags:
        - Organization
      x-audience:
        - public
      x-accepts:
        - application/json
        - application/problem+json
      x-tags:
        - tag: Organization
    post:
      description: Create an organization with the specified account name
      operationId: createOrganization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationCreateRequest'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: Organization created successfully
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - apiBearerAuth: []
      summary: Create an organization
      tags:
        - Organization
      x-audience:
        - public
      x-content-type: application/json
      x-accepts:
        - application/json
        - application/problem+json
      x-tags:
        - tag: Organization
  /organizations/{org}:
    delete:
      description: Deletes the organization specified by its login or ID.
      operationId: deleteOrganization
      parameters:
        - description: The id or login of the organization.
          examples:
            byString:
              value: dream
            byId:
              value: '1'
          explode: false
          in: path
          name: org
          required: true
          schema:
            maxLength: 64
            minLength: 1
            type: string
          style: simple
      responses:
        '204':
          description: Organization successfully deleted
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - apiBearerAuth: []
      summary: Delete an organization
      tags:
        - Organization
      x-audience:
        - public
      x-accepts:
        - application/problem+json
      x-tags:
        - tag: Organization
    get:
      description: Returns the organization identified by its login or ID.
      operationId: getOrganization
      parameters:
        - description: The id or login of the organization.
          examples:
            byString:
              value: dream
            byId:
              value: '1'
          explode: false
          in: path
          name: org
          required: true
          schema:
            maxLength: 64
            minLength: 1
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: Organization retrieved successfully
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      summary: Get an organization
      tags:
        - Organization
      x-audience:
        - public
      x-accepts:
        - application/json
        - application/problem+json
      x-tags:
        - tag: Organization
    put:
      description: Updates an existing organization.
      operationId: updateOrganization
      parameters:
        - description: The id or login of the organization.
          examples:
            byString:
              value: dream
            byId:
              value: '1'
          explode: false
          in: path
          name: org
          required: true
          schema:
            maxLength: 64
            minLength: 1
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationUpdateRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: Organization updated successfully
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - apiBearerAuth: []
      summary: Update an existing organization
      tags:
        - Organization
      x-audience:
        - public
      x-content-type: application/json
      x-accepts:
        - application/json
        - application/problem+json
      x-tags:
        - tag: Organization
  /organizations/{org}/participations:
    post:
      description: Creates a new challenge participation.
      operationId: createChallengeParticipation
      parameters:
        - description: The id or login of the organization.
          examples:
            byString:
              value: dream
            byId:
              value: '1'
          explode: false
          in: path
          name: org
          required: true
          schema:
            maxLength: 64
            minLength: 1
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChallengeParticipationCreateRequest'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChallengeParticipation'
          description: Participation created successfully
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - apiBearerAuth: []
      summary: Create a new challenge participation
      tags:
        - Challenge Participation
      x-audience:
        - internal
      x-content-type: application/json
      x-accepts:
        - application/json
        - application/problem+json
      x-tags:
        - tag: Challenge Participation
  /organizations/{org}/participations/{challengeId}/role/{role}:
    delete:
      description: Delete a specific challenge participation.
      operationId: deleteChallengeParticipation
      parameters:
        - description: The id or login of the organization.
          examples:
            byString:
              value: dream
            byId:
              value: '1'
          explode: false
          in: path
          name: org
          required: true
          schema:
            maxLength: 64
            minLength: 1
            type: string
          style: simple
        - description: The unique identifier of the challenge.
          explode: false
          in: path
          name: challengeId
          required: true
          schema:
            $ref: '#/components/schemas/ChallengeId'
          style: simple
        - description: A challenge participation role.
          explode: false
          in: path
          name: role
          required: true
          schema:
            $ref: '#/components/schemas/ChallengeParticipationRole'
          style: simple
      responses:
        '204':
          description: Participation deleted successfully
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - apiBearerAuth: []
      summary: Delete a specific challenge participation
      tags:
        - Challenge Participation
      x-audience:
        - internal
      x-accepts:
        - application/problem+json
      x-tags:
        - tag: Challenge Participation
components:
  parameters:
    organizationSearchQuery:
      description: The search query used to find organizations.
      explode: true
      in: query
      name: organizationSearchQuery
      required: false
      schema:
        $ref: '#/components/schemas/OrganizationSearchQuery'
      style: form
    org:
      description: The id or login of the organization.
      examples:
        byString:
          value: dream
        byId:
          value: '1'
      explode: false
      in: path
      name: org
      required: true
      schema:
        maxLength: 64
        minLength: 1
        type: string
      style: simple
    challengeId:
      description: The unique identifier of the challenge.
      explode: false
      in: path
      name: challengeId
      required: true
      schema:
        $ref: '#/components/schemas/ChallengeId'
      style: simple
    challengeParticipationRole:
      description: A challenge participation role.
      explode: false
      in: path
      name: role
      required: true
      schema:
        $ref: '#/components/schemas/ChallengeParticipationRole'
      style: simple
  responses:
    BadRequest:
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/BasicError'
      description: Invalid request
    InternalServerError:
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/BasicError'
      description: The request cannot be fulfilled due to an unexpected server error
    Unauthorized:
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/BasicError'
      description: Unauthorized
    Forbidden:
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/BasicError'
      description: The user does not have the permission to perform this action
    Conflict:
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/BasicError'
      description: The request conflicts with current state of the target resource
    NotFound:
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/BasicError'
      description: The specified resource was not found
  schemas:
    OrganizationCategory:
      description: The category of the organization.
      enum:
        - featured
      example: featured
      type: string
    ChallengeContributionRole:
      description: The nature of a challenge contribution.
      enum:
        - challenge_organizer
        - data_contributor
        - sponsor
      example: challenge_organizer
      type: string
    OrganizationSort:
      default: relevance
      description: What to sort results by.
      enum:
        - challenge_count
        - created
        - name
        - relevance
      type: string
    OrganizationDirection:
      description: The direction to sort the results by.
      enum:
        - asc
        - desc
      nullable: true
      type: string
    OrganizationId:
      description: The unique identifier of an organization
      example: 1
      format: int64
      type: integer
    OrganizationSearchQuery:
      description: An organization search query.
      properties:
        pageNumber:
          default: 0
          description: The page number.
          format: int32
          minimum: 0
          type: integer
        pageSize:
          default: 100
          description: The number of items in a single page.
          format: int32
          minimum: 1
          type: integer
        categories:
          description: The array of organization categories used to filter the results.
          items:
            $ref: '#/components/schemas/OrganizationCategory'
          type: array
        challengeContributionRoles:
          description: An array of challenge contribution roles used to filter the
            results.
          items:
            $ref: '#/components/schemas/ChallengeContributionRole'
          type: array
        sort:
          $ref: '#/components/schemas/OrganizationSort'
        direction:
          $ref: '#/components/schemas/OrganizationDirection'
        ids:
          description: An array of organization ids used to filter the results.
          items:
            $ref: '#/components/schemas/OrganizationId'
          type: array
        searchTerms:
          description: A string of search terms used to filter the results.
          example: data provider
          type: string
      type: object
    PageMetadata:
      description: The metadata of a page.
      properties:
        number:
          description: The page number.
          example: 99
          format: int32
          type: integer
        size:
          description: The number of items in a single page.
          example: 99
          format: int32
          type: integer
        totalElements:
          description: Total number of elements in the result set.
          example: 99
          format: int64
          type: integer
        totalPages:
          description: Total number of pages in the result set.
          example: 99
          format: int32
          type: integer
        hasNext:
          description: Returns if there is a next page.
          example: true
          type: boolean
        hasPrevious:
          description: Returns if there is a previous page.
          example: true
          type: boolean
      required:
        - hasNext
        - hasPrevious
        - number
        - size
        - totalElements
        - totalPages
      type: object
    OrganizationLogin:
      description: The unique login of an organization.
      example: example-org
      maxLength: 64
      minLength: 2
      pattern: '^[a-z0-9]+(?:-[a-z0-9]+)*$'
      type: string
    Url:
      description: A URL to the website or image.
      example: https://openchallenges.io
      format: url
      maxLength: 500
      nullable: true
      type: string
    CreatedDateTime:
      description: Datetime when the object was added to the database.
      example: 2022-07-04T22:19:11Z
      format: date-time
      type: string
    UpdatedDateTime:
      description: Datetime when the object was last modified in the database.
      example: 2022-07-04T22:19:11Z
      format: date-time
      type: string
    Organization:
      description: An organization
      example:
        createdAt: 2022-07-04T22:19:11Z
        avatarKey: logo/dream.png
        websiteUrl: https://openchallenges.io
        acronym: OC
        name: Example organization
        description: A description of the organization.
        id: 1
        challengeCount: 10
        login: example-org
        updatedAt: 2022-07-04T22:19:11Z
      properties:
        id:
          description: The unique identifier of an organization
          example: 1
          format: int64
          type: integer
        name:
          description: The name of the organization.
          example: Example organization
          type: string
        login:
          description: The unique login of an organization.
          example: example-org
          maxLength: 64
          minLength: 2
          pattern: '^[a-z0-9]+(?:-[a-z0-9]+)*$'
          type: string
        description:
          description: A description of the organization.
          example: A description of the organization.
          nullable: true
          type: string
        avatarKey:
          example: logo/dream.png
          nullable: true
          type: string
        websiteUrl:
          description: A URL to the website or image.
          example: https://openchallenges.io
          format: url
          maxLength: 500
          nullable: true
          type: string
        challengeCount:
          default: 0
          description: The number of challenges involving this organization.
          example: 10
          minimum: 0
          type: integer
        acronym:
          description: An acronym of the organization.
          example: OC
          maxLength: 10
          nullable: true
          type: string
        createdAt:
          description: Datetime when the object was added to the database.
          example: 2022-07-04T22:19:11Z
          format: date-time
          type: string
        updatedAt:
          description: Datetime when the object was last modified in the database.
          example: 2022-07-04T22:19:11Z
          format: date-time
          type: string
      required:
        - challengeCount
        - createdAt
        - id
        - login
        - name
        - updatedAt
        - websiteUrl
      type: object
    OrganizationsPage:
      allOf:
        - $ref: '#/components/schemas/PageMetadata'
        - properties:
            organizations:
              description: A list of organizations
              items:
                $ref: '#/components/schemas/Organization'
              type: array
          required:
            - organizations
          type: object
      description: A page of organizations
      example:
        number: 99
        size: 99
        totalPages: 99
        organizations:
          - createdAt: 2022-07-04T22:19:11Z
            avatarKey: logo/dream.png
            websiteUrl: https://openchallenges.io
            acronym: OC
            name: Example organization
            description: A description of the organization.
            id: 1
            challengeCount: 10
            login: example-org
            updatedAt: 2022-07-04T22:19:11Z
          - createdAt: 2022-07-04T22:19:11Z
            avatarKey: logo/dream.png
            websiteUrl: https://openchallenges.io
            acronym: OC
            name: Example organization
            description: A description of the organization.
            id: 1
            challengeCount: 10
            login: example-org
            updatedAt: 2022-07-04T22:19:11Z
        hasPrevious: true
        hasNext: true
        totalElements: 99
      type: object
      x-java-class-annotations:
        - '@lombok.Builder'
    BasicError:
      description: Problem details (tools.ietf.org/html/rfc7807)
      properties:
        title:
          description: A human readable documentation for the problem type
          type: string
        status:
          description: The HTTP status code
          type: integer
        detail:
          description: A human readable explanation specific to this occurrence of
            the problem
          type: string
        type:
          description: An absolute URI that identifies the problem type
          type: string
      required:
        - status
        - title
      type: object
      x-java-class-annotations:
        - '@lombok.AllArgsConstructor'
        - '@lombok.Builder'
    OrganizationCreateRequest:
      description: The information required to create an org account
      properties:
        login:
          description: The unique login of an organization.
          example: example-org
          maxLength: 64
          minLength: 2
          pattern: '^[a-z0-9]+(?:-[a-z0-9]+)*$'
          type: string
        name:
          example: Example organization
          type: string
        description:
          example: A short description of the organization.
          nullable: true
          type: string
        avatarKey:
          example: logo/300.png
          nullable: true
          type: string
        websiteUrl:
          description: A URL to the website or image.
          example: https://openchallenges.io
          format: url
          maxLength: 500
          nullable: true
          type: string
        acronym:
          description: An acronym of the organization.
          example: OC
          maxLength: 10
          nullable: true
          type: string
      required:
        - login
        - name
        - websiteUrl
      type: object
    OrganizationUpdateRequest:
      description: The information required to update an org account
      properties:
        name:
          example: Example organization
          type: string
        description:
          example: A short description of the organization.
          nullable: true
          type: string
        avatarKey:
          example: https://via.placeholder.com/300.png
          format: url
          nullable: true
          type: string
        websiteUrl:
          description: A URL to the website or image.
          example: https://openchallenges.io
          format: url
          maxLength: 500
          nullable: true
          type: string
        acronym:
          description: An acronym of the organization.
          example: OC
          maxLength: 10
          nullable: true
          type: string
      required:
        - acronym
        - avatarKey
        - description
        - name
        - websiteUrl
      type: object
    ChallengeId:
      description: The unique identifier of the challenge.
      example: 1
      format: int64
      type: integer
    ChallengeParticipationRole:
      description: The nature of a challenge participation.
      enum:
        - challenge_organizer
        - data_contributor
        - sponsor
      example: challenge_organizer
      type: string
    ChallengeParticipationCreateRequest:
      description: |
        A request to create a challenge participation for an organization, defined by a challenge ID and a
        role.
      properties:
        challengeId:
          description: The unique identifier of the challenge.
          example: 1
          format: int64
          type: integer
        role:
          $ref: '#/components/schemas/ChallengeParticipationRole'
      required:
        - challengeId
        - role
      type: object
    ChallengeParticipationId:
      description: The unique identifier of a challenge participation
      example: 1
      format: int64
      type: integer
    ChallengeParticipation:
      description: An challenge participation.
      example:
        organizationId: 1
        challengeId: 1
        role: challenge_organizer
        id: 1
      properties:
        id:
          description: The unique identifier of a challenge participation
          example: 1
          format: int64
          type: integer
        challengeId:
          description: The unique identifier of the challenge.
          example: 1
          format: int64
          type: integer
        organizationId:
          description: The unique identifier of an organization
          example: 1
          format: int64
          type: integer
        role:
          $ref: '#/components/schemas/ChallengeParticipationRole'
      required:
        - challengeId
        - id
        - organizationId
        - role
      type: object
  securitySchemes:
    apiBearerAuth:
      bearerFormat: api_key
      description: API key obtained from /auth/login endpoint
      scheme: bearer
      type: http
