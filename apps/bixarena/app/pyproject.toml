[tool.coverage.run]
branch = true
source = [ "bixarena_app" ]

[tool.coverage.report]
exclude_lines = ['if TYPE_CHECKING:']
show_missing = true

[tool.pytest.ini_options]
addopts = """
 --cov
 --cov-fail-under=50
 --cov-report html:'../../../coverage/apps/bixarena/app/html'
 --cov-report xml:'../../../coverage/apps/bixarena/app/coverage.xml'
 --html='../../../reports/apps/bixarena/app/unittests/html/index.html'
 --junitxml='../../../reports/apps/bixarena/app/unittests/junit.xml'
"""

[project]
name = "bixarena-app"
version = "1.0.0"
description = "Bixarena application for serving and evaluating large language models"
requires-python = "==3.13.3"
readme = "README.md"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: Apache Software License",
]
dependencies = [
    "bixarena-api-client",
    "gradio>=4.10",
    "numpy",
    "openai>=1.0",
    "requests",
    "websockets>=12.0",
]

# Transitional console script now points to wrapper package
[project.scripts]
bixarena-app = "bixarena_app.__main__:main"

[tool.hatch.build.targets.wheel]
packages = ["bixarena_app"]

[tool.hatch.metadata]
allow-direct-references = true

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.ruff]
exclude = [
  ".ruff_cache",
  ".svn",
  ".tox",
  ".venv",
  "dist",
]

line-length = 88
indent-width = 4

[tool.ruff.lint]
select = [
  # pycodestyle
  "E",
  # Pyflakes
  "F",
  # pyupgrade
  "UP",
  # flake8-bugbear
  "B",
  # flake8-simplify
  "SIM",
  # isort
  "I",
]
ignore = []

fixable = ["ALL"]
unfixable = []

[tool.uv.sources]
bixarena-api-client = { workspace = true }
