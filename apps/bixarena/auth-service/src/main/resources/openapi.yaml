openapi: 3.0.3
info:
  contact:
    name: Support
    url: https://github.com/Sage-Bionetworks/sage-monorepo
  description: Advance bioinformatics by evaluating and ranking AI agents.
  license:
    name: Apache 2.0
    url: https://github.com/Sage-Bionetworks/sage-monorepo/blob/main/LICENSE.txt
  title: BixArena Auth Service
  version: 1.0.0
servers:
  - url: http://localhost
security:
  - jwtBearer: []
tags:
  - description: Authentication and token minting operations.
    name: Auth
paths:
  /auth/oidc/start:
    get:
      description: Initiates the OIDC login by redirecting the user to Synapse with
        state and nonce.
      operationId: startOidc
      responses:
        '204':
          description: Flow started (no content; clients should follow redirect)
        '302':
          description: Redirect to Synapse login
        '400':
          $ref: '#/components/responses/BadRequest'
      security: []
      summary: Start Synapse OIDC authorization code flow
      tags:
        - Auth
      x-accepts:
        - application/problem+json
      x-tags:
        - tag: Auth
  /auth/oidc/callback:
    get:
      description: "Handles redirect from Synapse, validates state and nonce, establishes\
        \ authenticated session."
      operationId: oidcCallback
      parameters:
        - explode: true
          in: query
          name: code
          required: true
          schema:
            type: string
          style: form
        - explode: true
          in: query
          name: state
          required: true
          schema:
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/oidcCallback_200_response'
          description: Authentication successful
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
      security: []
      summary: OIDC redirect callback
      tags:
        - Auth
      x-accepts:
        - application/json
        - application/problem+json
      x-tags:
        - tag: Auth
  /auth/logout:
    post:
      description: Invalidate the current authenticated session.
      operationId: logout
      responses:
        '204':
          description: Logged out (idempotent)
      security: []
      summary: Logout current session
      tags:
        - Auth
      x-accepts:
        - application/json
      x-tags:
        - tag: Auth
  /token:
    post:
      description: Exchanges an authenticated session (cookie) for an internal JWT.
      operationId: mintInternalToken
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mintInternalToken_200_response'
          description: Access token response
        '401':
          $ref: '#/components/responses/Unauthorized'
      security: []
      summary: Mint short-lived internal JWT
      tags:
        - Auth
      x-accepts:
        - application/json
      x-tags:
        - tag: Auth
  /.well-known/jwks.json:
    get:
      description: Returns the public keys used to verify internally issued JWTs.
      operationId: getJwks
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getJwks_200_response'
          description: JWKS document
        '400':
          $ref: '#/components/responses/BadRequest'
      security: []
      summary: JSON Web Key Set
      tags:
        - Auth
      x-accepts:
        - application/json
        - application/problem+json
      x-tags:
        - tag: Auth
  /userinfo:
    get:
      description: |
        Returns the authenticated user's profile information.
        This is an OIDC-compliant UserInfo endpoint that provides details about the currently authenticated user.

        Requires a valid JWT obtained via the `/token` endpoint or an active session.
      operationId: getUserInfo
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfo'
          description: User profile information
        '401':
          $ref: '#/components/responses/Unauthorized'
      summary: Get current user profile
      tags:
        - Auth
      x-accepts:
        - application/json
      x-tags:
        - tag: Auth
components:
  responses:
    BadRequest:
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/BasicError'
      description: Invalid request parameters
    Unauthorized:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BasicError'
      description: Unauthorized
  schemas:
    BasicError:
      description: Problem details (tools.ietf.org/html/rfc7807)
      example:
        instance: instance
        detail: detail
        title: title
        type: type
        status: 0
      properties:
        title:
          description: A human readable documentation for the problem type
          type: string
        status:
          description: The HTTP status code
          type: integer
        detail:
          description: A human readable explanation specific to this occurrence of
            the problem
          type: string
        type:
          description: An absolute URI that identifies the problem type
          type: string
        instance:
          description: An absolute URI that identifies the specific occurrence of
            the problem
          type: string
      required:
        - status
        - title
      type: object
    UserInfo:
      description: OIDC-compliant user information response
      example:
        sub: '3350396'
        email_verified: true
        roles:
          - user
        preferred_username: john.doe
        email: john.doe@example.com
      properties:
        sub:
          description: Subject identifier - the Synapse user ID
          example: '3350396'
          type: string
        preferred_username:
          description: Preferred username for display
          example: john.doe
          type: string
        email:
          description: User's email address
          example: john.doe@example.com
          format: email
          type: string
        email_verified:
          description: Whether the email address has been verified
          example: true
          type: boolean
        roles:
          description: User roles assigned within BixArena
          example:
            - user
          items:
            enum:
              - user
              - admin
            type: string
          type: array
      required:
        - sub
      type: object
    oidcCallback_200_response:
      example:
        status: ok
      properties:
        status:
          example: ok
          type: string
      type: object
    mintInternalToken_200_response:
      example:
        access_token: access_token
        token_type: Bearer
        expires_in: 600
      properties:
        access_token:
          type: string
        token_type:
          enum:
            - Bearer
          type: string
        expires_in:
          example: 600
          type: integer
      required:
        - access_token
        - expires_in
        - token_type
      type: object
    getJwks_200_response:
      example:
        keys:
          - '{}'
          - '{}'
      properties:
        keys:
          items:
            type: object
          type: array
      type: object
  securitySchemes:
    jwtBearer:
      bearerFormat: JWT
      description: |
        Short-lived internal JWT issued by this service after authentication through Synapse or (later) an API key exchange.
      scheme: bearer
      type: http
x-oauth2-audience: urn:bixarena:api
