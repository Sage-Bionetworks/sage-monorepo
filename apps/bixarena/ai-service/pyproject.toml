[tool.coverage.run]
branch = true
source = [ "bixarena_ai_service" ]

[tool.coverage.report]
exclude_lines = ['if TYPE_CHECKING:']
show_missing = true

[tool.pytest.ini_options]
addopts = """
 --cov
 --cov-report html:'../../../coverage/apps/bixarena/ai-service/html'
 --cov-report xml:'../../../coverage/apps/bixarena/ai-service/coverage.xml'
 --html='../../../reports/apps/bixarena/ai-service/unittests/html/index.html'
 --junitxml='../../../reports/apps/bixarena/ai-service/unittests/junit.xml'
"""

[project]
name = "bixarena-ai-service"
version = "1.0.0"
description = "BixArena AI API"
requires-python = "==3.13.3"
readme = "README.md"
license = { text = "Apache-2.0" }
authors = [ { name = "Sage Bionetworks" } ]
dependencies = [
  "fastapi==0.115.2",
  "pydantic>=2",
  "starlette==0.40.0",
  "uvicorn==0.30.6",
  # Performance extras (retain intentionally)
  "httptools>=0.3.0,<0.7.0",
  "uvloop==0.21.0",
  "websockets>=12.0",
  "watchgod==0.7",
  # Needed by models (Self) until Python stdlib covers all
  "typing-extensions==4.13.2",
]

# Transitional console script now points to wrapper package
[project.scripts]
bixarena-ai-service = "bixarena_ai_service.__main__:main"

[tool.hatch.build.targets.wheel]
packages = ["bixarena_ai_service"]

[tool.hatch.metadata]
allow-direct-references = true

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.ruff]
exclude = [
  ".ruff_cache",
  ".svn",
  ".tox",
  ".venv",
  "dist",
]

line-length = 88
indent-width = 4

[tool.ruff.lint]
select = [
  # pycodestyle
  "E",
  # Pyflakes
  "F",
  # pyupgrade
  "UP",
  # flake8-bugbear
  "B",
  # flake8-simplify
  "SIM",
  # isort
  "I",
]
ignore = []

fixable = ["ALL"]
unfixable = []