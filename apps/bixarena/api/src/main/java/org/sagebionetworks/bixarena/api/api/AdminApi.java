/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.14.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.sagebionetworks.bixarena.api.api;

import org.sagebionetworks.bixarena.api.model.dto.AdminStats200ResponseDto;
import org.sagebionetworks.bixarena.api.model.dto.BasicErrorDto;
import io.swagger.v3.oas.annotations.ExternalDocumentation;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.Parameters;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import io.swagger.v3.oas.annotations.media.ExampleObject;
import org.springframework.lang.Nullable;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.multipart.MultipartFile;

import jakarta.validation.Valid;
import jakarta.validation.constraints.*;
import java.util.List;
import java.util.Map;
import jakarta.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", comments = "Generator version: 7.14.0")
@Validated
@Tag(name = "Admin", description = "Administrative endpoints requiring elevated roles.")
public interface AdminApi {

    default AdminApiDelegate getDelegate() {
        return new AdminApiDelegate() {};
    }

    /**
     * GET /admin/stats : Admin statistics
     * Administrative operations requiring admin role.
     *
     * @return Success (status code 200)
     *         or Unauthorized (status code 401)
     *         or Forbidden (status code 403)
     */
    @Operation(
        operationId = "adminStats",
        summary = "Admin statistics",
        description = "Administrative operations requiring admin role.",
        tags = { "Admin" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Success", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = AdminStats200ResponseDto.class))
            }),
            @ApiResponse(responseCode = "401", description = "Unauthorized", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = BasicErrorDto.class))
            }),
            @ApiResponse(responseCode = "403", description = "Forbidden", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = BasicErrorDto.class))
            })
        },
        security = {
            @SecurityRequirement(name = "jwtBearer")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/admin/stats",
        produces = { "application/json" }
    )
    
    default ResponseEntity<AdminStats200ResponseDto> adminStats(
        
    ) {
        return getDelegate().adminStats();
    }

}
