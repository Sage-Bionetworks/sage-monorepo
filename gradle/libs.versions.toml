[versions]
caffeine = "3.2.2"
findbugs = "3.0.2"
flyway = "11.13.0"
graalvm = "0.11.0"
gradle-versions = "0.52.0"
h2database = "2.3.232"
hibernate-search = "7.2.4.Final" # v8 targets Hibernate ORM 7, which is expected with Spring Boot 4; stick to v7 on Boot 3.x
jackson = "2.19.2" # Some packages have been published with 2.20, others with 2.20.0, leading to issues.
jackson-nullable = "0.2.7"
jacoco = "0.8.13"
jakarta-annotation = "3.0.0"
java = "21"
jedis = "5.1.0"
junit = "5.13.4"
junit-platform = "1.13.4"
lombok = "1.18.40"
nx-gradle = "0.1.7"
postgresql = "42.7.7"
spring = "6.2.11"
spring-ai = "1.1.0-M1"
spring-boot = "3.5.5"
spring-cloud = "4.3.0" # Using Spring Cloud OpenFeign 4.3.0 because 4.3.1 is not yet released
spring-data = "3.5.4"
spring-security = "6.5.4"
springdoc = "2.8.13"
squareup = "3.0.0"
testcontainers = "1.21.3"
nimbus = "10.5"

[libraries]
# Jackson libraries
jackson-annotations = { module = "com.fasterxml.jackson.core:jackson-annotations", version.ref = "jackson" }
jackson-core = { module = "com.fasterxml.jackson.core:jackson-core", version.ref = "jackson" }
jackson-databind = { module = "com.fasterxml.jackson.core:jackson-databind", version.ref = "jackson" }
jackson-databind-nullable = { module = "org.openapitools:jackson-databind-nullable", version.ref = "jackson-nullable" }
jackson-dataformat-yaml = { module = "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml", version.ref = "jackson" }
jackson-datatype-jsr310 = { module = "com.fasterxml.jackson.datatype:jackson-datatype-jsr310", version.ref = "jackson" }
jackson-jaxrs-json-provider = { module = "com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider", version.ref = "jackson" }

# Spring libraries
spring-boot-configuration-processor = { module = "org.springframework.boot:spring-boot-configuration-processor", version.ref = "spring-boot" }
spring-boot-dependencies = { module = "org.springframework.boot:spring-boot-dependencies", version.ref = "spring-boot" }
spring-boot-devtools = { module = "org.springframework.boot:spring-boot-devtools", version.ref = "spring-boot" }
spring-boot-starter = { module = "org.springframework.boot:spring-boot-starter", version.ref = "spring-boot" }
spring-boot-starter-actuator = { module = "org.springframework.boot:spring-boot-starter-actuator", version.ref = "spring-boot" }
spring-boot-starter-cache = { module = "org.springframework.boot:spring-boot-starter-cache", version.ref = "spring-boot" }
spring-boot-starter-data-jpa = { module = "org.springframework.boot:spring-boot-starter-data-jpa", version.ref = "spring-boot" }
spring-boot-starter-data-redis = { module = "org.springframework.boot:spring-boot-starter-data-redis", version.ref = "spring-boot" }
spring-boot-starter-jdbc = { module = "org.springframework.boot:spring-boot-starter-jdbc", version.ref = "spring-boot" }
spring-boot-starter-oauth2-client = { module = "org.springframework.boot:spring-boot-starter-oauth2-client", version.ref = "spring-boot" }
spring-boot-starter-oauth2-resource-server = { module = "org.springframework.boot:spring-boot-starter-oauth2-resource-server", version.ref = "spring-boot" }
spring-security-oauth2-authorization-server = { module = "org.springframework.security:spring-security-oauth2-authorization-server", version = "1.5.2" }
spring-boot-starter-security = { group = "org.springframework.boot", name = "spring-boot-starter-security", version.ref = "spring-boot" }
spring-boot-starter-test = { module = "org.springframework.boot:spring-boot-starter-test", version.ref = "spring-boot" }
spring-boot-starter-thymeleaf = { module = "org.springframework.boot:spring-boot-starter-thymeleaf", version.ref = "spring-boot" }
spring-boot-starter-validation = { module = "org.springframework.boot:spring-boot-starter-validation", version.ref = "spring-boot" }
spring-boot-starter-web = { module = "org.springframework.boot:spring-boot-starter-web", version.ref = "spring-boot" }
spring-boot-starter-webflux = { module = "org.springframework.boot:spring-boot-starter-webflux", version.ref = "spring-boot" }
spring-cloud-starter-gateway-server-webflux = { module = "org.springframework.cloud:spring-cloud-starter-gateway-server-webflux", version.ref = "spring-cloud" }
spring-cloud-starter-openfeign = { module = "org.springframework.cloud:spring-cloud-starter-openfeign", version.ref = "spring-cloud" }
spring-context = { module = "org.springframework:spring-context", version.ref = "spring" }
spring-data-commons = { module = "org.springframework.data:spring-data-commons", version.ref = "spring-data" }
spring-security-oauth2-jose = { module = "org.springframework.security:spring-security-oauth2-jose", version.ref = "spring-security" }
spring-security-test = { module = "org.springframework.security:spring-security-test", version.ref = "spring-security" }
spring-web = { module = "org.springframework:spring-web", version.ref = "spring" }

# Other libraries
caffeine = { module = "com.github.ben-manes.caffeine:caffeine", version.ref = "caffeine" }
findbugs-jsr305 = { module = "com.google.code.findbugs:jsr305", version.ref = "findbugs" }
flyway-core = { module = "org.flywaydb:flyway-core", version.ref = "flyway" }
flyway-database-postgresql = { module = "org.flywaydb:flyway-database-postgresql", version.ref = "flyway" }
h2database-h2 = { module = "com.h2database:h2", version.ref = "h2database" }
hibernate-search-backend-elasticsearch = { module = "org.hibernate.search:hibernate-search-backend-elasticsearch", version.ref = "hibernate-search" }
hibernate-search-mapper-orm = { module = "org.hibernate.search:hibernate-search-mapper-orm", version.ref = "hibernate-search" }
jakarta-annotation-api = { module = "jakarta.annotation:jakarta.annotation-api", version.ref = "jakarta-annotation" }
junit-jupiter = { module = "org.junit.jupiter:junit-jupiter", version.ref = "junit" }
junit-jupiter-api = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "junit" }
junit-jupiter-engine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "junit" }
junit-platform-launcher = { module = "org.junit.platform:junit-platform-launcher", version.ref = "junit-platform" }
lombok = { module = "org.projectlombok:lombok", version.ref = "lombok" }
postgresql = { module = "org.postgresql:postgresql", version.ref = "postgresql" }
spring-ai-starter-mcp-server-webflux = { module = "org.springframework.ai:spring-ai-starter-mcp-server-webflux", version.ref = "spring-ai" }
springdoc-openapi-ui = { module = "org.springdoc:springdoc-openapi-starter-webmvc-ui", version.ref = "springdoc" }
squareup-pollexor = { module = "com.squareup:pollexor", version.ref = "squareup" }
testcontainers-bom = { module = "org.testcontainers:testcontainers-bom", version.ref = "testcontainers" }
testcontainers-junit-jupiter = { module = "org.testcontainers:junit-jupiter", version.ref = "testcontainers" }
testcontainers-postgresql = { module = "org.testcontainers:postgresql", version.ref = "testcontainers" }
nimbus-jose-jwt = { module = "com.nimbusds:nimbus-jose-jwt", version.ref = "nimbus" }

# Redis/Valkey client
jedis = { module = "redis.clients:jedis", version.ref = "jedis" }

[plugins]
flyway = { id = "org.flywaydb.flyway", version.ref = "flyway" }
graalvm-native = { id = "org.graalvm.buildtools.native", version.ref = "graalvm" }
gradle-versions = { id = "com.github.ben-manes.versions", version.ref = "gradle-versions" }
jacoco = { id = "jacoco" }
nx-gradle = { id = "dev.nx.gradle.project-graph", version.ref = "nx-gradle" }
spring-boot = { id = "org.springframework.boot", version.ref = "spring-boot" }
