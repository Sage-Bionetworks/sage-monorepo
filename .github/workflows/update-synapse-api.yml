name: Update Synapse API description and its clients

on:
  schedule:
    # Run daily at 9 AM UTC (4 AM EST, 1 AM PST)
    - cron: '0 9 * * *'
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

concurrency:
  group: synapse-update-synapse-api
  cancel-in-progress: false

env:
  NX_BRANCH: ${{ github.ref_name }}
  NX_CLOUD_ENCRYPTION_KEY: ${{ secrets.NX_CLOUD_ENCRYPTION_KEY }}

jobs:
  update-synapse-api:
    runs-on: ubuntu-latest
    env:
      NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN_READ_WRITE }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up the dev container
        uses: ./.github/actions/setup-dev-container

      - name: Build API description & regenerate clients
        run: |
          devcontainer exec --workspace-folder ../sage-monorepo bash -c ". ./dev-env.sh \
            && echo 'ðŸ”„ Building API description (includes downloading latest OpenAPI specification)...' \
            && nx build synapse-api-description \
            && echo 'ðŸ”„ Regenerating synapse-* clients...' \
            && nx run-many --target=generate --projects='synapse-*'"

      - name: Create commit inside dev container (no push)
        run: |
          devcontainer exec --workspace-folder ../sage-monorepo bash -lc '
            set -Eeuo pipefail
            . ./dev-env.sh

            git config user.name  "${GITHUB_ACTOR:-github-actions[bot]}"
            git config user.email "${GIT_AUTHOR_EMAIL:-github-actions[bot]@users.noreply.github.com}"

            BASE_BRANCH="main"
            BRANCH_NAME="synapse/update-synapse-api"

            # Fetch base & target
            git fetch --no-tags --prune origin "+refs/heads/$BASE_BRANCH:refs/remotes/origin/$BASE_BRANCH" || true
            git fetch --no-tags --prune origin "+refs/heads/$BRANCH_NAME:refs/remotes/origin/$BRANCH_NAME" || true

            # Switch/create branch (local > remote > base)
            if git rev-parse --verify --quiet "refs/heads/$BRANCH_NAME"; then
              git switch "$BRANCH_NAME"
              if git show-ref --verify --quiet "refs/remotes/origin/$BRANCH_NAME"; then
                git merge --ff-only "origin/$BRANCH_NAME" || true
              fi
            elif git show-ref --verify --quiet "refs/remotes/origin/$BRANCH_NAME"; then
              git switch -c "$BRANCH_NAME" --track "origin/$BRANCH_NAME"
            else
              if git show-ref --verify --quiet "refs/remotes/origin/$BASE_BRANCH"; then
                git switch -c "$BRANCH_NAME" "origin/$BASE_BRANCH"
              else
                git switch -c "$BRANCH_NAME"
              fi
            fi

            # Stage (consider scoping paths instead of -A)
            git add -A

            # Commit if there is anything staged; skip otherwise
            if ! git diff --staged --quiet; then
              git commit -m "chore(synapse): update Synapse API description and its clients"
            else
              echo "No changes to commit."
            fi
          '

      - name: Create or update Pull Request
        uses: peter-evans/create-pull-request@v7
        with:
          branch: synapse/update-synapse-api
          title: 'chore(synapse): update Synapse API description and its clients'
          commit-message: 'chore(synapse): update Synapse API description and its clients'
          base: 'main'
          body: |
            ## Description

            This is an automated update triggered by changes detected in the Synapse OpenAPI specification.
            The workflow downloads the latest specification and regenerates dependent client libraries to keep them in sync.

            ## Review checklist

            - [ ] Verify that the API changes are expected
            - [ ] Check that generated clients compile successfully
            - [ ] Run tests to ensure compatibility
            - [ ] Review any breaking changes in the API
