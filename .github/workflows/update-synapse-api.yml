name: Update Synapse API description and its clients

on:
  schedule:
    # Run daily at 9 AM UTC (4 AM EST, 1 AM PST)
    - cron: '0 9 * * *'
  workflow_dispatch:
  push:
    branches:
      - 'synapse/update-synapse-api-test'

permissions:
  contents: write
  pull-requests: write

concurrency:
  group: update-synapse-api
  cancel-in-progress: false

env:
  NX_BRANCH: ${{ github.ref_name }}
  NX_CLOUD_ENCRYPTION_KEY: ${{ secrets.NX_CLOUD_ENCRYPTION_KEY }}

jobs:
  extract-devcontainer-image:
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.devcontainer.outputs.image }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - id: devcontainer
        name: Read .devcontainer/devcontainer.json
        run: echo "image=$(jq -r '.image' .devcontainer/devcontainer.json)" >> $GITHUB_OUTPUT

  update-synapse-api:
    runs-on: ubuntu-latest
    needs: extract-devcontainer-image
    defaults:
      run:
        shell: bash -l {0}

    container:
      # image: ${{ needs.extract-devcontainer-image.outputs.image }}
      image: ghcr.io/sage-bionetworks/sage-monorepo-devcontainer:sha-6269b9b3d863831c296f843edd84b2c7e1d4733d
      options: --user ubuntu
      env:
        NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN_READ_WRITE }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # - name: Check Java version
      #   run: java --version

      # - name: Check go version
      #   run: go version

      # - name: Print username
      #   run: echo $user

      - name: Print PATH
        run: echo $PATH

      - name: Confirm shell context
        run: |
          echo "USER=$(id -un)"
          echo "HOME=$HOME"
          echo "BASH_ENV=$BASH_ENV"
          echo "BASH version: $(bash --version | head -1)"
          echo "uv path: $(command -v uv || echo 'not found')"

      - name: Check uv version
        run: uv --version

      # - name: ls home
      #   run: ls -al ~/.local/bin

      # - name: Check uv version
      #   run: /home/ubuntu/.local/share/pipx/venvs/uv/bin/uv --version

      # - name: Prepare the workspace
      #   shell: bash
      #   run: |
      #     . ./dev-env.sh
      #     workspace-install

      # - name: Set up the dev container
      #   uses: ./.github/actions/setup-dev-container

      # - name: Build API description & regenerate clients
      #   run: |
      #     devcontainer exec --workspace-folder ../sage-monorepo bash -c ". ./dev-env.sh \
      #       && echo 'ðŸ”„ Building API description (includes downloading latest OpenAPI specification)...' \
      #       && nx build synapse-api-description \
      #       && echo 'ðŸ”„ Regenerating synapse-* clients...' \
      #       && nx run-many --target=generate --projects='synapse-*'"

      # - name: Create commit inside dev container (no push)
      #   run: |
      #     devcontainer exec --workspace-folder ../sage-monorepo bash -lc '
      #       set -Eeuo pipefail
      #       . ./dev-env.sh

      #       git config user.name  "${GITHUB_ACTOR:-github-actions[bot]}"
      #       git config user.email "${GIT_AUTHOR_EMAIL:-github-actions[bot]@users.noreply.github.com}"

      #       BASE_BRANCH="main"
      #       BRANCH_NAME="synapse/update-synapse-api"

      #       # Fetch base & target
      #       git fetch --no-tags --prune origin "+refs/heads/$BASE_BRANCH:refs/remotes/origin/$BASE_BRANCH" || true
      #       git fetch --no-tags --prune origin "+refs/heads/$BRANCH_NAME:refs/remotes/origin/$BRANCH_NAME" || true

      #       # Switch/create branch (local > remote > base)
      #       if git rev-parse --verify --quiet "refs/heads/$BRANCH_NAME"; then
      #         git switch "$BRANCH_NAME"
      #         if git show-ref --verify --quiet "refs/remotes/origin/$BRANCH_NAME"; then
      #           git merge --ff-only "origin/$BRANCH_NAME" || true
      #         fi
      #       elif git show-ref --verify --quiet "refs/remotes/origin/$BRANCH_NAME"; then
      #         git switch -c "$BRANCH_NAME" --track "origin/$BRANCH_NAME"
      #       else
      #         if git show-ref --verify --quiet "refs/remotes/origin/$BASE_BRANCH"; then
      #           git switch -c "$BRANCH_NAME" "origin/$BASE_BRANCH"
      #         else
      #           git switch -c "$BRANCH_NAME"
      #         fi
      #       fi

      #       # Stage (consider scoping paths instead of -A)
      #       git add -A

      #       # Commit if there is anything staged; skip otherwise
      #       if ! git diff --staged --quiet; then
      #         git commit -m "chore(synapse): update Synapse API description and its clients"
      #       else
      #         echo "No changes to commit."
      #       fi
      #     '

      # - name: Create or update Pull Request
      #   uses: peter-evans/create-pull-request@v7
      #   with:
      #     branch: synapse/update-synapse-api
      #     title: 'chore(synapse): update Synapse API description and its clients'
      #     commit-message: 'chore(synapse): update Synapse API description and its clients'
      #     base: 'main'
      #     body: |
      #       ## Description

      #       This is an automated update triggered by changes detected in the Synapse OpenAPI specification.
      #       The workflow downloads the latest specification and regenerates dependent client libraries to keep them in sync.

      #       ## Review checklist

      #       - [ ] Verify that the API changes are expected
      #       - [ ] Check that generated clients compile successfully
      #       - [ ] Run tests to ensure compatibility
      #       - [ ] Review any breaking changes in the API
