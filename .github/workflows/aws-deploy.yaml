name: aws-deploy

on: push

jobs:
  pre-commit:
    name: Run pre-commit hooks against all files
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - uses: pre-commit/action@v2.0.2

  sceptre-deploy:
    name: Deploy CloudFormation templates using sceptre
    runs-on: ubuntu-latest
    needs: pre-commit
    if: github.ref == 'refs/heads/main'
    strategy:
      matrix:
        job-environment:
          - develop
          - prod
        include:
          - job-environment: develop
            sceptre-environment: develop
          - job-environment: prod
            sceptre-environment: prod
    environment: ${{ matrix.job-environment }}
    steps:

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install pipenv
        run: python -m pip install pipenv

      - name: Set up dependency caching
        uses: actions/cache@v2
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.os }}-pipenv-v2-${{ hashFiles('**/Pipfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pipenv-v2-

      - name: Install dependencies
        if: steps.pipenv-cache.outputs.cache-hit != 'true'
        env:
          PIPENV_NOSPIN: 'true'
          WORKON_HOME: ~/.local/share/virtualenvs
          PIPENV_CACHE_DIR: ~/.local/share/pipcache
        run: |
          pipenv install --dev

      - name: Assume AWS role in dev account
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.CI_USER_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.CI_USER_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
          role-to-assume: ${{ secrets.CI_ROLE_TO_ASSUME }}
          role-duration-seconds: 1200

      - name: Deploy sceptre stacks
        run: pipenv run sceptre launch ${{ matrix.sceptre-environment }} --yes
