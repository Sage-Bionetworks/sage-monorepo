name: Scan image

on:
  push:
    branches:
      - main
  pull_request:
  # schedule:
  # 13:44 on Thursday
  # - cron: 44 13 * * 4
  # every 10 minutes
  # - cron: '*/10 * * * *'
  # workflow_dispatch:

jobs:
  trivy-edge:
    name: ${{ matrix.image }} image scan
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      fail-fast: false
      matrix:
        image:
          - 'openchallenges-zipkin'
          - 'openchallenges-apex'

    steps:
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull the image
        run: |
          docker pull ghcr.io/sage-bionetworks/${{ matrix.image }}:edge

      # Deliberately chosen master here to keep up-to-date.
      - name: Run Trivy vulnerability scanner for any major issues
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ghcr.io/sage-bionetworks/${{ matrix.image }}:edge
          # Filter out any that have no current fix.
          ignore-unfixed: true
          # Only include major issues.
          severity: CRITICAL,HIGH
          format: template
          template: '@/contrib/sarif.tpl'
          output: trivy-results-${{ matrix.image }}-edge.sarif

      # Show all detected issues.
      # Note this will show a lot more, including major un-fixed ones.
      - name: Run Trivy vulnerability scanner for local output
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ghcr.io/sage-bionetworks/${{ matrix.image }}:edge
          format: table

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: trivy-results-${{ matrix.image }}-edge.sarif
          category: ${{ matrix.image }}:edge image
          wait-for-processing: true

      # In case we need to analyse the uploaded files for some reason.
      - name: Detain results for debug if needed
        uses: actions/upload-artifact@v3
        with:
          name: trivy-results-${{ matrix.image }}-edge.sarif
          path: trivy-results-${{ matrix.image }}-edge.sarif
          if-no-files-found: error
