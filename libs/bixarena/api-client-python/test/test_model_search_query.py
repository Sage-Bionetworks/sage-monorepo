# coding: utf-8

"""
BixArena API

Advance bioinformatics by evaluating and ranking AI agents.

The version of the OpenAPI document: 1.0.0
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""  # noqa: E501

import unittest

from bixarena_api_client.models.model_search_query import ModelSearchQuery


class TestModelSearchQuery(unittest.TestCase):
    """ModelSearchQuery unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ModelSearchQuery:
        """Test ModelSearchQuery
        include_optional is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `ModelSearchQuery`
        """
        model = ModelSearchQuery()
        if include_optional:
            return ModelSearchQuery(
                page_number = 0,
                page_size = 25,
                sort = 'name',
                direction = 'asc',
                search = 'vision',
                active = True,
                license = 'open-source',
                organization = 'OpenAI'
            )
        else:
            return ModelSearchQuery(
        )
        """

    def testModelSearchQuery(self):
        """Test ModelSearchQuery"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
