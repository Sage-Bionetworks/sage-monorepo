# coding: utf-8

"""
BixArena API

Advance bioinformatics by evaluating and ranking AI agents.

The version of the OpenAPI document: 1.0.0
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""  # noqa: E501

import unittest

from bixarena_api_client.models.vote_page import VotePage


class TestVotePage(unittest.TestCase):
    """VotePage unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> VotePage:
        """Test VotePage
        include_optional is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `VotePage`
        """
        model = VotePage()
        if include_optional:
            return VotePage(
                data = [
                    bixarena_api_client.models.vote.Vote(
                        id = '', 
                        battle_id = '5f6c2d84-5c1a-4b2e-b3d7-0c2a1f9e8a6f', 
                        preference = 'left_model', 
                        created_at = '2024-01-15T10:30Z', )
                    ],
                page = bixarena_api_client.models.page_metadata.PageMetadata(
                    number = 99, 
                    size = 99, 
                    total_elements = 99, 
                    total_pages = 99, 
                    has_next = True, 
                    has_previous = True, )
            )
        else:
            return VotePage(
                data = [
                    bixarena_api_client.models.vote.Vote(
                        id = '', 
                        battle_id = '5f6c2d84-5c1a-4b2e-b3d7-0c2a1f9e8a6f', 
                        preference = 'left_model', 
                        created_at = '2024-01-15T10:30Z', )
                    ],
                page = bixarena_api_client.models.page_metadata.PageMetadata(
                    number = 99, 
                    size = 99, 
                    total_elements = 99, 
                    total_pages = 99, 
                    has_next = True, 
                    has_previous = True, ),
        )
        """

    def testVotePage(self):
        """Test VotePage"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
