openapi: 3.0.3
info:
  version: 0.6.0
  title: Challenge Organization API
  license:
    name: Apache 2.0
    url: https://github.com/Sage-Bionetworks/challenge-registry
  contact:
    name: Support
    url: https://github.com/Sage-Bionetworks/challenge-registry
  x-logo:
    url: https://Sage-Bionetworks.github.io/rocc-schemas/logo.png
tags:
  - name: Organization
    description: Operations about organizations
paths:
  /organizations:
    post: null
    get:
      tags:
        - Organization
      summary: Get all organizations
      description: Returns the organizations
      operationId: listOrganizations
      parameters:
        - $ref: '#/components/parameters/pageNumber'
        - $ref: '#/components/parameters/pageSize'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationsPage'
          description: Success
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  parameters:
    pageNumber:
      name: pageNumber
      description: The page number
      in: query
      schema:
        type: integer
        format: int32
        default: 0
        minimum: 0
    pageSize:
      name: pageSize
      description: The number of items in a single page
      in: query
      schema:
        type: integer
        format: int32
        default: 100
        minimum: 10
  schemas:
    PageMetadata:
      type: object
      description: The metadata of a page
      properties:
        paging:
          description: Links to navigate to different pages of results
          type: object
          properties:
            next:
              description: Link to the next page of results
              type: string
              format: url
        totalResults:
          description: Total number of results in the result set
          type: integer
      required:
        - paging
        - totalResults
    AccountId:
      description: The unique identifier of an account
      type: integer
      format: int64
      example: 1
    OrganizationCreateResponse:
      type: object
      description: The unique identifier of the org created
      properties:
        id:
          $ref: '#/components/schemas/AccountId'
      required:
        - id
      example:
        id: 507f1f77bcf86cd799439011
    Email:
      description: An email address
      type: string
      format: email
      example: john.smith@example.com
    OrganizationCreateRequest:
      type: object
      description: The information required to create an org account
      properties:
        login:
          type: string
        email:
          $ref: '#/components/schemas/Email'
        name:
          type: string
          nullable: true
        avatarUrl:
          type: string
          format: url
          example: https://example.com/awesome-avatar.png
          nullable: true
        websiteUrl:
          type: string
          format: url
          example: https://example.com
          nullable: true
        description:
          type: string
          nullable: true
      required:
        - login
        - email
      example:
        login: awesome-org
        email: contact@example.org
        name: Awesome Org
        avatarUrl: https://example.com/awesome-avatar.png
        websiteUrl: https://example.com
        description: A great organization
    Organization:
      type: object
      description: An organization
      allOf:
        - $ref: '#/components/schemas/OrganizationCreateResponse'
        - $ref: '#/components/schemas/OrganizationCreateRequest'
        - type: object
          properties:
            createdAt:
              type: string
              format: date-time
            updatedAt:
              type: string
              format: date-time
            type:
              type: string
              example: Organization
          required:
            - createdAt
            - updatedAt
            - type
          example:
            createdAt: '2017-07-08T16:18:44-04:00'
            updatedAt: '2017-07-08T16:18:44-04:00'
            type: Organization
    OrganizationsPage:
      type: object
      description: A page of organizations
      allOf:
        - $ref: '#/components/schemas/PageMetadata'
        - type: object
          properties:
            organizations:
              description: A list of organizations
              type: array
              items:
                $ref: '#/components/schemas/Organization'
          required:
            - organizations
      x-java-class-annotations:
        - '@lombok.Builder'
    Error:
      type: object
      description: Problem details (tools.ietf.org/html/rfc7807)
      properties:
        title:
          type: string
          description: A human readable documentation for the problem type
        status:
          type: integer
          description: The HTTP status code
        detail:
          type: string
          description: A human readable explanation specific to this occurrence of the problem
        type:
          type: string
          description: An absolute URI that identifies the problem type
      required:
        - title
        - status
  responses:
    BadRequest:
      description: Invalid request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    InternalServerError:
      description: The request cannot be fulfilled due to an unexpected server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
