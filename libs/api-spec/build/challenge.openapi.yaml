openapi: 3.0.3
info:
  version: 1.0.0
  title: Challenge API
  license:
    name: Apache 2.0
    url: https://github.com/Sage-Bionetworks/challenge-registry
  contact:
    name: Support
    url: https://github.com/Sage-Bionetworks/challenge-registry
  x-logo:
    url: https://Sage-Bionetworks.github.io/rocc-schemas/logo.png
servers:
  - url: http://localhost/v1
tags:
  - name: Challenge
    description: Operations about challenges.
  - name: ChallengePlatform
    description: Operations about challenge platforms.
paths:
  /challenges:
    get:
      tags:
        - Challenge
      summary: List challenges
      description: List challenges
      operationId: listChallenges
      parameters:
        - $ref: '#/components/parameters/pageNumber'
        - $ref: '#/components/parameters/pageSize'
        - $ref: '#/components/parameters/status'
        - $ref: '#/components/parameters/difficulty'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChallengesPage'
          description: Success
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /challengePlatforms:
    get:
      tags:
        - ChallengePlatform
      summary: List challenge platforms
      description: List challenge platforms
      operationId: listChallengePlatforms
      parameters:
        - $ref: '#/components/parameters/pageNumber'
        - $ref: '#/components/parameters/pageSize'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChallengePlatformsPage'
          description: Success
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /challengePlatforms/{challengePlatformId}:
    parameters:
      - $ref: '#/components/parameters/challengePlatformId'
    get:
      tags:
        - ChallengePlatform
      summary: Get a challenge platform
      description: Returns the challenge platform specified
      operationId: getChallengePlatform
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChallengePlatform'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  parameters:
    pageNumber:
      name: pageNumber
      description: The page number
      in: query
      schema:
        type: integer
        format: int32
        default: 0
        minimum: 0
    pageSize:
      name: pageSize
      description: The number of items in a single page
      in: query
      schema:
        type: integer
        format: int32
        default: 100
        minimum: 1
    status:
      name: status
      description: An array of challenge status used to filter the results.
      in: query
      required: false
      schema:
        type: array
        items:
          $ref: '#/components/schemas/ChallengeStatus'
    difficulty:
      name: difficulty
      description: An array of challenge difficulty levels used to filter the results.
      in: query
      required: false
      schema:
        type: array
        items:
          $ref: '#/components/schemas/ChallengeDifficulty'
    challengePlatformId:
      name: challengePlatformId
      in: path
      description: The unique identifier of the challenge platform.
      required: true
      schema:
        $ref: '#/components/schemas/ChallengePlatformId'
  schemas:
    ChallengeStatus:
      description: The status of the challenge.
      type: string
      enum:
        - upcoming
        - active
        - completed
      example: active
    ChallengeDifficulty:
      description: The difficulty level of a challenge.
      type: string
      enum:
        - good_for_beginners
        - intermediate
        - advanced
      example: intermediate
    PageMetadata:
      type: object
      description: The metadata of a page.
      properties:
        number:
          description: The page number.
          type: integer
          format: int32
          example: 99
        size:
          description: The number of items in a single page.
          type: integer
          format: int32
          example: 99
        totalElements:
          description: Total number of elements in the result set.
          type: integer
          format: int64
          example: 99
        totalPages:
          description: Total number of pages in the result set.
          type: integer
          format: int32
          example: 99
        hasNext:
          description: Returns if there is a next page.
          type: boolean
          example: true
        hasPrevious:
          description: Returns if there is a previous page.
          type: boolean
          example: true
      required:
        - number
        - size
        - totalElements
        - totalPages
        - hasNext
        - hasPrevious
    ChallengeId:
      description: The unique identifier of a challenge.
      type: integer
      format: int64
      example: 1
    ChallengeName:
      description: The name of the a challenge
      type: string
      minLength: 3
      maxLength: 60
      pattern: ^[a-z0-9]+(?:-[a-z0-9]+)*$
      example: awesome-challenge
    ChallengePlatformId:
      description: The unique identifier of a challenge platform.
      type: integer
      format: int64
      example: 1
    ChallengePlatformName:
      description: The name of the challenge platform.
      type: string
      minLength: 3
      maxLength: 30
      pattern: ^[a-z0-9]+(?:-[a-z0-9]+)*$
      example: example-challenge-platform
    SimpleChallengePlatform:
      type: object
      description: A simple challenge platform
      properties:
        id:
          $ref: '#/components/schemas/ChallengePlatformId'
        name:
          $ref: '#/components/schemas/ChallengePlatformName'
      required:
        - id
        - name
    Challenge:
      type: object
      description: A challenge
      properties:
        id:
          $ref: '#/components/schemas/ChallengeId'
        name:
          $ref: '#/components/schemas/ChallengeName'
        status:
          $ref: '#/components/schemas/ChallengeStatus'
        difficulty:
          $ref: '#/components/schemas/ChallengeDifficulty'
        platform:
          $ref: '#/components/schemas/SimpleChallengePlatform'
        createdAt:
          type: string
          format: date-time
          example: '2022-07-04T22:19:11Z'
        updatedAt:
          type: string
          format: date-time
          example: '2022-07-04T22:19:11Z'
      required:
        - id
        - name
        - status
        - difficulty
        - platform
        - createdAt
        - updatedAt
    ChallengesPage:
      type: object
      description: A page of challenges.
      allOf:
        - $ref: '#/components/schemas/PageMetadata'
        - type: object
          properties:
            challenges:
              description: A list of challenges.
              type: array
              items:
                $ref: '#/components/schemas/Challenge'
          required:
            - challenges
      x-java-class-annotations:
        - '@lombok.Builder'
    BasicError:
      type: object
      description: Problem details (tools.ietf.org/html/rfc7807)
      properties:
        title:
          type: string
          description: A human readable documentation for the problem type
        status:
          type: integer
          description: The HTTP status code
        detail:
          type: string
          description: A human readable explanation specific to this occurrence of the problem
        type:
          type: string
          description: An absolute URI that identifies the problem type
      required:
        - title
        - status
      x-java-class-annotations:
        - '@lombok.Builder'
    ChallengePlatformCreateRequest:
      type: object
      description: The information used to create a challenge platform
      properties:
        name:
          $ref: '#/components/schemas/ChallengePlatformName'
      required:
        - name
    ChallengePlatform:
      type: object
      description: A challenge platform
      allOf:
        - $ref: '#/components/schemas/ChallengePlatformCreateRequest'
        - type: object
          properties:
            id:
              $ref: '#/components/schemas/ChallengePlatformId'
            createdAt:
              type: string
              format: date-time
              example: '2022-07-04T22:19:11Z'
            updatedAt:
              type: string
              format: date-time
              example: '2022-07-04T22:19:11Z'
          required:
            - id
            - createdAt
            - updatedAt
    ChallengePlatformsPage:
      type: object
      description: A page of challenge platforms.
      allOf:
        - $ref: '#/components/schemas/PageMetadata'
        - type: object
          properties:
            challengePlatforms:
              description: A list of challenge platforms.
              type: array
              items:
                $ref: '#/components/schemas/ChallengePlatform'
          required:
            - challengePlatforms
      x-java-class-annotations:
        - '@lombok.Builder'
  responses:
    BadRequest:
      description: Invalid request
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/BasicError'
    InternalServerError:
      description: The request cannot be fulfilled due to an unexpected server error
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/BasicError'
    NotFound:
      description: The specified resource was not found
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/BasicError'
