/**
 * Registry of Open Community Challenges API
 * The OpenAPI specification implemented by the Challenge Registries. # Introduction TBA
 *
 * The version of the OpenAPI document: 0.6.0
 * Contact: thomas.schaffter@sagebionetworks.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { ChallengeCreateRequest } from './challengeCreateRequest';
import { ChallengeCreateResponse } from './challengeCreateResponse';
import { ChallengeAllOf } from './challengeAllOf';
import { ChallengeIncentiveType } from './challengeIncentiveType';
import { ChallengeDifficulty } from './challengeDifficulty';
import { ChallengeStatus } from './challengeStatus';
import { ChallengeSubmissionType } from './challengeSubmissionType';

/**
 * A challenge
 */
export interface Challenge {
  /**
   * The unique identifier of the challenge
   */
  id: string;
  /**
   * The name of the a challenge
   */
  name: string;
  displayName?: string;
  /**
   * A short description of the challenge
   */
  description: string | null;
  websiteUrl?: string;
  status?: ChallengeStatus;
  startDate?: string | null;
  endDate?: string | null;
  incentiveTypes?: Array<ChallengeIncentiveType> | null;
  /**
   * The unique identifier of a challenge platform
   */
  platformId?: string;
  difficulty?: ChallengeDifficulty;
  submissionTypes?: Array<ChallengeSubmissionType> | null;
  topics?: Array<string>;
  inputDataTypes?: Array<string> | null;
  doi?: string | null;
  /**
   * Number of challenge participants
   */
  participantCount?: number;
  fullName: string;
  /**
   * The unique identifier of an account
   */
  ownerId: string;
  /**
   * The unique identifier of a challenge README
   */
  readmeId: string;
  /**
   * Whether the challenge is featured
   */
  featured?: boolean;
  /**
   * Number of challenge views
   */
  viewCount?: number;
  /**
   * Number of times the challenge has been starred by users
   */
  starredCount?: number;
  createdAt: string;
  updatedAt: string;
}
