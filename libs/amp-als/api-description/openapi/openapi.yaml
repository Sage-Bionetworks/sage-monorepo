openapi: 3.0.3
info:
  version: 1.0.0
  title: AMP-ALS API
  license:
    name: Apache 2.0
    url: https://github.com/Sage-Bionetworks/sage-monorepo/blob/main/LICENSE.txt
  contact:
    name: Support
    url: https://github.com/Sage-Bionetworks/sage-monorepo
  description: Discover, explore, and contribute to AMP-ALS datasets.
servers:
  - url: http://localhost/v1
tags:
  - name: Dataset
    description: Operations about datasets.
    x-displayName: Dataset
  - name: HealthCheck
    description: Operations about health checks
    x-displayName: HealthCheck
paths:
  /datasets:
    get:
      tags:
        - Dataset
      summary: List datasets
      description: List datasets
      operationId: listDatasets
      parameters:
        - $ref: '#/components/parameters/datasetSearchQuery'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetsPage'
          description: Success
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /datasets/{datasetId}:
    parameters:
      - $ref: '#/components/parameters/datasetId'
    get:
      tags:
        - Dataset
      summary: Get a dataset
      description: Returns the dataset specified
      operationId: getDataset
      responses:
        '200':
          description: A dataset
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dataset'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /healthcheck:
    get:
      tags:
        - HealthCheck
      summary: Get health check information
      description: Get information about the health of the service
      operationId: getHealthCheck
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheck'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    DatasetSort:
      description: What to sort results by.
      type: string
      default: relevance
      enum:
        - created
        - random
        - relevance
    DatasetDirection:
      description: The direction to sort the results by.
      type: string
      nullable: true
      enum:
        - asc
        - desc
    DatasetSearchQuery:
      type: object
      description: A dataset search query.
      properties:
        pageNumber:
          description: The page number.
          type: integer
          format: int32
          default: 0
          minimum: 0
        pageSize:
          description: The number of items in a single page.
          type: integer
          format: int32
          default: 100
          minimum: 1
        sort:
          $ref: '#/components/schemas/DatasetSort'
        sortSeed:
          description: The seed that initializes the random sorter.
          type: integer
          format: int32
          minimum: 0
          maximum: 2147483647
          nullable: true
        direction:
          $ref: '#/components/schemas/DatasetDirection'
        searchTerms:
          description: A string of search terms used to filter the results.
          type: string
          example: clinical
    PageMetadata:
      type: object
      description: The metadata of a page.
      properties:
        number:
          description: The page number.
          type: integer
          format: int32
          example: 99
        size:
          description: The number of items in a single page.
          type: integer
          format: int32
          example: 99
        totalElements:
          description: Total number of elements in the result set.
          type: integer
          format: int64
          example: 99
        totalPages:
          description: Total number of pages in the result set.
          type: integer
          format: int32
          example: 99
        hasNext:
          description: Returns if there is a next page.
          type: boolean
          example: true
        hasPrevious:
          description: Returns if there is a previous page.
          type: boolean
          example: true
      required:
        - number
        - size
        - totalElements
        - totalPages
        - hasNext
        - hasPrevious
    DatasetId:
      description: The unique identifier of the dataset.
      type: integer
      format: int64
      example: 1
    DatasetName:
      description: The name of the dataset.
      type: string
      minLength: 3
      maxLength: 255
    DatasetDescription:
      description: The description of the dataset.
      type: string
      minLength: 0
      maxLength: 1000
      example: This is an example description of the dataset.
    CreatedDateTime:
      description: Datetime when the object was added to the database.
      type: string
      format: date-time
      example: '2022-07-04T22:19:11Z'
    UpdatedDateTime:
      description: Datetime when the object was last modified in the database.
      type: string
      format: date-time
      example: '2022-07-04T22:19:11Z'
    Dataset:
      type: object
      description: A dataset
      properties:
        id:
          $ref: '#/components/schemas/DatasetId'
        name:
          $ref: '#/components/schemas/DatasetName'
        description:
          $ref: '#/components/schemas/DatasetDescription'
        createdAt:
          $ref: '#/components/schemas/CreatedDateTime'
        updatedAt:
          $ref: '#/components/schemas/UpdatedDateTime'
      required:
        - id
        - name
        - description
        - createdAt
        - updatedAt
    DatasetsPage:
      type: object
      description: A page of datasets.
      allOf:
        - $ref: '#/components/schemas/PageMetadata'
        - type: object
          properties:
            datasets:
              description: A list of datasets.
              type: array
              items:
                $ref: '#/components/schemas/Dataset'
          required:
            - datasets
      x-java-class-annotations:
        - '@lombok.Builder'
    BasicError:
      type: object
      description: Problem details (tools.ietf.org/html/rfc7807)
      properties:
        title:
          type: string
          description: A human readable documentation for the problem type
        status:
          type: integer
          description: The HTTP status code
        detail:
          type: string
          description: A human readable explanation specific to this occurrence of the problem
        type:
          type: string
          description: An absolute URI that identifies the problem type
      required:
        - title
        - status
      x-java-class-annotations:
        - '@lombok.AllArgsConstructor'
        - '@lombok.Builder'
    HealthCheck:
      type: object
      description: Represents the health of a service
      properties:
        status:
          description: Indicates whether the service status is acceptable or not
          type: string
          enum:
            - pass
            - fail
            - warn
      required:
        - status
  parameters:
    datasetSearchQuery:
      name: datasetSearchQuery
      description: The search query used to find datasets.
      in: query
      schema:
        $ref: '#/components/schemas/DatasetSearchQuery'
    datasetId:
      name: datasetId
      in: path
      description: The unique identifier of the dataset.
      required: true
      schema:
        $ref: '#/components/schemas/DatasetId'
  responses:
    BadRequest:
      description: Invalid request
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/BasicError'
    InternalServerError:
      description: The request cannot be fulfilled due to an unexpected server error
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/BasicError'
    NotFound:
      description: The specified resource was not found
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/BasicError'
x-tagGroups:
  - name: AMP-ALS Dataset Service API
    tags:
      - Dataset
  - name: AMP-ALS User Service API
    tags:
      - HealthCheck
