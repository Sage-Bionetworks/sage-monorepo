/**
 * Synapse REST API
 *
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { OrgSagebionetworksRepoModelAuthUserEntityPermissions } from './org-sagebionetworks-repo-model-auth-user-entity-permissions';
import { OrgSagebionetworksRepoModelRestrictionInformationResponse } from './org-sagebionetworks-repo-model-restriction-information-response';
import { OrgSagebionetworksRepoModelAnnotationV2Annotations } from './org-sagebionetworks-repo-model-annotation-v2-annotations';
import { OrgSagebionetworksRepoModelProvenanceActivity } from './org-sagebionetworks-repo-model-provenance-activity';
import { OrgSagebionetworksRepoModelEntityPath } from './org-sagebionetworks-repo-model-entity-path';
import { OrgSagebionetworksRepoModelTableTableBundle } from './org-sagebionetworks-repo-model-table-table-bundle';
import { OrgSagebionetworksRepoModelDoiV2DoiAssociation } from './org-sagebionetworks-repo-model-doi-v2-doi-association';
import { OrgSagebionetworksRepoModelEntity } from './org-sagebionetworks-repo-model-entity';
import { OrgSagebionetworksRepoModelAccessControlList } from './org-sagebionetworks-repo-model-access-control-list';
import { OrgSagebionetworksRepoModelFileFileHandle } from './org-sagebionetworks-repo-model-file-file-handle';

/**
 * Bundle to transport an Entity and related data objects
 */
export interface OrgSagebionetworksRepoModelEntitybundleV2EntityBundle {
  entity?: OrgSagebionetworksRepoModelEntity;
  /**
   * Type of the Entity
   */
  entityType?: OrgSagebionetworksRepoModelEntitybundleV2EntityBundle.EntityTypeEnum;
  annotations?: OrgSagebionetworksRepoModelAnnotationV2Annotations;
  permissions?: OrgSagebionetworksRepoModelAuthUserEntityPermissions;
  path?: OrgSagebionetworksRepoModelEntityPath;
  /**
   * Whether or not this Entity has children
   */
  hasChildren?: boolean;
  accessControlList?: OrgSagebionetworksRepoModelAccessControlList;
  /**
   * FileHandles associated with this Entity
   */
  fileHandles?: Array<OrgSagebionetworksRepoModelFileFileHandle>;
  tableBundle?: OrgSagebionetworksRepoModelTableTableBundle;
  /**
   * Id of the root Wiki associated with this Entity
   */
  rootWikiId?: string;
  benefactorAcl?: OrgSagebionetworksRepoModelAccessControlList;
  doiAssociation?: OrgSagebionetworksRepoModelDoiV2DoiAssociation;
  /**
   * If this Entity is a FileEntity, this is its filename
   */
  fileName?: string;
  /**
   * Number of disucssion threads that reference this Entity
   */
  threadCount?: number;
  restrictionInformation?: OrgSagebionetworksRepoModelRestrictionInformationResponse;
  activity?: OrgSagebionetworksRepoModelProvenanceActivity;
}
export namespace OrgSagebionetworksRepoModelEntitybundleV2EntityBundle {
  export type EntityTypeEnum =
    | 'project'
    | 'folder'
    | 'file'
    | 'table'
    | 'link'
    | 'entityview'
    | 'dockerrepo'
    | 'submissionview'
    | 'dataset'
    | 'datasetcollection'
    | 'materializedview'
    | 'virtualtable'
    | 'recordset';
  export const EntityTypeEnum = {
    Project: 'project' as EntityTypeEnum,
    Folder: 'folder' as EntityTypeEnum,
    File: 'file' as EntityTypeEnum,
    Table: 'table' as EntityTypeEnum,
    Link: 'link' as EntityTypeEnum,
    Entityview: 'entityview' as EntityTypeEnum,
    Dockerrepo: 'dockerrepo' as EntityTypeEnum,
    Submissionview: 'submissionview' as EntityTypeEnum,
    Dataset: 'dataset' as EntityTypeEnum,
    Datasetcollection: 'datasetcollection' as EntityTypeEnum,
    Materializedview: 'materializedview' as EntityTypeEnum,
    Virtualtable: 'virtualtable' as EntityTypeEnum,
    Recordset: 'recordset' as EntityTypeEnum,
  };
}
