/**
 * Synapse REST API
 *
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { OrgSagebionetworksRepoModelEntityRef } from './org-sagebionetworks-repo-model-entity-ref';
import { OrgSagebionetworksRepoModelLimitsProjectStorageUsage } from './org-sagebionetworks-repo-model-limits-project-storage-usage';
import { OrgSagebionetworksRepoModelReference } from './org-sagebionetworks-repo-model-reference';
import { OrgSagebionetworksRepoModelAnnotationV2Annotations } from './org-sagebionetworks-repo-model-annotation-v2-annotations';
import { OrgSagebionetworksRepoModelTableCsvTableDescriptor } from './org-sagebionetworks-repo-model-table-csv-table-descriptor';
import { OrgSagebionetworksRepoModelVersionInfo } from './org-sagebionetworks-repo-model-version-info';

/**
 * Data record from a node object.
 */
export interface OrgSagebionetworksRepoModelAuditNodeRecord {
  isPublic?: boolean;
  isRestricted?: boolean;
  isControlled?: boolean;
  benefactorId?: string;
  projectId?: string;
  effectiveArs?: Array<number>;
  /**
   * The list of entity versions.
   */
  versionHistory?: Array<OrgSagebionetworksRepoModelVersionInfo>;
  annotations?: OrgSagebionetworksRepoModelAnnotationV2Annotations;
  derivedAnnotations?: OrgSagebionetworksRepoModelAnnotationV2Annotations;
  internalAnnotations?: OrgSagebionetworksRepoModelAnnotationV2Annotations;
  projectStorageUsage?: OrgSagebionetworksRepoModelLimitsProjectStorageUsage;
  id?: string;
  name?: string;
  description?: string;
  parentId?: string;
  createdByPrincipalId?: number;
  createdOn?: string;
  modifiedByPrincipalId?: number;
  modifiedOn?: string;
  /**
   * Type of the Entity
   */
  nodeType?: OrgSagebionetworksRepoModelAuditNodeRecord.NodeTypeEnum;
  eTag?: string;
  versionNumber?: number;
  versionComment?: string;
  versionLabel?: string;
  isLatestVersion?: boolean;
  activityId?: string;
  fileHandleId?: string;
  columnModelIds?: Array<string>;
  /**
   * For FileVeiws, the list of IDs the define the scope of the view.
   */
  scopeIds?: Array<string>;
  /**
   * For Datasets and Dataset Collections, the list of entity references the define the view.
   */
  items?: Array<OrgSagebionetworksRepoModelEntityRef>;
  /**
   * For RecordSet, one or more column names that define this upsert key.
   */
  upsertKey?: Array<string>;
  csvDescriptor?: OrgSagebionetworksRepoModelTableCsvTableDescriptor;
  reference?: OrgSagebionetworksRepoModelReference;
  alias?: string;
  /**
   * For table entities, specifies if the full text search index is enabled or not.
   */
  isSearchEnabled?: boolean;
  /**
   * For materialized views and virtual tables, specifies the SQL defining the content of the table.
   */
  definingSQL?: string;
}
export namespace OrgSagebionetworksRepoModelAuditNodeRecord {
  export type NodeTypeEnum =
    | 'project'
    | 'folder'
    | 'file'
    | 'table'
    | 'link'
    | 'entityview'
    | 'dockerrepo'
    | 'submissionview'
    | 'dataset'
    | 'datasetcollection'
    | 'materializedview'
    | 'virtualtable'
    | 'recordset';
  export const NodeTypeEnum = {
    Project: 'project' as NodeTypeEnum,
    Folder: 'folder' as NodeTypeEnum,
    File: 'file' as NodeTypeEnum,
    Table: 'table' as NodeTypeEnum,
    Link: 'link' as NodeTypeEnum,
    Entityview: 'entityview' as NodeTypeEnum,
    Dockerrepo: 'dockerrepo' as NodeTypeEnum,
    Submissionview: 'submissionview' as NodeTypeEnum,
    Dataset: 'dataset' as NodeTypeEnum,
    Datasetcollection: 'datasetcollection' as NodeTypeEnum,
    Materializedview: 'materializedview' as NodeTypeEnum,
    Virtualtable: 'virtualtable' as NodeTypeEnum,
    Recordset: 'recordset' as NodeTypeEnum,
  };
}
