/**
 * Synapse REST API
 *
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { OrgSagebionetworksRepoModelGridQueryFilter } from './org-sagebionetworks-repo-model-grid-query-filter';
import { OrgSagebionetworksRepoModelGridQuerySelectItem } from './org-sagebionetworks-repo-model-grid-query-select-item';

/**
 * Defines a structured query using JSON SelectItems and Filters objects - NOT SQL syntax. Use the predefined SelectItems and Filters with specific concreteType values.
 */
export interface OrgSagebionetworksRepoModelGridQueryQuery {
  /**
   * One or more SelectItem is required to define the columns that will be returned by this query.  Each SelectItem must be a complete JSON object with the required \'concreteType\' property. IMPORTANT: Do not use SQL syntax - use the predefined SelectItem objects. Examples: To select all columns: {\"concreteType\":\"org.sagebionetworks.repo.model.grid..query.SelectAll\"}. To select the count of the number of rows use: {\"concreteType\":\"org.sagebionetworks.repo.model.grid.query.function.CountStar\"}
   */
  columnSelection?: Array<OrgSagebionetworksRepoModelGridQuerySelectItem>;
  /**
   * Optional. Each filter must be a complete JSON object with the required \'concreteType\' property. IMPORTANT: Do not use SQL syntax - use the predefined filter objects. Examples: To find invalid rows: [{\"concreteType\":\"org.sagebionetworks.repo.model.grid.query.RowIsValidFilter\",\"value\":false}]. To find rows where \'age\' > 25: [{\"concreteType\":\"org.sagebionetworks.repo.model.grid.query.CellValueFilter\",\"columnName\":\"age\",\"operator\":\"GREATER_THAN\",\"value\":[25]}]. Multiple filters are combined with AND logic.
   */
  filters?: Array<OrgSagebionetworksRepoModelGridQueryFilter>;
  /**
   * Required. Limit of the number of rows returned to avoid loading more data than needed into your context window.
   */
  limit?: number;
  /**
   * Optional. specifies the offset of the first row to return.
   */
  offset?: number;
}
