/**
 * Synapse REST API
 *
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { OrgSagebionetworksRepoModelTableSortItem } from './org-sagebionetworks-repo-model-table-sort-item';
import { OrgSagebionetworksRepoModelTableFacetColumnRequest } from './org-sagebionetworks-repo-model-table-facet-column-request';
import { OrgSagebionetworksRepoModelTableCsvTableDescriptor } from './org-sagebionetworks-repo-model-table-csv-table-descriptor';
import { OrgSagebionetworksRepoModelTableQueryFilter } from './org-sagebionetworks-repo-model-table-query-filter';

/**
 * A CSV table download request.
 */
export interface OrgSagebionetworksRepoModelTableDownloadFromTableRequest {
  concreteType: OrgSagebionetworksRepoModelTableDownloadFromTableRequest.ConcreteTypeEnum;
  entityId?: string;
  /**
   * Should the first line contain the columns names as a header in the resulting file?  Set to \'true\' to include the headers else, \'false\'.  The default value is \'true\'.
   */
  writeHeader?: boolean;
  /**
   * Should the first two columns contain the row ID and row version?  The default value is \'true\'.
   */
  includeRowIdAndRowVersion?: boolean;
  csvTableDescriptor?: OrgSagebionetworksRepoModelTableCsvTableDescriptor;
  /**
   * The optional name for the downloaded table.
   */
  fileName?: string;
  /**
   * The SQL query string.
   */
  sql?: string;
  /**
   * Appends additional filters to the SQL query. These are applied before facets. Filters within the list have an AND relationship. If a WHERE clause already exists on the SQL query or facets are selected, it will also be ANDed with the query generated by these additional filters.
   */
  additionalFilters?: Array<OrgSagebionetworksRepoModelTableQueryFilter>;
  /**
   * The selected facet filters.
   */
  selectedFacets?: Array<OrgSagebionetworksRepoModelTableFacetColumnRequest>;
  /**
   * Optional, default false. When true, a query results against views will include the Etag of each entity in the results.  Note: The etag is necessary to update Entities in the view.
   */
  includeEntityEtag?: boolean;
  /**
   * The id of the column used to select file entities (e.g. to fetch the action required for download). The column needs to be an ENTITYID type column and be part of the schema of the underlying table/view.
   */
  selectFileColumn?: number;
  /**
   * The id of the column used as the version for selecting file entities when required (e.g. to add a materialized view query to the download cart with version enabled). The column needs to be an INTEGER type column and be part of the schema of the underlying table/view.
   */
  selectFileVersionColumn?: number;
  /**
   * The optional offset into the results
   */
  offset?: number;
  /**
   * The optional limit to the results
   */
  limit?: number;
  sort?: Array<OrgSagebionetworksRepoModelTableSortItem>;
}
export namespace OrgSagebionetworksRepoModelTableDownloadFromTableRequest {
  export type ConcreteTypeEnum = 'org.sagebionetworks.repo.model.table.DownloadFromTableRequest';
  export const ConcreteTypeEnum = {
    OrgSagebionetworksRepoModelTableDownloadFromTableRequest:
      'org.sagebionetworks.repo.model.table.DownloadFromTableRequest' as ConcreteTypeEnum,
  };
}
