openapi: 3.0.1
info:
  title: Synapse REST API
  version: v1
servers:
  - url: https://repo-prod.prod.sagebase.org
tags:
  - name: Access Approval Services
    description: |-
      The Access Approval services manage the fulfillment of Access Requirements, on a per-user basis.  
       (See <a href="#org.sagebionetworks.repo.web.controller.AccessRequirementController">
       Access Requirement Services</a> for more information.)  Most of the Access Approval services
       are available only to members of the Synapse Access and Compliance Team (ACT).
  - name: Access Requirement Services
    description: |-
      These services manage the Access Requirements/Restrictions (ARs) which may be placed on Entities,
       or Teams.  An Access Requirement specifies the type of access being restricted as well
       as how the requirement is fulfilled. 
       <p>
       ARs complement Access Control Lists (ACLs) for managing access to Synapse objects.
       While ACLs are managed by entity owners, ARs are managed by the Synapse Access and Compliance Team (ACT), which is
       responsible for governance of sensitive data.  Before one may access data associated with an 
       AR, there must be a corresponding Access Approval.  For certain ARs --
       of the "self-sign" variety -- one may grant ones own approval by agreeing to associated
       'terms of use.'  For other Access Requirements -- of the 'ACT' variety -- approval may be granted
       only by the ACT.
       </p>
       <p>
       As stated above, an AR specifies the type of access being controlled.  Generally
       entities are restricted with DOWNLOAD access.  A Synapse user may be able to see that a Synapse
       File exists, but be unable to download the content due to such an AR.  Teams are
       restricted using the PARTICIPATE access type:  Prior to joining a Team a user must fulfill any
       associated ARs controlling this type of access.
       </p>
       <p>
       Entity ARs are inherited from ancestors.  E.g. an AR applied to a Folder will control all Files in the Folder, 
       or within sub-folders of the Folder.  Access Requirements are cumulative:  A File will be controlled both
       by ARs applied to it directly and by ARs applied to any and all of its ancestors.
       </p>
       <p>
       Access Requirements are fulfilled on a per-user basis using the <a href="#org.sagebionetworks.repo.web.controller.AccessApprovalController">
       Access Approval Services</a>.
       </p>
  - name: Activity Services
    description: |-
      <p>
       The <a href="${org.sagebionetworks.repo.model.provenance.Activity}">Activity</a>
       model represents the main record of Provenance in Synapse. It is analygous to
       the Activity defined in the <a href="http://www.w3.org/TR/prov-primer/">W3C
       Specification on Provenance</a>.
       </p>
       <h6>Used & Generated By</h6>
       <p>
       Used links are stored directly in the Activity model object as an array of <a href="${org.sagebionetworks.repo.model.provenance.Used}">Used</a> objects.
       There is a flag in <a href="${org.sagebionetworks.repo.model.provenance.Used}">Used</a> that marks
       if it was "executed". <a href="${org.sagebionetworks.repo.model.provenance.Used}">Used</a> is an
       interface that is implemented by two objects:
       </p>
       <ul>
       <li><a href="${org.sagebionetworks.repo.model.provenance.UsedEntity}">UsedEntity</a>
       - For referencing <a href="${org.sagebionetworks.repo.model.Entity}">Entities</a> already stored
       in Synapse</li>
       <li><a href="${org.sagebionetworks.repo.model.provenance.UsedURL}">UsedURL</a> - For
       referencing URL-accessed resources stored outside of Synapse. In Provenance
       visualizations, some URLs are given a special icon, such as links to <a href="https://github.com/">GitHub</a>. Note: it is also possible to wrap a
       URL with a <a href="${org.sagebionetworks.repo.model.FileEntity}">FileEntity</a> if you
       want all the resources that come with Synapse entities.</li>
       </ul>
       <p>
       wasGeneratedBy links are stored for each version of each Entity. Thus you
       update the entity with the activity id that generated it. You can ask the
       entity service which activity generated it, and conversely you can ask the
       activity service what entity versions were generatedBy a given activity.
       </p>
       <h6>Access Control for Activities</h6>
       <p>
       Access to <a href="${org.sagebionetworks.repo.model.provenance.Activity}">Activity</a>
       objects is dictated by the following rules:
       <ul>
       <li><b>READ</b> - Granted to those users who can see a single Entity that was
       generated by this Activity.</li>
       <li><b>UPDATE/DELETE</b> - You must be the creator of the Activity to modify
       or delete it.</li>
       <li><b>Setting generatedBy for an Entity</b> (see <a href="${POST.entity}">POST
       /entity</a>) - You must be the creator of the activity to connect it to
       an Entity. (The Entity services allow you to specify an activityId that
       creates a generatedBy relationship between an Activity and an Entity.)</li>
       </ul>
       
       </p>
  - name: Agent Chat Services
    description: |-
      The Synapse chat services allow the user to chat with a 'bot' (agent) that
       has access to Synapse data. By default, Synapse provides a 'baseline' agent
       that has basic access to all of the supported Synapse action group functions
       and knowledge bases. Sage authorized collaborators can create their own
       agents that can also utilize the same action groups and knowledge bases used
       by the baseline agent. The collaborator's agent can then be used to override
       the baseline agent for chat sessions.
       </p>
       To get started, the first step is to create a new session by calling:
       <a href="${POST.agent.session}">POST /agent/session</a>. You will need the
       sessionId from the resulting <a href="${org.sagebionetworks.repo.model.agent.AgentSession}">AgentSession</a>. The
       sessionId uniquely identifies a single conversation between the user and the
       agent. Specifically, the session contains user's chat requests, agent
       responses and all of the data gathered by the agent to meet user requests.
       The session data is the context provided to the Large Language Model (LLM)
       used by the agent. Only the user that create a session will have access to
       its data and be able to use it for an agent conversation.
       </p>
       The user's conversation with an agent is a series of asynchronous jobs under
       the provided sessionId, where each job is started by providing the user's
       prompt to the agent. The job's response will then include the agent's
       response to the user's prompt. Use:
       <a href="POST.agent.chat.async.start">POST /agent/chat/async/start</a> to
       start a chat job and <a href="GET.agent.chat.async.get.asyncToken">GET
       /agent/chat/async/get/{asyncToken}</a> to get the job's results.
  - name: Asynchronous Job Services
    description: |-
      This is a generic set of services that provides support for both launching
       asynchronous jobs and monitoring the progress of jobs.
  - name: Authentication Services
    description: |-
      <p>
       Provides REST APIs for managing and obtaining the necessary credentials to access Synapse.
       </p>
       <p>
       Authentication to Synapse services requires an access token passed in the HTTP Authorization
       header, as per the <a href="https://tools.ietf.org/html/rfc6750#section-2.1">HTTP bearer authorization</a> standard.
       The access token incorporates a set of 'scopes' and the documentation for each service requiring 
       authorization lists the scopes which the access token must include in order to use that service.
       <p/>
       <p>
       Synapse currently supports four modes of obtaining an access token:
       </p>
       <ul>
       <li>Present username and password</li>
       <li>Authentication via a whitelisted OAuth 2.0 provider</li>
       <li>Authentication via a registered OAuth 2.0 client</li>
       <li>Exchange an access token for Personal Access Token</li>
       </ul>
       <p>
       The username and password are exchanged for an access token 
       using <a href="${POST.login2}">POST /login2</a> service.
       This method should only be used by Synapse itself.  No other 
       application should prompt a user for their user name and password.
       </p>
       <p>
       Synapse allows authentication via a white listed OAuth 2.0 provider.  Currently only Google is supported.
       The final step is <a href="${POST.oauth2.session2}">POST /oauth2/session2</a> which returns an access token
       which is included as a Bearer token in the Authorization header of 
       subsequent requests as described above.  Only Synapse itself may use this service, as redirection back
       from the OAuth2 provider is only allowed to the Synapse web portal.
       </p>
       <p>
       A registered OAuth 2.0 client can use the <a href="#org.sagebionetworks.auth.controller.OpenIDConnectController">OAuth 2.0 services</a>
       to authenticate, the final step of which is a request to the token endpoint:
       <a href="${POST.oauth2.token}">POST /oauth2/token</a>
       The returned access token is included as a Bearer token in the Authorization header of 
       subsequent requests as described above.
       </p>
       <p>
       A user may freely generate up to 100 Personal access tokens (PATs) with scoped access using 
       <a href="${POST.personalAccessToken}">POST /personalAccessToken</a>. Unlike OAuth access tokens,
       <ul>
           <li>PATs can be freely generated by a user alone and are not linked to any third party OAuth client and</li>
           <li>While ATs have a strict 24 hour lifetime, PATs are long lived, and will only expire if unused for 180 consecutive days</li>
       </ul>
       For these reasons, it is critical to treat PATs as sensitive credentials, like passwords. If a user creates more than 100 tokens, then
       the least-recently used token(s) will be deleted until the user has no more than 100 tokens.
       </p>
       <p>
       The returned personal access token is included as a Bearer token in the Authorization header of 
       subsequent requests as described above.
       </p>
  - name: Authentication Services (2FA)
    description: |-
      <p>
       APIs to manage two factor authentication (2FA) in Synapse.
       </p
       <p>
       Synapse currently supports using authenticator applications that can generate a <a href="https://en.wikipedia.org/wiki/Time-based_one-time_password">TOTP</a> that is used as a second factor. 
       </p>
       <p>
       To enable 2FA two requests are involved:
       
       <ol>
       <li><a href="${POST.2fa.enroll}">POST /2fa/enroll</a>: Generates a shared secret that is added to the user authenticator application</li>
       <li><a href="${POST.2fa}">POST /2fa</a>: Enables a specific secret generated by 1. to be used as second factor</li>
       </ol>
       </p>
       
       <p>
       In order to login through 2FA an additional request needs to be performed after the user attempts to authenticate (e.g. through the <a href="${POST.login2}">POST /login2</a> API). 
       If the user has 2FA enabled, they will receive a 401 and the body of the response will contain a twoFaToken that can be used in the <a href="${POST.2fa.token}">POST /2fa/token</a> API to obtain an access token.
       </p>
       
       <p>
       The user can additionally generate a set of recovery codes using the <a href="${POST.2fa.recoveryCodes}">POST /2fa/recoveryCodes</a> API. The codes are one time use and can be used in place of a TOTP code when
       performing 2FA authentication. The body of the <a href="${POST.2fa.token}">POST /2fa/token</a> request should specify as otpType RECOVERY_CODE and the value of the otpCode should match one of the generated codes.
       </p>
  - name: Certified User Services
    description: |-
      To become a Synapse Certified User you must pass a test.  The Synapse APIs include
       a service to provide the test and a service to submit a test result.  There are also
       administrative services to retrieve the history of test submissions.
  - name: Challenge Services
    description: |-
      A Challenge is a special object that supplements a project, providing additional features
       specific to challenges.  This set of services provides "CRUD" for Challenge objects and
       ChallengeTeam objects, which register a Team for a Challenge.  The services also provide
       a number of queries regarding Challenges, challenge participants and challenge Teams.
  - name: Curation Task Services
    description: |-
      The Curation Task services are used to manage <a href="${org.sagebionetworks.repo.model.curation.CurationTask}">Curation Tasks</a>.
       Curation tasks are used to guide data contributors through the process of contributing data or metadata in Synapse.
  - name: DOI Services
    description: Provides REST APIs for managing Synapse DOIs.
  - name: Data Access Services
    description: |-
      <p>Some data in Synapse are governed by an ACTAccessRequirement. To gain access
       to these data, a user must meet all requirements specified in the ACTAccessRequirement.</p>
       <br>
       <p>These services provide the APIs for users to create request to gain access to 
       controlled data, and APIs for the ACT to review and grant access to users.</p>
  - name: Discussion Services
    description: |-
      <p>Discussions in Synapse are captured in the Project's Forum. Each 
       Project has a Forum. Each Forum has a set of Moderators. The Moderators manage 
       the content of the Forum.</p>
       <br>
       <p>A Forum has multiple Threads. A Thread is created by an authorized user. 
       Other authorized users can view and reply to an existing Thread.</p>
       <br>
       <p>These services provide the APIs for Moderators and authorized users to 
       create, edit, and manage the conversations that happen in Synapse.</p>
       <br>
  - name: Docker Authorization Services
    description: |-
      These services allow Synapse to act as an authorization service for a Docker Registry.
       For more details see: https://github.com/docker/distribution/blob/master/docs/spec/auth/token.md
       
       Authorization is either:
       <ul>
       <li>User name and password, included in the request as a Basic Authorization header</li>
       <li>An oauth access token, passed as a Bearer Authorization header.  To execute 'docker pull' the access token must include 'download'
       scope; to execute 'docker push' the access token must include 'modify' scope and should include 'download' scope.</li>
       </ul>
  - name: Docker Commit Services
    description: |-
      These services relate to the 'commits' to Docker repositories.
       Note that create, update and delete of the Docker repositories themselves are done using
       the <a href="#org.sagebionetworks.repo.web.controller.EntityController">Entity Services</a>,
       for external/unmanaged repositories, or by direct integration with the Docker registry, for managed
       Docker repositories.  Tagged commits for both managed and external/unmanaged repositories may be
       retrieved using the 'listDockerTags' API included in this service.
  - name: Docker Registry Event Services
    description: |-
      These services process events from the Docker Registry.
       They are separated from other Docker Controllers because the authorization 
       is different, i.e. basic authorization using a key/value pair.
       
       These services are not intended to be used by Synapse clients, only by
       the Docker registry.
  - name: Download List Services
    description: |-
      Services for managing a user's download list.
       </p>
       Files can be added to the user's download list using
       <a href="${POST.download.list.add}">POST /download/list/add</a>. Files can be
       removed from the user's download by calling either
       <a href="${POST.download.list.remove}">POST /download/list/remove</a>, or the
       entire list can be cleared with: <a href="${DELETE.download.list}">DELETE
       /download/list</a>.
       </p>
       In order to query the files on a user's download list, first start an
       asynchronous job using <a href="${POST.download.list.query.async.start}">POST
       /download/list/query/async/start</a> to get an asynchToken. The job results
       can be monitored using
       <a href="${GET.download.list.query.async.get.asyncToken}">GET
       /download/list/query/async/get/{asyncToken}</a>. While the job is still
       processing the GET call will return a status code of 202 (ACCEPTED). Once the
       job is complete the GET call will return a status code of 200 with the
       response body.
       </p>
       <b>Download List Service Limits</b>
       <table border="1">
       <tr>
       <th>resource</th>
       <th>limit</th>
       <th>notes</th>
       </tr>
       <tr>
       <td>Maximum number of files on a user's download list</td>
       <td>100,000 files</td>
       <td></td>
       </tr>
       <tr>
       <td>Maximum batch size for adding/removing files</td>
       <td>1000 files</td>
       <td></td>
       </tr>
       </table>
  - name: Drs Services
    description: |-
      <p>
       The <a href="https://ga4gh.github.io/data-repository-service-schemas/preview/release/drs-1.2.0/docs/">
       Data Repository Service</a> API provides access to data objects in single, standard way regardless of
       where they are stored and how they are managed. The data objects for which information can be fetched are 
       <a href="${org.sagebionetworks.repo.model.FileEntity}">FileEntity</a> and
       <a href="${org.sagebionetworks.repo.model.table.Dataset}">Dataset</a>.The data object that is downloaded is a file.
       </p>
       <p>
       The supported end points for DRS are:
           <ul>
               <li><a href="${GET.service-info}"> GET /service-info</a></li>
               <li><a href="${GET.objects.object_id}"> GET /objects/{object_id}</a></li>
           </ul>
       </p>
       <p>
           Use the <a href="${GET.service-info}"> GET /service-info </a> API to get information about GA4GH-compliant web services,
           including DRS services, to be aggregated into registries and made available via a standard API.
           </p>
           Use the <a href="${GET.objects.object_id}"> GET /objects/{object_id} </a> API to get information about individual DRS objects.
           </p>
  - name: Entity Bundle Services V2
    description: |-
      <p>
       The Entity Bundle Services provide bundled access to Entities and their related data components.
       An EntityBundle can be used to create, fetch, or update an Entity and associated objects with a
       single web service request.
       </p>
  - name: Entity Services
    description: |-
      <p>
       All data in Synapse is organize into
       <a href="${org.sagebionetworks.repo.model.Project}">Projects</a>. These
       Projects can be further organized into hierarchical
       <a href="${org.sagebionetworks.repo.model.Folder}">Folders</a>. Finally, the
       data is then represented by
       <a href="${org.sagebionetworks.repo.model.FileEntity}">FileEntities</a> that
       reside within Folders or directly within Projects. All these objects
       (Projects, Folders, FileEntities) are derived from a common object called
       <a href="${org.sagebionetworks.repo.model.Entity}">Entity</a>. The Entity
       Services provide the means to create, read, update, and delete Synapse
       Entities. There are also services for navigating the Entity hierarchies ,
       setting Authorization rules, and Annotating Entities.
       </p>
       <p>
       In addition to the basic entity types (Project, Folder, & FileEntity),
       Synapse also supports the following Entity types:
       <ul>
       <li><a href="${org.sagebionetworks.repo.model.table.TableEntity}">TableEntity</a></li>
       <li><a href="${org.sagebionetworks.repo.model.docker.DockerRepository}">DockerRepository</a></li>
       <li><a href="${org.sagebionetworks.repo.model.table.EntityView}">EntityView</a></li>
       <li><a href="${org.sagebionetworks.repo.model.table.SubmissionView}">SubmissionView</a></li>
       <li><a href="${org.sagebionetworks.repo.model.table.Dataset}">Dataset</a></li>
       <li><a href="${org.sagebionetworks.repo.model.table.DatasetCollection}">DatasetCollection</a></li>
       <li><a href="${org.sagebionetworks.repo.model.table.MaterializedView}">MaterializedView</a></li>
       <li><a href="${org.sagebionetworks.repo.model.table.VirtualTable}">VirtualTable</a></li>
       <li><a href="${org.sagebionetworks.repo.model.RecordSet}">RecordSet</a></li>
       </ul>
       </p>
       <p>
       The following methods provide the basic Create, Read, Update, Delete (CRUD)
       for Entities:
       </p>
       <ul>
       <li><a href="${POST.entity}">POST /entity</a></li>
       <li><a href="${GET.entity.id}">GET /entity/{id}</a></li>
       <li><a href="${PUT.entity.id}">PUT /entity/{id}</a></li>
       <li><a href="${DELETE.entity.id}">DELETE /entity/{id}</a></li>
       </ul>
       <h6>Annotations</h6>
       <p>
       An Entity can be annotated using the
       <a href="${PUT.entity.id.annotations2}">PUT /entity/{id}/annotations2</a>
       method. Each annotation is a key-value pair. The
       <a href="${GET.entity.id.annotations2}">GET /entity/{id}/annotations2</a>
       method can be used to get the current annotations of an entity.
       </p>
       <h6>Authorization</h6>
       <p>
       An Entity's authorization is controlled by the Entity's
       <a href="${org.sagebionetworks.repo.model.AccessControlList}">Access Control
       List (ACL)</a>. When a new Project is created a new ACL is automatically
       created for the Project. New Folders and FileEnties start off inheriting the
       ACL of their containing Project. This means they do not have their own ACL
       and all authorization is controlled by their Project's ACL. The term
       'benefactor' is used to indicate which Entity an Entity inherits its ACL
       from. For example, a newly created Project will be its own benefactor, while
       a new FileEntity's benefactor will start off as its containing Project. The
       current benefactor of any Entity can be determined using the
       <a href="${GET.entity.id.benefactor}">GET /entity/{id}/benefactor</a> method.
       </p>
       <p>
       For the case where a Folder or FileEntity needs its own ACL (as opposed to
       inheriting it from its containing Project) a new ACL can be created for the
       Entity using the <a href="${POST.entity.id.acl}">POST /entity/{id}/acl</a>
       method. When a new ACL is created for an Entity it will no longer inherit its
       permission from its containing Project and it will become its own benefactor.
       </p>
       <p>
       While creating or updating an ACL, only Certified Users can add DOWNLOAD
       permission for Authenticated Users group.
       </p>
       <p>
       For the case where a Folder or FileEntity no longer needs its own ACL, the
       ACL can deleted using the <a href="${DELETE.entity.id.acl}">DELETE
       /entity/{id}/acl</a> method. When the ACL of an File or Folder is deleted, it
       will automatically be assigned the same benefactor as its parent Entity.
       Deleting the ACL of a Project is not allowed.
       </p>
       <p>
       The <a href="${GET.entity.id.acl}">GET /entity/{id}/acl</a> can be used to
       get an Entity's ACL.
       </p>
       <p>
       To determine what permissions a User has on an Entity, the
       <a href="${GET.entity.id.permissions}">GET /entity/{id}/permissions</a>
       method should be used.
       </p>
       <p>
       In addition to authorization via ACLs, entities may be restricted via
       AccessRequirements (ARs). For more information, see <a href="#org.sagebionetworks.repo.web.controller.AccessRequirementController">
       Access Requirement Services</a> and
       <a href="#org.sagebionetworks.repo.web.controller.AccessApprovalController">
       Access Approval Services</a>
       </p>
       <h6>Versions</h6>
       <p>
       Currently,
       <a href="${org.sagebionetworks.repo.model.FileEntity}">FileEntities</a> are
       "versionable" meaning it is possible for it to have multiple versions of the
       file. Whenever, a FileEntity is updated with a new
       <a href="${org.sagebionetworks.repo.model.file.FileHandle}">FileHandle</a>
       whose MD5 differs from the MD5 of the current file hanlde a new version of
       the FileEntity is automatically created. The history of a FileEntity can be
       retrieved using <a href="${GET.entity.id.version}">GET
       /entity/{id}/version</a> method. A specific version of a FileEntity can be
       retrieved using <a href="${GET.entity.id.version.versionNumber}">GET
       /entity/{id}/version/{versionNumber}</a> method. The Annotations of a
       specific version of an FileEntity can be retrieved using the
       <a href="${GET.entity.id.version.versionNumber.annotations2}">GET
       /entity/{id}/version/{versionNumber}/annotations</a> method.
       </p>
       <p>
       Despite being <a href="${org.sagebionetworks.repo.model.VersionableEntity}">versionable</a>,
       <a href="${org.sagebionetworks.repo.model.table.TableEntity}">Tables</a>,
       <a href="${org.sagebionetworks.repo.model.table.View}">Views</a> and <a href="${org.sagebionetworks.repo.model.table.MaterializedView}">Materialized
       Views</a> are versioned using snapshots: see
       <a href="${POST.entity.id.table.snapshot}">POST
       /entity/{id}/table/snapshot</a> and
       <a href="${POST.entity.id.table.transaction.async.start}">POST
       /entity/{id}/table/transaction/async/start</a>.
       </p>
       <p>
       <b><i>Note: </b>Only the File and Annotations of an Entity are included in
       the version. All other components of an Entity such as description, name,
       parent, ACL, and WikiPage are <b>not</b> not part of the version, and will
       not vary from version to version.</i>
       </p>
       <h6>JSON Schemas</h6>
       <p>
       Each Entity type and Model object in Synapse is defined by a JSON schema. The
       <a href="${GET.REST.resources}">GET /REST/resources</a> method will list the
       full name of all Resources used by Synapse. The schema for each Resource is
       accessible via <a href="${GET.REST.resources.schema}">GET
       /REST/resources/schema</a>. Note: Many of these resources are composition
       objects and one must navigate various interfaces of an object to fully digest
       it. Therefore, a flattened (or effective) schema for each resource is
       available from the <a href="${GET.REST.resources.effectiveSchema}">GET
       /REST/resources/effectiveSchema</a>
       </p>
       <b>Entity Service Limits</b>
       <table border="1">
       <tr>
       <th>resource</th>
       <th>limit</th>
       </tr>
       <tr>
       <td>Maximum size of an Entity.name</td>
       <td>256 characters</td>
       </tr>
       <tr>
       <td>Maximum size of an Entity.desciption</td>
       <td>1000 characters</td>
       </tr>
       </tr>
       <tr>
       <td>Maximum number of versions for a single Entity</td>
       <td>15,000</td>
       </tr>
       <tr>
       <td>Maximum number of keys in Annotations</td>
       <td>100</td>
       </tr>
       <tr>
       <td>Maximum number of values associated with a single key in Annotations</td>
       <td>100</td>
       </tr>
       <tr>
       <td>Maximum total character count for all values associated with a single key
       in Annotations when the AnnotationValueType is STRING</td>
       <td>500</td>
       </tr>
       <tr>
       <td>Maximum hierarchical depth of an Entity</td>
       <td>50</td>
       </tr>
       </table>
  - name: Evaluation Services
    description: |-
      <p>
       The Evaluation API is designed to support open-access data analysis and modeling challenges in
       Synapse. This framework provides tools for administrators to collect and analyze data models
       from Synapse users created for a specific goal or purpose.
       </p>
        
       <p>
       The data model of the Evaluation API is built around around two primary objects:
       <ul>
       <li> <a href="${org.sagebionetworks.evaluation.model.Evaluation}">Evaluation</a>: The primary
       object representing a Synapse Evaluation. Access to Evaluations is governed by an <a href="${org.sagebionetworks.repo.model.AccessControlList}">Access Control
       List (ACL)</a>.
       </li> 
       <li> <a href="${org.sagebionetworks.evaluation.model.Submission}">Submission</a>: A user
       in a Synapse Evaluation can submit a Synapse Entity as Submission to that Evaluation. Submission
       data is owned by the parent Evaluation, and is immutable.
       </ul>
       </p>
       
       <p>
       The data model includes additional objects to support scoring of Submissions and convenient data 
       access:
       <ul>
       <li> <a href="${org.sagebionetworks.evaluation.model.SubmissionStatus}">SubmissionStatus</a>: An
       object used to track scoring information for a single Submission. This object is intended to be
       modified by the users (or test harnesses) managing the Evaluation.
       </li> 
       <li> <a href="${org.sagebionetworks.evaluation.model.SubmissionBundle}">SubmissionBundle</a>: 
       A convenience object to transport a Submission and its accompanying SubmissionStatus in a single
       web service call.
       </li>
       <li> <a href="${org.sagebionetworks.repo.model.table.SubmissionView}">SubmissionView</a>: 
       A submission view can be created using the 
       <a href="${org.sagebionetworks.repo.web.controller.EntityController}">Entity Services</a> providing
       as scope a list of evaluation ids, in order to query the set of submissions through 
       the <a href="${POST.entity.id.table.query.async.start}">Table Query Services</a>.
       <a href="${org.sagebionetworks.repo.model.annotation.v2.Annotations}">Annotations</a> set in 
       the submissionAnnotations property of a <a href="${org.sagebionetworks.evaluation.model.SubmissionStatus}">SubmissionStatus</a> 
       can be exposed in the view.
       </li>
       </ul>
       </p>
       
       The Evaluation API supports data access mechanisms to monitor Evaluation activity for on-demand 
       scoring and leaderboarding.
  - name: File Services
    description: |-
      <p>
       A FileHandle is an abstraction for a reference to a file in Synapse.  For details on the various types see: <a href="${org.sagebionetworks.repo.model.file.FileHandle}">FileHandle</a>.
       </p>
       <p>
       <b>Multi-part File Upload API</b>
       </p>
       <p>
       In order to ensure file upload is robust, all files must be uploaded to
       Synapse in 'parts'. This means clients are expected to divide each file into
       'parts' and upload each part separately. Since Synapse tracks the state of
       all multi-part uploads, upload failure can be recovered simply by uploading
       all parts that Synapse reports as missing.
       </p>
       <p>
       <i>Note: For multi-part upload 1 MB is defined as 1024*1024 bytes </i>
       </p>
       <p>
       The first task in multi-part upload is choosing a part size. The minimum part
       size is 5 MB (1024*1024*5) and the maximum part size is 5 GB (1024*1024*1024*5). 
       Therefore, any file with a size less than or equal to 5 MB will have a single part and a partSize=5242880. 
       The maximum number of parts for a single file 10,000 parts. The following should be used
       to choose a part size:
       </p>
       <p>
       partSize = max(5242880, (fileSize/10000))
       </p>
       <p>
       Once a partSize is chosen, a multi-part upload can be started using the
       following: <a href="${POST.file.multipart}">POST /file/multipart</a> which
       will return an <a href="${org.sagebionetworks.repo.model.file.MultipartUploadStatus}">MultipartUploadStatus</a>. The client is expected to use
       MultipartUploadStatus to drive the upload. The client will need to upload
       each missing part (parts with '0' in the partsState) as follows:
       </p>
       <p>
       <ol>
       <li>Get a pre-signed URL to upload the part to using: <a href="${POST.file.multipart.uploadId.presigned.url.batch}">POST
       /file/multipart/{uploadId}/presigned/url/batch</a></li>
       <li>Upload the part to the pre-signed URL using HTTPs PUT</li>
       <li>Add the part to the multi-part upload using: <a href="${PUT.file.multipart.uploadId.add.partNumber}">PUT
       /file/multipart/{uploadId}/add/{partNumber}</a></li>
       </ol>
       </p>
       <p>
       Once all parts have been successfully added to the multi-part upload, the
       upload can be completed using: <a href="${PUT.file.multipart.uploadId.complete}">PUT
       /file/multipart/{uploadId}/complete</a> to produce a new <a href="${org.sagebionetworks.repo.model.file.FileHandle}">FileHandle</a> If
       the upload fails for any reason, the client should start over ( <a href="${POST.file.multipart}">POST /file/multipart</a>) and continue by
       uploading any parts that are reported as missing.
       </p>
       <p>
       <b>Multi-part File Copy API</b>
       </p>
       <p>
       The multipart API supports a robust copy of existing files to other locations (e.g. in case of a data migration)
       without the need to download and re-upload the file. This is currently supported only from and to S3 storage locations that reside in the same region.
       In order to initiate a multipart copy, a <a href="${POST.file.multipart}">POST /file/multipart</a> request can be sent
       using as the body of the request a <a href="${org.sagebionetworks.repo.model.file.MultipartUploadCopyRequest}">MultipartUploadCopyRequest</a>.
       </p>
       <p>
       The part size allows to parallelize the copy in multiple sub-parts, the same limits of the upload applies to the copy (e.g. it is possible to copy 
       a file in a single part up to 5 GB). When initiating a copy we recommend to choose the part size as follows:
       </p>
       <p>
       partSize = max(104857600, (fileSize/10000))
       </p>
       <p>
       Once the multipart copy is initiated the process is the same as the multipart upload:
       </p>
       <p>
       <ol>
       <li>
       Get the part copy pre-signed URLs using: <a href="${POST.file.multipart.uploadId.presigned.url.batch}">POST
       /file/multipart/{uploadId}/presigned/url/batch</a>
       </li>
       <li>
       For each pre-signed URL perform an HTTP PUT request with no body, the response of the previous endpoint contains a map of headers that are 
       signed with the URL, all of the headers MUST be included in the PUT request.
       </li>
       <li>Once the copy request is performed, add the part to the multi-part copy using: <a href="${PUT.file.multipart.uploadId.add.partNumber}">PUT
       /file/multipart/{uploadId}/add/{partNumber}</a>. 
       The value of the partMD5Hex parameter will be MD5 checksum returned in the response of the request sent to the pre-signed URL.
       </li>
       <li>
       Once all parts have been successfully added to the multi-part copy, the
       copy can be completed using: <a href="${PUT.file.multipart.uploadId.complete}">PUT
       /file/multipart/{uploadId}/complete</a> to produce a new <a href="${org.sagebionetworks.repo.model.file.FileHandle}">FileHandle</a>
       </li>
       </ol>
       </p>
       <p>
       Note about the copy integrity: The resulting file handle will have the same content MD5 of the source file handle, but synapse
       does not try to re-compute or verify this value. Instead, the integrity check is performed by the cloud provider (currently only S3)
       during the copy request for the part (the request sent to the pre-signed URL). Each copy pre-signed URL is signed with a special
       header that makes sure that the source file didn't change during the copy, if this is the case the PUT request to the pre-signed URL
       will fail and a new copy should be re-started.
       </p>
       <p>
       <b>Associating FileHandles with Synapse objects</b>
       </p>
       <p>
       FileHandles can be associated with various type of objects such as a <a href="${org.sagebionetworks.repo.model.FileEntity}">FileEntity</a> and  <a href="${org.sagebionetworks.repo.model.wiki.WikiPage}">WikiPage</a>. The full list of association types can be found in the <a href="${org.sagebionetworks.repo.model.file.FileHandleAssociateType}">FileHandleAssociateType</a> enumeration.
       <p>
       Note that a file handle MUST always be associated with an object, if a file handle is not associated with an objects for more than 30 days Synapse will mark it as <a href="${org.sagebionetworks.repo.model.file.FileHandleStatus}">UNLINKED</a> and eventually archive or delete it from the system.
       </p>
       <p>
       For more information see the following:
       </p>
       <ul>
       <li><a href="${org.sagebionetworks.repo.model.FileEntity}">FileEntity</a>
       <li><a href="${POST.entity}">POST /entity</a>
       <li><a href="${PUT.entity.id}">PUT /entity/{id}</a>
       <li><a href="${GET.entity.id.filepreview}">GET /entity/{id}/filepreview</a>
       <li><a href="${GET.entity.id.version.versionNumber.filepreview}">GET
       /entity/{id}/version/{versionNumber}/filepreview</a>
       <li><a href="${GET.entity.id.filehandles}">GET /entity/{id}/filehandles</a>
       <li><a href="${GET.entity.id.version.versionNumber.filehandles}">GET
       /entity/{id}/version/{versionNumber}/filehandles</a>
       <li><a href="${POST.fileHandle.batch}">POST /fileHandle/batch</a>
       </ul>
       <b>Service Limits</b>
       <table border="1">
       <tr>
       <th>resource</th>
       <th>limit</th>
       <th>notes</th>
       </tr>
       <tr>
       <td>Minimum file size</td>
       <td>0 bytes</td>
       <td></td>
       </tr>
       <tr>
       <td>Maximum file size</td>
       <td>5 TB (5,497,558,100,000 bytes)</td>
       <td></td>
       </tr>
       <tr>
       <tr>
       <td>Maximum number of parts</td>
       <td>10,000</td>
       <td></td>
       </tr>
       <td>Minimum file part size</td>
       <td>5 MB (5,242,880 bytes)</td>
       <td>The recommended part size for an upload is max(5242880, (fileSize/10000)). For a copy max(104857600, (fileSize/10000)).</td>
       </tr>
       <tr>
       <td>Maximum file part size</td>
       <td>5 GB (5,368,709,120 bytes)</td>
       <td></td>
       </tr>
       </table>
  - name: Form Services
    description: |-
      Collection of APIs from managing and submitting form data. There are two
       basic objects:
       <ul>
       <li><a href="${org.sagebionetworks.repo.model.form.FormData}">FormData</a> -
       Represent an end user's data gathered from a form template. All FormData
       belongs to a single FormGroup.</li>
       <li><a href="${org.sagebionetworks.repo.model.form.FormGroup}">FormGroup</a>
       - Represents a grouping of FormData with an
       <a href="${org.sagebionetworks.repo.model.AccessControlList}">Access Control
       List (ACL)</a> for administration. The ACL controls both who can submit data
       to the group and who has access to the submitted data.</li>
       </ul>
       <p>
       To download the data associated with a FormData object use:
       <a href="${POST.fileHandle.batch}">POST /fileHandle/batch</a> providing the
       formData.dataFileHandleId with <a href="${org.sagebionetworks.repo.model.file.FileHandleAssociateType}">FileHandleAssociateType.FormData</a>
  - name: Grid Services
    description: Services for create and managing grid data session.
  - name: JSON Schema Services
    description: |-
      This set of services provide project designers with tools to define their own
       schemas to control and validate metadata applied to Projects, Folders, and
       Files. All schemas are defined using JSON schemas following
       <a href="https://json-schema.org/">json-schema.org</a> specification.
       <p>
       To get started, you will need to either create a new <a href="${org.sagebionetworks.repo.model.schema.Organization}">Organization</a> or
       join an existing Organization. Each Organization has an AccessControlList
       (ACL) that controls which users/teams are authorized to contribute schemas
       under that Organization's name-space. The Organization's name-space is
       referenced using the Organization's name, which is also the root of all
       schema $ids within the Organization.
       </p>
       
       
       <p>
       <b>Binding JSON schemas to Entities:</b>
       <ul>
       <li><a href="${PUT.entity.id.schema.binding}">PUT /entity/{id}/schema/binding</a></li>
       <li><a href="${GET.entity.id.schema.binding}">GET /entity/{id}/schema/binding</a></li>
       <li><a href="${DELETE.entity.id.schema.binding}">DELETE /entity/{id}/schema/binding</a></li>
       </ul>
       </p>
       <p>
       <b>Entity schema validation results:</b>
       <ul>
       <li><a href="${GET.entity.id.schema.validation}">GET /entity/{id}/schema/validation</a></li>
       <li><a href="${GET.entity.id.schema.validation.statistics}">GET /entity/{id}/schema/validation/statistics</a></li>
       <li><a href="${POST.entity.id.schema.validation.invalid}">POST /entity/{id}/schema/validation/invalid</a></li>
       <li><a href="${GET.entity.id.derivedKeys}">GET /entity/{id}/derivedKeys</a></li>
       </ul>
       </p>  
       
       <b>Service Limits</b>
       <table border="1">
       <tr>
       <th>resource</th>
       <th>limit</th>
       </tr>
       <tr>
       <td>Maximum number of characters in a JSON schema</td>
       <td>2^24 characters</td>
       </tr>
       </table>
  - name: Log Service
    description: https://sagebionetworks.jira.com/wiki/display/PLFM/Repository+Service+API#RepositoryServiceAPI-QueryAPI
  - name: Membership Invitation Services
    description: |-
      The Membership Invitation Services create, retrieve and delete 
       membership invitations.  A membership invitation is created by a Team administrator
       to invite a Synapse user to join the Team.  Without the invitation it is not possible
       for an outside user to join.  For more on Teams, see
       <a href="#org.sagebionetworks.repo.web.controller.TeamController">Team Services</a>.
  - name: Membership Request Services
    description: |-
      The Membership Request Services create, retrieve and delete 
       membership requests.  A membership request is created by a Synapse user
       to request admission to a Team.  Without the request it is not possible
       for a Team to admit the user.  For more on Teams, see
       <a href="#org.sagebionetworks.repo.web.controller.TeamController">Team Services</a>.
  - name: Message Services
    description: |-
      <p>
       Provides REST APIs for sending messages to other Synapse users and for commenting on Synapse entities.
       </p>
  - name: OpenID Connect Services
    description: The OpenID Connect (OIDC) services implement OAuth 2.0 with the OpenID identity extensions.
  - name: Portals Services
    description: Provides APIs to manage Synapse portals, generally managed by Synapse administrators.
  - name: Principal Services
    description: |-
      A <a href="http://en.wikipedia.org/wiki/Principal_%28computer_security%29">
       Principal</a> in Synapse can be a User, Group, or a Team. This is a set of
       services that provides the means to look-up principals by their various
       attributes and also to test unique names such as USER_NAME, USER_EMAIL, or
       TEAM_NAME are available for use.
  - name: Project Settings Services
    description: |-
      The project settings services provide configuration options that can be applied to projects. In particular through the <a href="${POST.projectSettings}">POST /projectSettings</a> and <a href="${PUT.projectSettings}">PUT /projectSettings</a> services
       a user can create or update the setting of a specific <a href="${org.sagebionetworks.repo.model.project.ProjectSettingsType}">type</a> for a project.
       </p>
       Currently supported settings for a project are:
       
       <ul>
       <li><a href="${org.sagebionetworks.repo.model.project.UploadDestinationListSetting}">UploadDestinationListSetting</a>: Used to customize the storage location for files in a project</li>
       </ul>

       </p>
       The <a href="${POST.storageLocation}">POST /storageLocation</a> service is provided in order to create <a href="${org.sagebionetworks.repo.model.project.StorageLocationSetting}">StorageLocationSetting</a>. The id of a
       <a href="${org.sagebionetworks.repo.model.project.StorageLocationSetting}">StorageLocationSetting</a> can then be set in the <b>locations</b> property of 
       the <a href="${org.sagebionetworks.repo.model.project.UploadDestinationListSetting}">UploadDestinationListSetting</a>.
       </p>
       When uploading a file the id of the default <a href="${org.sagebionetworks.repo.model.project.StorageLocationSetting}">StorageLocationSetting</a> to be used on a folder can be retrieved
       using the <a href="${GET.entity.id.uploadDestination}">GET /entity/{id}/uploadDestination</a> service using the id of the parent entity (e.g. a folder or a project).
       </p>
       By setting a custom storage location, users can store the data in their own S3 or Google Cloud bucket. Note that when a folder or a project is configured to use a custom storage location,
       only future uploads through Synapse are affected (e.g. changing the storage location does not automatically change the location of existing files).
       For a guide on setting a custom storage location, see the <a href="https://help.synapse.org/docs/Custom-Storage-Locations.2048327803.html">Custom Storage Location</a> documentation
       article.
       </p>
  - name: Project Storage Services
    description: Services to manage project storage usage and limits.
  - name: Recycle Bin Services
    description: |-
      The recycle bin (or trash can) is the special folder that holds the deleted entities for users.
       <p>
       Services are provided for users to delete entities into the trash can, to view entities
       in the trash can, to purge entities from the trash can, and to restore entities out
       of the trash can.
  - name: Search Services
    description: Search for Entities on Synapse
  - name: Statistics Services
    description: Services that expose statistics computed by the backend.
  - name: Storage Report Services
    description: Provides REST APIs for generating Storage Reports. These may only be used by the Synapse Report Team.
  - name: Subscription Services
    description: |-
      <p>While working in Synapse, users may want to subscribe to different topics
       to receive notifications about changes in those topics.</p>
       <br>
       <p>These services provide the APIs for Synapse users to manage their subscriptions.</p>
       <br>
  - name: Table Services
    description: |-
      <p>
       A Synapse
       <a href="${org.sagebionetworks.repo.model.table.TableEntity}">TableEntity</a>
       model object represents the metadata of a table. Each TableEntity is defined
       by a list of
       <a href="${org.sagebionetworks.repo.model.table.ColumnModel}">ColumnModel</a>
       IDs. Use <a href="${POST.column}">POST /column</a> to create new ColumnModel
       objects. Each ColumnModel object is immutable, so to change a column of a
       table a new column must be added and the old column must be removed.
       TableEntities can be created, updated, read and deleted like any other
       entity:
       <ul>
       <li><a href="${POST.entity}">POST /entity</a></li>
       <li><a href="${GET.entity.id}">GET /entity/{id}</a></li>
       <li><a href="${PUT.entity.id}">PUT /entity/{id}</a></li>
       <li><a href="${DELETE.entity.id}">DELETE /entity/{id}</a></li>
       </ul>
       </p>
       <p>
       <p>
       All ColumnModel objects are publicly viewable and usable. Since each
       ColumnModel is immutable it is safe to re-use ColumnModels created by other
       users. Use the <a href="${GET.column}">GET /column</a> services to list all
       of the existing ColumnModels that are currently in use.
       </p>
       
       Once the columns for a TableEntity have been created and assigned to the
       TableEntity, rows can be added to the table using
       <a href="${POST.entity.id.table.transaction.async.start}">POST
       /entity/{id}/table/transaction/async/start</a>. Each
       <a href="${org.sagebionetworks.repo.model.table.Row}">Row</a> appended to the
       table will automatically be assigned a rowId and a versionNumber and can be
       found in the resulting
       <a href="${org.sagebionetworks.repo.model.table.RowReferenceSet}">RowReferenceSet</a>. To update a row, simply include the row's rowId in the
       passed <a href="${org.sagebionetworks.repo.model.table.RowSet}">RowSet</a>.
       Any row without a rowId will be treated as a new row. When a row is updated a
       new versionNumber will automatically be assigned the Row. While previous
       versions of any row are kept, only the current version of any row will appear
       in the table index used to support the query service:
       <a href="${POST.entity.id.table.query.async.start}">POST
       /entity/{id}/table/query/async/start</a>
       </p>
       <p>
       Use the <a href="${POST.entity.id.table.query.async.start}">POST
       /entity/{id}/table/query/async/start</a> services to query for the current
       rows of a table. The returned
       <a href="${org.sagebionetworks.repo.model.table.RowSet}">RowSet</a> of the
       table query can be modified and returned to update the rows of a table using
       <a href="${POST.entity.id.table.transaction.async.start}">POST
       /entity/{id}/table/transaction/async/start</a>.
       </p>
       <p>
       There is also an <a href="${org.sagebionetworks.repo.web.controller.AsynchronousJobController}">asynchronous service</a> to
       <a href="${org.sagebionetworks.repo.model.table.UploadToTableRequest}">upload</a> and
       <a href="${org.sagebionetworks.repo.model.table.DownloadFromTableRequest}">download</a> csv files, suitable for large datasets.
       </p>
       <p>
       <b>Table Service Limits</b>
       <table border="1">
       <tr>
       <th>resource</th>
       <th>limit</th>
       <th>notes</th>
       </tr>
       <tr>
       <td>Maximum size of column names</td>
       <td>256 characters</td>
       <td></td>
       </tr>
       <tr>
       <td>Maximum number of enumeration values for a single column</td>
       <td>100</td>
       <td></td>
       </tr>
       <tr>
       <td>Maximum number of columns per table/view</td>
       <td>152</td>
       <td></td>
       </tr>
       <tr>
       <td>The maximum possible width of a table/view</td>
       <td>64 KB</td>
       <td>Each
       <a href="${org.sagebionetworks.repo.model.table.ColumnType}">ColumnType</a>
       has a maximum possible size. The total width of a table/view is the sum of
       the maximum size of each of its columns</td>
       </tr>
       <tr>
       <td>The maximum number of LARG_TEXT columns per table/view</td>
       <td>30</td>
       <td></td>
       </tr>
       <td>Maximum table size</td>
       <td>~146 GB</td>
       <td>All row changes applied to a table are automatically batched into changes
       sets with a maximum size of 5242880 bytes (5 MB). Currently, there is a limit
       of 30,000 change sets per table. Therefore, the theoretical maximum size of
       table is 5242880 bytes * 30,000 = ~ 146 GB.</td>
       </tr>
       <tr>
       <td>The maximum number of projects/folder per view scope</td>
       <td>30 K</td>
       <td>Recursive sub-folders count towards this limit. For example, if a project
       contains more than 30 K sub-folders then it cannot be included in a view's
       scope.</td>
       </tr>
       <tr>
       <td>The maximum number of rows per view</td>
       <td>200 M</td>
       <td>A single folder cannot contain more then 10 K files/folders. Since a
       view's scope is limited to 30 K project/folders, the maximum number of rows
       per view is 10 K * 30 K = 300 M.</td>
       </tr>
       <tr>
       <td>The maximum file size of a CSV that can be appended to a table</td>
       <td>1 GB</td>
       <td></td>
       </tr>
       <tr>
       <td>The maximum size of a single query result</td>
       <td>512000 bytes</td>
       <td></td>
       </tr>
       <tr>
       <td>Entity View only: The maximum total character length for a STRING or STRING_LIST <a href="${org.sagebionetworks.repo.model.table.ColumnType}">ColumnType</a></td>
       <td>500 characters</td>
       <td>Entity Views ONLY! This follows limitations placed on Annotations. For the type STRING_LIST, the total character count is the cumulative length of all string contained in the list.</td>
       </tr>
       <tr>
       <td>Entity View only: The maximum list length for "_LIST" suffixed <a href="${org.sagebionetworks.repo.model.table.ColumnType}">ColumnType</a></td>
       <td>100 values</td>
       <td>Entity Views ONLY! This follows limitations placed on Annotations.</td>
       </tr>
       </table>
  - name: Team Services
    description: |-
      Teams are groups of users.  Teams can be granted access permissions to projects, 
       folders and files, and share other resources by adding them to
       <a href="${org.sagebionetworks.repo.model.AccessControlList}">Access Control
       Lists (ACLs)</a>.  Any authenticated Synapse user
       may create a Team, for which they become an administrator.  Team
       administrators may:
       <ul>
       <li> invite other users to join the Team, 
       <li> accept membership requests from users wishing to join the Team, 
       <li> grant or revoke administrative control to Team members,
       <li> remove a user from the Team.  
       </ul>
       <br>
       Other Synapse users may:
       <ul>
       <li> issue membership requests to a Team,
       <li> accept Team membership invitations (join the Team),
       <li> unilaterally choose to leave a Team once added.
       </ul>
  - name: User & Group Services
    description: Auto-generated description
  - name: User Profile Services
    description: Every Synapse user has an associated <a href="${org.sagebionetworks.repo.model.UserProfile}">UserProfile</a>.
  - name: Verification Services
    description: |-
      Identity verification is a service offered by the Synapse Access and Compliance Team
       to add an additional layer of legitimacy to a user account, beyond the basic
       requirements for creating an account in Synapse.  After completing their user
       profile a user may submit a verification request, including supporting documentation.
       The ACT reviews the information then approves or rejects it.  After approval, the
       ACT retains the authority to suspend verification of an account previously verified.
       Once rejected or suspended a user may create a new verification request.
  - name: Webhook Services
    description: |-
      Provides APIs to manage webhooks that are triggered by synapse events.
       <p>
       A webhook can specify the id of a synapse entity to receive events for. For entities that represent a container (folder and project), 
       matching events are published to the webhook endpoint for any entity in their hierarchy.
       <p>
       Before events are published to the endpoint, the webhook needs to be verified. A special request is sent to the webhook endpoint 
       containing a verification code that can be submitted in the body of the <a href="${POST.webhook.webhookId.verify}">POST /webhook/{webhookId}/verify</a> request.
       <h6>Request Format</h6>
       There are two types of requests that can be sent to an endpoint:
       <ul>
       <li><a href="${org.sagebionetworks.repo.model.webhook.WebhookVerificationMessage}">WebhookVerificationMessage</a>: Sent when a webhook is created or when its endpoint is updated that contains the verification code used to verify the webhook.</li>
       <li><a href="${org.sagebionetworks.repo.model.webhook.WebhookSynapseEventMessage}">WebhookSynapseEventMessage</a>: Sent when a synapse event that match the webhook entity is generated in the backend.</li>
       </ul>
       Each HTTP request will contain the following custom headers:
       <ul>
       <li><b>X-Syn-Webhook-Id</b>: The id of the webhook</li>
       <li><b>X-Syn-Webhook-Message-Type</b>: The type of message body, either Verification or SynapseEvent</li>
       <li><b>X-Syn-Webhook-Message-Id</b>: A unique id for the message</li>
       <li><b>X-Syn-Webhook-Owner-Id</b>: The id of the user that created the webhook</li>
       </ul>
       And the following standard headers:
       <ul>
       <li><b>Content-Type</b>: Always application&#47;json</li>
       <li><b>User-Agent</b>: Set with the prefix Synapse-Webhook&#47;, followed by the synapse stack version</li>
       <li><b>Authorization</b>: Set with the Bearer prefix, followed by an authentication token (See below)</li>
       </ul>
       <h6>Request Handling</h6>
       A request to an endpoint is sent at least once and retried for a maximum of 3 times. The endpoint needs to provide a response within 2 seconds in order for the request to be considered successful, 
       otherwise the request is retried. Valid HTTP response codes are: 
       <ul>
       <li>200 (OK)</li> 
       <li>201 (CREATED)</li>
       <li>202 (ACCEPTED)</li>
       <li>204 (NO CONTENT)</li> 
       </ul>
       The following response codes are considered for retrying: 
       <ul>
       <li>429 (TOO MANY REQUESTS)</li>
       <li>500 (INTERNAL SERVER ERROR)</li>
       <li>502 (BAD GATEWAY)</li>
       <li>503 (SERVICE UNAVAILABLE)</li>
       <li>504 (GATEWAY TIMEOUT)</li> 
       </ul>
       Any other response code is considered a failed delivery and won't be retried. If a webhook endpoint consistently fails to respond to requests, it will eventually be disabled 
       and the <a href="${org.sagebionetworks.repo.model.webhook.WebhookVerificationStatus}">verification status</a> of the webhook will be set to REVOKED and will need to be re-verified.
       <h6>Limits</h6>
       Each user is limited to a maximum of 25 webhooks. The webhook endpoint is checked against a white list of allowed domain patterns, currently only the AWS Api Gateway <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-call-api.html">execute-api</a> is allowed.
       For adding a new domain exception you can submit a request to the <a href="https://sagebionetworks.jira.com/servicedesk/customer/portal/9">Synapse Service Desk</a>.
       <h6>Authentication</h6>
       By default each request includes a signed JSON Web Token (JWT) in the <b>Authorization</b> header as a bearer token. The token is signed with a JSON Web Key (JWK) and 
       can be verified using the public JWK id specified in the header of the JWT. The public keys are published under the "well-known" discovery document of the issuer (See below).
       <p>
       The JWT will contain a set of <a href="https://www.iana.org/assignments/jwt/jwt.xhtml#claims">standard claims</a> that can be used to validate the token:
       <ul>
       <li><b>iss</b>: The issuer of the token is set to <a href="https://repo-prod.prod.sagebase.org/auth/v1">https://repo-prod.prod.sagebase.org/auth/v1</a>. The openid discovery document (<a href="https://repo-prod.prod.sagebase.org/auth/v1/.well-known/openid-configuration">https://repo-prod.prod.sagebase.org/auth/v1/.well-known/openid-configuration</a>)
       can be used to get information about the JWKs</li>
       <li><b>aud</b>: The audience contains the id of the user that owns the webhook</li>
       <li><b>iat</b>: The timestamp when the token was generated</li>
       <li><b>exp</b>: The expiration time of the token, each token is valid for 30 seconds.</li>
       </ul>
       To verify the integrity of the message, the MD5 of the request body is included under the custom claim <b>message_md5</b> and can be verified against the md5 of the request body once the JWT is verified.
  - name: WikiPage Services
    description: |-
      <p>
       The Synapse <a href="${org.sagebionetworks.repo.model.wiki.WikiPage}">WikiPage</a> model
       object contains the data needed to render an end-user crafted web page. The
       Synapse Web Client will dynamically render a WikiPage into a combination of
       HTML, CSS and Javascript which is then finally rendered as a web page in the
       client's web browser.
       </p>
       <p>
       These services provide support for creating, reading, updating, and
       deleting (CRUD) the WikiPage model objects.
       </p>
       <p>
       WikiPages are composed of two major parts; the raw markdown text and a list
       of file attachments. For example, to embed an image from an end-user's
       machine into a WikiPage, the image file must first be uploaded to Synapse as <a href="${org.sagebionetworks.repo.model.file.FileHandle}">FileHandle</a> (see
       <a href="${org.sagebionetworks.file.controller.UploadController}">File
       Services</a>). The FileHandle ID can then be added to a
       WikiPage.attachmentFileHandleIds list. See <a href="https://www.synapse.org">www.synapse.org</a> for details on the
       supported markdown syntax.
       </p>
       
       <p>
       WikiPages are not stand-alone objects, instead they are a component of
       another object such as an Entity or Evaluation. For example, when a WikiPage
       is created for an Entity, the Entity becomes the "owner" of the WikiPage.
       Access to the WikiPage is always tied to its owner. For example, to GET a
       WikiPage of an Entity, the caller must have read permission on the Entity.
       </p>
       <p>
       To navigate the hierarchy of WikiPages associated with an owner use the <a href="${GET.entity.ownerId.wikiheadertree}">GET
       /entity/{ownerId}/wikiheadertree</a> method. The returned list of <a href="${org.sagebionetworks.repo.model.wiki.WikiHeader}">WikiHeaders</a> can
       be used to construct a full wiki hierarchy tree for that owner.
       </p>
       <p>
       Note: WikiPages can be nested to created a hierarchy of sub-pages. However,
       there can only be one root WikiPage per owner object, and all sub-pages are
       considered to be owned by the same object as the root page.
       </p>
  - name: WikiPage Services 2
    description: |-
      <p>
       The Synapse <a href="${org.sagebionetworks.repo.model.v2.wiki.V2WikiPage}">V2WikiPage</a> model
       object contains the data needed to render an end-user crafted web page. The
       Synapse Web Client will dynamically render a WikiPage into a combination of
       HTML, CSS and Javascript which is then finally rendered as a web page in the
       client's web browser.
       </p>
       <p>
       These services provide support for creating, reading, updating, and
       deleting (CRUD) the WikiPage model objects.
       </p>
       <p>
       WikiPages are composed of two major parts; a file that contains the markdown text 
       and a list of file attachments. For example, to embed an image from an end-user's
       machine into a WikiPage, the image file must first be uploaded to Synapse as <a href="${org.sagebionetworks.repo.model.file.FileHandle}">FileHandle</a> (see
       <a href="${org.sagebionetworks.file.controller.UploadController}">File
       Services</a>). The FileHandle ID can then be added to a
       WikiPage.attachmentFileHandleIds list. See <a href="https://www.synapse.org">www.synapse.org</a> for details on the
       supported markdown syntax. The markdown text is similarly uploaded as a
       FileHandle and its FileHandle ID is tracked by the WikiPage. 
       </p>
       
       <p>
       WikiPages are not stand-alone objects, instead they are a component of
       another object such as an Entity or Evaluation. For example, when a WikiPage
       is created for an Entity, the Entity becomes the "owner" of the WikiPage.
       Access to the WikiPage is always tied to its owner. For example, to GET a
       WikiPage of an Entity, the caller must have read permission on the Entity.
       </p>
       <p>
       To navigate the hierarchy of WikiPages associated with an owner use the <a href="${GET.entity.ownerId.wikiheadertree2}">GET
       /entity/{ownerId}/wikiheadertree2</a> method. The returned list of <a href="${org.sagebionetworks.repo.model.v2.wiki.V2WikiHeader}">V2WikiHeaders</a> can
       be used to construct a full wiki hierarchy tree for that owner.
       </p>
       <p>
       To view a timeline of changes made to a WikiPage, use the 
       <a href="${GET.entity.ownerId.wiki2.wikiId.wikihistory}">GET/entity/{ownerId}
       /wiki2/{wikiId}/wikihistory</a> method. The returned list of <a href="${org.sagebionetworks.repo.model.v2.wiki.V2WikiHistorySnapshot}">V2WikiHistorySnapshots
       </a> contain information about who modified the WikiPage and when the changes were made. 
       </p>
       <p>
       Note: WikiPages can be nested to created a hierarchy of sub-pages. However,
       there can only be one root WikiPage per owner object, and all sub-pages are
       considered to be owned by the same object as the root page.
       </p>
paths:
  /auth/v1/.well-known/openid-configuration:
    get:
      tags:
        - OpenID Connect Services
      operationId: get-/auth/v1/.well-known/openid-configuration
      parameters: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.oauth.OIDConnectConfiguration'
  /auth/v1/oauth2/jwks:
    get:
      tags:
        - OpenID Connect Services
      operationId: get-/auth/v1/oauth2/jwks
      parameters: []
      responses:
        '200':
          description: the JSON Web Key Set
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.oauth.JsonWebKeySet'
  /auth/v1/oauth2/client:
    post:
      tags:
        - OpenID Connect Services
      operationId: post-/auth/v1/oauth2/client
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.oauth.OAuthClient'
        required: true
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.oauth.OAuthClient'
    get:
      tags:
        - OpenID Connect Services
      operationId: get-/auth/v1/oauth2/client
      parameters:
        - name: nextPageToken
          in: query
          required: false
          description: |-
            returned along with a page of results, this is passed to 
             the server to retrieve the next page.
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.oauth.OAuthClientList'
  /auth/v1/oauth2/client/secret/{id}:
    post:
      tags:
        - OpenID Connect Services
      operationId: post-/auth/v1/oauth2/client/secret/{id}
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.oauth.OAuthClientIdAndSecret'
  /auth/v1/oauth2/client/{id}:
    get:
      tags:
        - OpenID Connect Services
      operationId: get-/auth/v1/oauth2/client/{id}
      parameters:
        - name: id
          in: path
          required: true
          description: the ID of the client to retrieve
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.oauth.OAuthClient'
    put:
      tags:
        - OpenID Connect Services
      operationId: put-/auth/v1/oauth2/client/{id}
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.oauth.OAuthClient'
        required: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.oauth.OAuthClient'
    delete:
      tags:
        - OpenID Connect Services
      operationId: delete-/auth/v1/oauth2/client/{id}
      parameters:
        - name: id
          in: path
          required: true
          description: the ID of the client to delete
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Void
  /auth/v1/oauth2/client/{id}/verificationPrecheck:
    put:
      tags:
        - OpenID Connect Services
      operationId: put-/auth/v1/oauth2/client/{id}/verificationPrecheck
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.oauth.OAuthClient'
        required: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.oauth.OAuthClientVerificationPrecheckResult'
  /auth/v1/oauth2/client/{id}/acl:
    get:
      tags:
        - OpenID Connect Services
      operationId: get-/auth/v1/oauth2/client/{id}/acl
      parameters:
        - name: id
          in: path
          required: true
          description: the ID of the OpenID Client of interest
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.AccessControlList'
    put:
      tags:
        - OpenID Connect Services
      operationId: put-/auth/v1/oauth2/client/{id}/acl
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.AccessControlList'
        required: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.AccessControlList'
  /auth/v1/oauth2/description:
    post:
      tags:
        - OpenID Connect Services
      operationId: post-/auth/v1/oauth2/description
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.oauth.OIDCAuthorizationRequest'
        required: true
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.oauth.OIDCAuthorizationRequestDescription'
  /auth/v1/oauth2/consentcheck:
    post:
      tags:
        - OpenID Connect Services
      operationId: post-/auth/v1/oauth2/consentcheck
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.oauth.OIDCAuthorizationRequest'
        required: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.oauth.OAuthConsentGrantedResponse'
  /auth/v1/oauth2/consent:
    post:
      tags:
        - OpenID Connect Services
      operationId: post-/auth/v1/oauth2/consent
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.oauth.OIDCAuthorizationRequest'
        required: true
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.oauth.OAuthAuthorizationResponse'
  /auth/v1/oauth2/token:
    post:
      tags:
        - OpenID Connect Services
      operationId: post-/auth/v1/oauth2/token
      parameters:
        - name: verifiedOauthClientId
          in: header
          required: true
          schema:
            type: string
        - name: grant_type
          in: query
          required: true
          description: authorization_code or refresh_token
          schema:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.oauth.OAuthGrantType'
        - name: code
          in: query
          required: false
          description: required if grant_type is authorization_code
          schema:
            type: string
        - name: redirect_uri
          in: query
          required: false
          schema:
            type: string
        - name: refresh_token
          in: query
          required: false
          description: required if grant_type is refresh_token
          schema:
            type: string
        - name: scope
          in: query
          required: false
          description: only provided if grant_type is refresh_token
          schema:
            type: string
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.oauth.OIDCTokenResponse'
  /auth/v1/oauth2/userinfo:
    get:
      tags:
        - OpenID Connect Services
      operationId: get-/auth/v1/oauth2/userinfo
      parameters:
        - name: Synapse-Authorization
          in: header
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                type: object
    post:
      tags:
        - OpenID Connect Services
      operationId: post-/auth/v1/oauth2/userinfo
      parameters:
        - name: Synapse-Authorization
          in: header
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                type: object
  /auth/v1/oauth2/audit/grantedClients:
    get:
      tags:
        - OpenID Connect Services
      operationId: get-/auth/v1/oauth2/audit/grantedClients
      parameters:
        - name: nextPageToken
          in: query
          required: false
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.oauth.OAuthClientAuthorizationHistoryList'
  /auth/v1/oauth2/audit/grantedClients/{clientId}/tokens:
    get:
      tags:
        - OpenID Connect Services
      operationId: get-/auth/v1/oauth2/audit/grantedClients/{clientId}/tokens
      parameters:
        - name: clientId
          in: path
          required: true
          schema:
            type: string
        - name: nextPageToken
          in: query
          required: false
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.oauth.OAuthRefreshTokenInformationList'
  /auth/v1/oauth2/audit/tokens/{tokenId}/metadata:
    get:
      tags:
        - OpenID Connect Services
      operationId: get-/auth/v1/oauth2/audit/tokens/{tokenId}/metadata
      parameters:
        - name: tokenId
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.oauth.OAuthRefreshTokenInformation'
    put:
      tags:
        - OpenID Connect Services
      operationId: put-/auth/v1/oauth2/audit/tokens/{tokenId}/metadata
      parameters:
        - name: tokenId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.oauth.OAuthRefreshTokenInformation'
        required: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.oauth.OAuthRefreshTokenInformation'
  /auth/v1/oauth2/token/{tokenId}/metadata:
    get:
      tags:
        - OpenID Connect Services
      operationId: get-/auth/v1/oauth2/token/{tokenId}/metadata
      parameters:
        - name: verifiedOauthClientId
          in: header
          required: true
          schema:
            type: string
        - name: tokenId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.oauth.OAuthRefreshTokenInformation'
  /auth/v1/oauth2/audit/grantedClients/{clientId}/revoke:
    post:
      tags:
        - OpenID Connect Services
      operationId: post-/auth/v1/oauth2/audit/grantedClients/{clientId}/revoke
      parameters:
        - name: clientId
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '204':
          description: Void
  /auth/v1/oauth2/audit/tokens/{tokenId}/revoke:
    post:
      tags:
        - OpenID Connect Services
      operationId: post-/auth/v1/oauth2/audit/tokens/{tokenId}/revoke
      parameters:
        - name: tokenId
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '204':
          description: Void
  /auth/v1/oauth2/revoke:
    post:
      tags:
        - OpenID Connect Services
      operationId: post-/auth/v1/oauth2/revoke
      parameters:
        - name: verifiedOauthClientId
          in: header
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.oauth.OAuthTokenRevocationRequest'
        required: true
      responses:
        '204':
          description: Void
  /auth/v1/login2:
    post:
      tags:
        - Authentication Services
      operationId: post-/auth/v1/login2
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.auth.LoginRequest'
        required: true
      responses:
        '201':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.auth.LoginResponse'
  /auth/v1/authenticatedOn:
    get:
      tags:
        - Authentication Services
      operationId: get-/auth/v1/authenticatedOn
      parameters: []
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.auth.AuthenticatedOn'
  /auth/v1/user/password/reset:
    post:
      tags:
        - Authentication Services
      operationId: post-/auth/v1/user/password/reset
      parameters:
        - name: passwordResetEndpoint
          in: query
          required: true
          description: the Portal's url prefix for handling password resets.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.auth.Username'
        required: true
      responses:
        '204':
          description: Void
  /auth/v1/user/changePassword:
    post:
      tags:
        - Authentication Services
      operationId: post-/auth/v1/user/changePassword
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.auth.ChangePasswordInterface'
        required: true
      responses:
        '204':
          description: Void
  /auth/v1/termsOfUse2:
    post:
      tags:
        - Authentication Services
      operationId: post-/auth/v1/termsOfUse2
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.auth.TermsOfServiceSignRequest'
        required: true
      responses:
        '204':
          description: Void
  /auth/v1/termsOfUse2/info:
    get:
      tags:
        - Authentication Services
      operationId: get-/auth/v1/termsOfUse2/info
      parameters: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.auth.TermsOfServiceInfo'
  /auth/v1/termsOfUse2/status:
    get:
      tags:
        - Authentication Services
      operationId: get-/auth/v1/termsOfUse2/status
      parameters: []
      security:
        - bearerAuth: []
      responses:
        '200':
          description: The status of the terms of service for the current authenticated user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.auth.TermsOfServiceStatus'
  /auth/v1/termsOfUse2/requirements:
    put:
      tags:
        - Authentication Services
      operationId: put-/auth/v1/termsOfUse2/requirements
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.auth.TermsOfServiceRequirements'
        required: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.auth.TermsOfServiceInfo'
  /auth/v1/secretKey:
    get:
      tags:
        - Authentication Services
      operationId: get-/auth/v1/secretKey
      parameters: []
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.auth.SecretKey'
    delete:
      tags:
        - Authentication Services
      operationId: delete-/auth/v1/secretKey
      parameters: []
      security:
        - bearerAuth: []
      responses:
        '204':
          description: Void
  /auth/v1/oauth2/authurl:
    post:
      tags:
        - Authentication Services
      operationId: post-/auth/v1/oauth2/authurl
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.oauth.OAuthUrlRequest'
        required: true
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.oauth.OAuthUrlResponse'
  /auth/v1/oauth2/session2:
    post:
      tags:
        - Authentication Services
      operationId: post-/auth/v1/oauth2/session2
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.oauth.OAuthValidationRequest'
        required: true
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.auth.LoginResponse'
  /auth/v1/oauth2/alias:
    post:
      tags:
        - Authentication Services
      operationId: post-/auth/v1/oauth2/alias
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.oauth.OAuthValidationRequest'
        required: true
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.principal.PrincipalAlias'
    delete:
      tags:
        - Authentication Services
      operationId: delete-/auth/v1/oauth2/alias
      parameters:
        - name: provider
          in: query
          required: true
          description: the OAuth provider through which the alias was associated
          schema:
            type: string
        - name: alias
          in: query
          required: true
          description: the alias for the user given by the provider
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Void
  /auth/v1/oauth2/account2:
    post:
      tags:
        - Authentication Services
      operationId: post-/auth/v1/oauth2/account2
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.oauth.OAuthAccountCreationRequest'
        required: true
      responses:
        '201':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.auth.LoginResponse'
  /auth/v1/personalAccessToken:
    post:
      tags:
        - Authentication Services
      operationId: post-/auth/v1/personalAccessToken
      parameters:
        - name: Synapse-Authorization
          in: header
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.auth.AccessTokenGenerationRequest'
        required: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.auth.AccessTokenGenerationResponse'
    get:
      tags:
        - Authentication Services
      operationId: get-/auth/v1/personalAccessToken
      parameters:
        - name: nextPageToken
          in: query
          required: false
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.auth.AccessTokenRecordList'
  /auth/v1/personalAccessToken/{id}:
    get:
      tags:
        - Authentication Services
      operationId: get-/auth/v1/personalAccessToken/{id}
      parameters:
        - name: id
          in: path
          required: true
          description: The unique ID of the token, which is the unique ID (the "jti" claim) contained in the JWT
          schema:
            type: number
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.auth.AccessTokenRecord'
    delete:
      tags:
        - Authentication Services
      operationId: delete-/auth/v1/personalAccessToken/{id}
      parameters:
        - name: id
          in: path
          required: true
          description: The unique ID of the token, which is the unique ID (the "jti" claim) contained in the JWT
          schema:
            type: number
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Void
  /auth/v1/sessionAccessToken:
    delete:
      tags:
        - Authentication Services
      operationId: delete-/auth/v1/sessionAccessToken
      parameters:
        - name: Synapse-Authorization
          in: header
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Void
  /auth/v1/user/{targetUserId}/sessionAccessToken/all:
    delete:
      tags:
        - Authentication Services
      operationId: delete-/auth/v1/user/{targetUserId}/sessionAccessToken/all
      parameters:
        - name: targetUserId
          in: path
          required: true
          description: The user
          schema:
            type: number
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Void
  /auth/v1/2fa/enroll:
    post:
      tags:
        - Authentication Services (2FA)
      operationId: post-/auth/v1/2fa/enroll
      parameters: []
      security:
        - bearerAuth: []
      responses:
        '201':
          description: |-
            The generated TOTP secret that can be used in the user authenticator application, the secret is not active. 
             To use this secret for 2FA a ,<a href="${POST.2fa}">,POST /2fa,</a>, must be performed that includes the secret id and a totp code.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.auth.TotpSecret'
  /auth/v1/2fa:
    post:
      tags:
        - Authentication Services (2FA)
      operationId: post-/auth/v1/2fa
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.auth.TotpSecretActivationRequest'
        required: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: The status of 2FA for the user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.auth.TwoFactorAuthStatus'
    get:
      tags:
        - Authentication Services (2FA)
      operationId: get-/auth/v1/2fa
      parameters: []
      security:
        - bearerAuth: []
      responses:
        '200':
          description: The status of 2FA for the user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.auth.TwoFactorAuthStatus'
    delete:
      tags:
        - Authentication Services (2FA)
      operationId: delete-/auth/v1/2fa
      parameters: []
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Void
  /auth/v1/2fa/token:
    post:
      tags:
        - Authentication Services (2FA)
      operationId: post-/auth/v1/2fa/token
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.auth.TwoFactorAuthLoginRequest'
        required: true
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.auth.LoginResponse'
  /auth/v1/2fa/recoveryCodes:
    post:
      tags:
        - Authentication Services (2FA)
      operationId: post-/auth/v1/2fa/recoveryCodes
      parameters: []
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.auth.TwoFactorAuthRecoveryCodes'
  /auth/v1/2fa/reset:
    post:
      tags:
        - Authentication Services (2FA)
      operationId: post-/auth/v1/2fa/reset
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.auth.TwoFactorAuthResetRequest'
        required: true
      responses:
        '204':
          description: Void
  /auth/v1/2fa/disable:
    post:
      tags:
        - Authentication Services (2FA)
      operationId: post-/auth/v1/2fa/disable
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.auth.TwoFactorAuthDisableRequest'
        required: true
      responses:
        '204':
          description: Void
  /ga4gh/drs/v1/service-info:
    get:
      tags:
        - Drs Services
      operationId: get-/ga4gh/drs/v1/service-info
      parameters: []
      responses:
        '200':
          description: the drs service information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.drs.ServiceInformation'
  /ga4gh/drs/v1/objects/{object_id}:
    get:
      tags:
        - Drs Services
      operationId: get-/ga4gh/drs/v1/objects/{object_id}
      parameters:
        - name: object_id
          in: path
          required: true
          schema:
            type: string
        - name: expand
          in: query
          required: true
          schema:
            type: boolean
      security:
        - bearerAuth: []
      responses:
        '200':
          description: the DRS object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.drs.DrsObject'
  /ga4gh/drs/v1/objects/{object_id}/access/{access_id}:
    get:
      tags:
        - Drs Services
      operationId: get-/ga4gh/drs/v1/objects/{object_id}/access/{access_id}
      parameters:
        - name: object_id
          in: path
          required: true
          schema:
            type: string
        - name: access_id
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: the presigned url to download a file
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.drs.AccessUrl'
  /file/v1/fileHandle/batch:
    post:
      tags:
        - File Services
      operationId: post-/file/v1/fileHandle/batch
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.file.BatchFileRequest'
        required: true
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.file.BatchFileResult'
  /file/v1/fileHandle/{handleIdToCopyFrom}/copy:
    post:
      tags:
        - File Services
      operationId: post-/file/v1/fileHandle/{handleIdToCopyFrom}/copy
      parameters:
        - name: handleIdToCopyFrom
          in: path
          required: true
          description: the file handle it from which to duplicate the data
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.file.S3FileHandle'
        required: true
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.file.S3FileHandle'
  /file/v1/fileHandle/{handleId}:
    get:
      tags:
        - File Services
      operationId: get-/file/v1/fileHandle/{handleId}
      parameters:
        - name: handleId
          in: path
          required: true
          description: The ID of the FileHandle to fetch.
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.file.FileHandle'
    delete:
      tags:
        - File Services
      operationId: delete-/file/v1/fileHandle/{handleId}
      parameters:
        - name: handleId
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Void
  /file/v1/fileHandle/{handleId}/filepreview:
    delete:
      tags:
        - File Services
      operationId: delete-/file/v1/fileHandle/{handleId}/filepreview
      parameters:
        - name: handleId
          in: path
          required: true
          description: The ID of the FileHandle whose preview should be cleared.
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Void
  /file/v1/externalFileHandle:
    post:
      tags:
        - File Services
      operationId: post-/file/v1/externalFileHandle
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.file.ExternalFileHandleInterface'
        required: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.file.ExternalFileHandleInterface'
  /file/v1/externalFileHandle/s3:
    post:
      tags:
        - File Services
      operationId: post-/file/v1/externalFileHandle/s3
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.file.S3FileHandle'
        required: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.file.S3FileHandle'
  /file/v1/externalFileHandle/googleCloud:
    post:
      tags:
        - File Services
      operationId: post-/file/v1/externalFileHandle/googleCloud
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.file.GoogleCloudFileHandle'
        required: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.file.GoogleCloudFileHandle'
  /file/v1/entity/{id}/uploadDestinationLocations:
    get:
      tags:
        - File Services
      operationId: get-/file/v1/entity/{id}/uploadDestinationLocations
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListWrapperOfUploadDestinationLocation'
  /file/v1/entity/{id}/uploadDestination/{storageLocationId}:
    get:
      tags:
        - File Services
      operationId: get-/file/v1/entity/{id}/uploadDestination/{storageLocationId}
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: storageLocationId
          in: path
          required: true
          schema:
            type: number
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.file.UploadDestination'
  /file/v1/entity/{id}/uploadDestination:
    get:
      tags:
        - File Services
      operationId: get-/file/v1/entity/{id}/uploadDestination
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.file.UploadDestination'
  /file/v1/fileHandle/{handleId}/url:
    get:
      tags:
        - File Services
      operationId: get-/file/v1/fileHandle/{handleId}/url
      parameters:
        - name: handleId
          in: path
          required: true
          schema:
            type: string
        - name: redirect
          in: query
          required: false
          description: |-
            When set to false, the URL will be returned as text/plain
                        instead of redirecting.
          schema:
            type: boolean
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Status 200 will be returned if the 'redirect' boolean param is false
          content:
            text/plain:
              schema: {}
        '307':
          description: Status 307 will be returned if the 'redirect' boolean param is true or null
  /file/v1/file/bulk/async/start:
    post:
      tags:
        - File Services
      operationId: post-/file/v1/file/bulk/async/start
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.file.BulkFileDownloadRequest'
        required: true
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.asynch.AsyncJobId'
  /file/v1/file/bulk/async/get/{asyncToken}:
    get:
      tags:
        - File Services
      operationId: get-/file/v1/file/bulk/async/get/{asyncToken}
      parameters:
        - name: asyncToken
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.file.BulkFileDownloadResponse'
  /file/v1/file/{id}:
    get:
      tags:
        - File Services
      operationId: get-/file/v1/file/{id}
      parameters:
        - name: id
          in: path
          required: true
          description: the ID of the file handle to be downloaded
          schema:
            type: string
        - name: redirect
          in: query
          required: false
          description: |-
            When set to false, the URL will be returned as text/plain
                        instead of redirecting.
          schema:
            type: boolean
        - name: fileAssociateType
          in: query
          required: true
          description: the type of object with which the file is associated
          schema:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.file.FileHandleAssociateType'
        - name: fileAssociateId
          in: query
          required: true
          description: the ID fo the object with which the file is associated
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Status 200 will be returned if the 'redirect' boolean param is false
          content:
            text/plain:
              schema: {}
        '307':
          description: Status 307 will be returned if the 'redirect' boolean param is true or null
  /file/v1/file/multipart:
    post:
      tags:
        - File Services
      operationId: post-/file/v1/file/multipart
      parameters:
        - name: forceRestart
          in: query
          required: false
          description: |-
            Optional parameter. When 'forceRestart=true' is included, any
                        upload state for the given file will be cleared and a new
                        upload will be started.
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.file.MultipartRequest'
        required: true
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.file.MultipartUploadStatus'
  /file/v1/file/multipart/{uploadId}/presigned/url/batch:
    post:
      tags:
        - File Services
      operationId: post-/file/v1/file/multipart/{uploadId}/presigned/url/batch
      parameters:
        - name: uploadId
          in: path
          required: true
          description: The unique identifier of the file upload.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.file.BatchPresignedUploadUrlRequest'
        required: true
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.file.BatchPresignedUploadUrlResponse'
  /file/v1/file/multipart/{uploadId}/add/{partNumber}:
    put:
      tags:
        - File Services
      operationId: put-/file/v1/file/multipart/{uploadId}/add/{partNumber}
      parameters:
        - name: uploadId
          in: path
          required: true
          description: The unique identifier of the file upload.
          schema:
            type: string
        - name: partNumber
          in: path
          required: true
          description: The part number to add. Must be a number between 1 and 10,000.
          schema:
            type: integer
        - name: partMD5Hex
          in: query
          required: true
          description: |-
            The MD5 of the uploaded part represented as a hexadecimal
                        string. If the provided MD5 does not match the MD5 of the
                        uploaded part, the add will fail.
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '201':
          description: |-
            The response will indicate if add succeeded or failed. When an
                     add fails, the response will include an error message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.file.AddPartResponse'
  /file/v1/file/multipart/{uploadId}/complete:
    put:
      tags:
        - File Services
      operationId: put-/file/v1/file/multipart/{uploadId}/complete
      parameters:
        - name: uploadId
          in: path
          required: true
          description: The unique identifier of the file upload.
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '201':
          description: |-
            If successful, the response will include the ID of the new file
                     handle.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.file.MultipartUploadStatus'
  /file/v1/filehandles/copy:
    post:
      tags:
        - File Services
      operationId: post-/file/v1/filehandles/copy
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.file.BatchFileHandleCopyRequest'
        required: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.file.BatchFileHandleCopyResult'
  /file/v1/download/list/add/async/start:
    post:
      tags:
        - File Services
      operationId: post-/file/v1/download/list/add/async/start
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.file.AddFileToDownloadListRequest'
        required: true
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.asynch.AsyncJobId'
  /file/v1/download/list/add/async/get/{asyncToken}:
    get:
      tags:
        - File Services
      operationId: get-/file/v1/download/list/add/async/get/{asyncToken}
      parameters:
        - name: asyncToken
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.file.AddFileToDownloadListResponse'
  /file/v1/download/list/add:
    post:
      tags:
        - File Services
      operationId: post-/file/v1/download/list/add
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.file.FileHandleAssociationList'
        required: true
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.file.DownloadList'
  /file/v1/download/list/remove:
    post:
      tags:
        - File Services
      operationId: post-/file/v1/download/list/remove
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.file.FileHandleAssociationList'
        required: true
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.file.DownloadList'
  /file/v1/download/list:
    delete:
      tags:
        - File Services
      operationId: delete-/file/v1/download/list
      parameters: []
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Void
    get:
      tags:
        - File Services
      operationId: get-/file/v1/download/list
      parameters: []
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.file.DownloadList'
  /file/v1/download/order:
    post:
      tags:
        - File Services
      operationId: post-/file/v1/download/order
      parameters:
        - name: zipFileName
          in: query
          required: true
          description: The name to given to the resulting zip file.
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.file.DownloadOrder'
  /file/v1/download/order/{orderId}:
    get:
      tags:
        - File Services
      operationId: get-/file/v1/download/order/{orderId}
      parameters:
        - name: orderId
          in: path
          required: true
          description: The ID of the download order to fetch.
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.file.DownloadOrder'
  /file/v1/download/order/history:
    post:
      tags:
        - File Services
      operationId: post-/file/v1/download/order/history
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.file.DownloadOrderSummaryRequest'
        required: true
      security:
        - bearerAuth: []
      responses:
        '201':
          description: A single page of download order summaries.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.file.DownloadOrderSummaryResponse'
  /file/v1/fileHandle/restore/async/start:
    post:
      tags:
        - File Services
      operationId: post-/file/v1/fileHandle/restore/async/start
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.file.FileHandleRestoreRequest'
        required: true
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.asynch.AsyncJobId'
  /file/v1/fileHandle/restore/async/get/{asyncToken}:
    get:
      tags:
        - File Services
      operationId: get-/file/v1/fileHandle/restore/async/get/{asyncToken}
      parameters:
        - name: asyncToken
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.file.FileHandleRestoreResponse'
  /repo/v1/project/{projectId}/forum:
    get:
      tags:
        - Discussion Services
      operationId: get-/repo/v1/project/{projectId}/forum
      parameters:
        - name: projectId
          in: path
          required: true
          description: '- The ID of the project to which the forum belongs.'
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.discussion.Forum'
  /repo/v1/forum/{forumId}:
    get:
      tags:
        - Discussion Services
      operationId: get-/repo/v1/forum/{forumId}
      parameters:
        - name: forumId
          in: path
          required: true
          description: '- The ID of the forum.'
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.discussion.Forum'
  /repo/v1/forum/{forumId}/threads:
    get:
      tags:
        - Discussion Services
      operationId: get-/repo/v1/forum/{forumId}/threads
      parameters:
        - name: limit
          in: query
          required: true
          description: '- Limits the size of the page returned. For example, a page size of 10 require limit = 10. The maximum Limit for this call is 20.'
          schema:
            type: number
        - name: offset
          in: query
          required: true
          description: '- The index of the pagination offset. For a page size of 10, the first page would be at offset = 0, and the second page would be at offset = 10.'
          schema:
            type: number
        - name: sort
          in: query
          required: false
          description: '- The field to sort the resulting threads on. Available options: ,<a href="${org.sagebionetworks.repo.model.discussion.DiscussionThreadOrder}">,DiscussionThreadOrder,</a>,.'
          schema:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.discussion.DiscussionThreadOrder'
        - name: ascending
          in: query
          required: false
          description: '- The direction of sort: true for ascending, and false for descending'
          schema:
            type: boolean
        - name: filter
          in: query
          required: true
          description: '- Filter deleted/ not deleted threads. Available options: ,<a href="${org.sagebionetworks.repo.model.discussion.DiscussionFilter}">,DiscussionFilter,</a>,.'
          schema:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.discussion.DiscussionFilter'
        - name: forumId
          in: path
          required: true
          description: '- The forum ID to which the returning threads belong'
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResultsOfDiscussionThreadBundle'
  /repo/v1/thread:
    post:
      tags:
        - Discussion Services
      operationId: post-/repo/v1/thread
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.discussion.CreateDiscussionThread'
        required: true
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.discussion.DiscussionThreadBundle'
  /repo/v1/thread/{threadId}:
    get:
      tags:
        - Discussion Services
      operationId: get-/repo/v1/thread/{threadId}
      parameters:
        - name: threadId
          in: path
          required: true
          description: '- The ID of the thread being requested'
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.discussion.DiscussionThreadBundle'
    delete:
      tags:
        - Discussion Services
      operationId: delete-/repo/v1/thread/{threadId}
      parameters:
        - name: threadId
          in: path
          required: true
          description: '- the ID of the thread being marked as deleted'
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '204':
          description: Void
  /repo/v1/thread/{threadId}/title:
    put:
      tags:
        - Discussion Services
      operationId: put-/repo/v1/thread/{threadId}/title
      parameters:
        - name: threadId
          in: path
          required: true
          description: '- The ID of the thread being updated'
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.discussion.UpdateThreadTitle'
        required: true
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.discussion.DiscussionThreadBundle'
  /repo/v1/thread/{threadId}/message:
    put:
      tags:
        - Discussion Services
      operationId: put-/repo/v1/thread/{threadId}/message
      parameters:
        - name: threadId
          in: path
          required: true
          description: '- The ID of the thread being updated'
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.discussion.UpdateThreadMessage'
        required: true
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.discussion.DiscussionThreadBundle'
  /repo/v1/thread/{threadId}/restore:
    put:
      tags:
        - Discussion Services
      operationId: put-/repo/v1/thread/{threadId}/restore
      parameters:
        - name: threadId
          in: path
          required: true
          description: '- the ID of the thread that was marked as deleted'
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Void
  /repo/v1/thread/{threadId}/pin:
    put:
      tags:
        - Discussion Services
      operationId: put-/repo/v1/thread/{threadId}/pin
      parameters:
        - name: threadId
          in: path
          required: true
          description: '- the ID of the thread being marked as pinned'
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '204':
          description: Void
  /repo/v1/thread/{threadId}/unpin:
    put:
      tags:
        - Discussion Services
      operationId: put-/repo/v1/thread/{threadId}/unpin
      parameters:
        - name: threadId
          in: path
          required: true
          description: '- the ID of the thread being unpinned'
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '204':
          description: Void
  /repo/v1/thread/messageUrl:
    get:
      tags:
        - Discussion Services
      operationId: get-/repo/v1/thread/messageUrl
      parameters:
        - name: messageKey
          in: query
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.discussion.MessageURL'
  /repo/v1/reply:
    post:
      tags:
        - Discussion Services
      operationId: post-/repo/v1/reply
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.discussion.CreateDiscussionReply'
        required: true
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.discussion.DiscussionReplyBundle'
  /repo/v1/reply/{replyId}:
    get:
      tags:
        - Discussion Services
      operationId: get-/repo/v1/reply/{replyId}
      parameters:
        - name: replyId
          in: path
          required: true
          description: '- The ID of the reply being requested'
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.discussion.DiscussionReplyBundle'
    delete:
      tags:
        - Discussion Services
      operationId: delete-/repo/v1/reply/{replyId}
      parameters:
        - name: replyId
          in: path
          required: true
          description: '- the ID of the reply being marked as deleted'
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '204':
          description: Void
  /repo/v1/reply/{replyId}/message:
    put:
      tags:
        - Discussion Services
      operationId: put-/repo/v1/reply/{replyId}/message
      parameters:
        - name: replyId
          in: path
          required: true
          description: '- The ID of the reply being updated'
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.discussion.UpdateReplyMessage'
        required: true
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.discussion.DiscussionReplyBundle'
  /repo/v1/thread/{threadId}/replies:
    get:
      tags:
        - Discussion Services
      operationId: get-/repo/v1/thread/{threadId}/replies
      parameters:
        - name: limit
          in: query
          required: true
          description: '- Limits the size of the page returned. For example, a page size of 10 require limit = 10. The maximum Limit for this call is 100.'
          schema:
            type: number
        - name: offset
          in: query
          required: true
          description: '- The index of the pagination offset. For a page size of 10, the first page would be at offset = 0, and the second page would be at offset = 10.'
          schema:
            type: number
        - name: sort
          in: query
          required: false
          description: '- The field to sort the resulting replies on. Available options: ,<a href="${org.sagebionetworks.repo.model.discussion.DiscussionReplyOrder}">,DiscussionReplyOrder,</a>,.'
          schema:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.discussion.DiscussionReplyOrder'
        - name: ascending
          in: query
          required: false
          description: '- The direction of sort: true for ascending, and false for descending'
          schema:
            type: boolean
        - name: filter
          in: query
          required: true
          description: '- Filter deleted/ not deleted replies. Available options: ,<a href="${org.sagebionetworks.repo.model.discussion.DiscussionFilter}">,DiscussionFilter,</a>,.'
          schema:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.discussion.DiscussionFilter'
        - name: threadId
          in: path
          required: true
          description: '- The thread ID to which the returning replies belong'
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResultsOfDiscussionReplyBundle'
  /repo/v1/reply/messageUrl:
    get:
      tags:
        - Discussion Services
      operationId: get-/repo/v1/reply/messageUrl
      parameters:
        - name: messageKey
          in: query
          required: true
          description: '- DiscussionReplyBundle.messageKey'
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.discussion.MessageURL'
  /repo/v1/forum/{forumId}/threadcount:
    get:
      tags:
        - Discussion Services
      operationId: get-/repo/v1/forum/{forumId}/threadcount
      parameters:
        - name: filter
          in: query
          required: true
          description: '- Filter deleted/ not deleted threads. Available options: ,<a href="${org.sagebionetworks.repo.model.discussion.DiscussionFilter}">,DiscussionFilter,</a>,.'
          schema:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.discussion.DiscussionFilter'
        - name: forumId
          in: path
          required: true
          description: '- The forum ID to which the returning threads belong'
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.discussion.ThreadCount'
  /repo/v1/thread/{threadId}/replycount:
    get:
      tags:
        - Discussion Services
      operationId: get-/repo/v1/thread/{threadId}/replycount
      parameters:
        - name: filter
          in: query
          required: true
          description: '- Filter deleted/ not deleted replies. Available options: ,<a href="${org.sagebionetworks.repo.model.discussion.DiscussionFilter}">,DiscussionFilter,</a>,.'
          schema:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.discussion.DiscussionFilter'
        - name: threadId
          in: path
          required: true
          description: '- The thread ID to which the returning replies belong'
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.discussion.ReplyCount'
  /repo/v1/entity/{id}/threads:
    get:
      tags:
        - Discussion Services
      operationId: get-/repo/v1/entity/{id}/threads
      parameters:
        - name: limit
          in: query
          required: true
          description: '- Limits the size of the page returned. For example, a page size of 10 require limit = 10. The maximum Limit for this call is 20.'
          schema:
            type: number
        - name: offset
          in: query
          required: true
          description: '- The index of the pagination offset. For a page size of 10, the first page would be at offset = 0, and the second page would be at offset = 10.'
          schema:
            type: number
        - name: sort
          in: query
          required: false
          description: '- The field to sort the resulting threads on. Available options: ,<a href="${org.sagebionetworks.repo.model.discussion.DiscussionThreadOrder}">,DiscussionThreadOrder,</a>,.'
          schema:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.discussion.DiscussionThreadOrder'
        - name: ascending
          in: query
          required: false
          description: '- The direction of sort: true for ascending, and false for descending'
          schema:
            type: boolean
        - name: id
          in: path
          required: true
          description: '- The request entityId'
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: the threads that user has read permission to.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResultsOfDiscussionThreadBundle'
  /repo/v1/entity/threadcounts:
    post:
      tags:
        - Discussion Services
      operationId: post-/repo/v1/entity/threadcounts
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.EntityIdList'
        required: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.discussion.EntityThreadCounts'
  /repo/v1/forum/{forumId}/moderators:
    get:
      tags:
        - Discussion Services
      operationId: get-/repo/v1/forum/{forumId}/moderators
      parameters:
        - name: limit
          in: query
          required: true
          description: '- Limits the size of the page returned. For example, a page size of 10 require limit = 10. The maximum Limit for this call is 100.'
          schema:
            type: number
        - name: offset
          in: query
          required: true
          description: '- The index of the pagination offset. For a page size of 10, the first page would be at offset = 0, and the second page would be at offset = 10.'
          schema:
            type: number
        - name: forumId
          in: path
          required: true
          description: '- The forum ID to which the returning mederators belong'
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.PaginatedIds'
  /repo/v1/forum/{forumId}/search:
    post:
      tags:
        - Discussion Services
      operationId: post-/repo/v1/forum/{forumId}/search
      parameters:
        - name: forumId
          in: path
          required: true
          description: The ID of the forum where the search is performed
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.discussion.DiscussionSearchRequest'
        required: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: The response containing a page of results ordered by relevance and a potential token to fetch the results for a subsequent page
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.discussion.DiscussionSearchResponse'
  /repo/v1/download/list/add:
    post:
      tags:
        - Download List Services
      operationId: post-/repo/v1/download/list/add
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.download.AddBatchOfFilesToDownloadListRequest'
        required: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.download.AddBatchOfFilesToDownloadListResponse'
  /repo/v1/download/list/remove:
    post:
      tags:
        - Download List Services
      operationId: post-/repo/v1/download/list/remove
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.download.RemoveBatchOfFilesFromDownloadListRequest'
        required: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.download.RemoveBatchOfFilesFromDownloadListResponse'
  /repo/v1/download/list:
    delete:
      tags:
        - Download List Services
      operationId: delete-/repo/v1/download/list
      parameters: []
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Void
  /repo/v1/download/list/query/async/start:
    post:
      tags:
        - Download List Services
      operationId: post-/repo/v1/download/list/query/async/start
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.download.DownloadListQueryRequest'
        required: true
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.asynch.AsyncJobId'
  /repo/v1/download/list/query/async/get/{asyncToken}:
    get:
      tags:
        - Download List Services
      operationId: get-/repo/v1/download/list/query/async/get/{asyncToken}
      parameters:
        - name: asyncToken
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.download.DownloadListQueryResponse'
  /repo/v1/download/list/add/async/start:
    post:
      tags:
        - Download List Services
      operationId: post-/repo/v1/download/list/add/async/start
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.download.AddToDownloadListRequest'
        required: true
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.asynch.AsyncJobId'
  /repo/v1/download/list/add/async/get/{asyncToken}:
    get:
      tags:
        - Download List Services
      operationId: get-/repo/v1/download/list/add/async/get/{asyncToken}
      parameters:
        - name: asyncToken
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.download.AddToDownloadListResponse'
  /repo/v1/download/list/package/async/start:
    post:
      tags:
        - Download List Services
      operationId: post-/repo/v1/download/list/package/async/start
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.download.DownloadListPackageRequest'
        required: true
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.asynch.AsyncJobId'
  /repo/v1/download/list/package/async/get/{asyncToken}:
    get:
      tags:
        - Download List Services
      operationId: get-/repo/v1/download/list/package/async/get/{asyncToken}
      parameters:
        - name: asyncToken
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.download.DownloadListPackageResponse'
  /repo/v1/download/list/manifest/async/start:
    post:
      tags:
        - Download List Services
      operationId: post-/repo/v1/download/list/manifest/async/start
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.download.DownloadListManifestRequest'
        required: true
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.asynch.AsyncJobId'
  /repo/v1/download/list/manifest/async/get/{asyncToken}:
    get:
      tags:
        - Download List Services
      operationId: get-/repo/v1/download/list/manifest/async/get/{asyncToken}
      parameters:
        - name: asyncToken
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.download.DownloadListManifestResponse'
  /repo/v1/team:
    post:
      tags:
        - Team Services
      operationId: post-/repo/v1/team
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.Team'
        required: true
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.Team'
    put:
      tags:
        - Team Services
      operationId: put-/repo/v1/team
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.Team'
        required: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.Team'
  /repo/v1/teams:
    get:
      tags:
        - Team Services
      operationId: get-/repo/v1/teams
      parameters:
        - name: fragment
          in: query
          required: false
          description: |-
            a prefix of the Team name, or a prefix of any sub-string in the name preceded by a space.  
             If omitted, all Teams are returned.
          schema:
            type: string
        - name: limit
          in: query
          required: false
          description: the maximum number of Teams to return (default 10, max limit 50)
          schema:
            type: integer
        - name: offset
          in: query
          required: false
          description: the starting index of the returned results (default 0)
          schema:
            type: integer
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResultsOfTeam'
  /repo/v1/user/{id}/team:
    get:
      tags:
        - Team Services
      operationId: get-/repo/v1/user/{id}/team
      parameters:
        - name: id
          in: path
          required: true
          description: the principal ID of the user of interest.
          schema:
            type: string
        - name: limit
          in: query
          required: false
          description: the maximum number of Teams to return (default 10)
          schema:
            type: integer
        - name: offset
          in: query
          required: false
          description: the starting index of the returned results (default 0)
          schema:
            type: integer
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResultsOfTeam'
  /repo/v1/user/{id}/team/id:
    get:
      tags:
        - Team Services
      operationId: get-/repo/v1/user/{id}/team/id
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: nextPageToken
          in: query
          required: false
          description: controls pagination
          schema:
            type: string
        - name: sort
          in: query
          required: false
          description: the field to sort the team IDs on. Available options ,<a href="${org.sagebionetworks.repo.model.TeamSortOrder}">,TeamSortOrder,</a>
          schema:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.TeamSortOrder'
        - name: ascending
          in: query
          required: false
          description: 'the direction of sort: true for ascending, and false for descending'
          schema:
            type: boolean
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.PaginatedTeamIds'
  /repo/v1/teamList:
    post:
      tags:
        - Team Services
      operationId: post-/repo/v1/teamList
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.IdList'
        required: true
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListWrapperOfTeam'
  /repo/v1/team/{id}/member/{principalId}:
    get:
      tags:
        - Team Services
      operationId: get-/repo/v1/team/{id}/member/{principalId}
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: principalId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.TeamMember'
    put:
      tags:
        - Team Services
      operationId: put-/repo/v1/team/{id}/member/{principalId}
      parameters:
        - name: id
          in: path
          required: true
          description: the ID of the Team to which the user is to be added.
          schema:
            type: string
        - name: principalId
          in: path
          required: true
          description: the ID of the user to be added to the Team.
          schema:
            type: string
        - name: teamEndpoint
          in: query
          required: false
          description: the portal prefix for the Team URL. The team ID is appended to create the complete URL.
          schema:
            type: string
        - name: notificationUnsubscribeEndpoint
          in: query
          required: false
          description: |-
            the portal prefix for one-click email unsubscription.  
             A signed, serialized token is appended to create the complete URL: 
             ,<,ahref="${org.sagebionetworks.repo.model.message.NotificationSettingsSignedToken}",>,NotificationSettingsSignedToken,</a>
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '204':
          description: Void
    delete:
      tags:
        - Team Services
      operationId: delete-/repo/v1/team/{id}/member/{principalId}
      parameters:
        - name: id
          in: path
          required: true
          description: the Team ID
          schema:
            type: string
        - name: principalId
          in: path
          required: true
          description: the member's principal ID
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '204':
          description: Void
  /repo/v1/team/{id}:
    get:
      tags:
        - Team Services
      operationId: get-/repo/v1/team/{id}
      parameters:
        - name: id
          in: path
          required: true
          description: the ID of the Team of interest
          schema:
            type: string
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.Team'
    delete:
      tags:
        - Team Services
      operationId: delete-/repo/v1/team/{id}
      parameters:
        - name: id
          in: path
          required: true
          description: the ID of the Team to delete.
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '204':
          description: Void
  /repo/v1/team/{id}/icon:
    get:
      tags:
        - Team Services
      operationId: get-/repo/v1/team/{id}/icon
      parameters:
        - name: id
          in: path
          required: true
          description: the ID of the Team
          schema:
            type: string
        - name: redirect
          in: query
          required: false
          description: if true or omitted, then redirect to the URL.  If false then simply return the URL.
          schema:
            type: boolean
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Status 200 will be returned if the 'redirect' boolean param is false
          content:
            text/plain:
              schema: {}
        '307':
          description: Status 307 will be returned if the 'redirect' boolean param is true or null
  /repo/v1/team/{id}/icon/preview:
    get:
      tags:
        - Team Services
      operationId: get-/repo/v1/team/{id}/icon/preview
      parameters:
        - name: id
          in: path
          required: true
          description: the ID of the Team
          schema:
            type: string
        - name: redirect
          in: query
          required: false
          description: if true or omitted, then redirect to the URL.  If false then simply return the URL.
          schema:
            type: boolean
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Status 200 will be returned if the 'redirect' boolean param is false
          content:
            text/plain:
              schema: {}
        '307':
          description: Status 307 will be returned if the 'redirect' boolean param is true or null
  /repo/v1/teamMember:
    put:
      tags:
        - Team Services
      operationId: put-/repo/v1/teamMember
      parameters:
        - name: teamEndpoint
          in: query
          required: false
          schema:
            type: string
        - name: notificationUnsubscribeEndpoint
          in: query
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.JoinTeamSignedToken'
        required: true
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.ResponseMessage'
  /repo/v1/team/{id}/member/{principalId}/membershipStatus:
    get:
      tags:
        - Team Services
      operationId: get-/repo/v1/team/{id}/member/{principalId}/membershipStatus
      parameters:
        - name: id
          in: path
          required: true
          description: the Team ID
          schema:
            type: string
        - name: principalId
          in: path
          required: true
          description: the user ID
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.TeamMembershipStatus'
  /repo/v1/teamMembers/{id}:
    get:
      tags:
        - Team Services
      operationId: get-/repo/v1/teamMembers/{id}
      parameters:
        - name: id
          in: path
          required: true
          description: the id of the Team of interest
          schema:
            type: string
        - name: fragment
          in: query
          required: false
          description: a prefix of the user's first or last name or email address (optional)
          schema:
            type: string
        - name: memberType
          in: query
          required: false
          description: the type of team user to retrieve (optional; default "ALL")
          schema:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.TeamMemberTypeFilterOptions'
        - name: limit
          in: query
          required: false
          description: the maximum number of members to return (default 10, max limit 50)
          schema:
            type: integer
        - name: offset
          in: query
          required: false
          description: the starting index of the returned results (default 0)
          schema:
            type: integer
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResultsOfTeamMember'
  /repo/v1/teamMembers/count/{id}:
    get:
      tags:
        - Team Services
      operationId: get-/repo/v1/teamMembers/count/{id}
      parameters:
        - name: id
          in: path
          required: true
          description: the id of the Team of interest
          schema:
            type: string
        - name: fragment
          in: query
          required: false
          description: a prefix of the user's first or last name or email address (optional)
          schema:
            type: string
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.Count'
  /repo/v1/team/{id}/memberList:
    post:
      tags:
        - Team Services
      operationId: post-/repo/v1/team/{id}/memberList
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.IdList'
        required: true
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListWrapperOfTeamMember'
  /repo/v1/user/{id}/memberList:
    post:
      tags:
        - Team Services
      operationId: post-/repo/v1/user/{id}/memberList
      parameters:
        - name: id
          in: path
          required: true
          description: user's ID
          schema:
            type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.IdList'
        required: true
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListWrapperOfTeamMember'
  /repo/v1/team/{id}/acl:
    get:
      tags:
        - Team Services
      operationId: get-/repo/v1/team/{id}/acl
      parameters:
        - name: id
          in: path
          required: true
          description: the ID of the Team of interest
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.AccessControlList'
  /repo/v1/team/acl:
    put:
      tags:
        - Team Services
      operationId: put-/repo/v1/team/acl
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.AccessControlList'
        required: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.AccessControlList'
  /repo/v1/search:
    post:
      tags:
        - Search Services
      operationId: post-/repo/v1/search
      parameters:
        - name: isOpenSearchEnable
          in: query
          required: false
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.search.query.SearchQuery'
        required: true
      security:
        - bearerAuth: []
      responses:
        '201':
          description: search results from OpenSearch or CloudSearch depending upon parameter isOpenSearchEnable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.search.SearchResults'
  /repo/v1/userGroup:
    get:
      tags:
        - User & Group Services
      operationId: get-/repo/v1/userGroup
      parameters:
        - name: offset
          in: query
          required: false
          schema:
            type: integer
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: sort
          in: query
          required: false
          schema:
            type: string
        - name: ascending
          in: query
          required: false
          schema:
            type: boolean
      security:
        - bearerAuth: []
      responses:
        '200':
          description: The UserGroups for individuals
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResultsOfUserGroup'
  /repo/v1/schema/organization:
    post:
      tags:
        - JSON Schema Services
      operationId: post-/repo/v1/schema/organization
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.schema.CreateOrganizationRequest'
        required: true
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.schema.Organization'
    get:
      tags:
        - JSON Schema Services
      operationId: get-/repo/v1/schema/organization
      parameters:
        - name: name
          in: query
          required: true
          description: The name of the Organization to lookup.
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.schema.Organization'
  /repo/v1/schema/organization/list:
    post:
      tags:
        - JSON Schema Services
      operationId: post-/repo/v1/schema/organization/list
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.schema.ListOrganizationsRequest'
        required: true
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.schema.ListOrganizationsResponse'
  /repo/v1/schema/organization/{id}:
    delete:
      tags:
        - JSON Schema Services
      operationId: delete-/repo/v1/schema/organization/{id}
      parameters:
        - name: id
          in: path
          required: true
          description: The numeric identifier of the organization.
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Void
  /repo/v1/schema/organization/{id}/acl:
    get:
      tags:
        - JSON Schema Services
      operationId: get-/repo/v1/schema/organization/{id}/acl
      parameters:
        - name: id
          in: path
          required: true
          description: The numeric identifier of the organization.
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.AccessControlList'
    put:
      tags:
        - JSON Schema Services
      operationId: put-/repo/v1/schema/organization/{id}/acl
      parameters:
        - name: id
          in: path
          required: true
          description: The numeric identifier of the organization.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.AccessControlList'
        required: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.AccessControlList'
  /repo/v1/schema/type/create/async/start:
    post:
      tags:
        - JSON Schema Services
      operationId: post-/repo/v1/schema/type/create/async/start
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.schema.CreateSchemaRequest'
        required: true
      security:
        - bearerAuth: []
      responses:
        '201':
          description: |-
            Use the resulting token to monitor the job's progress and to get the
                     final results.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.asynch.AsyncJobId'
  /repo/v1/schema/type/create/async/get/{asyncToken}:
    get:
      tags:
        - JSON Schema Services
      operationId: get-/repo/v1/schema/type/create/async/get/{asyncToken}
      parameters:
        - name: asyncToken
          in: path
          required: true
          description: Forward the token returned when the job was started.
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.schema.CreateSchemaResponse'
  /repo/v1/schema/type/registered/{id}:
    get:
      tags:
        - JSON Schema Services
      operationId: get-/repo/v1/schema/type/registered/{id}
      parameters:
        - name: id
          in: path
          required: true
          description: The relative $id of the JSON schema to get.
          schema:
            type: string
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.schema.JsonSchema'
    delete:
      tags:
        - JSON Schema Services
      operationId: delete-/repo/v1/schema/type/registered/{id}
      parameters:
        - name: id
          in: path
          required: true
          description: The relative $id of the schema to delete.
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '204':
          description: Void
  /repo/v1/schema/list:
    post:
      tags:
        - JSON Schema Services
      operationId: post-/repo/v1/schema/list
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.schema.ListJsonSchemaInfoRequest'
        required: true
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.schema.ListJsonSchemaInfoResponse'
  /repo/v1/schema/version/list:
    post:
      tags:
        - JSON Schema Services
      operationId: post-/repo/v1/schema/version/list
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.schema.ListJsonSchemaVersionInfoRequest'
        required: true
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.schema.ListJsonSchemaVersionInfoResponse'
  /repo/v1/schema/type/validation/async/start:
    post:
      tags:
        - JSON Schema Services
      operationId: post-/repo/v1/schema/type/validation/async/start
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.schema.GetValidationSchemaRequest'
        required: true
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.asynch.AsyncJobId'
  /repo/v1/schema/type/validation/async/get/{asyncToken}:
    get:
      tags:
        - JSON Schema Services
      operationId: get-/repo/v1/schema/type/validation/async/get/{asyncToken}
      parameters:
        - name: asyncToken
          in: path
          required: true
          description: Forward the token returned when the job was started.
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.schema.GetValidationSchemaResponse'
  /repo/v1/statistics:
    post:
      tags:
        - Statistics Services
      operationId: post-/repo/v1/statistics
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.statistics.ObjectStatisticsRequest'
        required: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: |-
            An ,<a href="${org.sagebionetworks.repo.model.statistics.ObjectStatisticsResponse}">,ObjectStatisticsResponse,</a>,
                     containing the statistics according to the original ,<a href="${org.sagebionetworks.repo.model.statistics.ObjectStatisticsRequest}">,request,</a>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.statistics.ObjectStatisticsResponse'
  /repo/v1/webhook:
    post:
      tags:
        - Webhook Services
      operationId: post-/repo/v1/webhook
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.webhook.CreateOrUpdateWebhookRequest'
        required: true
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.webhook.Webhook'
  /repo/v1/webhook/{webhookId}:
    get:
      tags:
        - Webhook Services
      operationId: get-/repo/v1/webhook/{webhookId}
      parameters:
        - name: webhookId
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.webhook.Webhook'
    put:
      tags:
        - Webhook Services
      operationId: put-/repo/v1/webhook/{webhookId}
      parameters:
        - name: webhookId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.webhook.CreateOrUpdateWebhookRequest'
        required: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.webhook.Webhook'
    delete:
      tags:
        - Webhook Services
      operationId: delete-/repo/v1/webhook/{webhookId}
      parameters:
        - name: webhookId
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '204':
          description: Void
  /repo/v1/webhook/list:
    post:
      tags:
        - Webhook Services
      operationId: post-/repo/v1/webhook/list
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.webhook.ListUserWebhooksRequest'
        required: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.webhook.ListUserWebhooksResponse'
  /repo/v1/webhook/{webhookId}/verify:
    post:
      tags:
        - Webhook Services
      operationId: post-/repo/v1/webhook/{webhookId}/verify
      parameters:
        - name: webhookId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.webhook.VerifyWebhookRequest'
        required: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.webhook.VerifyWebhookResponse'
  /repo/v1/webhook/{webhookId}/verificationCode:
    put:
      tags:
        - Webhook Services
      operationId: put-/repo/v1/webhook/{webhookId}/verificationCode
      parameters:
        - name: webhookId
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.webhook.Webhook'
  /repo/v1/storageReport/async/start:
    post:
      tags:
        - Storage Report Services
      operationId: post-/repo/v1/storageReport/async/start
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.report.DownloadStorageReportRequest'
        required: true
      security:
        - bearerAuth: []
      responses:
        '202':
          description: The asynchronous job ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.asynch.AsyncJobId'
  /repo/v1/storageReport/async/get/{asyncToken}:
    get:
      tags:
        - Storage Report Services
      operationId: get-/repo/v1/storageReport/async/get/{asyncToken}
      parameters:
        - name: asyncToken
          in: path
          required: true
          description: The async job token from the create/update call
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: The results of the call, including a pre-signed URL to download the report.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.report.DownloadStorageReportResponse'
  /repo/v1/entity/{ownerId}/wiki:
    post:
      tags:
        - WikiPage Services
      operationId: post-/repo/v1/entity/{ownerId}/wiki
      parameters:
        - name: ownerId
          in: path
          required: true
          description: The ID of the owner Entity.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.wiki.WikiPage'
        required: true
      security:
        - bearerAuth: []
      responses:
        '201':
          description: '-'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.wiki.WikiPage'
    get:
      tags:
        - WikiPage Services
      operationId: get-/repo/v1/entity/{ownerId}/wiki
      parameters:
        - name: ownerId
          in: path
          required: true
          description: The ID of the owning Entity.
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.wiki.WikiPage'
  /repo/v1/access_requirement/{ownerId}/wiki:
    post:
      tags:
        - WikiPage Services
      operationId: post-/repo/v1/access_requirement/{ownerId}/wiki
      parameters:
        - name: ownerId
          in: path
          required: true
          description: The ID of the owner Entity.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.wiki.WikiPage'
        required: true
      security:
        - bearerAuth: []
      responses:
        '201':
          description: '-'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.wiki.WikiPage'
  /repo/v1/evaluation/{ownerId}/wiki:
    post:
      tags:
        - WikiPage Services
      operationId: post-/repo/v1/evaluation/{ownerId}/wiki
      parameters:
        - name: ownerId
          in: path
          required: true
          description: The ID of the owner Evaluation.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.wiki.WikiPage'
        required: true
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.wiki.WikiPage'
    get:
      tags:
        - WikiPage Services
      operationId: get-/repo/v1/evaluation/{ownerId}/wiki
      parameters:
        - name: ownerId
          in: path
          required: true
          description: The ID of the owning Evaluation.
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.wiki.WikiPage'
  /repo/v1/entity/{ownerId}/wikikey:
    get:
      tags:
        - WikiPage Services
      operationId: get-/repo/v1/entity/{ownerId}/wikikey
      parameters:
        - name: ownerId
          in: path
          required: true
          description: The ID of the owning Entity.
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.dao.WikiPageKey'
  /repo/v1/evaluation/{ownerId}/wikikey:
    get:
      tags:
        - WikiPage Services
      operationId: get-/repo/v1/evaluation/{ownerId}/wikikey
      parameters:
        - name: ownerId
          in: path
          required: true
          description: The ID of the owning Evaluation.
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.dao.WikiPageKey'
  /repo/v1/access_requirement/{ownerId}/wikikey:
    get:
      tags:
        - WikiPage Services
      operationId: get-/repo/v1/access_requirement/{ownerId}/wikikey
      parameters:
        - name: ownerId
          in: path
          required: true
          description: The ID of the owning Access Requirement.
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.dao.WikiPageKey'
  /repo/v1/entity/{ownerId}/wiki/{wikiId}:
    get:
      tags:
        - WikiPage Services
      operationId: get-/repo/v1/entity/{ownerId}/wiki/{wikiId}
      parameters:
        - name: ownerId
          in: path
          required: true
          description: The ID of the owning Entity.
          schema:
            type: string
        - name: wikiId
          in: path
          required: true
          description: The ID of the WikiPage to get.
          schema:
            type: string
        - name: wikiVersion
          in: query
          required: false
          description: When included returns a specific version of a wiki.
          schema:
            type: number
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.wiki.WikiPage'
    put:
      tags:
        - WikiPage Services
      operationId: put-/repo/v1/entity/{ownerId}/wiki/{wikiId}
      parameters:
        - name: ownerId
          in: path
          required: true
          description: The ID of the owning Entity.
          schema:
            type: string
        - name: wikiId
          in: path
          required: true
          description: The ID of the WikiPage to update.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.wiki.WikiPage'
        required: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.wiki.WikiPage'
    delete:
      tags:
        - WikiPage Services
      operationId: delete-/repo/v1/entity/{ownerId}/wiki/{wikiId}
      parameters:
        - name: ownerId
          in: path
          required: true
          description: The ID of the owning Entity.
          schema:
            type: string
        - name: wikiId
          in: path
          required: true
          description: The ID of the WikiPage to delete.
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Void
  /repo/v1/access_requirement/{ownerId}/wiki/{wikiId}:
    get:
      tags:
        - WikiPage Services
      operationId: get-/repo/v1/access_requirement/{ownerId}/wiki/{wikiId}
      parameters:
        - name: ownerId
          in: path
          required: true
          description: The ID of the owning Entity.
          schema:
            type: string
        - name: wikiId
          in: path
          required: true
          description: The ID of the WikiPage to get.
          schema:
            type: string
        - name: wikiVersion
          in: query
          required: false
          description: When included returns a specific version of a wiki.
          schema:
            type: number
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.wiki.WikiPage'
    put:
      tags:
        - WikiPage Services
      operationId: put-/repo/v1/access_requirement/{ownerId}/wiki/{wikiId}
      parameters:
        - name: ownerId
          in: path
          required: true
          description: The ID of the owning Entity.
          schema:
            type: string
        - name: wikiId
          in: path
          required: true
          description: The ID of the WikiPage to update.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.wiki.WikiPage'
        required: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.wiki.WikiPage'
  /repo/v1/evaluation/{ownerId}/wiki/{wikiId}:
    get:
      tags:
        - WikiPage Services
      operationId: get-/repo/v1/evaluation/{ownerId}/wiki/{wikiId}
      parameters:
        - name: ownerId
          in: path
          required: true
          description: The ID of the owning Evaluation.
          schema:
            type: string
        - name: wikiId
          in: path
          required: true
          description: The ID of the WikiPage to get.
          schema:
            type: string
        - name: wikiVersion
          in: query
          required: false
          schema:
            type: number
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.wiki.WikiPage'
    put:
      tags:
        - WikiPage Services
      operationId: put-/repo/v1/evaluation/{ownerId}/wiki/{wikiId}
      parameters:
        - name: ownerId
          in: path
          required: true
          description: The ID of the owning Evaluation.
          schema:
            type: string
        - name: wikiId
          in: path
          required: true
          description: The ID of the WikiPage to update.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.wiki.WikiPage'
        required: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.wiki.WikiPage'
    delete:
      tags:
        - WikiPage Services
      operationId: delete-/repo/v1/evaluation/{ownerId}/wiki/{wikiId}
      parameters:
        - name: ownerId
          in: path
          required: true
          description: The ID of the owning Evaluations.
          schema:
            type: string
        - name: wikiId
          in: path
          required: true
          description: The ID of the WikiPage to delete.
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Void
  /repo/v1/entity/{ownerId}/wikiheadertree:
    get:
      tags:
        - WikiPage Services
      operationId: get-/repo/v1/entity/{ownerId}/wikiheadertree
      parameters:
        - name: offset
          in: query
          required: false
          description: |-
            The index of the pagination offset. For a page size of 10, the
                        first page would be at offset = 0, and the second page would
                        be at offset = 10.
          schema:
            type: number
        - name: limit
          in: query
          required: false
          description: |-
            Limits the size of the page returned. For example, a page size
                        of 10 require limit = 10.
          schema:
            type: number
        - name: ownerId
          in: path
          required: true
          description: The ID of the owning Entity.
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResultsOfWikiHeader'
  /repo/v1/evaluation/{ownerId}/wikiheadertree:
    get:
      tags:
        - WikiPage Services
      operationId: get-/repo/v1/evaluation/{ownerId}/wikiheadertree
      parameters:
        - name: offset
          in: query
          required: false
          description: |-
            The index of the pagination offset. For a page size of 10, the
                        first page would be at offset = 0, and the second page would
                        be at offset = 10.
          schema:
            type: number
        - name: limit
          in: query
          required: false
          description: |-
            Limits the size of the page returned. For example, a page size
                        of 10 require limit = 10.
          schema:
            type: number
        - name: ownerId
          in: path
          required: true
          description: The ID of the owning Evaluation.
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResultsOfWikiHeader'
  /repo/v1/entity/{ownerId}/wiki/{wikiId}/attachmenthandles:
    get:
      tags:
        - WikiPage Services
      operationId: get-/repo/v1/entity/{ownerId}/wiki/{wikiId}/attachmenthandles
      parameters:
        - name: ownerId
          in: path
          required: true
          description: The ID of the owning Entity.
          schema:
            type: string
        - name: wikiId
          in: path
          required: true
          description: The ID of the WikiPage.
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.file.FileHandleResults'
  /repo/v1/evaluation/{ownerId}/wiki/{wikiId}/attachmenthandles:
    get:
      tags:
        - WikiPage Services
      operationId: get-/repo/v1/evaluation/{ownerId}/wiki/{wikiId}/attachmenthandles
      parameters:
        - name: ownerId
          in: path
          required: true
          description: The ID of the owning Evaluation.
          schema:
            type: string
        - name: wikiId
          in: path
          required: true
          description: The ID of the WikiPage.
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.file.FileHandleResults'
  /repo/v1/entity/{ownerId}/wiki/{wikiId}/attachment:
    get:
      tags:
        - WikiPage Services
      operationId: get-/repo/v1/entity/{ownerId}/wiki/{wikiId}/attachment
      parameters:
        - name: ownerId
          in: path
          required: true
          description: The ID of the owning Entity
          schema:
            type: string
        - name: wikiId
          in: path
          required: true
          description: The ID of the WikiPage
          schema:
            type: string
        - name: fileName
          in: query
          required: true
          description: |-
            The name of the file to get. The file names can be found in
                        the FileHandles from the ,<a href="${GET.entity.ownerId.wiki.wikiId.attachmenthandles}">,GET
                        /entity/{ownerId}/wiki/{wikiId}/attachmenthandles,</a>, method.
          schema:
            type: string
        - name: redirect
          in: query
          required: false
          description: |-
            When set to false, the URL will be returned as text/plain
                        instead of redirecting.
          schema:
            type: boolean
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Status 200 will be returned if the 'redirect' boolean param is false
          content:
            text/plain:
              schema: {}
        '307':
          description: Status 307 will be returned if the 'redirect' boolean param is true or null
  /repo/v1/evaluation/{ownerId}/wiki/{wikiId}/attachment:
    get:
      tags:
        - WikiPage Services
      operationId: get-/repo/v1/evaluation/{ownerId}/wiki/{wikiId}/attachment
      parameters:
        - name: ownerId
          in: path
          required: true
          description: The ID of the owning Evaluation
          schema:
            type: string
        - name: wikiId
          in: path
          required: true
          description: The ID of the WikiPage
          schema:
            type: string
        - name: fileName
          in: query
          required: true
          description: |-
            The name of the file to get. The file names can be found in
                        the FileHandles from the ,<a href="${GET.evaluation.ownerId.wiki.wikiId.attachmenthandles}">,GET /evaluation/{ownerId}/wiki/{wikiId}/attachmenthandles,</a>,
                        method.
          schema:
            type: string
        - name: redirect
          in: query
          required: false
          description: |-
            When set to false, the URL will be returned as text/plain
                        instead of redirecting.
          schema:
            type: boolean
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Status 200 will be returned if the 'redirect' boolean param is false
          content:
            text/plain:
              schema: {}
        '307':
          description: Status 307 will be returned if the 'redirect' boolean param is true or null
  /repo/v1/entity/{ownerId}/wiki/{wikiId}/attachmentpreview:
    get:
      tags:
        - WikiPage Services
      operationId: get-/repo/v1/entity/{ownerId}/wiki/{wikiId}/attachmentpreview
      parameters:
        - name: ownerId
          in: path
          required: true
          description: The ID of the owning Entity
          schema:
            type: string
        - name: wikiId
          in: path
          required: true
          description: The ID of the WikiPage
          schema:
            type: string
        - name: fileName
          in: query
          required: true
          description: |-
            The name of the file to get. The file names can be found in
                        the FileHandles from the ,<a href="${GET.entity.ownerId.wiki.wikiId.attachmenthandles}">,GET
                        /entity/{ownerId}/wiki/{wikiId}/attachmenthandles,</a>, method.
          schema:
            type: string
        - name: redirect
          in: query
          required: false
          description: |-
            When set to false, the URL will be returned as text/plain
                        instead of redirecting.
          schema:
            type: boolean
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Status 200 will be returned if the 'redirect' boolean param is false
          content:
            text/plain:
              schema: {}
        '307':
          description: Status 307 will be returned if the 'redirect' boolean param is true or null
  /repo/v1/evaluation/{ownerId}/wiki/{wikiId}/attachmentpreview:
    get:
      tags:
        - WikiPage Services
      operationId: get-/repo/v1/evaluation/{ownerId}/wiki/{wikiId}/attachmentpreview
      parameters:
        - name: ownerId
          in: path
          required: true
          description: The ID of the owning Evaluation
          schema:
            type: string
        - name: wikiId
          in: path
          required: true
          description: The ID of the WikiPage
          schema:
            type: string
        - name: fileName
          in: query
          required: true
          description: |-
            The name of the file to get. The file names can be found in
                        the FileHandles from the ,<a href="${GET.evaluation.ownerId.wiki.wikiId.attachmenthandles}">,GET /evaluation/{ownerId}/wiki/{wikiId}/attachmenthandles,</a>,
                        method.
          schema:
            type: string
        - name: redirect
          in: query
          required: false
          description: |-
            When set to false, the URL will be returned as text/plain
                        instead of redirecting.
          schema:
            type: boolean
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Status 200 will be returned if the 'redirect' boolean param is false
          content:
            text/plain:
              schema: {}
        '307':
          description: Status 307 will be returned if the 'redirect' boolean param is true or null
  /repo/v1/entity/{id}/bundle2:
    post:
      tags:
        - Entity Bundle Services V2
      operationId: post-/repo/v1/entity/{id}/bundle2
      parameters:
        - name: id
          in: path
          required: true
          description: '- The ID of the entity to fetch.'
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.entitybundle.v2.EntityBundleRequest'
        required: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: The requested Entity if it exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.entitybundle.v2.EntityBundle'
    put:
      tags:
        - Entity Bundle Services V2
      operationId: put-/repo/v1/entity/{id}/bundle2
      parameters:
        - name: generatedBy
          in: query
          required: false
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.entitybundle.v2.EntityBundleCreate'
        required: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.entitybundle.v2.EntityBundle'
  /repo/v1/entity/{id}/version/{versionNumber}/bundle2:
    post:
      tags:
        - Entity Bundle Services V2
      operationId: post-/repo/v1/entity/{id}/version/{versionNumber}/bundle2
      parameters:
        - name: id
          in: path
          required: true
          description: '- The ID of the entity to fetch.'
          schema:
            type: string
        - name: versionNumber
          in: path
          required: true
          description: '- The version of the entity to fetch'
          schema:
            type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.entitybundle.v2.EntityBundleRequest'
        required: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: The requested Entity if it exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.entitybundle.v2.EntityBundle'
  /repo/v1/entity/bundle2/create:
    post:
      tags:
        - Entity Bundle Services V2
      operationId: post-/repo/v1/entity/bundle2/create
      parameters:
        - name: generatedBy
          in: query
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.entitybundle.v2.EntityBundleCreate'
        required: true
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.entitybundle.v2.EntityBundle'
  /repo/v1/entity/{id}/dockerCommit:
    post:
      tags:
        - Docker Commit Services
      operationId: post-/repo/v1/entity/{id}/dockerCommit
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.docker.DockerCommit'
        required: true
      security:
        - bearerAuth: []
      responses:
        '204':
          description: Void
  /repo/v1/entity/{id}/dockerTag:
    get:
      tags:
        - Docker Commit Services
      operationId: get-/repo/v1/entity/{id}/dockerTag
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: sort
          in: query
          required: false
          schema:
            type: string
        - name: ascending
          in: query
          required: false
          description: ', optional (default is false)'
          schema:
            type: boolean
        - name: limit
          in: query
          required: false
          description: pagination parameter, optional (default is 20)
          schema:
            type: number
        - name: offset
          in: query
          required: false
          description: pagination parameter, optional (default is 0)
          schema:
            type: number
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResultsOfDockerCommit'
  /repo/v1/certifiedUserTest:
    get:
      tags:
        - Certified User Services
      operationId: get-/repo/v1/certifiedUserTest
      parameters: []
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.quiz.Quiz'
  /repo/v1/certifiedUserTestResponse:
    post:
      tags:
        - Certified User Services
      operationId: post-/repo/v1/certifiedUserTestResponse
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.quiz.QuizResponse'
        required: true
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.quiz.PassingRecord'
  /repo/v1/admin/certifiedUserTestResponse:
    get:
      tags:
        - Certified User Services
      operationId: get-/repo/v1/admin/certifiedUserTestResponse
      parameters:
        - name: principalId
          in: query
          required: false
          description: If specified, only retrieve the quiz for this user, if it exists.
          schema:
            type: number
        - name: limit
          in: query
          required: false
          description: Limits the size of the page returned. For example, a page size of 10 requires limit = 10.
          schema:
            type: integer
        - name: offset
          in: query
          required: false
          description: The index of the pagination offset. For a page size of 10, the first page would be at offset = 0, and the second page would be at offset = 10.
          schema:
            type: integer
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResultsOfQuizResponse'
  /repo/v1/admin/certifiedUserTestResponse/{id}:
    delete:
      tags:
        - Certified User Services
      operationId: delete-/repo/v1/admin/certifiedUserTestResponse/{id}
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: number
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Void
  /repo/v1/user/{id}/certifiedUserPassingRecord:
    get:
      tags:
        - Certified User Services
      operationId: get-/repo/v1/user/{id}/certifiedUserPassingRecord
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: number
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.quiz.PassingRecord'
  /repo/v1/user/{id}/certifiedUserPassingRecords:
    get:
      tags:
        - Certified User Services
      operationId: get-/repo/v1/user/{id}/certifiedUserPassingRecords
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: number
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          required: false
          schema:
            type: integer
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResultsOfPassingRecord'
  /repo/v1/admin/user/{id}/certificationStatus:
    put:
      tags:
        - Certified User Services
      operationId: put-/repo/v1/admin/user/{id}/certificationStatus
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: number
        - name: isCertified
          in: query
          required: true
          description: true to set as certified or false to 'de-certify'
          schema:
            type: boolean
      security:
        - bearerAuth: []
      responses:
        '204':
          description: Void
  /repo/v1/user/{id}/revokeCertification:
    put:
      tags:
        - Certified User Services
      operationId: put-/repo/v1/user/{id}/revokeCertification
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: number
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.quiz.PassingRecord'
  /repo/v1/researchProject:
    post:
      tags:
        - Data Access Services
      operationId: post-/repo/v1/researchProject
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.dataaccess.ResearchProject'
        required: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.dataaccess.ResearchProject'
  /repo/v1/accessRequirement/{requirementId}/researchProjectForUpdate:
    get:
      tags:
        - Data Access Services
      operationId: get-/repo/v1/accessRequirement/{requirementId}/researchProjectForUpdate
      parameters:
        - name: requirementId
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.dataaccess.ResearchProject'
  /repo/v1/dataAccessRequest:
    post:
      tags:
        - Data Access Services
      operationId: post-/repo/v1/dataAccessRequest
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.dataaccess.RequestInterface'
        required: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.dataaccess.RequestInterface'
  /repo/v1/accessRequirement/{requirementId}/dataAccessRequestForUpdate:
    get:
      tags:
        - Data Access Services
      operationId: get-/repo/v1/accessRequirement/{requirementId}/dataAccessRequestForUpdate
      parameters:
        - name: requirementId
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.dataaccess.RequestInterface'
  /repo/v1/dataAccessRequest/{requestId}/submission:
    post:
      tags:
        - Data Access Services
      operationId: post-/repo/v1/dataAccessRequest/{requestId}/submission
      parameters:
        - name: requestId
          in: path
          required: true
          description: '- The ID of the request object.'
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.dataaccess.CreateSubmissionRequest'
        required: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.dataaccess.SubmissionStatus'
  /repo/v1/dataAccessSubmission/{submissionId}/cancellation:
    put:
      tags:
        - Data Access Services
      operationId: put-/repo/v1/dataAccessSubmission/{submissionId}/cancellation
      parameters:
        - name: submissionId
          in: path
          required: true
          description: '- The ID of the submission to cancel.'
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.dataaccess.SubmissionStatus'
  /repo/v1/dataAccessSubmission/{submissionId}:
    put:
      tags:
        - Data Access Services
      operationId: put-/repo/v1/dataAccessSubmission/{submissionId}
      parameters:
        - name: submissionId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.dataaccess.SubmissionStateChangeRequest'
        required: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.dataaccess.Submission'
    delete:
      tags:
        - Data Access Services
      operationId: delete-/repo/v1/dataAccessSubmission/{submissionId}
      parameters:
        - name: submissionId
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Void
    get:
      tags:
        - Data Access Services
      operationId: get-/repo/v1/dataAccessSubmission/{submissionId}
      parameters:
        - name: submissionId
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.dataaccess.Submission'
  /repo/v1/accessRequirement/{requirementId}/submissions:
    post:
      tags:
        - Data Access Services
      operationId: post-/repo/v1/accessRequirement/{requirementId}/submissions
      parameters:
        - name: requirementId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.dataaccess.SubmissionPageRequest'
        required: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.dataaccess.SubmissionPage'
  /repo/v1/accessRequirement/{requirementId}/approvedSubmissionInfo:
    post:
      tags:
        - Data Access Services
      operationId: post-/repo/v1/accessRequirement/{requirementId}/approvedSubmissionInfo
      parameters:
        - name: requirementId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.dataaccess.SubmissionInfoPageRequest'
        required: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: in order of modifiedOn, ascending
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.dataaccess.SubmissionInfoPage'
  /repo/v1/accessRequirement/{requirementId}/status:
    get:
      tags:
        - Data Access Services
      operationId: get-/repo/v1/accessRequirement/{requirementId}/status
      parameters:
        - name: requirementId
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.dataaccess.AccessRequirementStatus'
  /repo/v1/restrictionInformation:
    post:
      tags:
        - Data Access Services
      operationId: post-/repo/v1/restrictionInformation
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.RestrictionInformationRequest'
        required: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.RestrictionInformationResponse'
  /repo/v1/restrictionInformation/batch:
    post:
      tags:
        - Data Access Services
      operationId: post-/repo/v1/restrictionInformation/batch
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.RestrictionInformationBatchRequest'
        required: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.RestrictionInformationBatchResponse'
  /repo/v1/dataAccessSubmission/openSubmissions:
    get:
      tags:
        - Data Access Services
      operationId: get-/repo/v1/dataAccessSubmission/openSubmissions
      parameters:
        - name: nextPageToken
          in: query
          required: false
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.dataaccess.OpenSubmissionPage'
  /repo/v1/dataAccessSubmission/search:
    post:
      tags:
        - Data Access Services
      operationId: post-/repo/v1/dataAccessSubmission/search
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.dataaccess.SubmissionSearchRequest'
        required: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.dataaccess.SubmissionSearchResponse'
  /repo/v1/dataAccessSubmission/{submissionId}/userAccessApproval:
    get:
      tags:
        - Data Access Services
      operationId: get-/repo/v1/dataAccessSubmission/{submissionId}/userAccessApproval
      parameters:
        - name: submissionId
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.AccessApproval'
  /repo/v1/dataAccessSubmission/userRequests:
    post:
      tags:
        - Data Access Services
      operationId: post-/repo/v1/dataAccessSubmission/userRequests
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.dataaccess.UserSubmissionSearchRequest'
        required: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.dataaccess.UserSubmissionSearchResponse'
  /dockerRegistryListener/v1/events:
    post:
      tags:
        - Docker Registry Event Services
      operationId: post-/dockerRegistryListener/v1/events
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.docker.DockerRegistryEventList'
        required: true
      responses:
        '204':
          description: Void
  /repo/v1/entity:
    post:
      tags:
        - Entity Services
      operationId: post-/repo/v1/entity
      parameters:
        - name: generatedBy
          in: query
          required: false
          description: |-
            To track the Provenance of an Entity create, include the
                                ID of the ,<a href="${org.sagebionetworks.repo.model.provenance.Activity}">,Activity,</a>, that was created to track the change. For
                                more information see: ,<a href="${POST.activity}">,POST
                                /activity,</a>,. You must be the creator of the ,<a href="${org.sagebionetworks.repo.model.provenance.Activity}">,Activity,</a>, used here.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.Entity'
        required: true
      security:
        - bearerAuth: []
      responses:
        '201':
          description: The new entity with an etag, id, and type specific metadata.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.Entity'
  /repo/v1/entity/{id}:
    get:
      tags:
        - Entity Services
      operationId: get-/repo/v1/entity/{id}
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the entity to fetch.
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: The requested Entity if it exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.Entity'
    put:
      tags:
        - Entity Services
      operationId: put-/repo/v1/entity/{id}
      parameters:
        - name: id
          in: path
          required: true
          description: |-
            The ID of the entity to update. This ID must match the ID
                                of the passed Entity in the request body.
          schema:
            type: string
        - name: generatedBy
          in: query
          required: false
          description: |-
            To track the Provenance of an Entity update, include the
                                ID of the ,<a href="${org.sagebionetworks.repo.model.provenance.Activity}">,Activity,</a>, that was created to track the change. For
                                more information see: ,<a href="${POST.activity}">,POST
                                /activity,</a>,. You must be the creator of the ,<a href="${org.sagebionetworks.repo.model.provenance.Activity}">,Activity,</a>, used here.
          schema:
            type: string
        - name: newVersion
          in: query
          required: false
          description: |-
            To force the creation of a new version for a ,<a href="${org.sagebionetworks.repo.model.VersionableEntity}">,versionable,</a>,
                                entity such as a ,<a href="${org.sagebionetworks.repo.model.FileEntity}">,FileEntity,</a>,,
                                include this optional parameter with a value set to true
                                (i.e. newVersion=true). This parameter is ignored for
                                entities of type ,<a href="${org.sagebionetworks.repo.model.table.Table}">,Table,</a>,
                                (See ,<a href="${POST.entity.id.table.snapshot}">,POST
                                /entity/{id}/table/snapshot,</a>, instead)
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.Entity'
        required: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.Entity'
    delete:
      tags:
        - Entity Services
      operationId: delete-/repo/v1/entity/{id}
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the Entity to delete.
          schema:
            type: string
        - name: skipTrashCan
          in: query
          required: false
          description: |-
            If true the entity will be flag for priority purge and
                                 deleted as soon as possible
          schema:
            type: boolean
      security:
        - bearerAuth: []
      responses:
        '204':
          description: Void
  /repo/v1/entity/{id}/version/{versionNumber}/filehandle:
    put:
      tags:
        - Entity Services
      operationId: put-/repo/v1/entity/{id}/version/{versionNumber}/filehandle
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the file entity
          schema:
            type: string
        - name: versionNumber
          in: path
          required: true
          description: The entity version
          schema:
            type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.entity.FileHandleUpdateRequest'
        required: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Void
  /repo/v1/entity/{id}/annotations2:
    get:
      tags:
        - Entity Services
      operationId: get-/repo/v1/entity/{id}/annotations2
      parameters:
        - name: id
          in: path
          required: true
          description: '- The id of the entity to update.'
          schema:
            type: string
        - name: includeDerived
          in: query
          required: true
          description: |-
            - When set to 'true', the derived annotations will be
                                   included in the results. Default value 'false'.
          schema:
            type: boolean
      security:
        - bearerAuth: []
      responses:
        '200':
          description: The annotations for the given entity.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.annotation.v2.Annotations'
    put:
      tags:
        - Entity Services
      operationId: put-/repo/v1/entity/{id}/annotations2
      parameters:
        - name: id
          in: path
          required: true
          description: '- The id of the entity to update.'
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.annotation.v2.Annotations'
        required: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: the updated annotations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.annotation.v2.Annotations'
  /repo/v1/entity/{id}/version/{versionNumber}/annotations2:
    get:
      tags:
        - Entity Services
      operationId: get-/repo/v1/entity/{id}/version/{versionNumber}/annotations2
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the Entity.
          schema:
            type: string
        - name: versionNumber
          in: path
          required: true
          description: The version number of the Entity.
          schema:
            type: number
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.annotation.v2.Annotations'
  /repo/v1/entity/{id}/version/{versionNumber}:
    delete:
      tags:
        - Entity Services
      operationId: delete-/repo/v1/entity/{id}/version/{versionNumber}
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the Entity
          schema:
            type: string
        - name: versionNumber
          in: path
          required: true
          description: The version number of the Entity to delete.
          schema:
            type: number
      security:
        - bearerAuth: []
      responses:
        '204':
          description: Void
    get:
      tags:
        - Entity Services
      operationId: get-/repo/v1/entity/{id}/version/{versionNumber}
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the Entity.
          schema:
            type: string
        - name: versionNumber
          in: path
          required: true
          description: The version number of the Entity to get.
          schema:
            type: number
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.Entity'
  /repo/v1/entity/{id}/type:
    get:
      tags:
        - Entity Services
      operationId: get-/repo/v1/entity/{id}/type
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the Entity to get the EntityHeader for.
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.EntityHeader'
  /repo/v1/entity/{id}/version/{versionNumber}/type:
    get:
      tags:
        - Entity Services
      operationId: get-/repo/v1/entity/{id}/version/{versionNumber}/type
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the Entity to get the EntityHeader for.
          schema:
            type: string
        - name: versionNumber
          in: path
          required: true
          description: The version number of the Entity to get the EntityHeader for.
          schema:
            type: number
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.EntityHeader'
  /repo/v1/entity/type:
    get:
      tags:
        - Entity Services
      operationId: get-/repo/v1/entity/type
      parameters:
        - name: batch
          in: query
          required: true
          description: |-
            A comma separated list of Entity IDs to get EntityHeaders
                                 for.
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResultsOfEntityHeader'
  /repo/v1/entity/header:
    post:
      tags:
        - Entity Services
      operationId: post-/repo/v1/entity/header
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.request.ReferenceList'
        required: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResultsOfEntityHeader'
  /repo/v1/entity/{id}/permissions:
    get:
      tags:
        - Entity Services
      operationId: get-/repo/v1/entity/{id}/permissions
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the Entity to get permissions for.
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.auth.UserEntityPermissions'
  /repo/v1/entity/{id}/access:
    get:
      tags:
        - Entity Services
      operationId: get-/repo/v1/entity/{id}/access
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the Entity to check the permission on.
          schema:
            type: string
        - name: accessType
          in: query
          required: true
          description: |-
            The permission to check. Must be from:
                               ,<a href="${org.sagebionetworks.repo.model.ACCESS_TYPE}">,ACCESS_TYPE,</a>
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                type: boolean
  /repo/v1/entity/{id}/actions/download:
    get:
      tags:
        - Entity Services
      operationId: get-/repo/v1/entity/{id}/actions/download
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.download.ActionRequiredList'
  /repo/v1/entity/{id}/path:
    get:
      tags:
        - Entity Services
      operationId: get-/repo/v1/entity/{id}/path
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the Entity to get the full path for.
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.EntityPath'
  /repo/v1/entity/{id}/acl:
    post:
      tags:
        - Entity Services
      operationId: post-/repo/v1/entity/{id}/acl
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the Entity to create an ACL for.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.AccessControlList'
        required: true
      security:
        - bearerAuth: []
      responses:
        '201':
          description: The new ACL, which includes the id of the affected entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.AccessControlList'
    get:
      tags:
        - Entity Services
      operationId: get-/repo/v1/entity/{id}/acl
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the Entity to get the ACL for.
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: The entity ACL.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.AccessControlList'
    put:
      tags:
        - Entity Services
      operationId: put-/repo/v1/entity/{id}/acl
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the Entity to create an ACL for.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.AccessControlList'
        required: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: the accessControlList
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.AccessControlList'
    delete:
      tags:
        - Entity Services
      operationId: delete-/repo/v1/entity/{id}/acl
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the Entity that should have its ACL deleted.
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '204':
          description: Void
  /repo/v1/entity/{id}/benefactor:
    get:
      tags:
        - Entity Services
      operationId: get-/repo/v1/entity/{id}/benefactor
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the entity to get the benefactor for.
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: The entity ACL.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.EntityHeader'
  /repo/v1/entity/{id}/version:
    get:
      tags:
        - Entity Services
      operationId: get-/repo/v1/entity/{id}/version
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the Entity to get all versions for.
          schema:
            type: string
        - name: offset
          in: query
          required: false
          description: |-
            The offset index determines where this page will start
                                 from. When null it will default to 0.
          schema:
            type: integer
        - name: limit
          in: query
          required: false
          description: |-
            Limits the number of entities that will be fetched for
                                 this page. When null it will default to 10.
          schema:
            type: integer
      security:
        - bearerAuth: []
      responses:
        '200':
          description: A paginated list of results.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResultsOfVersionInfo'
  /repo/v1/REST/resources:
    get:
      tags:
        - Entity Services
      operationId: get-/repo/v1/REST/resources
      parameters: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.RestResourceList'
  /repo/v1/REST/resources/effectiveSchema:
    get:
      tags:
        - Entity Services
      operationId: get-/repo/v1/REST/resources/effectiveSchema
      parameters:
        - name: resourceId
          in: query
          required: true
          description: |-
            The full name of the resource (see
                               ,<a href="${GET.REST.resources}">,GET /REST/resources,</a>, for
                               the full list of names).
          schema:
            type: string
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                type: object
  /repo/v1/REST/resources/schema:
    get:
      tags:
        - Entity Services
      operationId: get-/repo/v1/REST/resources/schema
      parameters:
        - name: resourceId
          in: query
          required: true
          description: |-
            The full name of the resource (see
                               ,<a href="${GET.REST.resources}">,GET /REST/resources,</a>, for
                               the full list of names).
          schema:
            type: string
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                type: object
  /repo/v1/entity/{id}/generatedBy:
    get:
      tags:
        - Entity Services
      operationId: get-/repo/v1/entity/{id}/generatedBy
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the activity to fetch.
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: The requested Activity if it exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.provenance.Activity'
    put:
      tags:
        - Entity Services
      operationId: put-/repo/v1/entity/{id}/generatedBy
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the entity to update.
          schema:
            type: string
        - name: generatedBy
          in: query
          required: true
          description: |-
            The id of the activity to connect to the entity. You must
                                be the creator of the ,<a href="${org.sagebionetworks.repo.model.provenance.Activity}">,Activity,</a>, used here.
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: The requested Activity if it exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.provenance.Activity'
    delete:
      tags:
        - Entity Services
      operationId: delete-/repo/v1/entity/{id}/generatedBy
      parameters:
        - name: id
          in: path
          required: true
          description: '- The ID of the activity to fetch.'
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '204':
          description: The requested Activity if it exists.
  /repo/v1/entity/{id}/version/{versionNumber}/generatedBy:
    get:
      tags:
        - Entity Services
      operationId: get-/repo/v1/entity/{id}/version/{versionNumber}/generatedBy
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the entity to fetch.
          schema:
            type: string
        - name: versionNumber
          in: path
          required: true
          description: the version of the entity
          schema:
            type: number
      security:
        - bearerAuth: []
      responses:
        '200':
          description: The requested Activity if it exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.provenance.Activity'
  /repo/v1/entity/{id}/filepreview:
    get:
      tags:
        - Entity Services
      operationId: get-/repo/v1/entity/{id}/filepreview
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the FileEntity to get.
          schema:
            type: string
        - name: redirect
          in: query
          required: false
          description: |-
            When set to false, the URL will be returned as text/plain
                             instead of redirecting.
          schema:
            type: boolean
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Status 200 will be returned if the 'redirect' boolean param is false
          content:
            text/plain:
              schema: {}
        '307':
          description: Status 307 will be returned if the 'redirect' boolean param is true or null
  /repo/v1/entity/{id}/version/{versionNumber}/filepreview:
    get:
      tags:
        - Entity Services
      operationId: get-/repo/v1/entity/{id}/version/{versionNumber}/filepreview
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the FileEntity to get.
          schema:
            type: string
        - name: versionNumber
          in: path
          required: true
          description: The version number of the FileEntity to get.
          schema:
            type: number
        - name: redirect
          in: query
          required: false
          description: |-
            When set to false, the URL will be returned as
                                  text/plain instead of redirecting.
          schema:
            type: boolean
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Status 200 will be returned if the 'redirect' boolean param is false
          content:
            text/plain:
              schema: {}
        '307':
          description: Status 307 will be returned if the 'redirect' boolean param is true or null
  /repo/v1/entity/{id}/filehandles:
    get:
      tags:
        - Entity Services
      operationId: get-/repo/v1/entity/{id}/filehandles
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the FileEntity to get.
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.file.FileHandleResults'
  /repo/v1/entity/{id}/version/{versionNumber}/filehandles:
    get:
      tags:
        - Entity Services
      operationId: get-/repo/v1/entity/{id}/version/{versionNumber}/filehandles
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the FileEntity to get.
          schema:
            type: string
        - name: versionNumber
          in: path
          required: true
          description: The version number of the FileEntity to get
          schema:
            type: number
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.file.FileHandleResults'
  /repo/v1/entity/md5/{md5}:
    get:
      tags:
        - Entity Services
      operationId: get-/repo/v1/entity/md5/{md5}
      parameters:
        - name: md5
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResultsOfEntityHeader'
  /repo/v1/entity/alias/{alias}:
    get:
      tags:
        - Entity Services
      operationId: get-/repo/v1/entity/alias/{alias}
      parameters:
        - name: alias
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.EntityId'
  /repo/v1/entity/dockerRepo/id:
    get:
      tags:
        - Entity Services
      operationId: get-/repo/v1/entity/dockerRepo/id
      parameters:
        - name: repositoryName
          in: query
          required: true
          description: The name of a managed docker repository
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.EntityId'
  /repo/v1/entity/children:
    post:
      tags:
        - Entity Services
      operationId: post-/repo/v1/entity/children
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.EntityChildrenRequest'
        required: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.EntityChildrenResponse'
  /repo/v1/entity/child:
    post:
      tags:
        - Entity Services
      operationId: post-/repo/v1/entity/child
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.entity.EntityLookupRequest'
        required: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.EntityId'
  /repo/v1/entity/{id}/datatype:
    put:
      tags:
        - Entity Services
      operationId: put-/repo/v1/entity/{id}/datatype
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: type
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.DataType'
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.DataTypeResponse'
  /repo/v1/entity/{id}/sts:
    get:
      tags:
        - Entity Services
      operationId: get-/repo/v1/entity/{id}/sts
      parameters:
        - name: id
          in: path
          required: true
          description: |-
            The ID of the entity to get credentials. This must be a
                               folder with an STS-enabled storage location.
          schema:
            type: string
        - name: permission
          in: query
          required: true
          description: Read-only or read-write permissions. See ,<a href="${org.sagebionetworks.repo.model.sts.StsPermission}">,StsPermission,</a>,.
          schema:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.sts.StsPermission'
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.sts.StsCredentials'
  /repo/v1/entity/{id}/schema/binding:
    put:
      tags:
        - Entity Services
      operationId: put-/repo/v1/entity/{id}/schema/binding
      parameters:
        - name: id
          in: path
          required: true
          description: The syn ID of the entity to bind.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.entity.BindSchemaToEntityRequest'
        required: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.schema.JsonSchemaObjectBinding'
    get:
      tags:
        - Entity Services
      operationId: get-/repo/v1/entity/{id}/schema/binding
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the entity.
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.schema.JsonSchemaObjectBinding'
    delete:
      tags:
        - Entity Services
      operationId: delete-/repo/v1/entity/{id}/schema/binding
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '204':
          description: Void
  /repo/v1/entity/{id}/json:
    get:
      tags:
        - Entity Services
      operationId: get-/repo/v1/entity/{id}/json
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: includeDerivedAnnotations
          in: query
          required: true
          description: |-
            true if annotations that are derived from a
                                              bound schema should be included in the
                                              response, false otherwise (default false)
          schema:
            type: boolean
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                type: object
    put:
      tags:
        - Entity Services
      operationId: put-/repo/v1/entity/{id}/json
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                type: object
  /repo/v1/entity/{id}/version/{versionNumber}/json:
    get:
      tags:
        - Entity Services
      operationId: get-/repo/v1/entity/{id}/version/{versionNumber}/json
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: versionNumber
          in: path
          required: true
          schema:
            type: number
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                type: object
  /repo/v1/entity/{id}/schema/validation:
    get:
      tags:
        - Entity Services
      operationId: get-/repo/v1/entity/{id}/schema/validation
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the Entity.
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.schema.ValidationResults'
  /repo/v1/entity/{id}/schema/validation/statistics:
    get:
      tags:
        - Entity Services
      operationId: get-/repo/v1/entity/{id}/schema/validation/statistics
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the container Entity.
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.schema.ValidationSummaryStatistics'
  /repo/v1/entity/{id}/schema/validation/invalid:
    post:
      tags:
        - Entity Services
      operationId: post-/repo/v1/entity/{id}/schema/validation/invalid
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the container Entity.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.schema.ListValidationResultsRequest'
        required: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.schema.ListValidationResultsResponse'
  /repo/v1/entity/{id}/derivedKeys:
    get:
      tags:
        - Entity Services
      operationId: get-/repo/v1/entity/{id}/derivedKeys
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.annotation.v2.Keys'
  /repo/v1/grid/session/async/start:
    post:
      tags:
        - Grid Services
      operationId: post-/repo/v1/grid/session/async/start
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.grid.CreateGridRequest'
        required: true
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.asynch.AsyncJobId'
  /repo/v1/grid/session/async/get/{asyncToken}:
    get:
      tags:
        - Grid Services
      operationId: get-/repo/v1/grid/session/async/get/{asyncToken}
      parameters:
        - name: asyncToken
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.grid.CreateGridResponse'
  /repo/v1/grid/session/{sessionId}:
    get:
      tags:
        - Grid Services
      operationId: get-/repo/v1/grid/session/{sessionId}
      parameters:
        - name: sessionId
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.grid.GridSession'
    delete:
      tags:
        - Grid Services
      operationId: delete-/repo/v1/grid/session/{sessionId}
      parameters:
        - name: sessionId
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Void
  /repo/v1/grid/session/{sessionId}/replica:
    post:
      tags:
        - Grid Services
      operationId: post-/repo/v1/grid/session/{sessionId}/replica
      parameters:
        - name: sessionId
          in: path
          required: true
          description: '- The grid session ID.'
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.grid.CreateReplicaRequest'
        required: true
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.grid.CreateReplicaResponse'
  /repo/v1/grid/session/{sessionId}/replica/{replicaId}:
    get:
      tags:
        - Grid Services
      operationId: get-/repo/v1/grid/session/{sessionId}/replica/{replicaId}
      parameters:
        - name: sessionId
          in: path
          required: true
          description: '- The grid session ID.'
          schema:
            type: string
        - name: replicaId
          in: path
          required: true
          description: '- The ID of the replica.'
          schema:
            type: number
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.grid.GridReplica'
  /repo/v1/grid/session/{sessionId}/presigned/url:
    post:
      tags:
        - Grid Services
      operationId: post-/repo/v1/grid/session/{sessionId}/presigned/url
      parameters:
        - name: sessionId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.grid.CreateGridPresignedUrlRequest'
        required: true
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.grid.CreateGridPresignedUrlResponse'
  /repo/v1/grid/session/list:
    post:
      tags:
        - Grid Services
      operationId: post-/repo/v1/grid/session/list
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.grid.ListGridSessionsRequest'
        required: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.grid.ListGridSessionsResponse'
  /repo/v1/grid/download/csv/async/start:
    post:
      tags:
        - Grid Services
      operationId: post-/repo/v1/grid/download/csv/async/start
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.grid.DownloadFromGridRequest'
        required: true
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.asynch.AsyncJobId'
  /repo/v1/grid/download/csv/async/get/{asyncToken}:
    get:
      tags:
        - Grid Services
      operationId: get-/repo/v1/grid/download/csv/async/get/{asyncToken}
      parameters:
        - name: asyncToken
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.grid.DownloadFromGridResult'
  /repo/v1/grid/export/recordset/async/start:
    post:
      tags:
        - Grid Services
      operationId: post-/repo/v1/grid/export/recordset/async/start
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.grid.GridRecordSetExportRequest'
        required: true
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.asynch.AsyncJobId'
  /repo/v1/grid/export/recordset/async/get/{asyncToken}:
    get:
      tags:
        - Grid Services
      operationId: get-/repo/v1/grid/export/recordset/async/get/{asyncToken}
      parameters:
        - name: asyncToken
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.grid.GridRecordSetExportResponse'
  /repo/v1/grid/import/csv/async/start:
    post:
      tags:
        - Grid Services
      operationId: post-/repo/v1/grid/import/csv/async/start
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.grid.GridCsvImportRequest'
        required: true
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.asynch.AsyncJobId'
  /repo/v1/grid/import/csv/async/get/{asyncToken}:
    get:
      tags:
        - Grid Services
      operationId: get-/repo/v1/grid/import/csv/async/get/{asyncToken}
      parameters:
        - name: asyncToken
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.grid.GridCsvImportResponse'
  /repo/v1/userProfile:
    get:
      tags:
        - User Profile Services
      operationId: get-/repo/v1/userProfile
      parameters: []
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.UserProfile'
    put:
      tags:
        - User Profile Services
      operationId: put-/repo/v1/userProfile
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.UserProfile'
        required: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: The updated ,<a href="${org.sagebionetworks.repo.model.UserProfile}">,UserProfile,</a>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.UserProfile'
    post:
      tags:
        - User Profile Services
      operationId: post-/repo/v1/userProfile
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.IdList'
        required: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListWrapperOfUserProfile'
  /repo/v1/user/bundle:
    get:
      tags:
        - User Profile Services
      operationId: get-/repo/v1/user/bundle
      parameters:
        - name: mask
          in: query
          required: true
          description: "integer flag defining which components to include in the bundle\n \n ,<p>, This integer is used as a bit-string of flags to specify which parts to include \n  in the UserBundle. The mask is defined as follows:\n ,<ul>,\n ,<li>,\tUserProfile  = 0x1 ,</li>,\n ,<li>, ORCID  = 0x2 ,</li>,\n ,<li>, VerificationSubmission  = 0x4 ,</li>,\n ,<li>, IsCertified = 0x8 ,</li>,\n ,<li>, Is Verified  = 0x10 ,</li>,\n ,<li>, Is ACT Member = 0x20 ,</li>,\n ,<li>, Is AR Reviewer = 0x40 ,</li>,\n ,</ul>,\n ,</p>"
          schema:
            type: integer
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.UserBundle'
  /repo/v1/userProfile/{profileId}:
    get:
      tags:
        - User Profile Services
      operationId: get-/repo/v1/userProfile/{profileId}
      parameters:
        - name: profileId
          in: path
          required: true
          description: The target profile owner ID (the "id" field returned in the "/user" request).
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.UserProfile'
  /repo/v1/user/{id}/bundle:
    get:
      tags:
        - User Profile Services
      operationId: get-/repo/v1/user/{id}/bundle
      parameters:
        - name: mask
          in: query
          required: true
          description: "integer flag defining which components to include in the bundle\n \n ,<p>, This integer is used as a bit-string of flags to specify which parts to include \n  in the UserBundle. The mask is defined as follows:\n ,<ul>,\n ,<li>,\tUserProfile  = 0x1 ,</li>,\n ,<li>, ORCID  = 0x2 ,</li>,\n ,<li>, VerificationSubmission  = 0x4 ,</li>,\n ,<li>, IsCertified = 0x8 ,</li>,\n ,<li>, Is Verified  = 0x10 ,</li>,\n ,<li>, Is ACT Member = 0x20 ,</li>,\n ,<li>, Is AR Reviewer = 0x40 ,</li>,\n ,</ul>,\n ,</p>"
          schema:
            type: integer
        - name: id
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.UserBundle'
  /repo/v1/user:
    get:
      tags:
        - User Profile Services
      operationId: get-/repo/v1/user
      parameters:
        - name: offset
          in: query
          required: false
          description: The offset index determines where this page will start from. An index of 0 is the first item. ,<p>,<i>,Default is 0,</i>,</p>
          schema:
            type: integer
        - name: limit
          in: query
          required: false
          description: Limits the number of items that will be fetched for this page. ,<p>,<i>,Default is 100,</i>,</p>
          schema:
            type: integer
        - name: sort
          in: query
          required: false
          description: Used to indicate upon which field(s) to sort. ,<p>,<i>,Default is NONE,</i>,</p>
          schema:
            type: string
        - name: ascending
          in: query
          required: false
          description: Used to indicate whether the sort direction is ascending or not.  ,<p>,<i>,Default is true,</i>,</p>
          schema:
            type: boolean
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResultsOfUserProfile'
  /repo/v1/notificationSettings:
    put:
      tags:
        - User Profile Services
      operationId: put-/repo/v1/notificationSettings
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.message.NotificationSettingsSignedToken'
        required: true
      responses:
        '200':
          description: A success message, if successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.ResponseMessage'
  /repo/v1/userGroupHeaders/batch:
    get:
      tags:
        - User Profile Services
      operationId: get-/repo/v1/userGroupHeaders/batch
      parameters:
        - name: ids
          in: query
          required: true
          description: 'IDs are specified as request parameters at the end of the URL, separated by commas.  ,<p>,For example: ,<pre class="prettyprint">,ids=1001,819,</pre>,</p>'
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.UserGroupHeaderResponsePage'
  /repo/v1/userGroupHeaders:
    get:
      tags:
        - User Profile Services
      operationId: get-/repo/v1/userGroupHeaders
      parameters:
        - name: prefix
          in: query
          required: false
          schema:
            type: string
        - name: typeFilter
          in: query
          required: false
          description: |-
            Restrict the results to a type of principal. 
                        Available options: ,<a href="${org.sagebionetworks.repo.model.principal.TypeFilter}">,TypeFilter,</a>,.
          schema:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.principal.TypeFilter'
        - name: offset
          in: query
          required: false
          description: |-
            The offset index determines where this page will start from.
                        An index of 0 is the first item.
                        ,<p>,
                        ,<i>,Default is 0,</i>,
                        ,</p>
          schema:
            type: integer
        - name: limit
          in: query
          required: false
          description: |-
            Limits the number of items that will be fetched for this page.
                        ,<p>,
                        ,<i>,Default is 10,</i>,
                        ,</p>
          schema:
            type: integer
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.UserGroupHeaderResponsePage'
  /repo/v1/userGroupHeaders/aliases:
    post:
      tags:
        - User Profile Services
      operationId: post-/repo/v1/userGroupHeaders/aliases
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.principal.AliasList'
        required: true
      responses:
        '200':
          description: |-
            The list UserGroupHeaders that match the requested Aliases. The order
                     of the request is preserved in the response. If a requested alias
                     does not match an existing user name or team name then no header
                     will be returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.principal.UserGroupHeaderResponse'
  /repo/v1/userProfile/{profileId}/image:
    get:
      tags:
        - User Profile Services
      operationId: get-/repo/v1/userProfile/{profileId}/image
      parameters:
        - name: profileId
          in: path
          required: true
          schema:
            type: string
        - name: redirect
          in: query
          required: false
          description: |-
            When set to false, the URL will be returned as text/plain
                        instead of redirecting.
          schema:
            type: boolean
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Status 200 will be returned if the 'redirect' boolean param is false
          content:
            text/plain:
              schema: {}
        '307':
          description: Status 307 will be returned if the 'redirect' boolean param is true or null
  /repo/v1/userProfile/{profileId}/image/preview:
    get:
      tags:
        - User Profile Services
      operationId: get-/repo/v1/userProfile/{profileId}/image/preview
      parameters:
        - name: profileId
          in: path
          required: true
          schema:
            type: string
        - name: redirect
          in: query
          required: false
          description: |-
            When set to false, the URL will be returned as text/plain
                        instead of redirecting.
          schema:
            type: boolean
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Status 200 will be returned if the 'redirect' boolean param is false
          content:
            text/plain:
              schema: {}
        '307':
          description: Status 307 will be returned if the 'redirect' boolean param is true or null
  /repo/v1/favorite/{id}:
    post:
      tags:
        - User Profile Services
      operationId: post-/repo/v1/favorite/{id}
      parameters:
        - name: id
          in: path
          required: true
          description: Entity ID of the favorite ,<a href="${org.sagebionetworks.repo.model.Entity}">,Entity,</a>
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.EntityHeader'
    delete:
      tags:
        - User Profile Services
      operationId: delete-/repo/v1/favorite/{id}
      parameters:
        - name: id
          in: path
          required: true
          description: Entity ID of the ,<a href="${org.sagebionetworks.repo.model.Entity}">,Entity,</a>, that should be removed as a favorite
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '204':
          description: Void
  /repo/v1/favorite:
    get:
      tags:
        - User Profile Services
      operationId: get-/repo/v1/favorite
      parameters:
        - name: offset
          in: query
          required: false
          description: The offset index determines where this page will start from. An index of 0 is the first item. ,<p>,<i>,Default is 0,</i>,</p>
          schema:
            type: integer
        - name: limit
          in: query
          required: false
          description: Limits the number of items that will be fetched for this page. ,<p>,<i>,Default is 10,</i>,</p>
          schema:
            type: integer
        - name: sort
          in: query
          required: false
          description: Determines which field to use to sort the retrieved favorites. See ,<a href="${org.sagebionetworks.repo.model.favorite.SortBy}">,SortBy,</a>,. ,<p>,<i>,Default is "FAVORITED_ON",</i>,</p>,.
          schema:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.favorite.SortBy'
        - name: sortDirection
          in: query
          required: false
          description: The direction for sorting the retrieved favorites. See ,<a href="${org.sagebionetworks.repo.model.favorite.SortDirection}">,SortDirection,</a>,. ,<p>,<i>,Default is "DESC",</i>,</p>,.
          schema:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.favorite.SortDirection'
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResultsOfEntityHeader'
  /repo/v1/projects:
    get:
      tags:
        - User Profile Services
      operationId: get-/repo/v1/projects
      parameters:
        - name: teamId
          in: query
          required: false
          description: If the projectFilter is 'TEAM' then this is the ID of the team through which the returned projects are shared with the user.
          schema:
            type: number
        - name: filter
          in: query
          required: false
          description: see above
          schema:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.ProjectListType'
        - name: sort
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.ProjectListSortColumn'
        - name: sortDirection
          in: query
          required: false
          description: "The optional ,<a href=\"${org.sagebionetworks.repo.model.entity.query.SortDirection}\">,sort direction,</a>,. \n \t\t\t,<i>,Default sort descending,</i>"
          schema:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.entity.query.SortDirection'
        - name: nextPageToken
          in: query
          required: false
          description: a token returned with the previous page of results
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.ProjectHeaderList'
  /repo/v1/projects/user/{principalId}:
    get:
      tags:
        - User Profile Services
      operationId: get-/repo/v1/projects/user/{principalId}
      parameters:
        - name: principalId
          in: path
          required: true
          description: The ID of the user to list projects for
          schema:
            type: number
        - name: teamId
          in: query
          required: false
          description: If the projectFilter is 'TEAM' then this is the ID of the team through which the returned projects are shared with 'principalId'.
          schema:
            type: number
        - name: filter
          in: query
          required: false
          description: see above
          schema:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.ProjectListType'
        - name: sort
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.ProjectListSortColumn'
        - name: sortDirection
          in: query
          required: false
          description: "The optional ,<a href=\"${org.sagebionetworks.repo.model.entity.query.SortDirection}\">,sort direction,</a>,. \n \t\t\t,<i>,Default sort descending,</i>"
          schema:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.entity.query.SortDirection'
        - name: nextPageToken
          in: query
          required: false
          description: a token returned with the previous page of results
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.ProjectHeaderList'
  /repo/v1/accessApproval:
    post:
      tags:
        - Access Approval Services
      operationId: post-/repo/v1/accessApproval
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.AccessApproval'
        required: true
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.AccessApproval'
    delete:
      tags:
        - Access Approval Services
      operationId: delete-/repo/v1/accessApproval
      parameters:
        - name: requirementId
          in: query
          required: true
          schema:
            type: string
        - name: accessorId
          in: query
          required: true
          description: '- The user whose access is being revoked'
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Void
  /repo/v1/accessApproval/{approvalId}:
    get:
      tags:
        - Access Approval Services
      operationId: get-/repo/v1/accessApproval/{approvalId}
      parameters:
        - name: approvalId
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.AccessApproval'
  /repo/v1/accessApproval/group:
    post:
      tags:
        - Access Approval Services
      operationId: post-/repo/v1/accessApproval/group
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.dataaccess.AccessorGroupRequest'
        required: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.dataaccess.AccessorGroupResponse'
  /repo/v1/accessApproval/notifications:
    post:
      tags:
        - Access Approval Services
      operationId: post-/repo/v1/accessApproval/notifications
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.dataaccess.AccessApprovalNotificationRequest'
        required: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.dataaccess.AccessApprovalNotificationResponse'
  /repo/v1/accessApproval/group/revoke:
    put:
      tags:
        - Access Approval Services
      operationId: put-/repo/v1/accessApproval/group/revoke
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.dataaccess.AccessorGroupRevokeRequest'
        required: true
      security:
        - bearerAuth: []
      responses:
        '204':
          description: Void
  /repo/v1/accessApproval/information:
    post:
      tags:
        - Access Approval Services
      operationId: post-/repo/v1/accessApproval/information
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.BatchAccessApprovalInfoRequest'
        required: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.BatchAccessApprovalInfoResponse'
  /repo/v1/accessApproval/search:
    post:
      tags:
        - Access Approval Services
      operationId: post-/repo/v1/accessApproval/search
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.dataaccess.AccessApprovalSearchRequest'
        required: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.dataaccess.AccessApprovalSearchResponse'
  /repo/v1/subscription:
    post:
      tags:
        - Subscription Services
      operationId: post-/repo/v1/subscription
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.subscription.Topic'
        required: true
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.subscription.Subscription'
  /repo/v1/subscription/all:
    post:
      tags:
        - Subscription Services
      operationId: post-/repo/v1/subscription/all
      parameters:
        - name: objectType
          in: query
          required: true
          description: '- SubscriptionObjectType to subscribe to'
          schema:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.subscription.SubscriptionObjectType'
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.subscription.Subscription'
    get:
      tags:
        - Subscription Services
      operationId: get-/repo/v1/subscription/all
      parameters:
        - name: limit
          in: query
          required: true
          description: '- Limits the size of the page returned. For example, a page size of 10 require limit = 10. The maximum Limit for this call is 100.'
          schema:
            type: number
        - name: offset
          in: query
          required: true
          description: '- The index of the pagination offset. For a page size of 10, the first page would be at offset = 0, and the second page would be at offset = 10.'
          schema:
            type: number
        - name: objectType
          in: query
          required: true
          description: '- User can use this param to filter the results by the type of object they subscribed to.'
          schema:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.subscription.SubscriptionObjectType'
        - name: sortBy
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.subscription.SortByType'
        - name: sortDirection
          in: query
          required: false
          description: '- When provided, the results will be sorted in this direction.'
          schema:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.subscription.SortDirection'
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.subscription.SubscriptionPagedResults'
    delete:
      tags:
        - Subscription Services
      operationId: delete-/repo/v1/subscription/all
      parameters: []
      security:
        - bearerAuth: []
      responses:
        '204':
          description: Void
  /repo/v1/subscription/list:
    post:
      tags:
        - Subscription Services
      operationId: post-/repo/v1/subscription/list
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.subscription.SubscriptionRequest'
        required: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.subscription.SubscriptionPagedResults'
  /repo/v1/subscription/{id}:
    get:
      tags:
        - Subscription Services
      operationId: get-/repo/v1/subscription/{id}
      parameters:
        - name: id
          in: path
          required: true
          description: '- the ID of the subscription that is created when the user subscribed to the topic'
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.subscription.Subscription'
    delete:
      tags:
        - Subscription Services
      operationId: delete-/repo/v1/subscription/{id}
      parameters:
        - name: id
          in: path
          required: true
          description: '- the ID of the subscription that is created when the user subscribed to the topic'
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '204':
          description: Void
  /repo/v1/subscription/subscribers:
    post:
      tags:
        - Subscription Services
      operationId: post-/repo/v1/subscription/subscribers
      parameters:
        - name: nextPageToken
          in: query
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.subscription.Topic'
        required: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.subscription.SubscriberPagedResults'
  /repo/v1/subscription/subscribers/count:
    post:
      tags:
        - Subscription Services
      operationId: post-/repo/v1/subscription/subscribers/count
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.subscription.Topic'
        required: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.subscription.SubscriberCount'
  /repo/v1/log:
    post:
      tags:
        - Log Service
      operationId: post-/repo/v1/log
      parameters:
        - name: User-Agent
          in: header
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.LogEntry'
        required: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Void
  /repo/v1/membershipRequest:
    post:
      tags:
        - Membership Request Services
      operationId: post-/repo/v1/membershipRequest
      parameters:
        - name: acceptRequestEndpoint
          in: query
          required: true
          description: |-
            The portal end-point for one-click acceptance of the membership
             request.  A signed, serialized token is appended to create the complete:
             ,<a href="${org.sagebionetworks.repo.model.JoinTeamSignedToken}">,JoinTeamSignedToken,</a>,
             In normal operation, this parameter should be omitted.
          schema:
            type: string
        - name: notificationUnsubscribeEndpoint
          in: query
          required: true
          description: |-
            The portal prefix for one-click email unsubscription.
             A signed, serialized token is appended to create the complete:
             ,<a href="${org.sagebionetworks.repo.model.message.NotificationSettingsSignedToken}">,NotificationSettingsSignedToken,</a>,.
             In normal operation, this parameter should be omitted.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.MembershipRequest'
        required: true
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.MembershipRequest'
  /repo/v1/team/{id}/openRequest:
    get:
      tags:
        - Membership Request Services
      operationId: get-/repo/v1/team/{id}/openRequest
      parameters:
        - name: id
          in: path
          required: true
          description: Team ID
          schema:
            type: string
        - name: requestorId
          in: query
          required: false
          description: the ID of the user requesting admission to the Team
          schema:
            type: string
        - name: limit
          in: query
          required: false
          description: the maximum number of requests to return (default 10)
          schema:
            type: integer
        - name: offset
          in: query
          required: false
          description: the starting index of the returned results (default 0)
          schema:
            type: integer
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResultsOfMembershipRequest'
  /repo/v1/user/{id}/openRequest:
    get:
      tags:
        - Membership Request Services
      operationId: get-/repo/v1/user/{id}/openRequest
      parameters:
        - name: id
          in: path
          required: true
          description: User ID
          schema:
            type: string
        - name: teamId
          in: query
          required: false
          schema:
            type: string
        - name: limit
          in: query
          required: false
          description: the maximum number of requests to return (default 10)
          schema:
            type: integer
        - name: offset
          in: query
          required: false
          description: the starting index of the returned results (default 0)
          schema:
            type: integer
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResultsOfMembershipRequest'
  /repo/v1/membershipRequest/{id}:
    get:
      tags:
        - Membership Request Services
      operationId: get-/repo/v1/membershipRequest/{id}
      parameters:
        - name: id
          in: path
          required: true
          description: the Team ID
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.MembershipRequest'
    delete:
      tags:
        - Membership Request Services
      operationId: delete-/repo/v1/membershipRequest/{id}
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '204':
          description: Void
  /repo/v1/membershipRequest/openRequestCount:
    get:
      tags:
        - Membership Request Services
      operationId: get-/repo/v1/membershipRequest/openRequestCount
      parameters: []
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.Count'
  /repo/v1/trashcan/trash/{id}:
    put:
      tags:
        - Recycle Bin Services
      operationId: put-/repo/v1/trashcan/trash/{id}
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the entity being moved to the trash can.
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Void
  /repo/v1/trashcan/restore/{id}:
    put:
      tags:
        - Recycle Bin Services
      operationId: put-/repo/v1/trashcan/restore/{id}
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the entity being restored out of the trash can.
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Void
  /repo/v1/trashcan/restore/{id}/{parentId}:
    put:
      tags:
        - Recycle Bin Services
      operationId: put-/repo/v1/trashcan/restore/{id}/{parentId}
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the entity being restored out of the trash can.
          schema:
            type: string
        - name: parentId
          in: path
          required: true
          description: The ID of the new parent entity.
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Void
  /repo/v1/trashcan/view:
    get:
      tags:
        - Recycle Bin Services
      operationId: get-/repo/v1/trashcan/view
      parameters:
        - name: offset
          in: query
          required: false
          description: Paginated results. Offset to the current page.
          schema:
            type: number
        - name: limit
          in: query
          required: false
          description: The maximum number of entities to retrieve per page.
          schema:
            type: number
      security:
        - bearerAuth: []
      responses:
        '200':
          description: The paginated list of trash entities.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResultsOfTrashedEntity'
  /repo/v1/trashcan/purge/{id}:
    put:
      tags:
        - Recycle Bin Services
      operationId: put-/repo/v1/trashcan/purge/{id}
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the entity to be purged.
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Void
  /repo/v1/curation/task:
    post:
      tags:
        - Curation Task Services
      operationId: post-/repo/v1/curation/task
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.curation.CurationTask'
        required: true
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.curation.CurationTask'
  /repo/v1/curation/task/{taskId}:
    get:
      tags:
        - Curation Task Services
      operationId: get-/repo/v1/curation/task/{taskId}
      parameters:
        - name: taskId
          in: path
          required: true
          description: the CurationTask to retrieve
          schema:
            type: number
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.curation.CurationTask'
    put:
      tags:
        - Curation Task Services
      operationId: put-/repo/v1/curation/task/{taskId}
      parameters:
        - name: taskId
          in: path
          required: true
          schema:
            type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.curation.CurationTask'
        required: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.curation.CurationTask'
    delete:
      tags:
        - Curation Task Services
      operationId: delete-/repo/v1/curation/task/{taskId}
      parameters:
        - name: taskId
          in: path
          required: true
          description: the CurationTask to delete
          schema:
            type: number
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Void
  /repo/v1/curation/task/list:
    post:
      tags:
        - Curation Task Services
      operationId: post-/repo/v1/curation/task/list
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.curation.ListCurationTaskRequest'
        required: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.curation.ListCurationTaskResponse'
  /repo/v1/activity:
    post:
      tags:
        - Activity Services
      operationId: post-/repo/v1/activity
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.provenance.Activity'
        required: true
      security:
        - bearerAuth: []
      responses:
        '201':
          description: The new ,<a href="${org.sagebionetworks.repo.model.provenance.Activity}">,Activity,</a>
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.provenance.Activity'
  /repo/v1/activity/{id}:
    get:
      tags:
        - Activity Services
      operationId: get-/repo/v1/activity/{id}
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the activity to fetch.
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: The requested Activity if it exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.provenance.Activity'
    put:
      tags:
        - Activity Services
      operationId: put-/repo/v1/activity/{id}
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the activity to update.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.provenance.Activity'
        required: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: the updated activity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.provenance.Activity'
    delete:
      tags:
        - Activity Services
      operationId: delete-/repo/v1/activity/{id}
      parameters:
        - name: id
          in: path
          required: true
          description: The id of activity to delete.
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '204':
          description: Void
  /repo/v1/activity/{id}/generated:
    get:
      tags:
        - Activity Services
      operationId: get-/repo/v1/activity/{id}/generated
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: offset
          in: query
          required: false
          schema:
            type: integer
        - name: limit
          in: query
          required: false
          schema:
            type: integer
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResultsOfReference'
  /repo/v1/accessRequirement:
    post:
      tags:
        - Access Requirement Services
      operationId: post-/repo/v1/accessRequirement
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.AccessRequirement'
        required: true
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.AccessRequirement'
  /repo/v1/accessRequirement/{requirementId}:
    get:
      tags:
        - Access Requirement Services
      operationId: get-/repo/v1/accessRequirement/{requirementId}
      parameters:
        - name: requirementId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.AccessRequirement'
    put:
      tags:
        - Access Requirement Services
      operationId: put-/repo/v1/accessRequirement/{requirementId}
      parameters:
        - name: requirementId
          in: path
          required: true
          description: the ID of the Access Requirement to be modified.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.AccessRequirement'
        required: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.AccessRequirement'
    delete:
      tags:
        - Access Requirement Services
      operationId: delete-/repo/v1/accessRequirement/{requirementId}
      parameters:
        - name: requirementId
          in: path
          required: true
          description: the ID of the requirement to delete
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Void
  /repo/v1/entity/{id}/lockAccessRequirement:
    post:
      tags:
        - Access Requirement Services
      operationId: post-/repo/v1/entity/{id}/lockAccessRequirement
      parameters:
        - name: id
          in: path
          required: true
          description: the ID of the entity to which an Access Requirement will be applied
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.AccessRequirement'
  /repo/v1/entity/{id}/accessRequirement:
    get:
      tags:
        - Access Requirement Services
      operationId: get-/repo/v1/entity/{id}/accessRequirement
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: limit
          in: query
          required: false
          description: '- Limits the size of the page returned. For example, a page size of 10 require limit = 10. The maximum limit for this call is 50.'
          schema:
            type: number
        - name: offset
          in: query
          required: false
          description: '- The index of the pagination offset. For a page size of 10, the first page would be at offset = 0, and the second page would be at offset = 10.'
          schema:
            type: number
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResultsOfAccessRequirement'
  /repo/v1/team/{id}/accessRequirement:
    get:
      tags:
        - Access Requirement Services
      operationId: get-/repo/v1/team/{id}/accessRequirement
      parameters:
        - name: id
          in: path
          required: true
          description: the ID of the Team whose Access Requirements are retrieved.
          schema:
            type: string
        - name: limit
          in: query
          required: false
          description: '- Limits the size of the page returned. For example, a page size of 10 require limit = 10. The maximum limit for this call is 50.'
          schema:
            type: number
        - name: offset
          in: query
          required: false
          description: '- The index of the pagination offset. For a page size of 10, the first page would be at offset = 0, and the second page would be at offset = 10.'
          schema:
            type: number
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResultsOfAccessRequirement'
  /repo/v1/accessRequirement/conversion:
    put:
      tags:
        - Access Requirement Services
      operationId: put-/repo/v1/accessRequirement/conversion
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.dataaccess.AccessRequirementConversionRequest'
        required: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.AccessRequirement'
  /repo/v1/accessRequirement/{requirementId}/subjects:
    get:
      tags:
        - Access Requirement Services
      operationId: get-/repo/v1/accessRequirement/{requirementId}/subjects
      parameters:
        - name: requirementId
          in: path
          required: true
          schema:
            type: string
        - name: nextPageToken
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.RestrictableObjectDescriptorResponse'
  /repo/v1/accessRequirement/{requirementId}/acl:
    get:
      tags:
        - Access Requirement Services
      operationId: get-/repo/v1/accessRequirement/{requirementId}/acl
      parameters:
        - name: requirementId
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.AccessControlList'
    post:
      tags:
        - Access Requirement Services
      operationId: post-/repo/v1/accessRequirement/{requirementId}/acl
      parameters:
        - name: requirementId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.AccessControlList'
        required: true
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.AccessControlList'
    put:
      tags:
        - Access Requirement Services
      operationId: put-/repo/v1/accessRequirement/{requirementId}/acl
      parameters:
        - name: requirementId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.AccessControlList'
        required: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.AccessControlList'
    delete:
      tags:
        - Access Requirement Services
      operationId: delete-/repo/v1/accessRequirement/{requirementId}/acl
      parameters:
        - name: requirementId
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Void
  /repo/v1/accessRequirement/search:
    post:
      tags:
        - Access Requirement Services
      operationId: post-/repo/v1/accessRequirement/search
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.dataaccess.AccessRequirementSearchRequest'
        required: true
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.dataaccess.AccessRequirementSearchResponse'
  /repo/v1/evaluation:
    post:
      tags:
        - Evaluation Services
      operationId: post-/repo/v1/evaluation
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.evaluation.model.Evaluation'
        required: true
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.evaluation.model.Evaluation'
    get:
      tags:
        - Evaluation Services
      operationId: get-/repo/v1/evaluation
      parameters:
        - name: accessType
          in: query
          required: false
          description: The type of access for the user to filter for, optional and defaults to ,<a href="${org.sagebionetworks.repo.model.ACCESS_TYPE}">,ACCESS_TYPE.READ,</a>
          schema:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.ACCESS_TYPE'
        - name: activeOnly
          in: query
          required: false
          description: If 'true' then return only those evaluations with rounds defined and for which the current time is in one of the rounds.
          schema:
            type: boolean
        - name: evaluationIds
          in: query
          required: false
          description: an optional, comma-delimited list of evaluation IDs to which the response is limited
          schema:
            type: string
        - name: offset
          in: query
          required: false
          description: |-
            The offset index determines where this page will start from.
                        An index of 0 is the first entity. When null it will default
                        to 0.
          schema:
            type: number
        - name: limit
          in: query
          required: false
          description: |-
            Limits the number of entities that will be fetched for this
                        page. When null it will default to 10.
          schema:
            type: number
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResultsOfEvaluation'
  /repo/v1/evaluation/{evalId}:
    get:
      tags:
        - Evaluation Services
      operationId: get-/repo/v1/evaluation/{evalId}
      parameters:
        - name: evalId
          in: path
          required: true
          description: '- the ID of the desired Evaluation'
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.evaluation.model.Evaluation'
    put:
      tags:
        - Evaluation Services
      operationId: put-/repo/v1/evaluation/{evalId}
      parameters:
        - name: evalId
          in: path
          required: true
          description: '- the ID of the Evaluation being updated'
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.evaluation.model.Evaluation'
        required: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.evaluation.model.Evaluation'
    delete:
      tags:
        - Evaluation Services
      operationId: delete-/repo/v1/evaluation/{evalId}
      parameters:
        - name: evalId
          in: path
          required: true
          description: '- the ID of the requested Evaluation'
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '204':
          description: Void
  /repo/v1/entity/{id}/evaluation:
    get:
      tags:
        - Evaluation Services
      operationId: get-/repo/v1/entity/{id}/evaluation
      parameters:
        - name: id
          in: path
          required: true
          description: the ID of the project
          schema:
            type: string
        - name: accessType
          in: query
          required: false
          description: The type of access for the user to filter for, optional and defaults to ,<a href="${org.sagebionetworks.repo.model.ACCESS_TYPE}">,ACCESS_TYPE.READ,</a>
          schema:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.ACCESS_TYPE'
        - name: activeOnly
          in: query
          required: false
          description: If 'true' then return only those evaluations with rounds defined and for which the current time is in one of the rounds.
          schema:
            type: boolean
        - name: evaluationIds
          in: query
          required: false
          description: an optional, comma-delimited list of evaluation IDs to which the response is limited
          schema:
            type: string
        - name: offset
          in: query
          required: false
          description: |-
            The offset index determines where this page will start from.
                        An index of 0 is the first entity. When null it will default
                        to 0.
          schema:
            type: number
        - name: limit
          in: query
          required: false
          description: |-
            Limits the number of entities that will be fetched for this
                        page. When null it will default to 10.
          schema:
            type: number
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResultsOfEvaluation'
  /repo/v1/evaluation/available:
    get:
      tags:
        - Evaluation Services
      operationId: get-/repo/v1/evaluation/available
      parameters:
        - name: activeOnly
          in: query
          required: false
          schema:
            type: boolean
        - name: evaluationIds
          in: query
          required: false
          description: an optional, comma-delimited list of evaluation IDs to which the response is limited
          schema:
            type: string
        - name: offset
          in: query
          required: false
          description: |-
            The offset index determines where this page will start from.
                        An index of 0 is the first evaluation. When null it will default
                        to 0.
          schema:
            type: number
        - name: limit
          in: query
          required: false
          description: |-
            Limits the number of entities that will be fetched for this
                        page. When null it will default to 10.
          schema:
            type: number
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResultsOfEvaluation'
  /repo/v1/evaluation/name/{name}:
    get:
      tags:
        - Evaluation Services
      operationId: get-/repo/v1/evaluation/name/{name}
      parameters:
        - name: name
          in: path
          required: true
          description: '- the name of the desired Evaluation.'
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.evaluation.model.Evaluation'
  /repo/v1/evaluation/{evalId}/team/{id}/submissionEligibility:
    get:
      tags:
        - Evaluation Services
      operationId: get-/repo/v1/evaluation/{evalId}/team/{id}/submissionEligibility
      parameters:
        - name: evalId
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.evaluation.model.TeamSubmissionEligibility'
  /repo/v1/evaluation/submission:
    post:
      tags:
        - Evaluation Services
      operationId: post-/repo/v1/evaluation/submission
      parameters:
        - name: etag
          in: query
          required: false
          schema:
            type: string
        - name: submissionEligibilityHash
          in: query
          required: false
          description: |-
            The hash provided by the
             ,<a href="${org.sagebionetworks.evaluation.model.TeamSubmissionEligibility}">,TeamSubmissionEligibility,</a>,
             object.
          schema:
            type: string
        - name: challengeEndpoint
          in: query
          required: true
          description: |-
            The portal endpoint prefix to the an entity/challenge page. The entity ID of the
             challenge project is appended to create the complete URL. In normal operation, this parameter should be omitted.
          schema:
            type: string
        - name: notificationUnsubscribeEndpoint
          in: query
          required: true
          description: |-
            The portal endpoint prefix for one-click email unsubscription.
             A signed, serialized token is appended to create the complete URL:
             ,<a href="${org.sagebionetworks.repo.model.message.NotificationSettingsSignedToken}">,NotificationSettingsSignedToken,</a>,.
             In normal operation, this parameter should be omitted.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.evaluation.model.Submission'
        required: true
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.evaluation.model.Submission'
  /repo/v1/admin/evaluation/submission/{subId}/contributor:
    post:
      tags:
        - Evaluation Services
      operationId: post-/repo/v1/admin/evaluation/submission/{subId}/contributor
      parameters:
        - name: subId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.evaluation.model.SubmissionContributor'
        required: true
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.evaluation.model.SubmissionContributor'
  /repo/v1/evaluation/submission/{subId}:
    get:
      tags:
        - Evaluation Services
      operationId: get-/repo/v1/evaluation/submission/{subId}
      parameters:
        - name: subId
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.evaluation.model.Submission'
    delete:
      tags:
        - Evaluation Services
      operationId: delete-/repo/v1/evaluation/submission/{subId}
      parameters:
        - name: subId
          in: path
          required: true
          description: '- the ID of the Submission to be deleted.'
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '204':
          description: Void
  /repo/v1/evaluation/submission/{subId}/status:
    get:
      tags:
        - Evaluation Services
      operationId: get-/repo/v1/evaluation/submission/{subId}/status
      parameters:
        - name: subId
          in: path
          required: true
          description: '- the ID of the requested SubmissionStatus.'
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.evaluation.model.SubmissionStatus'
    put:
      tags:
        - Evaluation Services
      operationId: put-/repo/v1/evaluation/submission/{subId}/status
      parameters:
        - name: subId
          in: path
          required: true
          description: '- the ID of the SubmissionStatus being updated.'
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.evaluation.model.SubmissionStatus'
        required: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.evaluation.model.SubmissionStatus'
  /repo/v1/evaluation/{evalId}/statusBatch:
    put:
      tags:
        - Evaluation Services
      operationId: put-/repo/v1/evaluation/{evalId}/statusBatch
      parameters:
        - name: evalId
          in: path
          required: true
          description: the ID of the Evaluation to which the SubmissionSatus objects belong.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.evaluation.model.SubmissionStatusBatch'
        required: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.evaluation.model.BatchUploadResponse'
  /repo/v1/evaluation/{evalId}/submission/all:
    get:
      tags:
        - Evaluation Services
      operationId: get-/repo/v1/evaluation/{evalId}/submission/all
      parameters:
        - name: evalId
          in: path
          required: true
          description: '- the ID of the specified Evaluation.'
          schema:
            type: string
        - name: offset
          in: query
          required: false
          description: |-
            The offset index determines where this page will start from.
                        An index of 0 is the first entity. When null it will default
                        to 0.
          schema:
            type: number
        - name: limit
          in: query
          required: false
          description: |-
            Limits the number of entities that will be fetched for this
                        page. When null it will default to 10, max value 100.
          schema:
            type: number
        - name: status
          in: query
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResultsOfSubmission'
  /repo/v1/evaluation/{evalId}/submission/status/all:
    get:
      tags:
        - Evaluation Services
      operationId: get-/repo/v1/evaluation/{evalId}/submission/status/all
      parameters:
        - name: evalId
          in: path
          required: true
          description: '- the ID of the specified Evaluation.'
          schema:
            type: string
        - name: offset
          in: query
          required: false
          description: |-
            The offset index determines where this page will start from.
                        An index of 0 is the first entity. When null it will default
                        to 0.
          schema:
            type: number
        - name: limit
          in: query
          required: false
          description: |-
            Limits the number of entities that will be fetched for this
                        page. When null it will default to 10, max value 100.
          schema:
            type: number
        - name: status
          in: query
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResultsOfSubmissionStatus'
  /repo/v1/evaluation/{evalId}/submission/bundle/all:
    get:
      tags:
        - Evaluation Services
      operationId: get-/repo/v1/evaluation/{evalId}/submission/bundle/all
      parameters:
        - name: evalId
          in: path
          required: true
          description: '- the ID of the specified Evaluation.'
          schema:
            type: string
        - name: offset
          in: query
          required: false
          description: |-
            The offset index determines where this page will start from.
                        An index of 0 is the first entity. When null it will default
                        to 0.
          schema:
            type: number
        - name: limit
          in: query
          required: false
          description: |-
            Limits the number of entities that will be fetched for this
                        page. When null it will default to 10, max value 100.
          schema:
            type: number
        - name: status
          in: query
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResultsOfSubmissionBundle'
  /repo/v1/evaluation/{evalId}/submission:
    get:
      tags:
        - Evaluation Services
      operationId: get-/repo/v1/evaluation/{evalId}/submission
      parameters:
        - name: evalId
          in: path
          required: true
          description: '- the ID of the specified Evaluation.'
          schema:
            type: string
        - name: offset
          in: query
          required: false
          description: |-
            The offset index determines where this page will start from.
                        An index of 0 is the first entity. When null it will default
                        to 0.
          schema:
            type: number
        - name: limit
          in: query
          required: false
          description: |-
            Limits the number of entities that will be fetched for this
                        page. When null it will default to 10.
          schema:
            type: number
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResultsOfSubmission'
  /repo/v1/evaluation/{evalId}/submission/bundle:
    get:
      tags:
        - Evaluation Services
      operationId: get-/repo/v1/evaluation/{evalId}/submission/bundle
      parameters:
        - name: evalId
          in: path
          required: true
          description: '- the ID of the specified Evaluation.'
          schema:
            type: string
        - name: offset
          in: query
          required: false
          description: |-
            The offset index determines where this page will start from.
                        An index of 0 is the first entity. When null it will default
                        to 0.
          schema:
            type: number
        - name: limit
          in: query
          required: false
          description: |-
            Limits the number of entities that will be fetched for this
                        page. When null it will default to 10.
          schema:
            type: number
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResultsOfSubmissionBundle'
  /repo/v1/evaluation/submission/{subId}/file/{fileHandleId}:
    get:
      tags:
        - Evaluation Services
      operationId: get-/repo/v1/evaluation/submission/{subId}/file/{fileHandleId}
      parameters:
        - name: subId
          in: path
          required: true
          schema:
            type: string
        - name: fileHandleId
          in: path
          required: true
          description: '- the ID of the requested FileHandle contained in the Submission.'
          schema:
            type: string
        - name: redirect
          in: query
          required: false
          schema:
            type: boolean
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Status 200 will be returned if the 'redirect' boolean param is false
          content:
            text/plain:
              schema: {}
        '307':
          description: Status 307 will be returned if the 'redirect' boolean param is true or null
  /repo/v1/evaluation/{evalId}/submission/count:
    get:
      tags:
        - Evaluation Services
      operationId: get-/repo/v1/evaluation/{evalId}/submission/count
      parameters:
        - name: evalId
          in: path
          required: true
          description: '- the ID of the specified Evaluation.'
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                type: number
  /repo/v1/evaluation/{evalId}/access:
    get:
      tags:
        - Evaluation Services
      operationId: get-/repo/v1/evaluation/{evalId}/access
      parameters:
        - name: evalId
          in: path
          required: true
          schema:
            type: string
        - name: accessType
          in: query
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: the access types that the given user has to the given resource
          content:
            application/json:
              schema:
                type: boolean
  /repo/v1/evaluation/acl:
    put:
      tags:
        - Evaluation Services
      operationId: put-/repo/v1/evaluation/acl
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.AccessControlList'
        required: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: The updated ACL.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.AccessControlList'
  /repo/v1/evaluation/{evalId}/acl:
    get:
      tags:
        - Evaluation Services
      operationId: get-/repo/v1/evaluation/{evalId}/acl
      parameters:
        - name: evalId
          in: path
          required: true
          description: The ID of the evaluation whose ACL is being retrieved.
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: The ACL requested.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.AccessControlList'
  /repo/v1/evaluation/{evalId}/permissions:
    get:
      tags:
        - Evaluation Services
      operationId: get-/repo/v1/evaluation/{evalId}/permissions
      parameters:
        - name: evalId
          in: path
          required: true
          description: The ID of the evaluation over which the user permission are being retrieved.
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: The requested user permissions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.evaluation.model.UserEvaluationPermissions'
  /repo/v1/evaluation/submission/{subId}/cancellation:
    put:
      tags:
        - Evaluation Services
      operationId: put-/repo/v1/evaluation/submission/{subId}/cancellation
      parameters:
        - name: subId
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '204':
          description: Void
  /repo/v1/evaluation/{evalId}/round:
    post:
      tags:
        - Evaluation Services
      operationId: post-/repo/v1/evaluation/{evalId}/round
      parameters:
        - name: evalId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.evaluation.model.EvaluationRound'
        required: true
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.evaluation.model.EvaluationRound'
  /repo/v1/evaluation/{evalId}/round/{roundId}:
    get:
      tags:
        - Evaluation Services
      operationId: get-/repo/v1/evaluation/{evalId}/round/{roundId}
      parameters:
        - name: evalId
          in: path
          required: true
          schema:
            type: string
        - name: roundId
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.evaluation.model.EvaluationRound'
    put:
      tags:
        - Evaluation Services
      operationId: put-/repo/v1/evaluation/{evalId}/round/{roundId}
      parameters:
        - name: evalId
          in: path
          required: true
          schema:
            type: string
        - name: roundId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.evaluation.model.EvaluationRound'
        required: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.evaluation.model.EvaluationRound'
    delete:
      tags:
        - Evaluation Services
      operationId: delete-/repo/v1/evaluation/{evalId}/round/{roundId}
      parameters:
        - name: evalId
          in: path
          required: true
          schema:
            type: string
        - name: roundId
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '204':
          description: Void
  /repo/v1/evaluation/{evalId}/round/list:
    post:
      tags:
        - Evaluation Services
      operationId: post-/repo/v1/evaluation/{evalId}/round/list
      parameters:
        - name: evalId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.evaluation.model.EvaluationRoundListRequest'
        required: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.evaluation.model.EvaluationRoundListResponse'
  /repo/v1/evaluation/{evalId}/migratequota:
    post:
      tags:
        - Evaluation Services
      operationId: post-/repo/v1/evaluation/{evalId}/migratequota
      parameters:
        - name: evalId
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Void
  /repo/v1/asynchronous/job:
    post:
      tags:
        - Asynchronous Job Services
      operationId: post-/repo/v1/asynchronous/job
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.asynch.AsynchronousRequestBody'
        required: true
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Each new job launched will have a unique jobId that can be use to monitor the status of the job with
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.asynch.AsynchronousJobStatus'
  /repo/v1/asynchronous/job/{jobId}:
    get:
      tags:
        - Asynchronous Job Services
      operationId: get-/repo/v1/asynchronous/job/{jobId}
      parameters:
        - name: jobId
          in: path
          required: true
          description: |-
            The jobId issued to a job that has been launched with ,<a href="${POST.asynchronous.job}">,POST
                    /asynchronous/job,</a>
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.asynch.AsynchronousJobStatus'
  /repo/v1/project/{projectId}/storage/usage:
    get:
      tags:
        - Project Storage Services
      operationId: get-/repo/v1/project/{projectId}/storage/usage
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.limits.ProjectStorageUsage'
  /repo/v1/project/{projectId}/storage/limit:
    put:
      tags:
        - Project Storage Services
      operationId: put-/repo/v1/project/{projectId}/storage/limit
      parameters:
        - name: projectId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.limits.ProjectStorageLocationLimit'
        required: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.limits.ProjectStorageLocationLimit'
  /repo/v1/challenge:
    post:
      tags:
        - Challenge Services
      operationId: post-/repo/v1/challenge
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.Challenge'
        required: true
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.Challenge'
    get:
      tags:
        - Challenge Services
      operationId: get-/repo/v1/challenge
      parameters:
        - name: participantId
          in: query
          required: true
          schema:
            type: number
        - name: limit
          in: query
          required: false
          schema:
            type: number
        - name: offset
          in: query
          required: false
          schema:
            type: number
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.ChallengePagedResults'
  /repo/v1/challenge/{challengeId}:
    get:
      tags:
        - Challenge Services
      operationId: get-/repo/v1/challenge/{challengeId}
      parameters:
        - name: challengeId
          in: path
          required: true
          schema:
            type: number
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.Challenge'
    put:
      tags:
        - Challenge Services
      operationId: put-/repo/v1/challenge/{challengeId}
      parameters:
        - name: challengeId
          in: path
          required: true
          schema:
            type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.Challenge'
        required: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.Challenge'
    delete:
      tags:
        - Challenge Services
      operationId: delete-/repo/v1/challenge/{challengeId}
      parameters:
        - name: challengeId
          in: path
          required: true
          schema:
            type: number
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Void
  /repo/v1/entity/{id}/challenge:
    get:
      tags:
        - Challenge Services
      operationId: get-/repo/v1/entity/{id}/challenge
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.Challenge'
  /repo/v1/challenge/{challengeId}/participant:
    get:
      tags:
        - Challenge Services
      operationId: get-/repo/v1/challenge/{challengeId}/participant
      parameters:
        - name: challengeId
          in: path
          required: true
          schema:
            type: number
        - name: affiliated
          in: query
          required: false
          description: |-
            If affiliated=true, return just participants affiliated with some 
             registered Team.  If false, return those not affiliated with any registered Team.  
             If omitted return all participants.
          schema:
            type: boolean
        - name: limit
          in: query
          required: false
          schema:
            type: number
        - name: offset
          in: query
          required: false
          schema:
            type: number
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.PaginatedIds'
  /repo/v1/challenge/{challengeId}/challengeTeam:
    post:
      tags:
        - Challenge Services
      operationId: post-/repo/v1/challenge/{challengeId}/challengeTeam
      parameters:
        - name: challengeId
          in: path
          required: true
          schema:
            type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.ChallengeTeam'
        required: true
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.ChallengeTeam'
    get:
      tags:
        - Challenge Services
      operationId: get-/repo/v1/challenge/{challengeId}/challengeTeam
      parameters:
        - name: challengeId
          in: path
          required: true
          schema:
            type: number
        - name: limit
          in: query
          required: false
          schema:
            type: number
        - name: offset
          in: query
          required: false
          schema:
            type: number
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.ChallengeTeamPagedResults'
  /repo/v1/challenge/{challengeId}/registratableTeam:
    get:
      tags:
        - Challenge Services
      operationId: get-/repo/v1/challenge/{challengeId}/registratableTeam
      parameters:
        - name: challengeId
          in: path
          required: true
          schema:
            type: number
        - name: limit
          in: query
          required: false
          schema:
            type: number
        - name: offset
          in: query
          required: false
          schema:
            type: number
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.PaginatedIds'
  /repo/v1/challenge/{challengeId}/challengeTeam/{challengeTeamId}:
    put:
      tags:
        - Challenge Services
      operationId: put-/repo/v1/challenge/{challengeId}/challengeTeam/{challengeTeamId}
      parameters:
        - name: challengeId
          in: path
          required: true
          schema:
            type: number
        - name: challengeTeamId
          in: path
          required: true
          schema:
            type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.ChallengeTeam'
        required: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.ChallengeTeam'
  /repo/v1/challengeTeam/{challengeTeamId}:
    delete:
      tags:
        - Challenge Services
      operationId: delete-/repo/v1/challengeTeam/{challengeTeamId}
      parameters:
        - name: challengeTeamId
          in: path
          required: true
          schema:
            type: number
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Void
  /repo/v1/challenge/{challengeId}/submissionTeams:
    get:
      tags:
        - Challenge Services
      operationId: get-/repo/v1/challenge/{challengeId}/submissionTeams
      parameters:
        - name: challengeId
          in: path
          required: true
          schema:
            type: number
        - name: limit
          in: query
          required: false
          schema:
            type: number
        - name: offset
          in: query
          required: false
          schema:
            type: number
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.PaginatedIds'
  /repo/v1/agent/session:
    post:
      tags:
        - Agent Chat Services
      operationId: post-/repo/v1/agent/session
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.agent.CreateAgentSessionRequest'
        required: true
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.agent.AgentSession'
  /repo/v1/agent/session/{sessionId}:
    get:
      tags:
        - Agent Chat Services
      operationId: get-/repo/v1/agent/session/{sessionId}
      parameters:
        - name: sessionId
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.agent.AgentSession'
    put:
      tags:
        - Agent Chat Services
      operationId: put-/repo/v1/agent/session/{sessionId}
      parameters:
        - name: sessionId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.agent.UpdateAgentSessionRequest'
        required: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.agent.AgentSession'
  /repo/v1/agent/chat/async/start:
    post:
      tags:
        - Agent Chat Services
      operationId: post-/repo/v1/agent/chat/async/start
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.agent.AgentChatRequest'
        required: true
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.asynch.AsyncJobId'
  /repo/v1/agent/chat/async/get/{asyncToken}:
    get:
      tags:
        - Agent Chat Services
      operationId: get-/repo/v1/agent/chat/async/get/{asyncToken}
      parameters:
        - name: asyncToken
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.agent.AgentChatResponse'
  /repo/v1/agent/chat/trace/{jobId}:
    post:
      tags:
        - Agent Chat Services
      operationId: post-/repo/v1/agent/chat/trace/{jobId}
      parameters:
        - name: jobId
          in: path
          required: true
          description: |-
            - The jobID of the asynchronous job started for an
                            AgentChatRequest.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.agent.TraceEventsRequest'
        required: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.agent.TraceEventsResponse'
  /repo/v1/agent/registration:
    put:
      tags:
        - Agent Chat Services
      operationId: put-/repo/v1/agent/registration
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.agent.AgentRegistrationRequest'
        required: true
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.agent.AgentRegistration'
  /repo/v1/agent/registration/{agentRegistrationId}:
    get:
      tags:
        - Agent Chat Services
      operationId: get-/repo/v1/agent/registration/{agentRegistrationId}
      parameters:
        - name: agentRegistrationId
          in: path
          required: true
          description: The Synapse issued agent registration id.
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.agent.AgentRegistration'
  /repo/v1/message:
    post:
      tags:
        - Message Services
      operationId: post-/repo/v1/message
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.message.MessageToUser'
        required: true
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.message.MessageToUser'
  /repo/v1/cloudMailInMessage:
    post:
      tags:
        - Message Services
      operationId: post-/repo/v1/cloudMailInMessage
      parameters:
        - name: notificationUnsubscribeEndpoint
          in: query
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.message.cloudmailin.Message'
        required: true
      responses:
        '204':
          description: Void
  /repo/v1/cloudMailInAuthorization:
    post:
      tags:
        - Message Services
      operationId: post-/repo/v1/cloudMailInAuthorization
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.message.cloudmailin.AuthorizationCheckHeader'
        required: true
      responses:
        '204':
          description: Void
  /repo/v1/message/inbox:
    get:
      tags:
        - Message Services
      operationId: get-/repo/v1/message/inbox
      parameters:
        - name: inboxFilter
          in: query
          required: true
          schema:
            type: string
        - name: orderBy
          in: query
          required: true
          schema:
            type: string
        - name: descending
          in: query
          required: true
          schema:
            type: boolean
        - name: limit
          in: query
          required: true
          schema:
            type: number
        - name: offset
          in: query
          required: true
          schema:
            type: number
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResultsOfMessageBundle'
  /repo/v1/message/outbox:
    get:
      tags:
        - Message Services
      operationId: get-/repo/v1/message/outbox
      parameters:
        - name: orderBy
          in: query
          required: true
          schema:
            type: string
        - name: descending
          in: query
          required: true
          schema:
            type: boolean
        - name: limit
          in: query
          required: true
          schema:
            type: number
        - name: offset
          in: query
          required: true
          schema:
            type: number
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResultsOfMessageToUser'
  /repo/v1/message/{messageId}:
    get:
      tags:
        - Message Services
      operationId: get-/repo/v1/message/{messageId}
      parameters:
        - name: messageId
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.message.MessageToUser'
  /repo/v1/message/{messageId}/forward:
    post:
      tags:
        - Message Services
      operationId: post-/repo/v1/message/{messageId}/forward
      parameters:
        - name: messageId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.message.MessageRecipientSet'
        required: true
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.message.MessageToUser'
  /repo/v1/message/{messageId}/conversation:
    get:
      tags:
        - Message Services
      operationId: get-/repo/v1/message/{messageId}/conversation
      parameters:
        - name: messageId
          in: path
          required: true
          schema:
            type: string
        - name: orderBy
          in: query
          required: true
          schema:
            type: string
        - name: descending
          in: query
          required: true
          schema:
            type: boolean
        - name: limit
          in: query
          required: true
          schema:
            type: number
        - name: offset
          in: query
          required: true
          schema:
            type: number
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResultsOfMessageToUser'
  /repo/v1/message/status:
    put:
      tags:
        - Message Services
      operationId: put-/repo/v1/message/status
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.message.MessageStatus'
        required: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Void
  /repo/v1/admin/message/{messageId}:
    delete:
      tags:
        - Message Services
      operationId: delete-/repo/v1/admin/message/{messageId}
      parameters:
        - name: messageId
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Void
  /repo/v1/message/{messageId}/file:
    get:
      tags:
        - Message Services
      operationId: get-/repo/v1/message/{messageId}/file
      parameters:
        - name: messageId
          in: path
          required: true
          schema:
            type: string
        - name: redirect
          in: query
          required: false
          description: |-
            When set to false, the URL will be returned as text/plain
                        instead of redirecting.
          schema:
            type: boolean
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Status 200 will be returned if the 'redirect' boolean param is false
          content:
            text/plain:
              schema: {}
        '307':
          description: Status 307 will be returned if the 'redirect' boolean param is true or null
  /repo/v1/entity/{id}/message:
    post:
      tags:
        - Message Services
      operationId: post-/repo/v1/entity/{id}/message
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.message.MessageToUser'
        required: true
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.message.MessageToUser'
  /repo/v1/doi:
    get:
      tags:
        - DOI Services
      operationId: get-/repo/v1/doi
      parameters:
        - name: portalId
          in: query
          required: false
          schema:
            type: string
        - name: id
          in: query
          required: true
          schema:
            type: string
        - name: type
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.doi.v2.DoiObjectType'
        - name: version
          in: query
          required: false
          schema:
            type: number
      responses:
        '200':
          description: The DOI and all its associated DOI metadata, if the DOI has been minted for the object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.doi.v2.Doi'
  /repo/v1/doi/association:
    get:
      tags:
        - DOI Services
      operationId: get-/repo/v1/doi/association
      parameters:
        - name: portalId
          in: query
          required: false
          schema:
            type: string
        - name: id
          in: query
          required: true
          schema:
            type: string
        - name: type
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.doi.v2.DoiObjectType'
        - name: version
          in: query
          required: false
          schema:
            type: number
      responses:
        '200':
          description: The DOI if the DOI has been minted for the object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.doi.v2.DoiAssociation'
  /repo/v1/doi/async/start:
    post:
      tags:
        - DOI Services
      operationId: post-/repo/v1/doi/async/start
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.doi.v2.DoiRequest'
        required: true
      security:
        - bearerAuth: []
      responses:
        '201':
          description: The asynchronous job ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.asynch.AsyncJobId'
  /repo/v1/doi/async/get/{asyncToken}:
    get:
      tags:
        - DOI Services
      operationId: get-/repo/v1/doi/async/get/{asyncToken}
      parameters:
        - name: asyncToken
          in: path
          required: true
          description: The async job token from the create/update call
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: The results of the call
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.doi.v2.DoiResponse'
  /repo/v1/doi/locate:
    get:
      tags:
        - DOI Services
      operationId: get-/repo/v1/doi/locate
      parameters:
        - name: portalId
          in: query
          required: false
          schema:
            type: string
        - name: id
          in: query
          required: true
          schema:
            type: string
        - name: type
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.doi.v2.DoiObjectType'
        - name: version
          in: query
          required: false
          schema:
            type: number
        - name: redirect
          in: query
          required: false
          description: Whether to return the URL or redirect to the URL
          schema:
            type: boolean
      responses:
        '200':
          description: Status 200 will be returned if the 'redirect' boolean param is false
          content:
            text/plain:
              schema: {}
        '307':
          description: Status 307 will be returned if the 'redirect' boolean param is true or null
  /repo/v1/column:
    post:
      tags:
        - Table Services
      operationId: post-/repo/v1/column
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.ColumnModel'
        required: true
      security:
        - bearerAuth: []
      responses:
        '201':
          description: '-'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.ColumnModel'
    get:
      tags:
        - Table Services
      operationId: get-/repo/v1/column
      parameters:
        - name: prefix
          in: query
          required: false
          description: |-
            When included, only columns with a name that starts with this
                        prefix will be returned.
          schema:
            type: string
        - name: limit
          in: query
          required: false
          description: |-
            Limits the size of the page returned. For example, a page size
                        of 10 require limit = 10. The maximum Limit for this call is
                        100. The default Limit is 10;
          schema:
            type: number
        - name: offset
          in: query
          required: false
          description: |-
            The index of the pagination offset. For a page size of 10, the
                        first page would be at offset = 0, and the second page would
                        be at offset = 10.
          schema:
            type: number
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.PaginatedColumnModels'
  /repo/v1/column/batch:
    post:
      tags:
        - Table Services
      operationId: post-/repo/v1/column/batch
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListWrapperOfColumnModel'
        required: true
      security:
        - bearerAuth: []
      responses:
        '201':
          description: '-'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListWrapperOfColumnModel'
  /repo/v1/column/{columnId}:
    get:
      tags:
        - Table Services
      operationId: get-/repo/v1/column/{columnId}
      parameters:
        - name: columnId
          in: path
          required: true
          description: The ID of the ColumnModel to get.
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.ColumnModel'
  /repo/v1/entity/{id}/column:
    get:
      tags:
        - Table Services
      operationId: get-/repo/v1/entity/{id}/column
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the TableEntity to get the ColumnModels for.
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.PaginatedColumnModels'
  /repo/v1/column/tableview/defaults:
    get:
      tags:
        - Table Services
      operationId: get-/repo/v1/column/tableview/defaults
      parameters:
        - name: viewEntityType
          in: query
          required: false
          description: |-
            The ,<a href="${org.sagebionetworks.repo.model.table.ViewEntityType}">,entity
                                   type,</a>, of the view, if omitted use entityview
          schema:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.ViewEntityType'
        - name: viewTypeMask
          in: query
          required: false
          description: |-
            Bit mask representing the types to include in the view.
                                   Not required for a submission view. For an entity view
                                   following are the possible types: (type=,<mask_hex>,):
                                   File=0x01, Project=0x02, Table=0x04, Folder=0x08,
                                   View=0x10, Docker=0x20, SubmissionView=0x40, Dataset=0x80, 
                                   DatasetCollection=0x100, MaterializedView=0x200).
          schema:
            type: number
      responses:
        '200':
          description: '-'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListWrapperOfColumnModel'
  /repo/v1/entity/{id}/table/transaction/async/start:
    post:
      tags:
        - Table Services
      operationId: post-/repo/v1/entity/{id}/table/transaction/async/start
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the TableEntity to update.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.TableUpdateTransactionRequest'
        required: true
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.asynch.AsyncJobId'
  /repo/v1/entity/{id}/table/transaction/async/get/{asyncToken}:
    get:
      tags:
        - Table Services
      operationId: get-/repo/v1/entity/{id}/table/transaction/async/get/{asyncToken}
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the table entity.
          schema:
            type: string
        - name: asyncToken
          in: path
          required: true
          description: The token returned when the job was started.
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.TableUpdateTransactionResponse'
  /repo/v1/entity/{id}/table/filehandles:
    post:
      tags:
        - Table Services
      operationId: post-/repo/v1/entity/{id}/table/filehandles
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the TableEntity to append rows to.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.RowReferenceSet'
        required: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.TableFileHandleResults'
  /repo/v1/entity/{id}/table/column/{columnId}/row/{rowId}/version/{versionNumber}/file:
    get:
      tags:
        - Table Services
      operationId: get-/repo/v1/entity/{id}/table/column/{columnId}/row/{rowId}/version/{versionNumber}/file
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the FileEntity to get.
          schema:
            type: string
        - name: columnId
          in: path
          required: true
          schema:
            type: string
        - name: rowId
          in: path
          required: true
          schema:
            type: number
        - name: versionNumber
          in: path
          required: true
          schema:
            type: number
        - name: redirect
          in: query
          required: false
          description: |-
            When set to false, the URL will be returned as text/plain
                        instead of redirecting.
          schema:
            type: boolean
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Status 200 will be returned if the 'redirect' boolean param is false
          content:
            text/plain:
              schema: {}
        '307':
          description: Status 307 will be returned if the 'redirect' boolean param is true or null
  /repo/v1/entity/{id}/table/column/{columnId}/row/{rowId}/version/{versionNumber}/filepreview:
    get:
      tags:
        - Table Services
      operationId: get-/repo/v1/entity/{id}/table/column/{columnId}/row/{rowId}/version/{versionNumber}/filepreview
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the FileEntity to get.
          schema:
            type: string
        - name: columnId
          in: path
          required: true
          schema:
            type: string
        - name: rowId
          in: path
          required: true
          schema:
            type: number
        - name: versionNumber
          in: path
          required: true
          schema:
            type: number
        - name: redirect
          in: query
          required: false
          description: |-
            When set to false, the URL will be returned as text/plain
                        instead of redirecting.
          schema:
            type: boolean
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Status 200 will be returned if the 'redirect' boolean param is false
          content:
            text/plain:
              schema: {}
        '307':
          description: Status 307 will be returned if the 'redirect' boolean param is true or null
  /repo/v1/entity/{id}/table/query/async/start:
    post:
      tags:
        - Table Services
      operationId: post-/repo/v1/entity/{id}/table/query/async/start
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the TableEntity.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.QueryBundleRequest'
        required: true
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.asynch.AsyncJobId'
  /repo/v1/entity/{id}/table/query/async/get/{asyncToken}:
    get:
      tags:
        - Table Services
      operationId: get-/repo/v1/entity/{id}/table/query/async/get/{asyncToken}
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the TableEntity.
          schema:
            type: string
        - name: asyncToken
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.QueryResultBundle'
  /repo/v1/entity/{id}/table/download/csv/async/start:
    post:
      tags:
        - Table Services
      operationId: post-/repo/v1/entity/{id}/table/download/csv/async/start
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the TableEntity.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.DownloadFromTableRequest'
        required: true
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.asynch.AsyncJobId'
  /repo/v1/entity/{id}/table/download/csv/async/get/{asyncToken}:
    get:
      tags:
        - Table Services
      operationId: get-/repo/v1/entity/{id}/table/download/csv/async/get/{asyncToken}
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the TableEntity.
          schema:
            type: string
        - name: asyncToken
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.DownloadFromTableResult'
  /repo/v1/table/upload/csv/preview/async/start:
    post:
      tags:
        - Table Services
      operationId: post-/repo/v1/table/upload/csv/preview/async/start
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.UploadToTablePreviewRequest'
        required: true
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.asynch.AsyncJobId'
  /repo/v1/table/upload/csv/preview/async/get/{asyncToken}:
    get:
      tags:
        - Table Services
      operationId: get-/repo/v1/table/upload/csv/preview/async/get/{asyncToken}
      parameters:
        - name: asyncToken
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.UploadToTablePreviewResult'
  /repo/v1/entity/{id}/table/upload/csv/async/start:
    post:
      tags:
        - Table Services
      operationId: post-/repo/v1/entity/{id}/table/upload/csv/async/start
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the TableEntity.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.UploadToTableRequest'
        required: true
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.asynch.AsyncJobId'
  /repo/v1/entity/{id}/table/upload/csv/async/get/{asyncToken}:
    get:
      tags:
        - Table Services
      operationId: get-/repo/v1/entity/{id}/table/upload/csv/async/get/{asyncToken}
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the TableEntity.
          schema:
            type: string
        - name: asyncToken
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.UploadToTableResult'
  /repo/v1/column/view/scope/async/start:
    post:
      tags:
        - Table Services
      operationId: post-/repo/v1/column/view/scope/async/start
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.ViewColumnModelRequest'
        required: true
      security:
        - bearerAuth: []
      responses:
        '201':
          description: |-
            An object containing the id of the asynchronous job whose results can be fetched using the 
             ,<a href="${GET.column.view.scope.async.get.asyncToken}">,GET /column/view/scope/async/get,</a>, service
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.asynch.AsyncJobId'
  /repo/v1/column/view/scope/async/get/{asyncToken}:
    get:
      tags:
        - Table Services
      operationId: get-/repo/v1/column/view/scope/async/get/{asyncToken}
      parameters:
        - name: asyncToken
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.ViewColumnModelResponse'
  /repo/v1/entity/{id}/table/snapshot:
    post:
      tags:
        - Table Services
      operationId: post-/repo/v1/entity/{id}/table/snapshot
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.SnapshotRequest'
        required: true
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.SnapshotResponse'
  /repo/v1/validateDefiningSql:
    post:
      tags:
        - Table Services
      operationId: post-/repo/v1/validateDefiningSql
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.ValidateDefiningSqlRequest'
        required: true
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.ValidateDefiningSqlResponse'
  /repo/v1/entity/{id}/table/download/pfb/async/start:
    post:
      tags:
        - Table Services
      operationId: post-/repo/v1/entity/{id}/table/download/pfb/async/start
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the TableEntity.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.DownloadPFBRequest'
        required: true
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.asynch.AsyncJobId'
  /repo/v1/entity/{id}/table/download/pfb/async/get/{asyncToken}:
    get:
      tags:
        - Table Services
      operationId: get-/repo/v1/entity/{id}/table/download/pfb/async/get/{asyncToken}
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the TableEntity.
          schema:
            type: string
        - name: asyncToken
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.DownloadPFBResult'
  /docker/v1/bearerToken:
    get:
      tags:
        - Docker Authorization Services
      operationId: get-/docker/v1/bearerToken
      parameters:
        - name: Synapse-Authorization
          in: header
          required: false
          schema:
            type: string
        - name: service
          in: query
          required: true
          schema:
            type: string
        - name: scope
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/ListOfString'
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.docker.DockerAuthorizationToken'
  /repo/v1/membershipInvitation:
    post:
      tags:
        - Membership Invitation Services
      operationId: post-/repo/v1/membershipInvitation
      parameters:
        - name: acceptInvitationEndpoint
          in: query
          required: false
          description: |-
            The portal endpoint prefix for one-click acceptance of the membership invitation.
             A signed, serialized token is appended to create the complete URL:
             ,<a href="${org.sagebionetworks.repo.model.JoinTeamSignedToken}">,JoinTeamSignedToken,</a>,
             if an inviteeId is specified, or
             ,<a href="${org.sagebionetworks.repo.model.MembershipInvtnSignedToken}">,MembershipInvtnSignedToken,</a>,
             if an inviteeEmail is specified.
             In normal operation, this parameter should be omitted.
          schema:
            type: string
        - name: notificationUnsubscribeEndpoint
          in: query
          required: true
          description: |-
            The portal endpoint prefix for one-click email unsubscription.
             A signed, serialized token is appended to create the complete URL:
             ,<a href="${org.sagebionetworks.repo.model.message.NotificationSettingsSignedToken}">,NotificationSettingsSignedToken,</a>,.
             In normal operation, this parameter should be omitted.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.MembershipInvitation'
        required: true
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.MembershipInvitation'
  /repo/v1/user/{id}/openInvitation:
    get:
      tags:
        - Membership Invitation Services
      operationId: get-/repo/v1/user/{id}/openInvitation
      parameters:
        - name: id
          in: path
          required: true
          description: the ID of the Synapse user to which invitations have been extended.
          schema:
            type: string
        - name: teamId
          in: query
          required: false
          description: the ID of the Team extending the invitations (optional)
          schema:
            type: string
        - name: limit
          in: query
          required: false
          description: the maximum number of invitations to return (default 10)
          schema:
            type: integer
        - name: offset
          in: query
          required: false
          description: the starting index of the returned results (default 0)
          schema:
            type: integer
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResultsOfMembershipInvitation'
  /repo/v1/team/{id}/openInvitation:
    get:
      tags:
        - Membership Invitation Services
      operationId: get-/repo/v1/team/{id}/openInvitation
      parameters:
        - name: id
          in: path
          required: true
          description: the ID of the Team extending the invitations
          schema:
            type: string
        - name: inviteeId
          in: query
          required: false
          description: the ID of the Synapse user to which invitations have been extended (optional)
          schema:
            type: string
        - name: limit
          in: query
          required: false
          description: the maximum number of invitations to return (default 10)
          schema:
            type: integer
        - name: offset
          in: query
          required: false
          description: the starting index of the returned results (default 0)
          schema:
            type: integer
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResultsOfMembershipInvitation'
  /repo/v1/membershipInvitation/{id}:
    get:
      tags:
        - Membership Invitation Services
      operationId: get-/repo/v1/membershipInvitation/{id}
      parameters:
        - name: id
          in: path
          required: true
          description: the ID of the invitation
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.MembershipInvitation'
    post:
      tags:
        - Membership Invitation Services
      operationId: post-/repo/v1/membershipInvitation/{id}
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.MembershipInvtnSignedToken'
        required: true
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.MembershipInvitation'
    delete:
      tags:
        - Membership Invitation Services
      operationId: delete-/repo/v1/membershipInvitation/{id}
      parameters:
        - name: id
          in: path
          required: true
          description: the ID of the invitation to be deleted
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '204':
          description: Void
  /repo/v1/membershipInvitation/openInvitationCount:
    get:
      tags:
        - Membership Invitation Services
      operationId: get-/repo/v1/membershipInvitation/openInvitationCount
      parameters: []
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.Count'
  /repo/v1/membershipInvitation/{id}/inviteeVerificationSignedToken:
    get:
      tags:
        - Membership Invitation Services
      operationId: get-/repo/v1/membershipInvitation/{id}/inviteeVerificationSignedToken
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.InviteeVerificationSignedToken'
  /repo/v1/membershipInvitation/{id}/inviteeId:
    put:
      tags:
        - Membership Invitation Services
      operationId: put-/repo/v1/membershipInvitation/{id}/inviteeId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.InviteeVerificationSignedToken'
        required: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Void
  /repo/v1/entity/{ownerId}/wiki2:
    post:
      tags:
        - WikiPage Services 2
      operationId: post-/repo/v1/entity/{ownerId}/wiki2
      parameters:
        - name: ownerId
          in: path
          required: true
          description: The ID of the owner Entity.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.v2.wiki.V2WikiPage'
        required: true
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.v2.wiki.V2WikiPage'
    get:
      tags:
        - WikiPage Services 2
      operationId: get-/repo/v1/entity/{ownerId}/wiki2
      parameters:
        - name: ownerId
          in: path
          required: true
          description: The ID of the owning Entity.
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.v2.wiki.V2WikiPage'
  /repo/v1/access_requirement/{ownerId}/wiki2:
    post:
      tags:
        - WikiPage Services 2
      operationId: post-/repo/v1/access_requirement/{ownerId}/wiki2
      parameters:
        - name: ownerId
          in: path
          required: true
          description: The ID of the owner AccessRequirement.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.v2.wiki.V2WikiPage'
        required: true
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.v2.wiki.V2WikiPage'
    get:
      tags:
        - WikiPage Services 2
      operationId: get-/repo/v1/access_requirement/{ownerId}/wiki2
      parameters:
        - name: ownerId
          in: path
          required: true
          description: The ID of the owning AccessRequirement.
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.v2.wiki.V2WikiPage'
  /repo/v1/evaluation/{ownerId}/wiki2:
    post:
      tags:
        - WikiPage Services 2
      operationId: post-/repo/v1/evaluation/{ownerId}/wiki2
      parameters:
        - name: ownerId
          in: path
          required: true
          description: The ID of the owner Evaluation.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.v2.wiki.V2WikiPage'
        required: true
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.v2.wiki.V2WikiPage'
    get:
      tags:
        - WikiPage Services 2
      operationId: get-/repo/v1/evaluation/{ownerId}/wiki2
      parameters:
        - name: ownerId
          in: path
          required: true
          description: The ID of the owning Evaluation.
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.v2.wiki.V2WikiPage'
  /repo/v1/entity/{ownerId}/wiki2/{wikiId}:
    get:
      tags:
        - WikiPage Services 2
      operationId: get-/repo/v1/entity/{ownerId}/wiki2/{wikiId}
      parameters:
        - name: ownerId
          in: path
          required: true
          description: The ID of the owning Entity.
          schema:
            type: string
        - name: wikiId
          in: path
          required: true
          description: The ID of the WikiPage to get.
          schema:
            type: string
        - name: wikiVersion
          in: query
          required: false
          description: When included returns a specific version of a wiki.
          schema:
            type: number
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.v2.wiki.V2WikiPage'
    put:
      tags:
        - WikiPage Services 2
      operationId: put-/repo/v1/entity/{ownerId}/wiki2/{wikiId}
      parameters:
        - name: ownerId
          in: path
          required: true
          description: The ID of the owning Entity.
          schema:
            type: string
        - name: wikiId
          in: path
          required: true
          description: The ID of the WikiPage to update.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.v2.wiki.V2WikiPage'
        required: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.v2.wiki.V2WikiPage'
    delete:
      tags:
        - WikiPage Services 2
      operationId: delete-/repo/v1/entity/{ownerId}/wiki2/{wikiId}
      parameters:
        - name: ownerId
          in: path
          required: true
          description: The ID of the owning Entity.
          schema:
            type: string
        - name: wikiId
          in: path
          required: true
          description: The ID of the WikiPage to delete.
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Void
  /repo/v1/access_requirement/{ownerId}/wiki2/{wikiId}:
    get:
      tags:
        - WikiPage Services 2
      operationId: get-/repo/v1/access_requirement/{ownerId}/wiki2/{wikiId}
      parameters:
        - name: ownerId
          in: path
          required: true
          description: The ID of the owning Access Requirement.
          schema:
            type: string
        - name: wikiId
          in: path
          required: true
          description: The ID of the WikiPage to get.
          schema:
            type: string
        - name: wikiVersion
          in: query
          required: false
          schema:
            type: number
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.v2.wiki.V2WikiPage'
    put:
      tags:
        - WikiPage Services 2
      operationId: put-/repo/v1/access_requirement/{ownerId}/wiki2/{wikiId}
      parameters:
        - name: ownerId
          in: path
          required: true
          description: The ID of the owning Access Requirement.
          schema:
            type: string
        - name: wikiId
          in: path
          required: true
          description: The ID of the WikiPage to update.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.v2.wiki.V2WikiPage'
        required: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.v2.wiki.V2WikiPage'
    delete:
      tags:
        - WikiPage Services 2
      operationId: delete-/repo/v1/access_requirement/{ownerId}/wiki2/{wikiId}
      parameters:
        - name: ownerId
          in: path
          required: true
          description: The ID of the owning Access Requirement.
          schema:
            type: string
        - name: wikiId
          in: path
          required: true
          description: The ID of the WikiPage to delete.
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Void
  /repo/v1/evaluation/{ownerId}/wiki2/{wikiId}:
    get:
      tags:
        - WikiPage Services 2
      operationId: get-/repo/v1/evaluation/{ownerId}/wiki2/{wikiId}
      parameters:
        - name: ownerId
          in: path
          required: true
          description: The ID of the owning Evaluation.
          schema:
            type: string
        - name: wikiId
          in: path
          required: true
          description: The ID of the WikiPage to get.
          schema:
            type: string
        - name: wikiVersion
          in: query
          required: false
          schema:
            type: number
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.v2.wiki.V2WikiPage'
    put:
      tags:
        - WikiPage Services 2
      operationId: put-/repo/v1/evaluation/{ownerId}/wiki2/{wikiId}
      parameters:
        - name: ownerId
          in: path
          required: true
          description: The ID of the owning Evaluation.
          schema:
            type: string
        - name: wikiId
          in: path
          required: true
          description: The ID of the WikiPage to update.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.v2.wiki.V2WikiPage'
        required: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.v2.wiki.V2WikiPage'
    delete:
      tags:
        - WikiPage Services 2
      operationId: delete-/repo/v1/evaluation/{ownerId}/wiki2/{wikiId}
      parameters:
        - name: ownerId
          in: path
          required: true
          description: The ID of the owning Evaluations.
          schema:
            type: string
        - name: wikiId
          in: path
          required: true
          description: The ID of the WikiPage to delete.
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Void
  /repo/v1/entity/{ownerId}/wiki2orderhint:
    put:
      tags:
        - WikiPage Services 2
      operationId: put-/repo/v1/entity/{ownerId}/wiki2orderhint
      parameters:
        - name: ownerId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.v2.wiki.V2WikiOrderHint'
        required: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.v2.wiki.V2WikiOrderHint'
    get:
      tags:
        - WikiPage Services 2
      operationId: get-/repo/v1/entity/{ownerId}/wiki2orderhint
      parameters:
        - name: ownerId
          in: path
          required: true
          description: The ID of the owning Entity.
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.v2.wiki.V2WikiOrderHint'
  /repo/v1/entity/{ownerId}/wiki2/{wikiId}/{wikiVersion}:
    put:
      tags:
        - WikiPage Services 2
      operationId: put-/repo/v1/entity/{ownerId}/wiki2/{wikiId}/{wikiVersion}
      parameters:
        - name: wikiVersion
          in: path
          required: true
          schema:
            type: number
        - name: ownerId
          in: path
          required: true
          description: The ID of the owning Entity.
          schema:
            type: string
        - name: wikiId
          in: path
          required: true
          description: The ID of the WikiPage to update.
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.v2.wiki.V2WikiPage'
  /repo/v1/access_requirement/{ownerId}/wiki2/{wikiId}/{wikiVersion}:
    put:
      tags:
        - WikiPage Services 2
      operationId: put-/repo/v1/access_requirement/{ownerId}/wiki2/{wikiId}/{wikiVersion}
      parameters:
        - name: wikiVersion
          in: path
          required: true
          schema:
            type: number
        - name: ownerId
          in: path
          required: true
          description: The ID of the owning Access Requirement.
          schema:
            type: string
        - name: wikiId
          in: path
          required: true
          description: The ID of the WikiPage to update.
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.v2.wiki.V2WikiPage'
  /repo/v1/evaluation/{ownerId}/wiki2/{wikiId}/{wikiVersion}:
    put:
      tags:
        - WikiPage Services 2
      operationId: put-/repo/v1/evaluation/{ownerId}/wiki2/{wikiId}/{wikiVersion}
      parameters:
        - name: wikiVersion
          in: path
          required: true
          schema:
            type: number
        - name: ownerId
          in: path
          required: true
          description: The ID of the owning Entity.
          schema:
            type: string
        - name: wikiId
          in: path
          required: true
          description: The ID of the WikiPage to update.
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.v2.wiki.V2WikiPage'
  /repo/v1/entity/{ownerId}/wikiheadertree2:
    get:
      tags:
        - WikiPage Services 2
      operationId: get-/repo/v1/entity/{ownerId}/wikiheadertree2
      parameters:
        - name: offset
          in: query
          required: false
          description: |-
            The index of the pagination offset. For a page size of 10, the
                        first page would be at offset = 0, and the second page would
                        be at offset = 10.
          schema:
            type: number
        - name: limit
          in: query
          required: false
          description: |-
            Limits the size of the page returned. For example, a page size
                        of 10 require limit = 10. Limit must be 50 or less.
          schema:
            type: number
        - name: ownerId
          in: path
          required: true
          description: The ID of the owning Entity.
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResultsOfV2WikiHeader'
  /repo/v1/access_requirement/{ownerId}/wikiheadertree2:
    get:
      tags:
        - WikiPage Services 2
      operationId: get-/repo/v1/access_requirement/{ownerId}/wikiheadertree2
      parameters:
        - name: offset
          in: query
          required: false
          description: |-
            The index of the pagination offset. For a page size of 10, the
                        first page would be at offset = 0, and the second page would
                        be at offset = 10.
          schema:
            type: number
        - name: limit
          in: query
          required: false
          description: |-
            Limits the size of the page returned. For example, a page size
                        of 10 require limit = 10.
          schema:
            type: number
        - name: ownerId
          in: path
          required: true
          description: The ID of the owning Access Requirement.
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResultsOfV2WikiHeader'
  /repo/v1/evaluation/{ownerId}/wikiheadertree2:
    get:
      tags:
        - WikiPage Services 2
      operationId: get-/repo/v1/evaluation/{ownerId}/wikiheadertree2
      parameters:
        - name: offset
          in: query
          required: false
          description: |-
            The index of the pagination offset. For a page size of 10, the
                        first page would be at offset = 0, and the second page would
                        be at offset = 10.
          schema:
            type: number
        - name: limit
          in: query
          required: false
          description: |-
            Limits the size of the page returned. For example, a page size
                        of 10 require limit = 10.
          schema:
            type: number
        - name: ownerId
          in: path
          required: true
          description: The ID of the owning Evaluation.
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResultsOfV2WikiHeader'
  /repo/v1/entity/{ownerId}/wiki2/{wikiId}/wikihistory:
    get:
      tags:
        - WikiPage Services 2
      operationId: get-/repo/v1/entity/{ownerId}/wiki2/{wikiId}/wikihistory
      parameters:
        - name: offset
          in: query
          required: true
          description: |-
            The index of the pagination offset. For a page size of 10, the
                        first page would be at offset = 0, and the second page would
                        be at offset = 10.
          schema:
            type: number
        - name: limit
          in: query
          required: true
          description: |-
            Limits the size of the page returned. For example, a page size
                        of 10 require limit = 10. Limit must be 50 or less.
          schema:
            type: number
        - name: wikiId
          in: path
          required: true
          description: The ID of the WikiPage.
          schema:
            type: string
        - name: ownerId
          in: path
          required: true
          description: The ID of the owning Entity.
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResultsOfV2WikiHistorySnapshot'
  /repo/v1/access_requirement/{ownerId}/wiki2/{wikiId}/wikihistory:
    get:
      tags:
        - WikiPage Services 2
      operationId: get-/repo/v1/access_requirement/{ownerId}/wiki2/{wikiId}/wikihistory
      parameters:
        - name: offset
          in: query
          required: true
          description: |-
            The index of the pagination offset. For a page size of 10, the
                        first page would be at offset = 0, and the second page would
                        be at offset = 10.
          schema:
            type: number
        - name: limit
          in: query
          required: true
          description: |-
            Limits the size of the page returned. For example, a page size
                        of 10 require limit = 10.
          schema:
            type: number
        - name: wikiId
          in: path
          required: true
          description: The ID of the WikiPage.
          schema:
            type: string
        - name: ownerId
          in: path
          required: true
          description: The ID of the owning Access Requirement.
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResultsOfV2WikiHistorySnapshot'
  /repo/v1/evaluation/{ownerId}/wiki2/{wikiId}/wikihistory:
    get:
      tags:
        - WikiPage Services 2
      operationId: get-/repo/v1/evaluation/{ownerId}/wiki2/{wikiId}/wikihistory
      parameters:
        - name: offset
          in: query
          required: true
          description: |-
            The index of the pagination offset. For a page size of 10, the
                        first page would be at offset = 0, and the second page would
                        be at offset = 10.
          schema:
            type: number
        - name: limit
          in: query
          required: true
          description: |-
            Limits the size of the page returned. For example, a page size
                        of 10 require limit = 10.
          schema:
            type: number
        - name: wikiId
          in: path
          required: true
          description: The ID of the WikiPage.
          schema:
            type: string
        - name: ownerId
          in: path
          required: true
          description: The ID of the owning Entity.
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResultsOfV2WikiHistorySnapshot'
  /repo/v1/entity/{ownerId}/wiki2/{wikiId}/attachmenthandles:
    get:
      tags:
        - WikiPage Services 2
      operationId: get-/repo/v1/entity/{ownerId}/wiki2/{wikiId}/attachmenthandles
      parameters:
        - name: ownerId
          in: path
          required: true
          description: The ID of the owning Entity.
          schema:
            type: string
        - name: wikiId
          in: path
          required: true
          description: The ID of the WikiPage.
          schema:
            type: string
        - name: wikiVersion
          in: query
          required: false
          schema:
            type: number
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.file.FileHandleResults'
  /repo/v1/access_requirement/{ownerId}/wiki2/{wikiId}/attachmenthandles:
    get:
      tags:
        - WikiPage Services 2
      operationId: get-/repo/v1/access_requirement/{ownerId}/wiki2/{wikiId}/attachmenthandles
      parameters:
        - name: ownerId
          in: path
          required: true
          description: The ID of the owning Access Requirement.
          schema:
            type: string
        - name: wikiId
          in: path
          required: true
          description: The ID of the WikiPage.
          schema:
            type: string
        - name: wikiVersion
          in: query
          required: false
          schema:
            type: number
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.file.FileHandleResults'
  /repo/v1/evaluation/{ownerId}/wiki2/{wikiId}/attachmenthandles:
    get:
      tags:
        - WikiPage Services 2
      operationId: get-/repo/v1/evaluation/{ownerId}/wiki2/{wikiId}/attachmenthandles
      parameters:
        - name: ownerId
          in: path
          required: true
          description: The ID of the owning Evaluation.
          schema:
            type: string
        - name: wikiId
          in: path
          required: true
          description: The ID of the WikiPage.
          schema:
            type: string
        - name: wikiVersion
          in: query
          required: false
          schema:
            type: number
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.file.FileHandleResults'
  /repo/v1/entity/{ownerId}/wiki2/{wikiId}/attachment:
    get:
      tags:
        - WikiPage Services 2
      operationId: get-/repo/v1/entity/{ownerId}/wiki2/{wikiId}/attachment
      parameters:
        - name: ownerId
          in: path
          required: true
          description: The ID of the owning Entity
          schema:
            type: string
        - name: wikiId
          in: path
          required: true
          description: The ID of the WikiPage
          schema:
            type: string
        - name: fileName
          in: query
          required: true
          description: |-
            The name of the file to get. The file names can be found in
                        the FileHandles from the ,<a href="${GET.entity.ownerId.wiki.wikiId.attachmenthandles}">,GET
                        /entity/{ownerId}/wiki/{wikiId}/attachmenthandles,</a>, method.
          schema:
            type: string
        - name: redirect
          in: query
          required: false
          description: |-
            When set to false, the URL will be returned as text/plain
                        instead of redirecting.
          schema:
            type: boolean
        - name: wikiVersion
          in: query
          required: false
          schema:
            type: number
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Status 200 will be returned if the 'redirect' boolean param is false
          content:
            text/plain:
              schema: {}
        '307':
          description: Status 307 will be returned if the 'redirect' boolean param is true or null
  /repo/v1/access_requirement/{ownerId}/wiki2/{wikiId}/attachment:
    get:
      tags:
        - WikiPage Services 2
      operationId: get-/repo/v1/access_requirement/{ownerId}/wiki2/{wikiId}/attachment
      parameters:
        - name: ownerId
          in: path
          required: true
          description: The ID of the owning Access Requirement
          schema:
            type: string
        - name: wikiId
          in: path
          required: true
          description: The ID of the WikiPage
          schema:
            type: string
        - name: fileName
          in: query
          required: true
          description: |-
            The name of the file to get. The file names can be found in
                        the FileHandles from the ,<a href="${GET.entity.ownerId.wiki.wikiId.attachmenthandles}">,GET
                        /accessRequirement/{ownerId}/wiki/{wikiId}/attachmenthandles,</a>, method.
          schema:
            type: string
        - name: redirect
          in: query
          required: false
          description: |-
            When set to false, the URL will be returned as text/plain
                        instead of redirecting.
          schema:
            type: boolean
        - name: wikiVersion
          in: query
          required: false
          schema:
            type: number
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Status 200 will be returned if the 'redirect' boolean param is false
          content:
            text/plain:
              schema: {}
        '307':
          description: Status 307 will be returned if the 'redirect' boolean param is true or null
  /repo/v1/evaluation/{ownerId}/wiki2/{wikiId}/attachment:
    get:
      tags:
        - WikiPage Services 2
      operationId: get-/repo/v1/evaluation/{ownerId}/wiki2/{wikiId}/attachment
      parameters:
        - name: ownerId
          in: path
          required: true
          description: The ID of the owning Evaluation
          schema:
            type: string
        - name: wikiId
          in: path
          required: true
          description: The ID of the WikiPage
          schema:
            type: string
        - name: fileName
          in: query
          required: true
          description: |-
            The name of the file to get. The file names can be found in
                        the FileHandles from the ,<a href="${GET.evaluation.ownerId.wiki.wikiId.attachmenthandles}">,GET /evaluation/{ownerId}/wiki/{wikiId}/attachmenthandles,</a>,
                        method.
          schema:
            type: string
        - name: redirect
          in: query
          required: false
          description: |-
            When set to false, the URL will be returned as text/plain
                        instead of redirecting.
          schema:
            type: boolean
        - name: wikiVersion
          in: query
          required: false
          schema:
            type: number
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Status 200 will be returned if the 'redirect' boolean param is false
          content:
            text/plain:
              schema: {}
        '307':
          description: Status 307 will be returned if the 'redirect' boolean param is true or null
  /repo/v1/entity/{ownerId}/wiki2/{wikiId}/attachmentpreview:
    get:
      tags:
        - WikiPage Services 2
      operationId: get-/repo/v1/entity/{ownerId}/wiki2/{wikiId}/attachmentpreview
      parameters:
        - name: ownerId
          in: path
          required: true
          description: The ID of the owning Entity
          schema:
            type: string
        - name: wikiId
          in: path
          required: true
          description: The ID of the WikiPage
          schema:
            type: string
        - name: fileName
          in: query
          required: true
          description: |-
            The name of the file to get. The file names can be found in
                        the FileHandles from the ,<a href="${GET.entity.ownerId.wiki.wikiId.attachmenthandles}">,GET
                        /entity/{ownerId}/wiki/{wikiId}/attachmenthandles,</a>, method.
          schema:
            type: string
        - name: redirect
          in: query
          required: false
          description: |-
            When set to false, the URL will be returned as text/plain
                        instead of redirecting.
          schema:
            type: boolean
        - name: wikiVersion
          in: query
          required: false
          schema:
            type: number
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Status 200 will be returned if the 'redirect' boolean param is false
          content:
            text/plain:
              schema: {}
        '307':
          description: Status 307 will be returned if the 'redirect' boolean param is true or null
  /repo/v1/access_requirement/{ownerId}/wiki2/{wikiId}/attachmentpreview:
    get:
      tags:
        - WikiPage Services 2
      operationId: get-/repo/v1/access_requirement/{ownerId}/wiki2/{wikiId}/attachmentpreview
      parameters:
        - name: ownerId
          in: path
          required: true
          description: The ID of the owning Access Requirement
          schema:
            type: string
        - name: wikiId
          in: path
          required: true
          description: The ID of the WikiPage
          schema:
            type: string
        - name: fileName
          in: query
          required: true
          description: |-
            The name of the file to get. The file names can be found in
                        the FileHandles from the ,<a href="${GET.entity.ownerId.wiki.wikiId.attachmenthandles}">,GET
                        /accessRequirement/{ownerId}/wiki/{wikiId}/attachmenthandles,</a>, method.
          schema:
            type: string
        - name: redirect
          in: query
          required: false
          description: |-
            When set to false, the URL will be returned as text/plain
                        instead of redirecting.
          schema:
            type: boolean
        - name: wikiVersion
          in: query
          required: false
          schema:
            type: number
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Status 200 will be returned if the 'redirect' boolean param is false
          content:
            text/plain:
              schema: {}
        '307':
          description: Status 307 will be returned if the 'redirect' boolean param is true or null
  /repo/v1/evaluation/{ownerId}/wiki2/{wikiId}/attachmentpreview:
    get:
      tags:
        - WikiPage Services 2
      operationId: get-/repo/v1/evaluation/{ownerId}/wiki2/{wikiId}/attachmentpreview
      parameters:
        - name: ownerId
          in: path
          required: true
          description: The ID of the owning Evaluation
          schema:
            type: string
        - name: wikiId
          in: path
          required: true
          description: The ID of the WikiPage
          schema:
            type: string
        - name: fileName
          in: query
          required: true
          description: |-
            The name of the file to get. The file names can be found in
                        the FileHandles from the ,<a href="${GET.evaluation.ownerId.wiki.wikiId.attachmenthandles}">,GET /evaluation/{ownerId}/wiki/{wikiId}/attachmenthandles,</a>,
                        method.
          schema:
            type: string
        - name: redirect
          in: query
          required: false
          description: |-
            When set to false, the URL will be returned as text/plain
                        instead of redirecting.
          schema:
            type: boolean
        - name: wikiVersion
          in: query
          required: false
          schema:
            type: number
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Status 200 will be returned if the 'redirect' boolean param is false
          content:
            text/plain:
              schema: {}
        '307':
          description: Status 307 will be returned if the 'redirect' boolean param is true or null
  /repo/v1/entity/{ownerId}/wiki2/{wikiId}/markdown:
    get:
      tags:
        - WikiPage Services 2
      operationId: get-/repo/v1/entity/{ownerId}/wiki2/{wikiId}/markdown
      parameters:
        - name: ownerId
          in: path
          required: true
          schema:
            type: string
        - name: wikiId
          in: path
          required: true
          schema:
            type: string
        - name: redirect
          in: query
          required: false
          schema:
            type: boolean
        - name: wikiVersion
          in: query
          required: false
          schema:
            type: number
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Status 200 will be returned if the 'redirect' boolean param is false
          content:
            text/plain:
              schema: {}
        '307':
          description: Status 307 will be returned if the 'redirect' boolean param is true or null
  /repo/v1/access_requirement/{ownerId}/wiki2/{wikiId}/markdown:
    get:
      tags:
        - WikiPage Services 2
      operationId: get-/repo/v1/access_requirement/{ownerId}/wiki2/{wikiId}/markdown
      parameters:
        - name: ownerId
          in: path
          required: true
          schema:
            type: string
        - name: wikiId
          in: path
          required: true
          schema:
            type: string
        - name: redirect
          in: query
          required: false
          schema:
            type: boolean
        - name: wikiVersion
          in: query
          required: false
          schema:
            type: number
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Status 200 will be returned if the 'redirect' boolean param is false
          content:
            text/plain:
              schema: {}
        '307':
          description: Status 307 will be returned if the 'redirect' boolean param is true or null
  /repo/v1/evaluation/{ownerId}/wiki2/{wikiId}/markdown:
    get:
      tags:
        - WikiPage Services 2
      operationId: get-/repo/v1/evaluation/{ownerId}/wiki2/{wikiId}/markdown
      parameters:
        - name: ownerId
          in: path
          required: true
          schema:
            type: string
        - name: wikiId
          in: path
          required: true
          schema:
            type: string
        - name: redirect
          in: query
          required: false
          schema:
            type: boolean
        - name: wikiVersion
          in: query
          required: false
          schema:
            type: number
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Status 200 will be returned if the 'redirect' boolean param is false
          content:
            text/plain:
              schema: {}
        '307':
          description: Status 307 will be returned if the 'redirect' boolean param is true or null
  /repo/v1/projectSettings/{id}:
    get:
      tags:
        - Project Settings Services
      operationId: get-/repo/v1/projectSettings/{id}
      parameters:
        - name: id
          in: path
          required: true
          description: the ID of the ,<a href="${org.sagebionetworks.repo.model.project.ProjectSetting}">,ProjectSetting,</a>
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: the ,<a href="${org.sagebionetworks.repo.model.project.ProjectSetting}">,ProjectSetting,</a>, with the corresponding ID, if it exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.project.ProjectSetting'
    delete:
      tags:
        - Project Settings Services
      operationId: delete-/repo/v1/projectSettings/{id}
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the ,<a href="${org.sagebionetworks.repo.model.project.ProjectSetting}">,ProjectSetting,</a>,. This is not the ID of the project.
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '204':
          description: Void
  /repo/v1/projectSettings/{projectId}/type/{type}:
    get:
      tags:
        - Project Settings Services
      operationId: get-/repo/v1/projectSettings/{projectId}/type/{type}
      parameters:
        - name: projectId
          in: path
          required: true
          description: the ID of the project
          schema:
            type: string
        - name: type
          in: path
          required: true
          description: The ,<a href="${org.sagebionetworks.repo.model.project.ProjectSettingsType}">,ProjectSettingsType,</a>, to get.
          schema:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.project.ProjectSettingsType'
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.project.ProjectSetting'
  /repo/v1/projectSettings:
    post:
      tags:
        - Project Settings Services
      operationId: post-/repo/v1/projectSettings
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.project.ProjectSetting'
        required: true
      security:
        - bearerAuth: []
      responses:
        '201':
          description: The created ,<a href="${org.sagebionetworks.repo.model.project.ProjectSetting}">,ProjectSetting,</a>,.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.project.ProjectSetting'
    put:
      tags:
        - Project Settings Services
      operationId: put-/repo/v1/projectSettings
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.project.ProjectSetting'
        required: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Void
  /repo/v1/storageLocation:
    post:
      tags:
        - Project Settings Services
      operationId: post-/repo/v1/storageLocation
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.project.StorageLocationSetting'
        required: true
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.project.StorageLocationSetting'
  /repo/v1/storageLocation/{id}:
    get:
      tags:
        - Project Settings Services
      operationId: get-/repo/v1/storageLocation/{id}
      parameters:
        - name: id
          in: path
          required: true
          description: the ID of the storage location setting.
          schema:
            type: number
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.project.StorageLocationSetting'
  /repo/v1/portal:
    post:
      tags:
        - Portals Services
      operationId: post-/repo/v1/portal
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.portals.CreateOrUpdatePortalRequest'
        required: true
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.portals.Portal'
  /repo/v1/portal/{portalId}:
    get:
      tags:
        - Portals Services
      operationId: get-/repo/v1/portal/{portalId}
      parameters:
        - name: portalId
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.portals.Portal'
    put:
      tags:
        - Portals Services
      operationId: put-/repo/v1/portal/{portalId}
      parameters:
        - name: portalId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.portals.CreateOrUpdatePortalRequest'
        required: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.portals.Portal'
    delete:
      tags:
        - Portals Services
      operationId: delete-/repo/v1/portal/{portalId}
      parameters:
        - name: portalId
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Void
  /repo/v1/portal/list:
    post:
      tags:
        - Portals Services
      operationId: post-/repo/v1/portal/list
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.portals.ListPortalsRequest'
        required: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.portals.ListPortalsResponse'
  /repo/v1/portal/{portalId}/acl:
    get:
      tags:
        - Portals Services
      operationId: get-/repo/v1/portal/{portalId}/acl
      parameters:
        - name: portalId
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.AccessControlList'
    put:
      tags:
        - Portals Services
      operationId: put-/repo/v1/portal/{portalId}/acl
      parameters:
        - name: portalId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.AccessControlList'
        required: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.AccessControlList'
  /repo/v1/portal/{portalId}/permissions:
    get:
      tags:
        - Portals Services
      operationId: get-/repo/v1/portal/{portalId}/permissions
      parameters:
        - name: portalId
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.auth.UserPortalPermissions'
  /repo/v1/verificationSubmission:
    post:
      tags:
        - Verification Services
      operationId: post-/repo/v1/verificationSubmission
      parameters:
        - name: notificationUnsubscribeEndpoint
          in: query
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.verification.VerificationSubmission'
        required: true
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.verification.VerificationSubmission'
    get:
      tags:
        - Verification Services
      operationId: get-/repo/v1/verificationSubmission
      parameters:
        - name: verifiedUserId
          in: query
          required: false
          description: filter on the user requesting verification (optional)
          schema:
            type: number
        - name: currentVerificationState
          in: query
          required: false
          description: filter on the state of the verification submission (optional)
          schema:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.verification.VerificationStateEnum'
        - name: limit
          in: query
          required: false
          description: page size pagination parameter (optional)
          schema:
            type: number
        - name: offset
          in: query
          required: false
          description: page start pagination parameter (zero offset, optional)
          schema:
            type: number
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.verification.VerificationPagedResults'
  /repo/v1/verificationSubmission/{id}/state:
    post:
      tags:
        - Verification Services
      operationId: post-/repo/v1/verificationSubmission/{id}/state
      parameters:
        - name: id
          in: path
          required: true
          description: the ID of the verification submission
          schema:
            type: number
        - name: notificationUnsubscribeEndpoint
          in: query
          required: false
          description: the portal prefix for one-click email unsubscription
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.verification.VerificationState'
        required: true
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Void
  /repo/v1/verificationSubmission/{id}:
    delete:
      tags:
        - Verification Services
      operationId: delete-/repo/v1/verificationSubmission/{id}
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: number
      security:
        - bearerAuth: []
      responses:
        '204':
          description: Void
  /repo/v1/form/group:
    post:
      tags:
        - Form Services
      operationId: post-/repo/v1/form/group
      parameters:
        - name: name
          in: query
          required: true
          description: |-
            A globally unique name for the group. Required. Between 3 and
                           256 characters.
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.form.FormGroup'
  /repo/v1/form/group/{id}:
    get:
      tags:
        - Form Services
      operationId: get-/repo/v1/form/group/{id}
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.form.FormGroup'
  /repo/v1/form/group/{id}/acl:
    get:
      tags:
        - Form Services
      operationId: get-/repo/v1/form/group/{id}/acl
      parameters:
        - name: id
          in: path
          required: true
          description: The identifier of the FormGroup.
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.AccessControlList'
    put:
      tags:
        - Form Services
      operationId: put-/repo/v1/form/group/{id}/acl
      parameters:
        - name: id
          in: path
          required: true
          description: The identifier of the FormGroup.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.AccessControlList'
        required: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.AccessControlList'
  /repo/v1/form/data:
    post:
      tags:
        - Form Services
      operationId: post-/repo/v1/form/data
      parameters:
        - name: groupId
          in: query
          required: true
          description: |-
            The identifier of the group that manages this data.
                                     Required.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.form.FormChangeRequest'
        required: true
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.form.FormData'
  /repo/v1/form/data/{id}:
    put:
      tags:
        - Form Services
      operationId: put-/repo/v1/form/data/{id}
      parameters:
        - name: id
          in: path
          required: true
          description: The identifier of the FormData to update.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.form.FormChangeRequest'
        required: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.form.FormData'
    delete:
      tags:
        - Form Services
      operationId: delete-/repo/v1/form/data/{id}
      parameters:
        - name: id
          in: path
          required: true
          description: Id of the FormData object to delete
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Void
  /repo/v1/form/data/{id}/submit:
    post:
      tags:
        - Form Services
      operationId: post-/repo/v1/form/data/{id}/submit
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.form.FormData'
  /repo/v1/form/data/list:
    post:
      tags:
        - Form Services
      operationId: post-/repo/v1/form/data/list
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.form.ListRequest'
        required: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.form.ListResponse'
  /repo/v1/form/data/list/reviewer:
    post:
      tags:
        - Form Services
      operationId: post-/repo/v1/form/data/list/reviewer
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.form.ListRequest'
        required: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.form.ListResponse'
  /repo/v1/form/data/{id}/accept:
    put:
      tags:
        - Form Services
      operationId: put-/repo/v1/form/data/{id}/accept
      parameters:
        - name: id
          in: path
          required: true
          description: Identifier of the FormData to accept.
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.form.FormData'
  /repo/v1/form/data/{id}/reject:
    put:
      tags:
        - Form Services
      operationId: put-/repo/v1/form/data/{id}/reject
      parameters:
        - name: id
          in: path
          required: true
          description: Identifier of the FormData to accept.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.form.FormRejection'
        required: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.form.FormData'
  /repo/v1/principal/available:
    post:
      tags:
        - Principal Services
      operationId: post-/repo/v1/principal/available
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.principal.AliasCheckRequest'
        required: true
      responses:
        '201':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.principal.AliasCheckResponse'
  /repo/v1/account/emailValidation:
    post:
      tags:
        - Principal Services
      operationId: post-/repo/v1/account/emailValidation
      parameters:
        - name: portalEndpoint
          in: query
          required: true
          description: |-
            the beginning of the URL included in the email verification message. When concatenated with
                    a list of ampersand (,&,) separated request parameters, must become a well formed URL. The concatenated
                    string must be included with the ,<a href="${POST.account2}">,POST /account,</a>, request.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.auth.NewUser'
        required: true
      responses:
        '201':
          description: Void
  /repo/v1/account2:
    post:
      tags:
        - Principal Services
      operationId: post-/repo/v1/account2
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.principal.AccountSetupInfo'
        required: true
      responses:
        '201':
          description: an access token, allowing the client to begin making authenticated requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.auth.LoginResponse'
  /repo/v1/account/{id}/emailValidation:
    post:
      tags:
        - Principal Services
      operationId: post-/repo/v1/account/{id}/emailValidation
      parameters:
        - name: id
          in: path
          required: true
          description: |-
            the ID of the user account to which the email address is to be added. Must match the ID of the user
                    making the request.
          schema:
            type: string
        - name: portalEndpoint
          in: query
          required: true
          description: |-
            the beginning of the URL included in the email verification message. When concatenated with
                    a list of ampersand (,&,) separated request parameters, must become a well formed URL. The concatenated
                    string must be included with the ,<a href="${POST.email}">,POST /email,</a>, request.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.auth.Username'
        required: true
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Void
  /repo/v1/email:
    post:
      tags:
        - Principal Services
      operationId: post-/repo/v1/email
      parameters:
        - name: setAsNotificationEmail
          in: query
          required: false
          description: |-
            if true then the newly added email address becomes the address
             used by the system for sending messages to the user.
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.principal.EmailValidationSignedToken'
        required: true
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Void
    delete:
      tags:
        - Principal Services
      operationId: delete-/repo/v1/email
      parameters:
        - name: email
          in: query
          required: true
          description: the email address to remove
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Void
  /repo/v1/notificationEmail:
    put:
      tags:
        - Principal Services
      operationId: put-/repo/v1/notificationEmail
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.auth.Username'
        required: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Void
    get:
      tags:
        - Principal Services
      operationId: get-/repo/v1/notificationEmail
      parameters: []
      security:
        - bearerAuth: []
      responses:
        '200':
          description: the email address to use for notifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.principal.NotificationEmail'
  /repo/v1/principal/alias:
    post:
      tags:
        - Principal Services
      operationId: post-/repo/v1/principal/alias
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org.sagebionetworks.repo.model.principal.PrincipalAliasRequest'
        required: true
      responses:
        '200':
          description: Auto-generated description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org.sagebionetworks.repo.model.principal.PrincipalAliasResponse'
components:
  schemas:
    org.sagebionetworks.repo.model.RestrictionInformationRequest:
      type: object
      properties:
        restrictableObjectType:
          type: string
          description: JSON enum for the types of objects which can be restricted by an AccessRequirement.
          enum:
            - ENTITY
            - EVALUATION
            - TEAM
        objectId:
          type: string
          description: The ID of the requested object.
      description: A request to retrieve the information about restriction level on a restrict-able object.
    org.sagebionetworks.repo.model.asynch.AsynchJobState:
      type: string
      enum:
        - PROCESSING
        - FAILED
        - COMPLETE
    org.sagebionetworks.repo.model.oauth.GA4GHVisa:
      type: object
      properties:
        type:
          type: string
          description: 'The visa type.  Note: Custom types are not supported.'
          enum:
            - AffiliationAndRole
            - AcceptedTermsAndPolicies
            - ResearcherStatus
            - ControlledAccessGrants
            - LinkedIdentities
        asserted:
          type: integer
          description: Seconds since unix epoch that represents when the Visa Assertion Source made the claim.
          format: int32
        value:
          type: string
          description: A string that represents any of the scope, process, identifier and version of the assertion.
        source:
          type: string
          description: A URL Claim that provides at a minimum the organization that made the assertion.
        by:
          type: string
          description: The level or type of authority within the 'source' organization of the assertion.
          enum:
            - self
            - peer
            - system
            - so
            - dac
      description: GA4GH Visa
    org.sagebionetworks.repo.model.principal.EmailValidationSignedToken:
      type: object
      properties:
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.principal.EmailValidationSignedToken
        hmac:
          type: string
          description: The hash message authentication code for the message.
        version:
          type: integer
          description: The version of the key used to generate the HMAC.
          format: int32
        expiresOn:
          type: string
          description: The date-time when this token expires.
        createdOn:
          type: string
          description: The date-time the token was generated.
        email:
          type: string
          description: The email address.
        userId:
          type: string
          description: The ID of the user account to which the email address will be added. Null if creating a new account.
      description: Signed token containing the the information necessary to create a new account or add an email address to an existing account.
      required:
        - concreteType
    org.sagebionetworks.repo.model.migration.MigrationTypeNames:
      type: object
      properties:
        list:
          type: array
          items:
            type: string
      description: List of MigrationType names
    org.sagebionetworks.repo.model.table.QueryResultBundle:
      type: object
      properties:
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.table.QueryResultBundle
        queryResult:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.QueryResult'
          description: A page of query result.
        queryCount:
          type: integer
          description: The total number of rows that match the query. Use mask = 0x2 to include in the bundle.
          format: int32
        selectColumns:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.SelectColumn'
            description: A column model contains the metadata of a single column of a TableEntity
          description: The list of SelectColumns from the select clause. Use mask = 0x4 to include in the bundle.
        maxRowsPerPage:
          type: integer
          description: The maximum number of rows that can be retrieved in a single call.  This is a function of the columns that are selected in the query. Use mask = 0x8 to include in the bundle.
          format: int32
        columnModels:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.ColumnModel'
            description: A column model contains the metadata of a single column of a table or view.
          description: The list of ColumnModels for the table. Use mask = 0x10 to include in the bundle.
        facets:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.FacetColumnResult'
            description: Resulting information about a faceted column
          description: The list of facets for the search results
        sumFileSizes:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.SumFileSizes'
          description: The sum of the file size for all files in the given view query. Use mask = 0x40 to include in the bundle.
        lastUpdatedOn:
          type: string
          description: 'The date-time when this table/view was last updated. Note: Since views are eventually consistent a view might still be out-of-date even if it was recently updated. Use mask = 0x80 to include in the bundle.'
        combinedSql:
          type: string
          description: The SQL that is combination of a the input SQL, FacetRequests, AdditionalFilters, Sorting, and Pagination. Use mask = 0x100 to include in the bundle.
        actionsRequired:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.download.ActionRequiredCount'
            description: Represents a single action that the user will need to take in order to download one or more files.
          description: The first 50 actions required to download the files that are part of the query. Use mask = 0x200 to include them in the bundle.
      description: A bundle of information about a query result.
      required:
        - concreteType
    org.sagebionetworks.repo.model.oauth.TokenTypeHint:
      type: string
      enum:
        - access_token
        - refresh_token
    org.sagebionetworks.repo.model.auth.TermsOfServiceSignRequest:
      type: object
      properties:
        accessToken:
          type: string
          description: An access token of the user that is agreeing to the ToS.
        termsOfServiceVersion:
          type: string
          description: The semantic version of the ToS that the user read and agreed to.  If a client does not provide this value, then a default value of '0.0.0' will be used indicating that the original (and deprecated) ToS was used.
      description: Request to agree to the terms of service.
    org.sagebionetworks.repo.model.message.multipart.Attachment:
      type: object
      properties:
        content:
          type: string
          description: The content of the attachment in base-64 encoding, if the message isn't using an attachment store.
        content_id:
          type: string
          description: The ID used to reference the content elsewhere in the multipart message.
        url:
          type: string
          description: A URL to the attachment if the attachment is within an attachment store.
        file_name:
          type: string
          description: The original file name of the attachment.
        content_type:
          type: string
          description: The content type of the attachment.
        size:
          type: string
          description: The size of the attachment.
        disposition:
          type: string
          description: The disposition of the attachment either attachment or inline.
      description: Multipart Message Attachment
    org.sagebionetworks.repo.model.doi.v2.DoiResourceType:
      type: object
      properties:
        resourceTypeGeneral:
          type: string
          description: Describes the general type of media that DOI Metadata refers to.
          enum:
            - Audiovisual
            - Collection
            - DataPaper
            - Dataset
            - Event
            - Image
            - InteractiveResource
            - Model
            - PhysicalObject
            - Service
            - Software
            - Sound
            - Text
            - Workflow
            - Other
      description: Required. Describes the type of media that the DOI Metadata refers to.
    org.sagebionetworks.repo.model.attachment.PresignedUrl:
      type: object
      properties:
        tokenID:
          type: string
          description: The token ID for this url
        presignedUrl:
          type: string
          description: A presigned url for downloading.
        status:
          type: string
          description: The status of this URL
          enum:
            - DOES_NOT_EXIST
            - READ_FOR_DOWNLOAD
      description: This object is deprecated and will be removed in future versions of Synapse.
    org.sagebionetworks.repo.model.table.TableRowChange:
      type: object
      properties:
        id:
          type: integer
          description: Unique id assigned to the change
          format: int32
        tableId:
          type: string
          description: The ID of the table that this change is for.
        rowVersion:
          type: integer
          description: The version number of the table row change
          format: int32
        etag:
          type: string
          description: The etag of this change
        createdOn:
          type: string
          description: The date this change was created.
        createdBy:
          type: string
          description: The ID of the user that created this change.
        bucket:
          type: string
          description: The name of the S3 bucket where this change is stored
        keyNew:
          type: string
          description: The name of the S3 key where this change is stored.
        rowCount:
          type: integer
          description: The number of rows in this change.
          format: int32
        changeType:
          type: string
          enum:
            - ROW
            - COLUMN
            - SEARCH
        transactionId:
          type: integer
          description: The ID of the transaction that this change belongs to.
          format: int32
        hasFileRefs:
          type: boolean
          description: Indicates if the change contains references to file handles. Always false for a COLUMN change.
        isSearchEnabled:
          type: boolean
          description: Indicates if the for this change the search is enabled
      description: Metadata about Table row change set.
    org.sagebionetworks.repo.model.dataaccess.SubmissionSearchSort:
      type: object
      properties:
        field:
          type: string
          description: Field to sort on.
          enum:
            - MODIFIED_ON
            - CREATED_ON
        direction:
          type: string
          description: Direction of a sort.
          enum:
            - ASC
            - DESC
      description: Identifies both the field and direction for a single sort operation
    org.sagebionetworks.repo.model.portals.CreateOrUpdatePortalRequest:
      type: object
      properties:
        name:
          type: string
          description: The name of the portal, must be unique.
        url:
          type: string
          description: The base URL of the portal, must be unique.
      description: JSON schema for a request to create or update a Portal.
    org.sagebionetworks.repo.model.file.MultipartRequest:
      type: object
      properties:
        concreteType:
          type: string
          description: Indicates which type of multi-part request to initiate. Currently supports <a href="${org.sagebionetworks.repo.model.file.MultipartUploadRequest}">MultipartUploadRequest</a> and <a href="${org.sagebionetworks.repo.model.file.MultipartUploadCopyRequest}">MultipartUploadCopyRequest</a>
        partSizeBytes:
          type: integer
          description: In order to upload or copy a file, the client must split the process into 'parts' and upload or copy each part separately. This indicates the clients intended part size in bytes. Part size must be at least 5,242,880 bytes (5MB) with a max of 5,368,709,120 bytes (5GB). Also the maximum number of parts for a single file is 10K.
          format: int32
        fileName:
          type: string
          description: The name of the file to be uploaded.
        storageLocationId:
          type: integer
          description: The identifier of the storage location where this file should be stored.
          format: int32
        generatePreview:
          type: boolean
          description: Optional parameter.  When set to 'false' a preview will not be generated for the resulting file.
      description: Interface to describe a multi-part request. If the concrete type is not supplied will default to a <a href="${org.sagebionetworks.repo.model.file.MultipartUploadRequest}">MultipartUploadRequest</a>
      oneOf:
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.file.MultipartUploadCopyRequest'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.file.MultipartUploadRequest'
      required:
        - concreteType
      discriminator:
        propertyName: concreteType
    org.sagebionetworks.evaluation.model.SubmissionStatusEnum:
      type: string
      enum:
        - OPEN
        - CLOSED
        - SCORED
        - INVALID
        - VALIDATED
        - EVALUATION_IN_PROGRESS
        - RECEIVED
        - REJECTED
        - ACCEPTED
    org.sagebionetworks.repo.model.migration.AsyncMigrationTypeCountsRequest:
      type: object
      properties:
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.migration.AsyncMigrationTypeCountsRequest
        types:
          type: array
          items:
            type: string
            description: 'JSON enum for the types of objects which can be migrated. NOTE: The order of this enumeration determines the migration order.'
            enum:
              - PRINCIPAL
              - GROUP_MEMBERS
              - CREDENTIAL
              - AUTHENTICATED_ON
              - PRINCIPAL_ALIAS
              - NOTIFICATION_EMAIL
              - USER_PROFILE
              - STORAGE_LOCATION
              - FILE_HANDLE
              - MULTIPART_UPLOAD
              - MULTIPART_UPLOAD_PART_STATE
              - MULTIPART_UPLOAD_COMPOSER_PART_STATE
              - MESSAGE_CONTENT
              - MESSAGE_TO_USER
              - MESSAGE_RECIPIENT
              - MESSAGE_STATUS
              - COMMENT
              - V2_WIKI_PAGE
              - V2_WIKI_ATTACHMENT_RESERVATION
              - V2_WIKI_MARKDOWN
              - V2_WIKI_OWNERS
              - ACTIVITY
              - NODE
              - NODE_REVISION
              - NODE_ACCESS_REQUIRMENT
              - DOCKER_REPOSITORY_NAME
              - DOCKER_COMMIT
              - TEAM
              - MEMBERSHIP_INVITATION_SUBMISSION
              - MEMBERSHIP_REQUEST_SUBMISSION
              - EVALUATION
              - EVALUATION_ROUND
              - EVALUATION_SUBMISSIONS
              - SUBMISSION
              - SUBMISSION_CONTRIBUTOR
              - SUBMISSION_FILE
              - SUBMISSION_STATUS
              - PROJECT_SETTINGS
              - PROJECT_STATS
              - ACCESS_REQUIREMENT
              - ACCESS_REQUIREMENT_REVISION
              - ACCESS_APPROVAL
              - ACL
              - ACL_ACCESS
              - ACL_ACCESS_TYPE
              - FAVORITE
              - TRASH_CAN
              - PORTAL
              - DOI
              - CHALLENGE
              - CHALLENGE_TEAM
              - COLUMN_MODEL
              - BOUND_COLUMN_OWNER
              - BOUND_COLUMN_ORDINAL
              - TABLE_TRANSACTION
              - TABLE_TRANSACTION_TO_VERSION
              - TABLE_SEQUENCE
              - TABLE_CHANGE
              - QUIZ_RESPONSE
              - VERIFICATION_SUBMISSION
              - VERIFICATION_STATE
              - VERIFICATION_FILE
              - FORUM
              - DISCUSSION_THREAD
              - DISCUSSION_THREAD_VIEW
              - DISCUSSION_THREAD_ENTITY_REFERENCE
              - DISCUSSION_REPLY
              - SUBSCRIPTION
              - BROADCAST_MESSAGE
              - VIEW_TYPE
              - VIEW_SCOPE
              - VIEW_SNAPSHOT
              - THROTTLE_RULE
              - RESEARCH_PROJECT
              - DATA_ACCESS_REQUEST
              - DATA_ACCESS_SUBMISSION
              - DATA_ACCESS_SUBMISSION_SUBMITTER
              - DATA_ACCESS_SUBMISSION_STATUS
              - DATA_ACCESS_SUBMISSION_ACCESSOR_CHANGE
              - DATA_ACCESS_NOTIFICATIONS
              - FORM_GROUP
              - FORM_DATA
              - ORGANIZATION
              - JSON_SCHEMA
              - JSON_SCHEMA_BLOB
              - JSON_SCHEMA_VERSION
              - JSON_SCHEMA_LATEST_VERSION
              - JSON_SCHEMA_DEPENDENCY
              - JSON_SCHEMA_OBJECT_BINDING
              - DOWNLOAD_LIST
              - DOWNLOAD_LIST_ITEM
              - DOWNLOAD_ORDER
              - DOWNLOAD_LIST_2
              - DOWNLOAD_LIST_ITEM_2
              - DATA_TYPE
              - OAUTH_SECTOR_IDENTIFIER
              - OAUTH_CLIENT
              - OAUTH_REFRESH_TOKEN
              - OAUTH_ACCESS_TOKEN
              - PERSONAL_ACCESS_TOKEN
              - AUTHORIZATION_GRANT
              - SES_NOTIFICATIONS
              - QUARANTINED_EMAILS
              - FEATURE_STATUS
              - MATERIALIZED_VIEW_ID
              - MATERIALIZED_VIEW_SOURCE_TABLE
              - PRINCIPAL_OIDC_BINDING
              - OTP_SECRET
              - OTP_RECOVERY_CODE
              - TWO_FA_STATUS
              - WEBHOOK
              - WEBHOOK_VERIFICATION
              - WEBHOOK_ALLOWED_DOMAIN
              - AGENT_REGISTRATION
              - AGENT_SESSION
              - TOS_REQUIREMENTS
              - TOS_AGREEMENT
              - PROJECT_STORAGE_DATA
              - PROJECT_STORAGE_LIMIT
              - GRID_SESSION
              - GRID_REPLICA
              - GRID_CONNECTION
              - GRID_PATCH
              - CURATION_TASK
              - USER_STATUS
              - RECORDSET_VALIDATION_STATS
              - CHANGE
      description: Request count for migration types
      required:
        - concreteType
    org.sagebionetworks.repo.model.feature.Feature:
      type: string
      enum:
        - DATA_ACCESS_NOTIFICATIONS
        - DATA_ACCESS_AUTO_REVOCATION
        - MULTIPART_AUTO_CLEANUP
        - DATA_DOWNLOAD_THROUGH_CLOUDFRONT
        - CHANGE_PASSWORD_2FA_CHECK_BYPASS
        - USE_NEW_ASYNC_GOOGLE_MULTIPART_UPLOAD
        - ENFORCE_PROJECT_STORAGE_LIMITS
        - ALLOW_AGENT_WRITES
        - DISABLE_2FA_REQUIREMENT
    org.sagebionetworks.repo.model.dataaccess.AccessApprovalNotificationResponse:
      type: object
      properties:
        requirementId:
          type: integer
          description: The id of the requested access requirement.
          format: int32
        results:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.dataaccess.AccessApprovalNotification'
            description: Information about the a notification for an access approval.
          description: The list of notifications, sorted by the recipient and the sentOn date.
      description: Contains the response for an <a href="${org.sagebionetworks.repo.model.dataaccess.AccessApprovalNotificationRequest}">AccessApprovalNotificationRequest</a>.
    org.sagebionetworks.repo.model.file.FileHandleRestoreResult:
      type: object
      properties:
        fileHandleId:
          type: string
          description: The id of the file handle in the original restore request.
        status:
          type: string
          description: The status of the restore operation on the file handle.
          enum:
            - NOT_FOUND
            - UNAUTHORIZED
            - FAILED
            - NO_ACTION
            - RESTORED
            - RESTORING
        statusMessage:
          type: string
          description: A descriptive message for the status
      description: Result of a single file handle restore operation.
    org.sagebionetworks.repo.model.TeamMember:
      type: object
      properties:
        teamId:
          type: string
          description: The id of the Team.
        member:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.UserGroupHeader'
          description: JSON schema for UserHeader POJO
        isAdmin:
          type: boolean
          description: True iff the user is an administrator in the Team.
      description: JSON schema for Team Member, which bundles UserGroupHeader and isAdmin
    org.sagebionetworks.repo.model.oauth.JsonWebKeySet:
      type: object
      properties:
        keys:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.oauth.JsonWebKey'
            description: Public key used to verify JSON Web Token signatures
      description: List of JSON Web Keys
    org.sagebionetworks.repo.model.table.ViewScope:
      type: object
      properties:
        viewTypeMask:
          type: integer
          description: 'Bit mask representing the types to include in the view. The following are the possible types (type=<mask_hex>): File=0x01, Project=0x02, Table=0x04, Folder=0x08, View=0x10, Docker=0x20, SubmissionView=0x40, Dataset=0x80, DatasetCollection=0x100, MaterializedView=0x200.'
          format: int32
        scope:
          type: array
          items:
            type: string
          description: List of parent IDs that define a view scope. For an entityview the ids should point to entities, for a submissionview the ids should point to evaluation ids
        viewEntityType:
          type: string
          description: Subset of EntityType for views
          enum:
            - entityview
            - submissionview
            - dataset
            - datasetcollection
        viewType:
          type: string
          description: 'Deprecated. Use: ''viewTypeMask'''
          enum:
            - file
            - project
            - file_and_table
      description: List of parent IDs that define a view scope.
    org.sagebionetworks.repo.model.table.SumFileSizes:
      type: object
      properties:
        sumFileSizesBytes:
          type: integer
          description: The sum of the file size in bytes.
          format: int32
        greaterThan:
          type: boolean
          description: When true, the actual sum of the files sizes is greater than the value provided with 'sumFileSizesBytes'.  When false, the actual sum of the files sizes is equlas the value provided with 'sumFileSizesBytes'
      description: The sum of the file size for all files in the given view query. Use mask = 0x40 to include in the bundle.
    org.sagebionetworks.repo.model.download.DownloadListPackageRequest:
      type: object
      properties:
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.download.DownloadListPackageRequest
        zipFileName:
          type: string
          description: Optional parameter to set the name of the resulting zip file.
        includeManifest:
          type: boolean
          description: Optional with a default value of false.  When set to true, a metadata manifest file will be included in the package. The manifest will include all the metadata for each file in the package.
        csvTableDescriptor:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.CsvTableDescriptor'
          description: The description of a csv for upload or download.
      description: Request to package files from a user's download list.
      required:
        - concreteType
    org.sagebionetworks.repo.model.quiz.Quiz:
      type: object
      properties:
        id:
          type: integer
          description: the ID of this Quiz
          format: int32
        header:
          type: string
          description: Content preceding the series of questions
        questions:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.quiz.Question'
            description: a single question in a Quiz
          description: The questions in the Quiz
      description: Schema for a quiz and, optionally, its answer key
    org.sagebionetworks.repo.model.auth.TwoFactorAuthResetRequest:
      type: object
      properties:
        userId:
          type: integer
          description: The id of the user that attempted to authenticate.
          format: int32
        twoFaResetEndpoint:
          type: string
          description: The portal endpoint used as reset link prefix, must be a domain owned by sage.
        twoFaToken:
          type: string
          description: The token that was included in the error response when authenticating.
        password:
          type: string
          description: The current user password that can be used in place of the twoFaToken (e.g. when authenticating with user/password or during a change password workflow).
      description: Used to request a two fa reset token to be sent by email, can be requested with a twoFaToken returned by an authentication attempt.
    org.sagebionetworks.repo.model.table.SparseRowDto:
      type: object
      properties:
        etag:
          type: string
          description: The current etag of this object.
        rowId:
          type: integer
          description: The immutable ID of a row.
          format: int32
        versionNumber:
          type: integer
          description: The the version number of this row.
          format: int32
        values:
          type: object
          description: The values for columns of this row as a map. The key is the columnId and value is the cell value
          additionalProperties:
            type: string
      description: Represents a single partial row of a TableEntity
    org.sagebionetworks.repo.model.EntityGroup:
      type: object
      properties:
        name:
          type: string
          description: The name of this entity
        description:
          type: string
          description: The description of this entity.
        records:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.EntityGroupRecord'
            description: JSON schema for Entity Group Record POJO
          description: The set of EntityGroupRecords for this group.
      description: JSON schema for an Entity Group POJO
    org.sagebionetworks.repo.model.auth.PasswordResetSignedToken:
      type: object
      properties:
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.auth.PasswordResetSignedToken
        hmac:
          type: string
          description: The hash message authentication code for the message.
        version:
          type: integer
          description: The version of the key used to generate the HMAC.
          format: int32
        expiresOn:
          type: string
          description: The date-time when this token expires.
        createdOn:
          type: string
          description: The date-time the token was generated.
        userId:
          type: string
          description: The ID of the user account.
        validity:
          type: string
          description: Used to check if this token is valid
      description: Signed token containing the the information necessary to reset the password for a user.
      required:
        - concreteType
    org.sagebionetworks.repo.model.oauth.OAuthResponseType:
      type: string
      enum:
        - code
    org.sagebionetworks.repo.model.file.ZipFileFormat:
      type: string
      enum:
        - CommandLineCache
        - Flat
    org.sagebionetworks.repo.model.migration.MigrationTypeChecksum:
      type: object
      properties:
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.migration.MigrationTypeChecksum
        migrationType:
          type: string
          description: 'JSON enum for the types of objects which can be migrated. NOTE: The order of this enumeration determines the migration order.'
          enum:
            - PRINCIPAL
            - GROUP_MEMBERS
            - CREDENTIAL
            - AUTHENTICATED_ON
            - PRINCIPAL_ALIAS
            - NOTIFICATION_EMAIL
            - USER_PROFILE
            - STORAGE_LOCATION
            - FILE_HANDLE
            - MULTIPART_UPLOAD
            - MULTIPART_UPLOAD_PART_STATE
            - MULTIPART_UPLOAD_COMPOSER_PART_STATE
            - MESSAGE_CONTENT
            - MESSAGE_TO_USER
            - MESSAGE_RECIPIENT
            - MESSAGE_STATUS
            - COMMENT
            - V2_WIKI_PAGE
            - V2_WIKI_ATTACHMENT_RESERVATION
            - V2_WIKI_MARKDOWN
            - V2_WIKI_OWNERS
            - ACTIVITY
            - NODE
            - NODE_REVISION
            - NODE_ACCESS_REQUIRMENT
            - DOCKER_REPOSITORY_NAME
            - DOCKER_COMMIT
            - TEAM
            - MEMBERSHIP_INVITATION_SUBMISSION
            - MEMBERSHIP_REQUEST_SUBMISSION
            - EVALUATION
            - EVALUATION_ROUND
            - EVALUATION_SUBMISSIONS
            - SUBMISSION
            - SUBMISSION_CONTRIBUTOR
            - SUBMISSION_FILE
            - SUBMISSION_STATUS
            - PROJECT_SETTINGS
            - PROJECT_STATS
            - ACCESS_REQUIREMENT
            - ACCESS_REQUIREMENT_REVISION
            - ACCESS_APPROVAL
            - ACL
            - ACL_ACCESS
            - ACL_ACCESS_TYPE
            - FAVORITE
            - TRASH_CAN
            - PORTAL
            - DOI
            - CHALLENGE
            - CHALLENGE_TEAM
            - COLUMN_MODEL
            - BOUND_COLUMN_OWNER
            - BOUND_COLUMN_ORDINAL
            - TABLE_TRANSACTION
            - TABLE_TRANSACTION_TO_VERSION
            - TABLE_SEQUENCE
            - TABLE_CHANGE
            - QUIZ_RESPONSE
            - VERIFICATION_SUBMISSION
            - VERIFICATION_STATE
            - VERIFICATION_FILE
            - FORUM
            - DISCUSSION_THREAD
            - DISCUSSION_THREAD_VIEW
            - DISCUSSION_THREAD_ENTITY_REFERENCE
            - DISCUSSION_REPLY
            - SUBSCRIPTION
            - BROADCAST_MESSAGE
            - VIEW_TYPE
            - VIEW_SCOPE
            - VIEW_SNAPSHOT
            - THROTTLE_RULE
            - RESEARCH_PROJECT
            - DATA_ACCESS_REQUEST
            - DATA_ACCESS_SUBMISSION
            - DATA_ACCESS_SUBMISSION_SUBMITTER
            - DATA_ACCESS_SUBMISSION_STATUS
            - DATA_ACCESS_SUBMISSION_ACCESSOR_CHANGE
            - DATA_ACCESS_NOTIFICATIONS
            - FORM_GROUP
            - FORM_DATA
            - ORGANIZATION
            - JSON_SCHEMA
            - JSON_SCHEMA_BLOB
            - JSON_SCHEMA_VERSION
            - JSON_SCHEMA_LATEST_VERSION
            - JSON_SCHEMA_DEPENDENCY
            - JSON_SCHEMA_OBJECT_BINDING
            - DOWNLOAD_LIST
            - DOWNLOAD_LIST_ITEM
            - DOWNLOAD_ORDER
            - DOWNLOAD_LIST_2
            - DOWNLOAD_LIST_ITEM_2
            - DATA_TYPE
            - OAUTH_SECTOR_IDENTIFIER
            - OAUTH_CLIENT
            - OAUTH_REFRESH_TOKEN
            - OAUTH_ACCESS_TOKEN
            - PERSONAL_ACCESS_TOKEN
            - AUTHORIZATION_GRANT
            - SES_NOTIFICATIONS
            - QUARANTINED_EMAILS
            - FEATURE_STATUS
            - MATERIALIZED_VIEW_ID
            - MATERIALIZED_VIEW_SOURCE_TABLE
            - PRINCIPAL_OIDC_BINDING
            - OTP_SECRET
            - OTP_RECOVERY_CODE
            - TWO_FA_STATUS
            - WEBHOOK
            - WEBHOOK_VERIFICATION
            - WEBHOOK_ALLOWED_DOMAIN
            - AGENT_REGISTRATION
            - AGENT_SESSION
            - TOS_REQUIREMENTS
            - TOS_AGREEMENT
            - PROJECT_STORAGE_DATA
            - PROJECT_STORAGE_LIMIT
            - GRID_SESSION
            - GRID_REPLICA
            - GRID_CONNECTION
            - GRID_PATCH
            - CURATION_TASK
            - USER_STATUS
            - RECORDSET_VALIDATION_STATS
            - CHANGE
        type:
          type: string
          description: 'JSON enum for the types of objects which can be migrated. NOTE: The order of this enumeration determines the migration order.'
          enum:
            - PRINCIPAL
            - GROUP_MEMBERS
            - CREDENTIAL
            - AUTHENTICATED_ON
            - PRINCIPAL_ALIAS
            - NOTIFICATION_EMAIL
            - USER_PROFILE
            - STORAGE_LOCATION
            - FILE_HANDLE
            - MULTIPART_UPLOAD
            - MULTIPART_UPLOAD_PART_STATE
            - MULTIPART_UPLOAD_COMPOSER_PART_STATE
            - MESSAGE_CONTENT
            - MESSAGE_TO_USER
            - MESSAGE_RECIPIENT
            - MESSAGE_STATUS
            - COMMENT
            - V2_WIKI_PAGE
            - V2_WIKI_ATTACHMENT_RESERVATION
            - V2_WIKI_MARKDOWN
            - V2_WIKI_OWNERS
            - ACTIVITY
            - NODE
            - NODE_REVISION
            - NODE_ACCESS_REQUIRMENT
            - DOCKER_REPOSITORY_NAME
            - DOCKER_COMMIT
            - TEAM
            - MEMBERSHIP_INVITATION_SUBMISSION
            - MEMBERSHIP_REQUEST_SUBMISSION
            - EVALUATION
            - EVALUATION_ROUND
            - EVALUATION_SUBMISSIONS
            - SUBMISSION
            - SUBMISSION_CONTRIBUTOR
            - SUBMISSION_FILE
            - SUBMISSION_STATUS
            - PROJECT_SETTINGS
            - PROJECT_STATS
            - ACCESS_REQUIREMENT
            - ACCESS_REQUIREMENT_REVISION
            - ACCESS_APPROVAL
            - ACL
            - ACL_ACCESS
            - ACL_ACCESS_TYPE
            - FAVORITE
            - TRASH_CAN
            - PORTAL
            - DOI
            - CHALLENGE
            - CHALLENGE_TEAM
            - COLUMN_MODEL
            - BOUND_COLUMN_OWNER
            - BOUND_COLUMN_ORDINAL
            - TABLE_TRANSACTION
            - TABLE_TRANSACTION_TO_VERSION
            - TABLE_SEQUENCE
            - TABLE_CHANGE
            - QUIZ_RESPONSE
            - VERIFICATION_SUBMISSION
            - VERIFICATION_STATE
            - VERIFICATION_FILE
            - FORUM
            - DISCUSSION_THREAD
            - DISCUSSION_THREAD_VIEW
            - DISCUSSION_THREAD_ENTITY_REFERENCE
            - DISCUSSION_REPLY
            - SUBSCRIPTION
            - BROADCAST_MESSAGE
            - VIEW_TYPE
            - VIEW_SCOPE
            - VIEW_SNAPSHOT
            - THROTTLE_RULE
            - RESEARCH_PROJECT
            - DATA_ACCESS_REQUEST
            - DATA_ACCESS_SUBMISSION
            - DATA_ACCESS_SUBMISSION_SUBMITTER
            - DATA_ACCESS_SUBMISSION_STATUS
            - DATA_ACCESS_SUBMISSION_ACCESSOR_CHANGE
            - DATA_ACCESS_NOTIFICATIONS
            - FORM_GROUP
            - FORM_DATA
            - ORGANIZATION
            - JSON_SCHEMA
            - JSON_SCHEMA_BLOB
            - JSON_SCHEMA_VERSION
            - JSON_SCHEMA_LATEST_VERSION
            - JSON_SCHEMA_DEPENDENCY
            - JSON_SCHEMA_OBJECT_BINDING
            - DOWNLOAD_LIST
            - DOWNLOAD_LIST_ITEM
            - DOWNLOAD_ORDER
            - DOWNLOAD_LIST_2
            - DOWNLOAD_LIST_ITEM_2
            - DATA_TYPE
            - OAUTH_SECTOR_IDENTIFIER
            - OAUTH_CLIENT
            - OAUTH_REFRESH_TOKEN
            - OAUTH_ACCESS_TOKEN
            - PERSONAL_ACCESS_TOKEN
            - AUTHORIZATION_GRANT
            - SES_NOTIFICATIONS
            - QUARANTINED_EMAILS
            - FEATURE_STATUS
            - MATERIALIZED_VIEW_ID
            - MATERIALIZED_VIEW_SOURCE_TABLE
            - PRINCIPAL_OIDC_BINDING
            - OTP_SECRET
            - OTP_RECOVERY_CODE
            - TWO_FA_STATUS
            - WEBHOOK
            - WEBHOOK_VERIFICATION
            - WEBHOOK_ALLOWED_DOMAIN
            - AGENT_REGISTRATION
            - AGENT_SESSION
            - TOS_REQUIREMENTS
            - TOS_AGREEMENT
            - PROJECT_STORAGE_DATA
            - PROJECT_STORAGE_LIMIT
            - GRID_SESSION
            - GRID_REPLICA
            - GRID_CONNECTION
            - GRID_PATCH
            - CURATION_TASK
            - USER_STATUS
            - RECORDSET_VALIDATION_STATS
            - CHANGE
        checksum:
          type: string
      description: Table checksum (CHECKSUM TABLE) for migration type 'type'
      required:
        - concreteType
    org.sagebionetworks.repo.model.schema.CreateSchemaResponse:
      type: object
      properties:
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.schema.CreateSchemaResponse
        newVersionInfo:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.schema.JsonSchemaVersionInfo'
          description: Information about a single version of a JSON schema.
        validationSchema:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.schema.JsonSchema'
          description: 'The JSON schema is defined by: <a href="https://json-schema.org/">json-schema.org</a>, specifically draft-07.  Only features listed here are currently supported.'
      description: The response of a create JsonSchema request.
      required:
        - concreteType
    org.sagebionetworks.repo.model.table.View:
      type: object
      properties:
        name:
          type: string
          description: 'The name of this entity.  Must be 256 characters or less. Names may only contain: letters, numbers, spaces, underscores, hyphens, periods, plus signs, apostrophes, and parentheses'
        description:
          type: string
          description: The description of this entity.  Must be 1000 characters or less.
        id:
          type: string
          description: The unique immutable ID for this entity.  A new ID will be generated for new Entities.  Once issued, this ID is guaranteed to never change or be re-issued
        etag:
          type: string
          description: Synapse employs an Optimistic Concurrency Control (OCC) scheme to handle concurrent updates. Since the E-Tag changes every time an entity is updated it is used to detect when a client's current representation of an entity is out-of-date.
        createdOn:
          type: string
          description: The date this entity was created.
        modifiedOn:
          type: string
          description: The date this entity was last modified.
        createdBy:
          type: string
          description: The ID of the user that created this entity.
        modifiedBy:
          type: string
          description: The ID of the user that last modified this entity.
        parentId:
          type: string
          description: The ID of the Entity that is the parent of this Entity.
        concreteType:
          type: string
          description: Indicates which implementation of Entity this object represents.  The value is the fully qualified class name, e.g. org.sagebionetworks.repo.model.FileEntity.
        versionNumber:
          type: integer
          description: The version number issued to this version on the object.
          format: int32
        versionLabel:
          type: string
          description: The version label for this entity
        versionComment:
          type: string
          description: The version comment for this entity
        isLatestVersion:
          type: boolean
          description: If this is the latest version of the object.
        columnIds:
          type: array
          items:
            type: string
          description: The list of ColumnModel IDs that define the schema of the object.
        isSearchEnabled:
          type: boolean
          description: When creating or updating a table or view specifies if full text search should be enabled.  Note that enabling full text search might slow down the indexing of the table or view.
      description: A view of objects within a scope
      oneOf:
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.SubmissionView'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.DatasetCollection'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.EntityView'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.Dataset'
      required:
        - concreteType
      discriminator:
        propertyName: concreteType
    org.sagebionetworks.repo.model.TeamHeader:
      type: object
      properties:
        id:
          type: string
          description: The id of the Team.
        name:
          type: string
          description: The name of the Team.
      description: JSON schema for TeamHeader POJO
    org.sagebionetworks.repo.model.grid.query.ValidationOperator:
      type: string
      enum:
        - LIKE
        - NOT_LIKE
    org.sagebionetworks.repo.model.Versionable:
      type: object
      properties:
        versionNumber:
          type: integer
          description: The version number issued to this version on the object.
          format: int32
      description: JSON schema for Versionable interface
      oneOf:
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.DatasetCollection'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.EntityView'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.VirtualTable'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.RecordSet'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.SelfSignAccessRequirement'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.ACTAccessRequirement'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.FileEntity'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.TableEntity'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.PostMessageContentAccessRequirement'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.SubmissionView'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.TermsOfUseAccessRequirement'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.ManagedACTAccessRequirement'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.MaterializedView'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.LockAccessRequirement'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.Dataset'
      discriminator:
        propertyName: concreteType
    org.sagebionetworks.repo.model.portals.Portal:
      type: object
      properties:
        id:
          type: string
          description: The unique ID issued for this Portal. Generated by Synapse
        etag:
          type: string
          description: For Optimistic Concurrency Control (OCC).
        name:
          type: string
          description: The name of the portal, must be unique.
        url:
          type: string
          description: The base URL of the portal, must be unique.
        createdBy:
          type: string
          description: The ID of the user that created the portal.
        createdOn:
          type: string
          description: The date time this Portal was first created
        modifiedBy:
          type: string
          description: The ID of the user that updated the portal.
        modifiedOn:
          type: string
          description: The date time this POrtal was last updated.
      description: JSON schema for a Synapse Portal.
    org.sagebionetworks.repo.model.table.CsvTableDescriptor:
      type: object
      properties:
        separator:
          type: string
          description: The delimiter to be used for separating entries in the resulting file. The default character ',' will be used if this is not provided by the caller.  For tab-separated values use '\t'
        quoteCharacter:
          type: string
          description: The character to be used for quoted elements in the resulting file.  The default character '"' will be used if this is not provided by the caller.
        escapeCharacter:
          type: string
          description: The escape character to be used for escaping a separator or quote in the resulting file. The default character '\\' will be used if this is not provided by the caller.
        lineEnd:
          type: string
          description: The line feed terminator to be used for the resulting file.  The default value of '\n' will be used if this is not provided by the caller.
        isFirstLineHeader:
          type: boolean
          description: Is the first line a header?  The default value of 'true' will be used if this is not provided by the caller.
      description: The description of a csv for upload or download.
    org.sagebionetworks.repo.model.DataTypeResponse:
      type: object
      properties:
        objectId:
          type: string
          description: The ID of the object.
        objectType:
          type: string
          description: JSON enum for the types of objects in Synapse.
          enum:
            - ENTITY
            - ENTITY_CONTAINER
            - PRINCIPAL
            - ACTIVITY
            - EVALUATION
            - EVALUATION_ROUND
            - SUBMISSION
            - EVALUATION_SUBMISSIONS
            - FILE
            - MESSAGE
            - WIKI
            - FAVORITE
            - ACCESS_REQUIREMENT
            - ACCESS_APPROVAL
            - TEAM
            - TABLE
            - ACCESS_CONTROL_LIST
            - PROJECT_SETTING
            - VERIFICATION_SUBMISSION
            - CERTIFIED_USER_PASSING_RECORD
            - FORUM
            - THREAD
            - REPLY
            - FORM_GROUP
            - ORGANIZATION
            - FORM_DATA
            - ENTITY_VIEW
            - USER_PROFILE
            - DATA_ACCESS_REQUEST
            - DATA_ACCESS_SUBMISSION
            - DATA_ACCESS_SUBMISSION_STATUS
            - MEMBERSHIP_INVITATION
            - JSON_SCHEMA
            - JSON_SCHEMA_DEPENDANT
            - DATASET
            - DATASET_COLLECTION
            - THREAD_VIEW
            - MATERIALIZED_VIEW
            - VIRTUAL_TABLE
            - TABLE_STATUS_EVENT
            - DATA_ACCESS_SUBMISSION_EVENT
            - FILE_EVENT
            - QUERY_CACHE_HIT
            - PROJECT_STORAGE_EVENT
            - REPLICATED_EVENT
            - PORTAL
            - OAUTH_CLIENT
        dataType:
          type: string
          description: Enumeration of data types the describe the contents of objects like Tables and Files.
          enum:
            - SENSITIVE_DATA
            - OPEN_DATA
        updatedBy:
          type: string
          description: The user that last updated this object's DataType.
        updatedOn:
          type: string
          description: The date this object's DataType was last updated.
      description: Response for an Object's DataType.
    org.sagebionetworks.repo.model.auth.TermsOfServiceAgreement:
      type: object
      properties:
        agreedOn:
          type: string
          description: The date/time when the user signed the version of the TOS.
        version:
          type: string
          description: The version that the user agreed on.
      description: Information about the user agreement for a specific version of the TOS
    org.sagebionetworks.repo.model.registry.RenameData:
      type: object
      properties:
        entityTypeName:
          type: string
          description: The name of the entity with a field to rename.
        oldFieldName:
          type: string
          description: The old name of the field that is being renamed.
        newFieldName:
          type: string
          description: The new name of the field.
      description: Rename datat
    org.sagebionetworks.repo.model.dataaccess.BasicAccessRequirementStatus:
      type: object
      properties:
        accessRequirementId:
          type: string
          description: The ID of the requested AccessRequirement.
        concreteType:
          type: string
          description: Indicates which implementation of AccessRequirementStatus this object represents.
          enum:
            - org.sagebionetworks.repo.model.dataaccess.BasicAccessRequirementStatus
        isApproved:
          type: boolean
          description: True if there is an AccessApproval for the user for the given AccessRequirement.
        expiredOn:
          type: string
          description: The date that the user no longer have access to the data.
      description: The status of a user meeting a TermsOfUseAccessRequirement.
      required:
        - concreteType
    org.sagebionetworks.repo.model.registry.EntityTypeMigrationSpec:
      type: object
      properties:
        entityType:
          type: string
          description: The type of entity
        fields:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.registry.FieldMigrationSpec'
            description: Metadata to describe the migration of a generic field
      description: Metadata to describe the migration of an entity type
    org.sagebionetworks.repo.model.message.cloudmailin.Message:
      type: object
      properties:
        envelope:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.message.cloudmailin.Envelope'
          description: Message Envelope
        headers:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.message.cloudmailin.Headers'
          description: The headers from the email message.
        plain:
          type: string
          description: Message body, as plain text.
        html:
          type: string
          description: Message body, as html.
        reply_plain:
          type: string
          description: Message reply if found.
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.message.cloudmailin.Attachment'
            description: Message Attachment
          description: Attachments to the message.
      description: JSON schema for the CloudMainIn message format
    org.sagebionetworks.repo.model.dataaccess.AccessorGroup:
      type: object
      properties:
        accessRequirementId:
          type: string
          description: The ID of an AccessRequirement.
        accessorIds:
          type: array
          items:
            type: string
        submitterId:
          type: string
          description: The ID of the submitter.
        expiredOn:
          type: string
          description: The date this group will be expired.
      description: A group of accessors who gained access by the same submitter.
    org.sagebionetworks.repo.model.oauth.OIDCAuthorizationRequest:
      type: object
      properties:
        clientId:
          type: string
          description: ID of the client requesting authorization
        scope:
          type: string
          description: space-separated list of scopes
        claims:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.oauth.OIDCClaimsRequest'
          description: Stores OIDC claims and details in accordance with <a href="https://openid.net/specs/openid-connect-core-1_0.html#ClaimsParameter">OIDC Core 1.0 Claims Request</a>. The keys used in these maps are <a href="${org.sagebionetworks.repo.model.oauth.OIDCClaimName}">OIDCClaimName</a>s
        responseType:
          type: string
          description: The OAuth 2.0 response types supported by Synapse
          enum:
            - code
        redirectUri:
          type: string
          description: URI to which the user agent is to be redirected
        nonce:
          type: string
          description: Optional value used to associate a Client session with an ID Token, and to mitigate replay attacks. The value is passed through unmodified from the Authorization Request to the ID Token.
        userId:
          type: string
          description: ID of the user approving this request (set by server)
        authenticatedAt:
          type: string
          description: Timestamp marking when approving user was authenticated (set by server)
        authorizedAt:
          type: string
          description: Timestamp marking when authorization was approved (set by server)
      description: Content of an authorization request
    org.sagebionetworks.repo.model.dataaccess.SubmissionOrder:
      type: string
      enum:
        - CREATED_ON
        - MODIFIED_ON
    org.sagebionetworks.repo.model.search.FacetTypeNames:
      type: string
      enum:
        - LITERAL
        - DATE
        - CONTINUOUS
    org.sagebionetworks.repo.model.registry.EntityRegistry:
      type: object
      properties:
        entityTypes:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.registry.EntityTypeMetadata'
            description: Metadata about entities
          description: The full path of the entity schema.
      description: Metadata about entities
    org.sagebionetworks.repo.model.search.Hit:
      type: object
      properties:
        id:
          type: string
          description: The unique immutable ID for this entity.  A new ID will be generated for new Entities.  Once issued, this ID is guaranteed to never change or be re-issued
        etag:
          type: string
          description: Synapse employs an Optimistic Concurrency Control (OCC) scheme to handle concurrent updates. Since the E-Tag changes every time an entity is updated it is used to detect when a client's current representation of an entity is out-of-date.
        name:
          type: string
          description: The name of this entity
        alias:
          type: string
          description: The alias of this entity
        path:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.EntityPath'
          description: All entities in this Entity's path
        description:
          type: string
          description: The description of this entity.
        node_type:
          type: string
          description: The type of this entity. Corresponds to an (<a href="${org.sagebionetworks.repo.model.EntityType}">EntityType</a>) value.
        created_on:
          type: integer
          description: The seconds since epoch date this entity was created.
          format: int32
        modified_on:
          type: integer
          description: The seconds since epoch date this entity was last modified.
          format: int32
        created_by:
          type: string
          description: The user that created this entity.
        modified_by:
          type: string
          description: The user that last modified this entity.
        diagnosis:
          type: string
          description: The result of a medical investigation to identify a disorder from its signs and symptoms.
        tissue:
          type: string
          description: Type of tissue for the samples in this entity.
        consortium:
          type: string
          description: The name of the consortium
        organ:
          type: string
          description: A unique macroscopic (gross) anatomic structure that performs specific functions. It is composed of various tissues. An organ is part of an anatomic system or a body region.
      description: JSON schema for a Hit in the search results.  Each Hit contains a subset of entity data.
    org.sagebionetworks.repo.model.v2.wiki.V2WikiHistorySnapshot:
      type: object
      properties:
        version:
          type: string
          description: The version of this snapshot in the wiki's history.
        modifiedOn:
          type: string
          description: The timestamp when this modification/snapshot took place.
        modifiedBy:
          type: string
          description: The id of the user that made this modification.
      description: A WikiHistorySnapshot contains basic information about an update to a WikiPage.
    org.sagebionetworks.repo.model.message.MessageRecipientSetInterface:
      type: object
      properties:
        recipients:
          type: array
          items:
            type: string
          description: The unique identifiers of the intended recipients of a message
          uniqueItems: true
      description: Contains a set of IDs of the intended recipients of a message
      oneOf:
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.message.MessageRecipientSet'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.message.MessageToUser'
      discriminator:
        propertyName: concreteType
    org.sagebionetworks.repo.model.table.SubmissionView:
      type: object
      properties:
        name:
          type: string
          description: 'The name of this entity.  Must be 256 characters or less. Names may only contain: letters, numbers, spaces, underscores, hyphens, periods, plus signs, apostrophes, and parentheses'
        description:
          type: string
          description: The description of this entity.  Must be 1000 characters or less.
        id:
          type: string
          description: The unique immutable ID for this entity.  A new ID will be generated for new Entities.  Once issued, this ID is guaranteed to never change or be re-issued
        etag:
          type: string
          description: Synapse employs an Optimistic Concurrency Control (OCC) scheme to handle concurrent updates. Since the E-Tag changes every time an entity is updated it is used to detect when a client's current representation of an entity is out-of-date.
        createdOn:
          type: string
          description: The date this entity was created.
        modifiedOn:
          type: string
          description: The date this entity was last modified.
        createdBy:
          type: string
          description: The ID of the user that created this entity.
        modifiedBy:
          type: string
          description: The ID of the user that last modified this entity.
        parentId:
          type: string
          description: The ID of the Entity that is the parent of this Entity.
        concreteType:
          type: string
          description: Indicates which implementation of Entity this object represents.  The value is the fully qualified class name, e.g. org.sagebionetworks.repo.model.FileEntity.
          enum:
            - org.sagebionetworks.repo.model.table.SubmissionView
        versionNumber:
          type: integer
          description: The version number issued to this version on the object.
          format: int32
        versionLabel:
          type: string
          description: The version label for this entity
        versionComment:
          type: string
          description: The version comment for this entity
        isLatestVersion:
          type: boolean
          description: If this is the latest version of the object.
        columnIds:
          type: array
          items:
            type: string
          description: The list of ColumnModel IDs that define the schema of the object.
        isSearchEnabled:
          type: boolean
          description: When creating or updating a table or view specifies if full text search should be enabled.  Note that enabling full text search might slow down the indexing of the table or view.
        scopeIds:
          type: array
          items:
            type: string
          description: The list of container ids that define the scope of this view.
      description: A view of evaluation submissions whose scope is defined by the evaluation ids the submissions are part of. The user must have READ_PRIVATE_SUBMISSION access on each of the evaluations in the scope.
      required:
        - concreteType
    org.sagebionetworks.repo.model.message.UnsentMessageRange:
      type: object
      properties:
        lowerBound:
          type: integer
          description: The lower bound (inclusive) of the range of application change numbers to check.
          format: int32
        upperBound:
          type: integer
          description: The upper bound (inclusive) of the range of application change numbers to check.
          format: int32
      description: JSON schema for a range of change message numbers to recheck
    org.sagebionetworks.repo.model.download.ActionRequiredList:
      type: object
      properties:
        actions:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.download.Action'
            description: An action that the user must take in order to download a file.
          description: The list of actions
      description: Represents the list of required actions that the user will need to take in order to gain access to an entity for download.
    org.sagebionetworks.repo.model.v2.wiki.V2WikiMarkdownVersion:
      type: object
      properties:
        version:
          type: string
          description: The version of this snapshot in the wiki's history.
        title:
          type: string
          description: The title of the wiki.
        markdownFileHandleId:
          type: string
          description: The id of the S3FileHandle that helps locate the markdown file in S3.
        attachmentFileHandleIds:
          type: array
          items:
            type: string
          description: The list of attachment file handle ids of this page for this version.
      description: A V2WikiMarkdownVersion contains the markdown file handle id and title of a specific version of a V2WikiPage
    org.sagebionetworks.repo.model.annotation.DoubleAnnotation:
      type: object
      properties:
        key:
          type: string
          description: The key of this Annotation
        isPrivate:
          type: boolean
          description: Flag denoting whether this Annotation should be private.
        value:
          type: number
          description: The value of this Annotation
      description: An Annotation containing a Double value
    org.sagebionetworks.repo.model.schema.Organization:
      type: object
      properties:
        id:
          type: string
          description: The Synapse identifier issued to the Organization.
        name:
          type: string
          description: The name of the organization servers as the root for each schema's $id managed under an organization, and each name must be unique.
        createdOn:
          type: string
          description: The date this Organization was created.
        createdBy:
          type: string
          description: The ID of the user that created this Organization.
      description: The first step in creating new type schema in Synapse is to setup and configure an organization. The name of the organization serves as the root for each schema's $id managed by that organization.  The organization name 'org.sagebionetworks' is reserved for the core Synapse model objects.   Each organization also has an Access Control List (ACL) that controls who can add schemas to an organization.  All schemas created under an Organization will be considered publicly readable and reference-able. Organizations are immutable
    org.sagebionetworks.repo.model.download.RequestDownload:
      type: object
      properties:
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.download.RequestDownload
        benefactorId:
          type: integer
          description: The benefactor is the ID of the Entity with the ACL that controls access to one or more files.
          format: int32
      description: In order to download a one or more files, the user will need to be granted the 'DOWNLOAD' permission.
      required:
        - concreteType
    org.sagebionetworks.repo.model.dataaccess.OpenSubmission:
      type: object
      properties:
        numberOfSubmittedSubmission:
          type: integer
          description: The number of submitted Submission.
          format: int32
        accessRequirementId:
          type: string
          description: The ID of the ACTAccessRequirement.
      description: This object stores information about the number of submitted Submissions for a single ACTAccessRequirement.
    org.sagebionetworks.evaluation.model.UserEvaluationPermissions:
      type: object
      properties:
        canChangePermissions:
          type: boolean
          description: Can the user change the permissions of this evaluation?
        canView:
          type: boolean
          description: Can the user view this evaluation?
        canPublicRead:
          type: boolean
          description: Is this evaluation considered public?
        canEdit:
          type: boolean
          description: Can the user edit this evaluation?
        canDelete:
          type: boolean
          description: Can the user delete this evaluation?
        canParticipate:
          type: boolean
          description: This field is deprecated and should not being used.
        canSubmit:
          type: boolean
          description: Can the user submit to this evaluation?
        canViewPrivateSubmissionStatusAnnotations:
          type: boolean
          description: Can the user view private Annotations on SubmissionStatuses for this evaluation?
        canEditSubmissionStatuses:
          type: boolean
          description: Can the user update SubmissionStatuses for this evaluation?
        canDeleteSubmissions:
          type: boolean
          description: Can the user view delete Submissions from this evaluation?
        ownerPrincipalId:
          type: integer
          description: The principal ID of the evaluation's owner (i.e. the evaluation's 'createdBy')
          format: int32
      description: The permission a User has for a given Evaluation
    PaginatedResultsOfPassingRecord:
      type: object
      properties:
        totalNumberOfResults:
          type: integer
          description: Calculating the actual totalNumberOfResults is not longer supported. Therefore, for each page, the totalNumberOfResults is estimated using the current page, limit, and offset. When the page size equals the limit, the totalNumberOfResults will be offset+pageSize+ 1. Otherwise, the totalNumberOfResults will be offset+pageSize.
          format: int32
        results:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.quiz.PassingRecord'
    org.sagebionetworks.repo.model.download.DownloadListManifestRequest:
      type: object
      properties:
        concreteType:
          type: string
          description: 'Required. For this type the value should be: ''org.sagebionetworks.repo.model.download.DownloadListManifestRequest'''
          enum:
            - org.sagebionetworks.repo.model.download.DownloadListManifestRequest
        csvTableDescriptor:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.CsvTableDescriptor'
          description: The description of a csv for upload or download.
      description: Start an asynchronous job to generate a metadata manifest CSV of the available files on the user's download list.
      required:
        - concreteType
    org.sagebionetworks.repo.model.table.ColumnModelInterface:
      type: object
      properties:
        name:
          type: string
          description: The display name of the column
        columnType:
          type: string
          description: The column type determines the type of data that can be stored in a column. Switching between types (using <a href="${POST.entity.id.table.transaction.async.start}">a transaction</a> with <a href="${org.sagebionetworks.repo.model.table.TableUpdateTransactionRequest}">TableUpdateTransactionRequest</a> in the "changes" list) is generally allowed except for switching to "_LIST" suffixed types. In such cases, a new column must be created and data must be copied over manually
          enum:
            - STRING
            - DOUBLE
            - INTEGER
            - BOOLEAN
            - DATE
            - FILEHANDLEID
            - ENTITYID
            - SUBMISSIONID
            - EVALUATIONID
            - LINK
            - MEDIUMTEXT
            - LARGETEXT
            - USERID
            - STRING_LIST
            - INTEGER_LIST
            - BOOLEAN_LIST
            - DATE_LIST
            - ENTITYID_LIST
            - USERID_LIST
            - JSON
        facetType:
          type: string
          description: Set to one of the enumerated values to indicate a column should be treated as a facet
          enum:
            - enumeration
            - range
      description: Common properties of all ColumnModel implementation
      oneOf:
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.ColumnModel'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.JsonSubColumnModel'
      discriminator:
        propertyName: concreteType
    org.sagebionetworks.repo.model.quiz.MultichoiceResponse:
      type: object
      properties:
        questionIndex:
          type: integer
          description: an index unique in the Quiz, used to refer to the question being answered
          format: int32
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.quiz.MultichoiceResponse
        answerIndex:
          type: array
          items:
            type: integer
            description: The indices of the MultichoiceAnswer objects
            format: int32
          uniqueItems: true
      description: The response to a multiple choice question
      required:
        - concreteType
    org.sagebionetworks.repo.model.table.ValidateDefiningSqlRequest:
      type: object
      properties:
        definingSql:
          type: string
          description: The Synapse SQL statement that defines the data in the table.
        entityType:
          type: string
          description: Type of the entity containing definingSql
          enum:
            - materializedview
            - virtualtable
      description: The request body for validateDefiningSql
    org.sagebionetworks.repo.model.query.QueryTableResults:
      type: object
      properties:
        headers:
          type: array
          items:
            type: string
          description: The ordered list of column headers (attribute names).
        rows:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.query.Row'
            description: A simple list of Strings to store query results about a single object.
          description: The ordered list of row data. Each row corresponds to one object.
        totalNumberOfResults:
          type: integer
          description: The total number of objects in the system which match the submitted query.
          format: int32
      description: An object to store the results of a Synapse Query. Results are stored in row-major tabular format.
    org.sagebionetworks.repo.model.statistics.ObjectStatisticsRequest:
      type: object
      properties:
        concreteType:
          type: string
          description: The type identifying the concrete request
        objectId:
          type: string
          description: The id of the object for which this request is targeted on
      description: Common request type containing the specifications of the request in order to retrieve statistics about specific objects
      oneOf:
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.statistics.ProjectFilesStatisticsRequest'
      required:
        - concreteType
      discriminator:
        propertyName: concreteType
    org.sagebionetworks.repo.model.download.ActionRequiredResponse:
      type: object
      properties:
        concreteType:
          type: string
          description: Will indicate the full package name of the response type.
          enum:
            - org.sagebionetworks.repo.model.download.ActionRequiredResponse
        page:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.download.ActionRequiredCount'
            description: Represents a single action that the user will need to take in order to download one or more files.
          description: The page of ActionRequiredCount
        nextPageToken:
          type: string
          description: When provided, the nextPageToken indicates that there are more results.  Forward this token to the next request to get the next page.
      description: Represents a single page of actions that the user will need to take in order to gain access to one or more files on their download list.
      required:
        - concreteType
    org.sagebionetworks.repo.model.search.Facet:
      type: object
      properties:
        name:
          type: string
          description: The name of this facet
        type:
          type: string
          description: The type of this facet
          enum:
            - LITERAL
            - DATE
            - CONTINUOUS
        min:
          type: integer
          description: The minimum value of the facet values found, if continuous
          format: int32
        max:
          type: integer
          description: The maximum value of the facet values found, if continuous
          format: int32
        constraints:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.search.FacetConstraint'
            description: JSON schema for a Facet Constraint for a particular facet in the search results.
          description: The list of constraints for this facet
      description: JSON schema for a continuous or literal value Facet found in the search results.
    org.sagebionetworks.repo.model.docker.RegistryEventSource:
      type: object
      properties:
        addr:
          type: string
        instanceID:
          type: string
    org.sagebionetworks.repo.model.annotation.v2.AnnotationsValueType:
      type: string
      enum:
        - STRING
        - DOUBLE
        - LONG
        - TIMESTAMP_MS
        - BOOLEAN
    org.sagebionetworks.repo.model.table.RowSelection:
      type: object
      properties:
        tableId:
          type: string
          description: The ID of the TableEntity than owns these rows (optional if supplied by the REST command)
        etag:
          type: string
          description: This should be set to the current etag or this selection (the etag returned by a query, or the current etag of the table).
        rowIds:
          type: array
          items:
            type: integer
            format: int32
          description: Each row id of this list refers to a single row of a TableEntity.
      description: Represents a selection of rows of a TableEntity
    org.sagebionetworks.repo.model.project.ExternalGoogleCloudStorageLocationSetting:
      type: object
      properties:
        concreteType:
          type: string
          description: Indicates which implementation this object represents.
          enum:
            - org.sagebionetworks.repo.model.project.ExternalGoogleCloudStorageLocationSetting
        storageLocationId:
          type: integer
          description: The unique ID for this storage location
          format: int32
        uploadType:
          type: string
          description: The enumeration of possible upload types.
          enum:
            - S3
            - GOOGLECLOUDSTORAGE
            - SFTP
            - HTTPS
            - PROXYLOCAL
            - NONE
        banner:
          type: string
          description: The banner text to display to a user every time a file is uploaded. This field is optional.
        description:
          type: string
          description: A description of the storage location. This description is shown when a user has to choose which upload destination to use.
        etag:
          type: string
          description: Synapse employs an Optimistic Concurrency Control (OCC) scheme to handle concurrent updates. Since the E-Tag changes every time a Project Setting is updated it is used to detect when a client's current representation of a Project Setting is out-of-date.
        createdOn:
          type: string
          description: The date this storage location setting was created.
        createdBy:
          type: integer
          description: The ID of the user that created this storage location setting.
          format: int32
        bucket:
          type: string
          description: The bucket name
        baseKey:
          type: string
          description: the optional base key, which acts as a prefix or a base folder
      description: The external upload destination setting contains information to generate an external Google Cloud Storage upload destination connected with Synapse.  For details on how to create a custom Google Cloud storage location in the web client, see <a href="https://help.synapse.org/docs/Custom-Storage-Locations.2048327803.html">Custom Storage Locations</a>
      required:
        - bucket
        - concreteType
    org.sagebionetworks.repo.model.principal.AliasCheckRequest:
      type: object
      properties:
        alias:
          type: string
          description: The alias to check
        type:
          type: string
          description: The enumeration of the possible alias types that can be bound to a principal.  Note, these names must match those in AliasEnum. For an OAuthProvider type the matching alias is prefixed with USER_
          enum:
            - USER_NAME
            - TEAM_NAME
            - USER_EMAIL
            - USER_OPEN_ID
            - USER_ORCID
      description: Request to check if an alias is available.
    PaginatedResultsOfSubmissionBundle:
      type: object
      properties:
        totalNumberOfResults:
          type: integer
          description: Calculating the actual totalNumberOfResults is not longer supported. Therefore, for each page, the totalNumberOfResults is estimated using the current page, limit, and offset. When the page size equals the limit, the totalNumberOfResults will be offset+pageSize+ 1. Otherwise, the totalNumberOfResults will be offset+pageSize.
          format: int32
        results:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.evaluation.model.SubmissionBundle'
    org.sagebionetworks.repo.model.table.AppendableRowSet:
      type: object
      properties:
        concreteType:
          type: string
        tableId:
          type: string
          description: The ID of the TableEntity than owns these rows
      description: Abstraction for a set of rows that can be appended to a table.
      oneOf:
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.PartialRowSet'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.RowSet'
      required:
        - concreteType
      discriminator:
        propertyName: concreteType
    org.sagebionetworks.repo.model.curation.CurationTask:
      type: object
      properties:
        taskId:
          type: integer
          description: The unique identifier issued to this task when it was created.
          format: int32
        dataType:
          type: string
          description: Will match the data type that a contributor plans to contribute.  The dataType must be unique within a project.
        projectId:
          type: string
          description: The synId of the project.
        instructions:
          type: string
          description: Instructions to the data contributor.
        etag:
          type: string
          description: Synapse employs an Optimistic Concurrency Control (OCC) scheme to handle concurrent updates. Since the E-Tag changes every time an entity is updated it is used to detect when a client's current representation of an entity is out-of-date.
        createdOn:
          type: string
        modifiedOn:
          type: string
        createdBy:
          type: string
        modifiedBy:
          type: string
        taskProperties:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.curation.CurationTaskProperties'
          description: The properties of a CurationTask
      description: 'The CurationTask provides instructions for a Data Contributor on how data or metadata of a specific type should be both added to a project and curated. There should be a CurationTask for each type of data/metadata to be contributed to a project. There are currently two categories of curation tasks: file-based metadata collection and record-based metadata collection. For each category there will be a concrete implementation of this interface. This interfaces defines the common fields of all CurationTasks.'
    org.sagebionetworks.repo.model.dataaccess.AccessorGroupRevokeRequest:
      type: object
      properties:
        accessRequirementId:
          type: string
          description: The ID of an AccessRequirement.
        submitterId:
          type: string
          description: The ID of the submitter.
      description: A request to revoke access of an accessor group. Accessors will be group by submitter and access requirement.
    PaginatedResultsOfQuizResponse:
      type: object
      properties:
        totalNumberOfResults:
          type: integer
          description: Calculating the actual totalNumberOfResults is not longer supported. Therefore, for each page, the totalNumberOfResults is estimated using the current page, limit, and offset. When the page size equals the limit, the totalNumberOfResults will be offset+pageSize+ 1. Otherwise, the totalNumberOfResults will be offset+pageSize.
          format: int32
        results:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.quiz.QuizResponse'
    org.sagebionetworks.repo.model.HasEtag:
      type: object
      properties:
        etag:
          type: string
          description: The current etag of this object.
      description: Implementation has an etag.
      oneOf:
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.SparseRowDto'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.PartialRow'
      discriminator:
        propertyName: concreteType
    org.sagebionetworks.repo.model.auth.AccessTokenGenerationRequest:
      type: object
      properties:
        scope:
          type: array
          items:
            type: string
            description: The OAuth 2.0 scopes supported by Synapse
            enum:
              - openid
              - email
              - profile
              - ga4gh_passport_v1
              - view
              - download
              - modify
              - authorize
              - offline_access
          description: The scopes that have been granted to this token
        userInfoClaims:
          type: object
          description: The OIDC claims that can be accessed using this token.
          additionalProperties:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.oauth.OIDCClaimsRequestDetails'
            description: <a href="https://openid.net/specs/openid-connect-core-1_0.html#ClaimsParameter">OIDC Core 1.0 Claims Request</a> value
        name:
          type: string
          description: A unique, typically human-readable name for the token
      description: Request body for creating a personal access token.
    org.sagebionetworks.repo.model.migration.CalculateOptimalRangeResponse:
      type: object
      properties:
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.migration.CalculateOptimalRangeResponse
        migrationType:
          type: string
          description: 'JSON enum for the types of objects which can be migrated. NOTE: The order of this enumeration determines the migration order.'
          enum:
            - PRINCIPAL
            - GROUP_MEMBERS
            - CREDENTIAL
            - AUTHENTICATED_ON
            - PRINCIPAL_ALIAS
            - NOTIFICATION_EMAIL
            - USER_PROFILE
            - STORAGE_LOCATION
            - FILE_HANDLE
            - MULTIPART_UPLOAD
            - MULTIPART_UPLOAD_PART_STATE
            - MULTIPART_UPLOAD_COMPOSER_PART_STATE
            - MESSAGE_CONTENT
            - MESSAGE_TO_USER
            - MESSAGE_RECIPIENT
            - MESSAGE_STATUS
            - COMMENT
            - V2_WIKI_PAGE
            - V2_WIKI_ATTACHMENT_RESERVATION
            - V2_WIKI_MARKDOWN
            - V2_WIKI_OWNERS
            - ACTIVITY
            - NODE
            - NODE_REVISION
            - NODE_ACCESS_REQUIRMENT
            - DOCKER_REPOSITORY_NAME
            - DOCKER_COMMIT
            - TEAM
            - MEMBERSHIP_INVITATION_SUBMISSION
            - MEMBERSHIP_REQUEST_SUBMISSION
            - EVALUATION
            - EVALUATION_ROUND
            - EVALUATION_SUBMISSIONS
            - SUBMISSION
            - SUBMISSION_CONTRIBUTOR
            - SUBMISSION_FILE
            - SUBMISSION_STATUS
            - PROJECT_SETTINGS
            - PROJECT_STATS
            - ACCESS_REQUIREMENT
            - ACCESS_REQUIREMENT_REVISION
            - ACCESS_APPROVAL
            - ACL
            - ACL_ACCESS
            - ACL_ACCESS_TYPE
            - FAVORITE
            - TRASH_CAN
            - PORTAL
            - DOI
            - CHALLENGE
            - CHALLENGE_TEAM
            - COLUMN_MODEL
            - BOUND_COLUMN_OWNER
            - BOUND_COLUMN_ORDINAL
            - TABLE_TRANSACTION
            - TABLE_TRANSACTION_TO_VERSION
            - TABLE_SEQUENCE
            - TABLE_CHANGE
            - QUIZ_RESPONSE
            - VERIFICATION_SUBMISSION
            - VERIFICATION_STATE
            - VERIFICATION_FILE
            - FORUM
            - DISCUSSION_THREAD
            - DISCUSSION_THREAD_VIEW
            - DISCUSSION_THREAD_ENTITY_REFERENCE
            - DISCUSSION_REPLY
            - SUBSCRIPTION
            - BROADCAST_MESSAGE
            - VIEW_TYPE
            - VIEW_SCOPE
            - VIEW_SNAPSHOT
            - THROTTLE_RULE
            - RESEARCH_PROJECT
            - DATA_ACCESS_REQUEST
            - DATA_ACCESS_SUBMISSION
            - DATA_ACCESS_SUBMISSION_SUBMITTER
            - DATA_ACCESS_SUBMISSION_STATUS
            - DATA_ACCESS_SUBMISSION_ACCESSOR_CHANGE
            - DATA_ACCESS_NOTIFICATIONS
            - FORM_GROUP
            - FORM_DATA
            - ORGANIZATION
            - JSON_SCHEMA
            - JSON_SCHEMA_BLOB
            - JSON_SCHEMA_VERSION
            - JSON_SCHEMA_LATEST_VERSION
            - JSON_SCHEMA_DEPENDENCY
            - JSON_SCHEMA_OBJECT_BINDING
            - DOWNLOAD_LIST
            - DOWNLOAD_LIST_ITEM
            - DOWNLOAD_ORDER
            - DOWNLOAD_LIST_2
            - DOWNLOAD_LIST_ITEM_2
            - DATA_TYPE
            - OAUTH_SECTOR_IDENTIFIER
            - OAUTH_CLIENT
            - OAUTH_REFRESH_TOKEN
            - OAUTH_ACCESS_TOKEN
            - PERSONAL_ACCESS_TOKEN
            - AUTHORIZATION_GRANT
            - SES_NOTIFICATIONS
            - QUARANTINED_EMAILS
            - FEATURE_STATUS
            - MATERIALIZED_VIEW_ID
            - MATERIALIZED_VIEW_SOURCE_TABLE
            - PRINCIPAL_OIDC_BINDING
            - OTP_SECRET
            - OTP_RECOVERY_CODE
            - TWO_FA_STATUS
            - WEBHOOK
            - WEBHOOK_VERIFICATION
            - WEBHOOK_ALLOWED_DOMAIN
            - AGENT_REGISTRATION
            - AGENT_SESSION
            - TOS_REQUIREMENTS
            - TOS_AGREEMENT
            - PROJECT_STORAGE_DATA
            - PROJECT_STORAGE_LIMIT
            - GRID_SESSION
            - GRID_REPLICA
            - GRID_CONNECTION
            - GRID_PATCH
            - CURATION_TASK
            - USER_STATUS
            - RECORDSET_VALIDATION_STATS
            - CHANGE
        ranges:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.migration.IdRange'
            description: A range of IDs
          description: List of object IDs to delete
      description: Results for a backup type job.
      required:
        - concreteType
    org.sagebionetworks.repo.model.schema.ListJsonSchemaVersionInfoRequest:
      type: object
      properties:
        organizationName:
          type: string
          description: The name of the Organization.
        schemaName:
          type: string
          description: The name of the JsonSchema to list versions to list schemas for.
        nextPageToken:
          type: string
          description: Forward the returned 'nextPageToken' to get the next page of results.
      description: Request to get a single page of schema version metadata for the given organization and schema name.
    org.sagebionetworks.repo.model.table.TableSchemaChangeRequest:
      type: object
      properties:
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.table.TableSchemaChangeRequest
        entityId:
          type: string
        changes:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.ColumnChange'
            description: Describes a change from one column to another.
          description: List of changes that describes column additions, deletions, and updates
        orderedColumnIds:
          type: array
          items:
            type: string
          description: 'Optional: Used to set the order of columns for this table. If this list is provided it must include the IDs of each column that will be in the schema after the changes of this request are applied.'
      description: An AsynchronousRequestBody to change the schema of a table.
      required:
        - concreteType
    org.sagebionetworks.repo.model.AccessApproval:
      type: object
      properties:
        id:
          type: integer
          description: The unique immutable ID
          format: int32
        etag:
          type: string
          description: Synapse employs an Optimistic Concurrency Control (OCC) scheme to handle concurrent updates. Since the E-Tag changes every time an entity is updated it is used to detect when a client's current representation of an object is out-of-date.
        createdOn:
          type: string
          description: The date this object was created.
        modifiedOn:
          type: string
          description: The date this object was last modified.
        createdBy:
          type: string
          description: The user that created this object.
        modifiedBy:
          type: string
          description: The user that last modified this object.
        requirementId:
          type: integer
          description: The ID of the Access Requirement that this object approves.
          format: int32
        requirementVersion:
          type: integer
          description: The version of the Access Requirement that this object approves.
          format: int32
        submitterId:
          type: string
          description: The user who performed the necessary action(s) to gain this approval.
        accessorId:
          type: string
          description: The ID of the principal (user or group) approved for access
        expiredOn:
          type: string
          description: The date this object will be expired.
        state:
          type: string
          description: JSON enum for the state of AccessApproval
          enum:
            - APPROVED
            - REVOKED
      description: JSON schema for AccessApproval POJO
    org.sagebionetworks.repo.model.file.FileHandleCopyRequest:
      type: object
      properties:
        originalFile:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.file.FileHandleAssociation'
          description: Describes an association of a FileHandle with another object.
        newFileName:
          type: string
          description: Set to override the original file name.
        newContentType:
          type: string
          description: Set to override the original content type.
      description: Request to make a copy of an existing FileHandle.
    org.sagebionetworks.repo.model.file.BulkFileDownloadRequest:
      type: object
      properties:
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.file.BulkFileDownloadRequest
        requestedFiles:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.file.FileHandleAssociation'
            description: Describes an association of a FileHandle with another object.
          description: The files to be included in the download.
        zipFileName:
          type: string
          description: Optional parameter to set the name of the resulting zip file.
        zipFileFormat:
          type: string
          description: Enumeration of all possible zip file formats produced by bulk file download worker.
          enum:
            - CommandLineCache
            - Flat
      description: Request for a bulk file download.
      required:
        - concreteType
    org.sagebionetworks.repo.model.migration.AsyncMigrationResponse:
      type: object
      properties:
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.migration.AsyncMigrationResponse
        adminResponse:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.migration.AdminResponse'
          description: Abstraction for Admin response
      description: Async Migration response will implement this type of AsynchronousResponseBody
      required:
        - concreteType
    org.sagebionetworks.repo.model.curation.ListCurationTaskResponse:
      type: object
      properties:
        page:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.curation.CurationTask'
            description: 'The CurationTask provides instructions for a Data Contributor on how data or metadata of a specific type should be both added to a project and curated. There should be a CurationTask for each type of data/metadata to be contributed to a project. There are currently two categories of curation tasks: file-based metadata collection and record-based metadata collection. For each category there will be a concrete implementation of this interface. This interfaces defines the common fields of all CurationTasks.'
        nextPageToken:
          type: string
          description: Forward this token to get the next page of results.
      description: A single page of CurationTasks.
    org.sagebionetworks.repo.model.MembershipRequest:
      type: object
      properties:
        id:
          type: string
          description: The id of the MembershipRequest.
        teamId:
          type: string
          description: The id of the Team to which the request is sent.
        userId:
          type: string
          description: The id of the user for whom membership is requested.
        message:
          type: string
          description: The request message (optional).
        expiresOn:
          type: string
          description: The date this MembershipRequest expires (optional).
        createdOn:
          type: string
          description: The date this MembershipRequest was created.
        createdBy:
          type: string
          description: The ID of the user that created this MembershipRequest.
      description: JSON schema for MembershipRequest POJO
    org.sagebionetworks.repo.model.oauth.OIDCClaimsRequest:
      type: object
      properties:
        userinfo:
          type: object
          description: The OIDC Claims that can be accessed by making a request to the userinfo endpoint
          additionalProperties:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.oauth.OIDCClaimsRequestDetails'
            description: <a href="https://openid.net/specs/openid-connect-core-1_0.html#ClaimsParameter">OIDC Core 1.0 Claims Request</a> value
        id_token:
          type: object
          description: The OIDC Claims that will be provided via an ID token by making a request to the token endpoint.
          additionalProperties:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.oauth.OIDCClaimsRequestDetails'
            description: <a href="https://openid.net/specs/openid-connect-core-1_0.html#ClaimsParameter">OIDC Core 1.0 Claims Request</a> value
      description: Stores OIDC claims and details in accordance with <a href="https://openid.net/specs/openid-connect-core-1_0.html#ClaimsParameter">OIDC Core 1.0 Claims Request</a>. The keys used in these maps are <a href="${org.sagebionetworks.repo.model.oauth.OIDCClaimName}">OIDCClaimName</a>s
    org.sagebionetworks.evaluation.model.Evaluation:
      type: object
      properties:
        id:
          type: string
          description: The unique immutable ID for this Evaluation.
        etag:
          type: string
          description: Synapse employs an Optimistic Concurrency Control (OCC) scheme to handle concurrent updates. The eTag changes every time an Evaluation is updated; it is used to detect when a client's copy of an Evaluation is out-of-date.
        name:
          type: string
          description: The name of this Evaluation
        description:
          type: string
          description: A text description of this Evaluation.
        ownerId:
          type: string
          description: The ID of the Synapse user who created this Evaluation.
        createdOn:
          type: string
          description: The date on which Evaluation was created.
        contentSource:
          type: string
          description: The Synapse ID of the Entity to which this Evaluation belongs, e.g. a reference to a Synapse project.
        submissionInstructionsMessage:
          type: string
          description: Message to display to users detailing acceptable formatting for Submissions to this Evaluation.
        submissionReceiptMessage:
          type: string
          description: Message to display to users upon successful submission to this Evaluation.
        quota:
          $ref: '#/components/schemas/org.sagebionetworks.evaluation.model.SubmissionQuota'
          description: 'DEPRECATED: use EvaluationRound APIs instead. No SubmissionQuota will be returned with the Evaluation. Any SubmissionQuotas submitted will be instead be converted into similar EvaluationRounds.'
      description: An Evaluation is the core object of the Evaluation API, used to support collaborative data analysis challenges in Synapse.
    org.sagebionetworks.repo.model.ChallengeTeam:
      type: object
      properties:
        id:
          type: string
          description: The ID of this ChallengeTeam object
        etag:
          type: string
          description: Synapse employs an Optimistic Concurrency Control (OCC) scheme to handle concurrent updates. Since the E-Tag changes every time an entity is updated it is used to detect when a client's current representation of an entity is out-of-date.
        challengeId:
          type: string
          description: The ID of the Challenge
        teamId:
          type: string
          description: The ID of the Team
        message:
          type: string
          description: A descriptive message for the Team in the context of the Challenge.  Limited to 500 characters.
      description: Relationship between a Challenge and registered Team
    org.sagebionetworks.repo.model.docker.DockerAuthorizationToken:
      type: object
      properties:
        token:
          type: string
          description: authorization Token for Docker Registry Access
      description: Authorization Token for Docker Registry Access
    org.sagebionetworks.repo.model.audit.NodeRecord:
      type: object
      properties:
        isPublic:
          type: boolean
        isRestricted:
          type: boolean
        isControlled:
          type: boolean
        benefactorId:
          type: string
        projectId:
          type: string
        effectiveArs:
          type: array
          items:
            type: integer
            format: int32
        versionHistory:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.VersionInfo'
            description: JSON schema for VersionInfo POJO
          description: The list of entity versions.
        annotations:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.annotation.v2.Annotations'
          description: Annotations are additional key-value pair metadata that are associated with an object.
        derivedAnnotations:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.annotation.v2.Annotations'
          description: Annotations are additional key-value pair metadata that are associated with an object.
        internalAnnotations:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.annotation.v2.Annotations'
          description: Annotations are additional key-value pair metadata that are associated with an object.
        projectStorageUsage:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.limits.ProjectStorageUsage'
          description: Provides information about file allocations and limits for each storage location associated with a single project.
        id:
          type: string
        name:
          type: string
        description:
          type: string
        parentId:
          type: string
        createdByPrincipalId:
          type: integer
          format: int32
        createdOn:
          type: string
        modifiedByPrincipalId:
          type: integer
          format: int32
        modifiedOn:
          type: string
        nodeType:
          type: string
          description: Type of the Entity
          enum:
            - project
            - folder
            - file
            - table
            - link
            - entityview
            - dockerrepo
            - submissionview
            - dataset
            - datasetcollection
            - materializedview
            - virtualtable
            - recordset
        eTag:
          type: string
        versionNumber:
          type: integer
          format: int32
        versionComment:
          type: string
        versionLabel:
          type: string
        isLatestVersion:
          type: boolean
        activityId:
          type: string
        fileHandleId:
          type: string
        columnModelIds:
          type: array
          items:
            type: string
        scopeIds:
          type: array
          items:
            type: string
          description: For FileVeiws, the list of IDs the define the scope of the view.
        items:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.EntityRef'
            description: Represents a reference to the id and version of an entity to be used in collections.
          description: For Datasets and Dataset Collections, the list of entity references the define the view.
        upsertKey:
          type: array
          items:
            type: string
          description: For RecordSet, one or more column names that define this upsert key.
        csvDescriptor:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.CsvTableDescriptor'
          description: The description of a csv for upload or download.
        reference:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.Reference'
          description: JSON schema for Reference POJO
        alias:
          type: string
        isSearchEnabled:
          type: boolean
          description: For table entities, specifies if the full text search index is enabled or not.
        definingSQL:
          type: string
          description: For materialized views and virtual tables, specifies the SQL defining the content of the table.
      description: Data record from a node object.
    org.sagebionetworks.repo.model.entitybundle.v2.EntityBundleCreate:
      type: object
      properties:
        entity:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.Entity'
          description: This is the base interface that all Entities implement.
        annotations:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.annotation.v2.Annotations'
          description: Annotations are additional key-value pair metadata that are associated with an object.
        accessControlList:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.AccessControlList'
          description: Contains list of principals who can access the data with the allowed types of access for each.
      description: Used to create Entity and associated metadata in a single transaction
    org.sagebionetworks.repo.model.table.DownloadFromTableRequest:
      type: object
      properties:
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.table.DownloadFromTableRequest
        entityId:
          type: string
        writeHeader:
          type: boolean
          description: Should the first line contain the columns names as a header in the resulting file?  Set to 'true' to include the headers else, 'false'.  The default value is 'true'.
        includeRowIdAndRowVersion:
          type: boolean
          description: Should the first two columns contain the row ID and row version?  The default value is 'true'.
        csvTableDescriptor:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.CsvTableDescriptor'
          description: The description of a csv for upload or download.
        fileName:
          type: string
          description: The optional name for the downloaded table.
        sql:
          type: string
          description: The SQL query string.
        additionalFilters:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.QueryFilter'
          description: Appends additional filters to the SQL query. These are applied before facets. Filters within the list have an AND relationship. If a WHERE clause already exists on the SQL query or facets are selected, it will also be ANDed with the query generated by these additional filters.
        selectedFacets:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.FacetColumnRequest'
            description: A set of values that have been selected for filtering in a faceted column
          description: The selected facet filters.
        includeEntityEtag:
          type: boolean
          description: 'Optional, default false. When true, a query results against views will include the Etag of each entity in the results.  Note: The etag is necessary to update Entities in the view.'
        selectFileColumn:
          type: integer
          description: The id of the column used to select file entities (e.g. to fetch the action required for download). The column needs to be an ENTITYID type column and be part of the schema of the underlying table/view.
          format: int32
        selectFileVersionColumn:
          type: integer
          description: The id of the column used as the version for selecting file entities when required (e.g. to add a materialized view query to the download cart with version enabled). The column needs to be an INTEGER type column and be part of the schema of the underlying table/view.
          format: int32
        offset:
          type: integer
          description: The optional offset into the results
          format: int32
        limit:
          type: integer
          description: The optional limit to the results
          format: int32
        sort:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.SortItem'
      description: A CSV table download request.
      required:
        - concreteType
    org.sagebionetworks.repo.model.RestrictionLevel:
      type: string
      enum:
        - OPEN
        - RESTRICTED_BY_TERMS_OF_USE
        - CONTROLLED_BY_ACT
    org.sagebionetworks.repo.model.docker.DockerRegistryEventList:
      type: object
      properties:
        events:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.docker.DockerRegistryEvent'
            description: https://godoc.org/github.com/docker/distribution/notifications#Event
          description: A list of events that occurred in a docker registry
      description: List of Registry Events
    org.sagebionetworks.repo.model.form.FormData:
      type: object
      properties:
        formDataId:
          type: string
          description: The system issued identifier that uniquely identifies this object.
        etag:
          type: string
          description: Will change whenever there is a change to the this data or its status.
        groupId:
          type: string
          description: The identifier of the group that manages this data. Required.
        name:
          type: string
          description: User provided name for this submission. Required.
        createdBy:
          type: string
          description: Id of the user that created this object
        createdOn:
          type: string
          description: The date this object was originally created.
        modifiedOn:
          type: string
          description: The date this object was last modified.
        dataFileHandleId:
          type: string
          description: The identifier of the data FileHandle for this object.
        submissionStatus:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.form.SubmissionStatus'
          description: The status of a a submitted FormData object.
      description: User's data gathered from a form template. All FormData belongs to a single FormGroup.
    org.sagebionetworks.repo.model.table.FacetColumnResultValueCount:
      type: object
      properties:
        value:
          type: string
          description: the value that is in a column
        count:
          type: integer
          description: the number of times the value appears in the column
          format: int32
        isSelected:
          type: boolean
          description: whether this facet was selected by the user
      description: A pair containing the value of a column and the number of times that value appears
    org.sagebionetworks.repo.model.RSSEntry:
      type: object
      properties:
        title:
          type: string
          description: The title of this entry
        date:
          type: string
          description: The date this entry was published
        author:
          type: string
          description: The author of this entry
        content:
          type: string
          description: The content of this entry.
        link:
          type: string
          description: The link to this entry.
      description: This contains items from an rss feed, and meta data about the rss feed itself
    PaginatedResultsOfTeam:
      type: object
      properties:
        totalNumberOfResults:
          type: integer
          description: Calculating the actual totalNumberOfResults is not longer supported. Therefore, for each page, the totalNumberOfResults is estimated using the current page, limit, and offset. When the page size equals the limit, the totalNumberOfResults will be offset+pageSize+ 1. Otherwise, the totalNumberOfResults will be offset+pageSize.
          format: int32
        results:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.Team'
    org.sagebionetworks.repo.model.RestrictableObjectType:
      type: string
      enum:
        - ENTITY
        - EVALUATION
        - TEAM
    org.sagebionetworks.repo.model.SelfSignAccessRequirement:
      type: object
      properties:
        versionNumber:
          type: integer
          description: The version number issued to this version on the object.
          format: int32
        id:
          type: integer
          description: The unique immutable ID.  Provided by the system, the user may not set this field.
          format: int32
        description:
          type: string
          description: Depricated. Replaced by name.
        name:
          type: string
          description: Name of the AR. Limited to 50 characters and must be unique. Required.
        etag:
          type: string
          description: Synapse employs an Optimistic Concurrency Control (OCC) scheme to handle concurrent updates. Since the E-Tag changes every time an entity is updated it is used to detect when a client's current representation of an object is out-of-date.
        createdOn:
          type: string
          description: The date this object was created. Provided by the system, the user may not set this field.
        modifiedOn:
          type: string
          description: The date this object was last modified. Provided by the system, the user may not set this field.
        createdBy:
          type: string
          description: The user that created this object.  Provided by the system, the user may not set this field.
        modifiedBy:
          type: string
          description: The user that last modified this object.  Provided by the system, the user may not set this field.
        subjectsDefinedByAnnotations:
          type: boolean
          description: Defaults to 'false'.  When 'true', the subjects controlled by this AR are defined by the the'_accessRequirementIds' annotations on individual entities.  This property is mutually exclusive with 'subjectIds'.  If this is set to 'true' then 'subjectIds' must be excluded or empty.
        subjectIds:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.RestrictableObjectDescriptor'
          description: The IDs of the items controlled by this Access Requirement when 'subjectsDefinedByAnnotations=false'. This property is mutually exclusive with 'subjectsDefinedByAnnotations'.  When 'subjectsDefinedByAnnotations=true' then this property must be empty or excluded.  Required when creating or updating and 'subjectsDefinedByAnnotations=false' or 'subjectsDefinedByAnnotations' is excluded.
        accessType:
          type: string
          description: The enumeration of possible permission.
          enum:
            - CREATE
            - READ
            - UPDATE
            - DELETE
            - CHANGE_PERMISSIONS
            - DOWNLOAD
            - UPLOAD
            - PARTICIPATE
            - SUBMIT
            - READ_PRIVATE_SUBMISSION
            - UPDATE_SUBMISSION
            - DELETE_SUBMISSION
            - TEAM_MEMBERSHIP_UPDATE
            - SEND_MESSAGE
            - CHANGE_SETTINGS
            - MODERATE
            - REVIEW_SUBMISSIONS
            - EXEMPTION_ELIGIBLE
        concreteType:
          type: string
          description: Indicates which type of AccessRequirement this object represents.  Provided by the system, the user may not set this field.
          enum:
            - org.sagebionetworks.repo.model.SelfSignAccessRequirement
        isCertifiedUserRequired:
          type: boolean
          description: If true, then accessor needs to be a Synapse Certified User to gain access.
        isValidatedProfileRequired:
          type: boolean
          description: If true, then accessor needs to have their Synapse Profile validated to gain access.
      description: JSON schema for Terms of Use Access Requirement, used for a 'tier 2' Access Requirement
      required:
        - concreteType
    org.sagebionetworks.repo.model.oauth.OAuthAccountCreationRequest:
      type: object
      properties:
        provider:
          type: string
          description: Supported OAuth providers
          enum:
            - GOOGLE_OAUTH_2_0
            - ORCID
        authenticationCode:
          type: string
          description: The authorization code passed with the redirectUrl after successful user authentication from a 3rd party OAuth provider.  This code is used by Synapse to lookup the user's information from the OAuthProvider.
        redirectUrl:
          type: string
          description: This must be the same redirect URL used to in the first step.  This parameter is required by Google but not by all oauth providers.
        userName:
          type: string
          description: The requested user name for the new account.
      description: Request to create an account, validated via OAuth
    org.sagebionetworks.repo.model.asynch.ReadOnlyRequestBody:
      type: object
      properties:
        concreteType:
          type: string
      description: Jobs that are read-only will implement this type of AsynchronousRequestBody
      oneOf:
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.migration.AsyncMigrationRequest'
      required:
        - concreteType
      discriminator:
        propertyName: concreteType
    org.sagebionetworks.repo.model.file.GoogleCloudFileHandle:
      type: object
      properties:
        id:
          type: string
          description: The ID of this FileHandle.  All references to this FileHandle will use this ID.  Synapse will generate this ID when the FileHandle is created.
        etag:
          type: string
          description: FileHandles are immutable from the perspective of the API.  The only field that can be change is the previewId.  When a new previewId is set, the etag will change.
        createdBy:
          type: string
          description: The ID Of the user that created this file.
        createdOn:
          type: string
          description: The date when this file was uploaded.
        modifiedOn:
          type: string
          description: The date when the file was modified. This is handled by the backend and cannot be modified.
        concreteType:
          type: string
          description: 'This is used to indicate the implementation of this interface. For example, an S3FileHandle should be set to: org.sagebionetworks.repo.model.file.S3FileHandle'
          enum:
            - org.sagebionetworks.repo.model.file.GoogleCloudFileHandle
        contentType:
          type: string
          description: 'Must be: http://en.wikipedia.org/wiki/Internet_media_type'
        contentMd5:
          type: string
          description: The file's content MD5.
        fileName:
          type: string
          description: The short, user visible name for this file.
        storageLocationId:
          type: integer
          description: The optional storage location descriptor
          format: int32
        contentSize:
          type: integer
          description: The size of the file in bytes.
          format: int32
        status:
          type: string
          description: The status of the file handle as computed by the backend. This value cannot be changed, any file handle that is not AVAILABLE should not be used.
          enum:
            - AVAILABLE
            - UNLINKED
            - ARCHIVED
        bucketName:
          type: string
          description: The name of the bucket where this file resides
        key:
          type: string
          description: The path or resource name for this object
        previewId:
          type: string
          description: If this file has a preview, then this will be the file ID of the preview.
        isPreview:
          type: boolean
          description: Whether or not this is a preview of another file
      description: A GoogleCloudFileHandle represents a file stored in Google Cloud Storage.
      required:
        - concreteType
    org.sagebionetworks.repo.model.docker.RegistryEventActor:
      type: object
      properties:
        name:
          type: string
          description: The name of the user who initiated the event.
    org.sagebionetworks.repo.model.migration.BackupTypeRequest:
      type: object
      properties:
        concreteType:
          type: string
        migrationType:
          type: string
          description: 'JSON enum for the types of objects which can be migrated. NOTE: The order of this enumeration determines the migration order.'
          enum:
            - PRINCIPAL
            - GROUP_MEMBERS
            - CREDENTIAL
            - AUTHENTICATED_ON
            - PRINCIPAL_ALIAS
            - NOTIFICATION_EMAIL
            - USER_PROFILE
            - STORAGE_LOCATION
            - FILE_HANDLE
            - MULTIPART_UPLOAD
            - MULTIPART_UPLOAD_PART_STATE
            - MULTIPART_UPLOAD_COMPOSER_PART_STATE
            - MESSAGE_CONTENT
            - MESSAGE_TO_USER
            - MESSAGE_RECIPIENT
            - MESSAGE_STATUS
            - COMMENT
            - V2_WIKI_PAGE
            - V2_WIKI_ATTACHMENT_RESERVATION
            - V2_WIKI_MARKDOWN
            - V2_WIKI_OWNERS
            - ACTIVITY
            - NODE
            - NODE_REVISION
            - NODE_ACCESS_REQUIRMENT
            - DOCKER_REPOSITORY_NAME
            - DOCKER_COMMIT
            - TEAM
            - MEMBERSHIP_INVITATION_SUBMISSION
            - MEMBERSHIP_REQUEST_SUBMISSION
            - EVALUATION
            - EVALUATION_ROUND
            - EVALUATION_SUBMISSIONS
            - SUBMISSION
            - SUBMISSION_CONTRIBUTOR
            - SUBMISSION_FILE
            - SUBMISSION_STATUS
            - PROJECT_SETTINGS
            - PROJECT_STATS
            - ACCESS_REQUIREMENT
            - ACCESS_REQUIREMENT_REVISION
            - ACCESS_APPROVAL
            - ACL
            - ACL_ACCESS
            - ACL_ACCESS_TYPE
            - FAVORITE
            - TRASH_CAN
            - PORTAL
            - DOI
            - CHALLENGE
            - CHALLENGE_TEAM
            - COLUMN_MODEL
            - BOUND_COLUMN_OWNER
            - BOUND_COLUMN_ORDINAL
            - TABLE_TRANSACTION
            - TABLE_TRANSACTION_TO_VERSION
            - TABLE_SEQUENCE
            - TABLE_CHANGE
            - QUIZ_RESPONSE
            - VERIFICATION_SUBMISSION
            - VERIFICATION_STATE
            - VERIFICATION_FILE
            - FORUM
            - DISCUSSION_THREAD
            - DISCUSSION_THREAD_VIEW
            - DISCUSSION_THREAD_ENTITY_REFERENCE
            - DISCUSSION_REPLY
            - SUBSCRIPTION
            - BROADCAST_MESSAGE
            - VIEW_TYPE
            - VIEW_SCOPE
            - VIEW_SNAPSHOT
            - THROTTLE_RULE
            - RESEARCH_PROJECT
            - DATA_ACCESS_REQUEST
            - DATA_ACCESS_SUBMISSION
            - DATA_ACCESS_SUBMISSION_SUBMITTER
            - DATA_ACCESS_SUBMISSION_STATUS
            - DATA_ACCESS_SUBMISSION_ACCESSOR_CHANGE
            - DATA_ACCESS_NOTIFICATIONS
            - FORM_GROUP
            - FORM_DATA
            - ORGANIZATION
            - JSON_SCHEMA
            - JSON_SCHEMA_BLOB
            - JSON_SCHEMA_VERSION
            - JSON_SCHEMA_LATEST_VERSION
            - JSON_SCHEMA_DEPENDENCY
            - JSON_SCHEMA_OBJECT_BINDING
            - DOWNLOAD_LIST
            - DOWNLOAD_LIST_ITEM
            - DOWNLOAD_ORDER
            - DOWNLOAD_LIST_2
            - DOWNLOAD_LIST_ITEM_2
            - DATA_TYPE
            - OAUTH_SECTOR_IDENTIFIER
            - OAUTH_CLIENT
            - OAUTH_REFRESH_TOKEN
            - OAUTH_ACCESS_TOKEN
            - PERSONAL_ACCESS_TOKEN
            - AUTHORIZATION_GRANT
            - SES_NOTIFICATIONS
            - QUARANTINED_EMAILS
            - FEATURE_STATUS
            - MATERIALIZED_VIEW_ID
            - MATERIALIZED_VIEW_SOURCE_TABLE
            - PRINCIPAL_OIDC_BINDING
            - OTP_SECRET
            - OTP_RECOVERY_CODE
            - TWO_FA_STATUS
            - WEBHOOK
            - WEBHOOK_VERIFICATION
            - WEBHOOK_ALLOWED_DOMAIN
            - AGENT_REGISTRATION
            - AGENT_SESSION
            - TOS_REQUIREMENTS
            - TOS_AGREEMENT
            - PROJECT_STORAGE_DATA
            - PROJECT_STORAGE_LIMIT
            - GRID_SESSION
            - GRID_REPLICA
            - GRID_CONNECTION
            - GRID_PATCH
            - CURATION_TASK
            - USER_STATUS
            - RECORDSET_VALIDATION_STATS
            - CHANGE
        aliasType:
          type: string
          description: The value to use as the alias in the XML migration backup file
          enum:
            - TABLE_NAME
            - MIGRATION_TYPE_NAME
        batchSize:
          type: integer
          description: The batch size determines the maxiumum number of rows that will be loaded into memory at one time.
          format: int32
      description: Abstract Request to create a migration backup.
      oneOf:
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.migration.BackupTypeRangeRequest'
      required:
        - concreteType
      discriminator:
        propertyName: concreteType
    org.sagebionetworks.repo.model.download.AvailableFilesRequest:
      type: object
      properties:
        concreteType:
          type: string
          description: 'Required. For this type the value should be: ''org.sagebionetworks.repo.model.download.AvailableFilesRequest'''
          enum:
            - org.sagebionetworks.repo.model.download.AvailableFilesRequest
        nextPageToken:
          type: string
          description: Forward the resulting nextPageToken from a previous request to get the next page of results.
        sort:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.download.Sort'
            description: Identifies both the field and direction for a single sort operation
          description: Optional. Defines how the query results should be sorted. If excluded a default sort will be used.
        filter:
          type: string
          description: Optional. Defines how the query results should be filtered. If excluded all available files will be returned.
          enum:
            - eligibleForPackaging
            - ineligibleForPackaging
      description: Request to get a single page of files from the user's download list for files that are currently available for download.
      required:
        - concreteType
    org.sagebionetworks.repo.model.message.multipart.MessageBody:
      type: object
      properties:
        plain:
          type: string
          description: Message body, as plain text.
        html:
          type: string
          description: Message body, as html.
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.message.multipart.Attachment'
            description: Multipart Message Attachment
          description: Attachments to the message.
      description: JSON schema for a multipart message body
    org.sagebionetworks.repo.model.file.BatchPresignedUploadUrlResponse:
      type: object
      properties:
        partPresignedUrls:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.file.PartPresignedUrl'
            description: A single pre-signed URL for uploading or coping a part of a multi-part request. Note that the headers in the signedHeaders property must be included in the PUT request that is sent to the pre-signed URL. In the case of a multipart copy, when sending the PUT request to the pre-signed URL the body of the request needs to be empty.
          description: List of part pre-signed URLs.
      description: Batch response of part pre-signed URLs.
    org.sagebionetworks.repo.model.grid.CreateGridRequest:
      type: object
      properties:
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.grid.CreateGridRequest
        initialQuery:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.Query'
        recordSetId:
          type: string
          description: When provided, the grid will be initialized using the CSV file stored for the given record set id. The grid columns will match the header of the CSV. Optional, if present the initialQuery cannot be included.
      description: Start a job to create a new Grid session.
      required:
        - concreteType
    org.sagebionetworks.evaluation.model.EvaluationRound:
      type: object
      properties:
        id:
          type: string
          description: The id of the EvaluationRound
        etag:
          type: string
          description: Synapse employs an Optimistic Concurrency Control (OCC) scheme to handle concurrent updates. The eTag changes every time an EvaluationRound is updated; it is used to detect when a client's copy of an Evaluation is out-of-date.
        evaluationId:
          type: string
          description: The Evaluation to which this EvaluationRound belongs
        roundStart:
          type: string
          description: The date/time at which the first round begins.
        roundEnd:
          type: string
          description: The date/time at which the round ends.
        limits:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.evaluation.model.EvaluationRoundLimit'
            description: Sets limits for maximum submissions in a SubmissionRound. Each limitType may only appear once in an EvaluationRound's list of limits
          description: Optional. Sets limits for maximum submissions in this round.
      description: Defines the duration of a round and sets limits for maximum submissions per round
      required:
        - evaluationId
        - roundStart
        - roundEnd
    org.sagebionetworks.repo.model.table.EntityUpdateResult:
      type: object
      properties:
        entityId:
          type: string
          description: The ID of the updated entity.
        failureMessage:
          type: string
          description: Failure message for unknown and illegal errors.
        failureCode:
          type: string
          description: If the Entity update failed, a failure code will be included.  Null if the update was successful
          enum:
            - NOT_FOUND
            - UNAUTHORIZED
            - CONCURRENT_UPDATE
            - ILLEGAL_ARGUMENT
            - UNKNOWN
      description: Result of a single Entity Update.
    org.sagebionetworks.repo.model.file.FileHandleArchivalRequest:
      type: object
      properties:
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.file.FileHandleArchivalRequest
        limit:
          type: integer
          description: The maximum number of file handles to tag for archival in a single job, defaults to 100000 if not supplied and can be at most 100000
          format: int32
      description: Request used to tag unlinked file handles for archival. Only administrator can perform this kind of job.
      required:
        - concreteType
    org.sagebionetworks.repo.model.oauth.OAuthRefreshTokenInformationList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.oauth.OAuthRefreshTokenInformation'
            description: OAuth 2.0 refresh token metadata. Note that the token itself may not be retrieved after it is issued to a client.
        nextPageToken:
          type: string
          description: The token to get the next page of results.
      description: Metadata for a paginated list of refresh token metadata that give OAuth 2.0 clients access to access a user's resources in Synapse.
    org.sagebionetworks.repo.model.agent.CreateAgentSessionRequest:
      type: object
      properties:
        agentAccessLevel:
          type: string
          description: Defines the level of data access that the agent will be given during a session.
          enum:
            - PUBLICLY_ACCESSIBLE
            - READ_YOUR_PRIVATE_DATA
            - WRITE_YOUR_PRIVATE_DATA
        agentRegistrationId:
          type: string
          description: Optional. When provided, the registered agent will be used for this session.  When excluded the default 'baseline' agent will be used.
        sessionContext:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.agent.SessionContext'
          description: Provides additional context for agent sessions.
      description: Information about a specific session (conversation) with an agent.  Only the access level can be changed on an existing session.  You will need to start a new session if you wish to use a different agentId.
    org.sagebionetworks.repo.model.table.TableChangeType:
      type: string
      enum:
        - ROW
        - COLUMN
        - SEARCH
    org.sagebionetworks.repo.model.download.Sort:
      type: object
      properties:
        field:
          type: string
          description: Enumeration of the fields of a user's download list that can be used for sorting.
          enum:
            - fileName
            - projectName
            - synId
            - versionNumber
            - addedOn
            - createdBy
            - createdOn
            - fileSize
            - isEligibleForPackaging
        direction:
          type: string
          description: Direction of a sort.
          enum:
            - ASC
            - DESC
      description: Identifies both the field and direction for a single sort operation
    org.sagebionetworks.repo.model.ProjectListSortColumn:
      type: string
      enum:
        - LAST_ACTIVITY
        - PROJECT_NAME
    org.sagebionetworks.evaluation.model.SubmissionQuota:
      type: object
      properties:
        firstRoundStart:
          type: string
          description: The date/time at which the first round begins.
        roundDurationMillis:
          type: integer
          description: The duration of each round.
          format: int32
        numberOfRounds:
          type: integer
          description: The number of rounds.
          format: int32
        submissionLimit:
          type: integer
          description: the maximum number of submissions per team/participant per round.
          format: int32
      description: 'DEPRECATED: use EvaluationRound APIs instead. No SubmissionQuota will be returned with the Evaluation. Any SubmissionQuotas submitted will be instead be converted into similar EvaluationRounds.'
    org.sagebionetworks.repo.model.file.ProxyFileHandle:
      type: object
      properties:
        id:
          type: string
          description: The ID of this FileHandle.  All references to this FileHandle will use this ID.  Synapse will generate this ID when the FileHandle is created.
        etag:
          type: string
          description: FileHandles are immutable from the perspective of the API.  The only field that can be change is the previewId.  When a new previewId is set, the etag will change.
        createdBy:
          type: string
          description: The ID Of the user that created this file.
        createdOn:
          type: string
          description: The date when this file was uploaded.
        modifiedOn:
          type: string
          description: The date when the file was modified. This is handled by the backend and cannot be modified.
        concreteType:
          type: string
          description: 'This is used to indicate the implementation of this interface. For example, an S3FileHandle should be set to: org.sagebionetworks.repo.model.file.S3FileHandle'
          enum:
            - org.sagebionetworks.repo.model.file.ProxyFileHandle
        contentType:
          type: string
          description: 'Must be: http://en.wikipedia.org/wiki/Internet_media_type'
        contentMd5:
          type: string
          description: The file's content MD5.
        fileName:
          type: string
          description: The short, user visible name for this file.
        storageLocationId:
          type: integer
          description: The optional storage location descriptor
          format: int32
        contentSize:
          type: integer
          description: The size of the file in bytes.
          format: int32
        status:
          type: string
          description: The status of the file handle as computed by the backend. This value cannot be changed, any file handle that is not AVAILABLE should not be used.
          enum:
            - AVAILABLE
            - UNLINKED
            - ARCHIVED
        filePath:
          type: string
          description: The relative path of this file within the proxy.
      description: Reference to a file that accessible via a proxy server.  Each ProxyFileHandle must reference a ProxyStorageLocationSettings that defines how the files are accessed.
      required:
        - concreteType
    org.sagebionetworks.repo.model.project.BucketStorageLocationSetting:
      type: object
      properties:
        concreteType:
          type: string
          description: Indicates which implementation this object represents.
        storageLocationId:
          type: integer
          description: The unique ID for this storage location
          format: int32
        uploadType:
          type: string
          description: The enumeration of possible upload types.
          enum:
            - S3
            - GOOGLECLOUDSTORAGE
            - SFTP
            - HTTPS
            - PROXYLOCAL
            - NONE
        banner:
          type: string
          description: The banner text to display to a user every time a file is uploaded. This field is optional.
        description:
          type: string
          description: A description of the storage location. This description is shown when a user has to choose which upload destination to use.
        etag:
          type: string
          description: Synapse employs an Optimistic Concurrency Control (OCC) scheme to handle concurrent updates. Since the E-Tag changes every time a Project Setting is updated it is used to detect when a client's current representation of a Project Setting is out-of-date.
        createdOn:
          type: string
          description: The date this storage location setting was created.
        createdBy:
          type: integer
          description: The ID of the user that created this storage location setting.
          format: int32
        bucket:
          type: string
          description: The bucket name
      description: A storage location that needs to provide a bucket name
      oneOf:
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.project.ExternalObjectStorageLocationSetting'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.project.ExternalGoogleCloudStorageLocationSetting'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.project.ExternalS3StorageLocationSetting'
      required:
        - bucket
        - concreteType
      discriminator:
        propertyName: concreteType
    org.sagebionetworks.repo.model.migration.MigrationType:
      type: string
      enum:
        - PRINCIPAL
        - GROUP_MEMBERS
        - CREDENTIAL
        - AUTHENTICATED_ON
        - PRINCIPAL_ALIAS
        - NOTIFICATION_EMAIL
        - USER_PROFILE
        - STORAGE_LOCATION
        - FILE_HANDLE
        - MULTIPART_UPLOAD
        - MULTIPART_UPLOAD_PART_STATE
        - MULTIPART_UPLOAD_COMPOSER_PART_STATE
        - MESSAGE_CONTENT
        - MESSAGE_TO_USER
        - MESSAGE_RECIPIENT
        - MESSAGE_STATUS
        - COMMENT
        - V2_WIKI_PAGE
        - V2_WIKI_ATTACHMENT_RESERVATION
        - V2_WIKI_MARKDOWN
        - V2_WIKI_OWNERS
        - ACTIVITY
        - NODE
        - NODE_REVISION
        - NODE_ACCESS_REQUIRMENT
        - DOCKER_REPOSITORY_NAME
        - DOCKER_COMMIT
        - TEAM
        - MEMBERSHIP_INVITATION_SUBMISSION
        - MEMBERSHIP_REQUEST_SUBMISSION
        - EVALUATION
        - EVALUATION_ROUND
        - EVALUATION_SUBMISSIONS
        - SUBMISSION
        - SUBMISSION_CONTRIBUTOR
        - SUBMISSION_FILE
        - SUBMISSION_STATUS
        - PROJECT_SETTINGS
        - PROJECT_STATS
        - ACCESS_REQUIREMENT
        - ACCESS_REQUIREMENT_REVISION
        - ACCESS_APPROVAL
        - ACL
        - ACL_ACCESS
        - ACL_ACCESS_TYPE
        - FAVORITE
        - TRASH_CAN
        - PORTAL
        - DOI
        - CHALLENGE
        - CHALLENGE_TEAM
        - COLUMN_MODEL
        - BOUND_COLUMN_OWNER
        - BOUND_COLUMN_ORDINAL
        - TABLE_TRANSACTION
        - TABLE_TRANSACTION_TO_VERSION
        - TABLE_SEQUENCE
        - TABLE_CHANGE
        - QUIZ_RESPONSE
        - VERIFICATION_SUBMISSION
        - VERIFICATION_STATE
        - VERIFICATION_FILE
        - FORUM
        - DISCUSSION_THREAD
        - DISCUSSION_THREAD_VIEW
        - DISCUSSION_THREAD_ENTITY_REFERENCE
        - DISCUSSION_REPLY
        - SUBSCRIPTION
        - BROADCAST_MESSAGE
        - VIEW_TYPE
        - VIEW_SCOPE
        - VIEW_SNAPSHOT
        - THROTTLE_RULE
        - RESEARCH_PROJECT
        - DATA_ACCESS_REQUEST
        - DATA_ACCESS_SUBMISSION
        - DATA_ACCESS_SUBMISSION_SUBMITTER
        - DATA_ACCESS_SUBMISSION_STATUS
        - DATA_ACCESS_SUBMISSION_ACCESSOR_CHANGE
        - DATA_ACCESS_NOTIFICATIONS
        - FORM_GROUP
        - FORM_DATA
        - ORGANIZATION
        - JSON_SCHEMA
        - JSON_SCHEMA_BLOB
        - JSON_SCHEMA_VERSION
        - JSON_SCHEMA_LATEST_VERSION
        - JSON_SCHEMA_DEPENDENCY
        - JSON_SCHEMA_OBJECT_BINDING
        - DOWNLOAD_LIST
        - DOWNLOAD_LIST_ITEM
        - DOWNLOAD_ORDER
        - DOWNLOAD_LIST_2
        - DOWNLOAD_LIST_ITEM_2
        - DATA_TYPE
        - OAUTH_SECTOR_IDENTIFIER
        - OAUTH_CLIENT
        - OAUTH_REFRESH_TOKEN
        - OAUTH_ACCESS_TOKEN
        - PERSONAL_ACCESS_TOKEN
        - AUTHORIZATION_GRANT
        - SES_NOTIFICATIONS
        - QUARANTINED_EMAILS
        - FEATURE_STATUS
        - MATERIALIZED_VIEW_ID
        - MATERIALIZED_VIEW_SOURCE_TABLE
        - PRINCIPAL_OIDC_BINDING
        - OTP_SECRET
        - OTP_RECOVERY_CODE
        - TWO_FA_STATUS
        - WEBHOOK
        - WEBHOOK_VERIFICATION
        - WEBHOOK_ALLOWED_DOMAIN
        - AGENT_REGISTRATION
        - AGENT_SESSION
        - TOS_REQUIREMENTS
        - TOS_AGREEMENT
        - PROJECT_STORAGE_DATA
        - PROJECT_STORAGE_LIMIT
        - GRID_SESSION
        - GRID_REPLICA
        - GRID_CONNECTION
        - GRID_PATCH
        - CURATION_TASK
        - USER_STATUS
        - RECORDSET_VALIDATION_STATS
        - CHANGE
    org.sagebionetworks.repo.model.schema.Type:
      type: string
      enum:
        - 'null'
        - boolean
        - object
        - array
        - number
        - string
        - integer
    org.sagebionetworks.repo.model.verification.VerificationPagedResults:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.verification.VerificationSubmission'
            description: User info submitted for verification by Synapse ACT
          description: The list of results for this page
        totalNumberOfResults:
          type: integer
          description: The total number of results
          format: int32
      description: A paginated list of VerificationSubmission objects
    org.sagebionetworks.repo.model.EntityRef:
      type: object
      properties:
        entityId:
          type: string
          description: The 'syn' identifier of the entity. Required.
        versionNumber:
          type: integer
          description: Indicates a specific version of a the entity. Required.
          format: int32
      description: Represents a reference to the id and version of an entity to be used in collections.
    org.sagebionetworks.repo.model.auth.UserPortalPermissions:
      type: object
      properties:
        canMintDoi:
          type: boolean
          description: Can the user mint a DOI on a resource in this portal? True if the user has the UPDATE permission on the portal or if the user is part of the Synapse Portal Administrators group.
      description: The permissions that a user has for a specific Synapse portal.
    org.sagebionetworks.repo.model.project.ProxyStorageLocationSettings:
      type: object
      properties:
        concreteType:
          type: string
          description: Indicates which implementation this object represents.
          enum:
            - org.sagebionetworks.repo.model.project.ProxyStorageLocationSettings
        storageLocationId:
          type: integer
          description: The unique ID for this storage location
          format: int32
        uploadType:
          type: string
          description: The enumeration of possible upload types.
          enum:
            - S3
            - GOOGLECLOUDSTORAGE
            - SFTP
            - HTTPS
            - PROXYLOCAL
            - NONE
        banner:
          type: string
          description: The banner text to display to a user every time a file is uploaded. This field is optional.
        description:
          type: string
          description: A description of the storage location. This description is shown when a user has to choose which upload destination to use.
        etag:
          type: string
          description: Synapse employs an Optimistic Concurrency Control (OCC) scheme to handle concurrent updates. Since the E-Tag changes every time a Project Setting is updated it is used to detect when a client's current representation of a Project Setting is out-of-date.
        createdOn:
          type: string
          description: The date this storage location setting was created.
        createdBy:
          type: integer
          description: The ID of the user that created this storage location setting.
          format: int32
        proxyUrl:
          type: string
          description: The HTTPS URL of the proxy used for upload and download.
        secretKey:
          type: string
          description: The encryption key used to sign all pre-signed URLs used to communicate with the proxy.
        benefactorId:
          type: string
          description: By default, only the creator of a ProxyStorageLocationSettings can use its storage location ID to create ProxyFileHandles. When this field is set with an Entity ID (such as a Project ID), any user with the 'create' permission on the given benefactorId will be allowed to create ProxyFileHandle using its storage location ID.
      description: A storage location that uses a HTTPS proxy for all upload and download operations.
      required:
        - concreteType
    org.sagebionetworks.repo.model.schema.CreateSchemaRequest:
      type: object
      properties:
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.schema.CreateSchemaRequest
        schema:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.schema.JsonSchema'
          description: 'The JSON schema is defined by: <a href="https://json-schema.org/">json-schema.org</a>, specifically draft-07.  Only features listed here are currently supported.'
        dryRun:
          type: boolean
          description: When true, an attempt will be made to create the schema normally, but the resulting schema will not be retained.  This can be used to validate a schema without actually registering it.  The default value is false.
      description: An AsynchronousRequestBody to define a new JsonSchema.
      required:
        - concreteType
    org.sagebionetworks.repo.model.oauth.OAuthScope:
      type: string
      enum:
        - openid
        - email
        - profile
        - ga4gh_passport_v1
        - view
        - download
        - modify
        - authorize
        - offline_access
    org.sagebionetworks.repo.model.auth.TermsOfServiceState:
      type: string
      enum:
        - MUST_AGREE_NOW
        - MUST_AGREE_SOON
        - UP_TO_DATE
    org.sagebionetworks.repo.model.download.ActionRequiredCount:
      type: object
      properties:
        action:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.download.Action'
          description: An action that the user must take in order to download a file.
        count:
          type: integer
          description: The number of files that require this action.
          format: int32
      description: Represents a single action that the user will need to take in order to download one or more files.
    org.sagebionetworks.repo.model.message.cloudmailin.Attachment:
      type: object
      properties:
        content:
          type: string
          description: The content of the attachment in base-64 encoding, if the message isn't using an attachment store.
        content_id:
          type: string
          description: The ID used to reference the content elsewhere in the multipart message.
        url:
          type: string
          description: A URL to the attachment if the attachment is within an attachment store.
        file_name:
          type: string
          description: The original file name of the attachment.
        content_type:
          type: string
          description: The content type of the attachment.
        size:
          type: string
          description: The size of the attachment.
        disposition:
          type: string
          description: The disposition of the attachment either attachment or inline.
      description: Message Attachment
    org.sagebionetworks.repo.model.UserGroupInt:
      type: object
      properties:
        id:
          type: string
          description: The id of either the user or group.
        isIndividual:
          type: boolean
          description: True if this is a user, false if it is a group
        etag:
          type: string
          description: Used to detect when a client's current representation of a user or group is out-of-date.
      description: This is the base interface for a user group
      oneOf:
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.UserGroup'
      discriminator:
        propertyName: concreteType
    org.sagebionetworks.repo.model.dataaccess.AccessApprovalSearchResult:
      type: object
      properties:
        id:
          type: string
          description: The ID of the access approval
        accessRequirementId:
          type: string
          description: The ID of the access requirement
        accessRequirementVersion:
          type: string
          description: The version of the access requirement under which this approval was created
        accessRequirementName:
          type: string
          description: The name of the access requirement
        submitterId:
          type: string
          description: The principal ID of the person who created the submission.
        reviewerId:
          type: string
          description: The principal ID of the user that last modified the approval
        state:
          type: string
          description: JSON enum for the state of AccessApproval
          enum:
            - APPROVED
            - REVOKED
        modifiedOn:
          type: string
          description: The modification date of the approval
        expiredOn:
          type: string
          description: The date this object will be expired.
      description: The result item in an Access Approval search
    org.sagebionetworks.repo.model.grid.AgentFeatureRequest:
      type: object
      properties:
        featureDescription:
          type: string
          description: Detailed description of the requested function and how it would help with tabular data curation.
          maxLength: 1000
          minLength: 10
        category:
          type: string
          description: Category of the requested feature for better organization and prioritization.
          enum:
            - data_cleaning
            - data_transformation
            - data_validation
            - data_analysis
            - visualization
            - import_export
            - collaboration
            - automation
            - other
        priority:
          type: string
          description: Suggested priority level for the feature request.
          enum:
            - low
            - medium
            - high
            - critical
        useCase:
          type: string
          description: Specific use case or scenario where this feature would be beneficial.
          maxLength: 500
        userRole:
          type: string
          description: Role or type of user who would benefit from this feature (e.g., data analyst, researcher, business user).
          maxLength: 100
      description: Request for a new function to enhance Agent capabilities for tabular data curation.
    org.sagebionetworks.repo.model.grid.query.result.Row:
      type: object
      properties:
        cellValues:
          type: array
          items: {}
          description: An array of cell values for a single row.  Each cell's index will corresponds to the SelectColumn.columnIndex
        validationResults:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.grid.query.result.ValidationResults'
          description: Results of a grid row against a JSON schema
      description: A single row of a grid query result.
    org.sagebionetworks.repo.model.BatchAccessApprovalInfoResponse:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.AccessApprovalInfo'
            description: Information about whether or not a user has an AccessApproval for an AccessRequirement.
          description: The list of resulting AccessApprovalInfo.
      description: Response for an AccessApprovalInfoRequest.
    org.sagebionetworks.repo.model.JoinTeamSignedToken:
      type: object
      properties:
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.JoinTeamSignedToken
        hmac:
          type: string
          description: The hash message authentication code for the message.
        version:
          type: integer
          description: The version of the key used to generate the HMAC.
          format: int32
        expiresOn:
          type: string
          description: The date-time when this token expires.
        createdOn:
          type: string
          description: The date-time the token was generated.
        userId:
          type: string
          description: The ID of the user who is acting to add the new member to the Team.  The HMAC in the token authenticates that the request is being made by this user.
        teamId:
          type: string
          description: The ID of the team which the user was invited to join.
        memberId:
          type: string
          description: The ID of the new team member.
      description: Signed token containing the information needed to join a new user to a team.
      required:
        - concreteType
    org.sagebionetworks.repo.model.provenance.Activity:
      type: object
      properties:
        id:
          type: string
          description: The unique immutable ID
        name:
          type: string
          description: A name for this Activity.
        description:
          type: string
          description: A description of this Activity.
        etag:
          type: string
          description: Synapse employs an Optimistic Concurrency Control (OCC) scheme to handle concurrent updates. Since the E-Tag changes every time an entity is updated it is used to detect when a client's current representation of an object is out-of-date.
        createdOn:
          type: string
          description: The date this object was created.
        modifiedOn:
          type: string
          description: The date this object was last modified.
        createdBy:
          type: string
          description: The user that created this object.
        modifiedBy:
          type: string
          description: The user that last modified this object.
        used:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.provenance.Used'
            description: Interface for JSON schema for a Used record in Provenance
          description: The entities used by this Activity.
          uniqueItems: true
      description: Interface for JSON schema for Activity POJO.
    org.sagebionetworks.repo.model.search.query.KeyList:
      type: object
      properties:
        key:
          type: string
          description: The facet name
        values:
          type: array
          items:
            type: string
          description: The value list
      description: JSON schema for a faceted key-to-string list pair.
    org.sagebionetworks.evaluation.model.EvaluationRoundLimitType:
      type: string
      enum:
        - TOTAL
        - DAILY
        - WEEKLY
        - MONTHLY
    org.sagebionetworks.repo.model.subscription.SortDirection:
      type: string
      enum:
        - ASC
        - DESC
    org.sagebionetworks.repo.model.grid.query.result.QueryResult:
      type: object
      properties:
        selectColumns:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.grid.query.result.SelectColumn'
            description: Information about a single selected column.
          description: Information about the selected columns.
        rows:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.grid.query.result.Row'
            description: A single row of a grid query result.
          description: A single page of rows.
      description: Results of a query against a grid session.
    org.sagebionetworks.repo.model.Row:
      type: object
      properties:
        cells:
          type: array
          items:
            type: string
          description: The the id of the entity to which this reference refers
      description: JSON schema for Row POJO
    org.sagebionetworks.repo.model.admin.ExpireQuarantinedEmailRequest:
      type: object
      properties:
        email:
          type: string
          description: The email address to be removed from the quarantine list
      description: Request body used to remove an email address from quarantine
    org.sagebionetworks.repo.model.schema.ListValidationResultsRequest:
      type: object
      properties:
        containerId:
          type: string
          description: The ID of the Entity container to get.
        nextPageToken:
          type: string
          description: Forward the returned 'nextPageToken' to get the next page of results.
      description: Request to get a single page of JSON schema validation results for a given Entity container.
    org.sagebionetworks.repo.model.dataaccess.Request:
      type: object
      properties:
        id:
          type: string
          description: The unique immutable ID for this request. A new ID will be generated for new Request. Once issued, this ID is guaranteed to never change or be re-issued.
        accessRequirementId:
          type: string
          description: The ID of the Access Requirement which requires a request to be submitted to gain access to a dataset. This request contains information that satisfies those requirements.
        researchProjectId:
          type: string
          description: The ID of the research project associated with this request.
        createdOn:
          type: string
          description: The date this request was created.
        modifiedOn:
          type: string
          description: The date this request was last modified.
        createdBy:
          type: string
          description: The ID of the user that created this request.
        modifiedBy:
          type: string
          description: The ID of the user that last modified this request.
        ducFileHandleId:
          type: string
          description: The Data Use Certificate uploaded by user.
        irbFileHandleId:
          type: string
          description: The Institutional Review Board Approval document uploaded by user.
        attachments:
          type: array
          items:
            type: string
          description: The set of file handle ID of attached files to this request.
        accessorChanges:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.dataaccess.AccessorChange'
            description: Request for a single user change access to a resource.
          description: List of user changes. A user can gain access, renew access or have access revoked.
        etag:
          type: string
          description: Synapse employs an Optimistic Concurrency Control (OCC) scheme to handle concurrent updates. Since the E-Tag changes every time a request is updated it is used to detect when a client's current representation of a request is out-of-date.
        concreteType:
          type: string
          description: Indicates which implementation of RequestInterface this object represents.
          enum:
            - org.sagebionetworks.repo.model.dataaccess.Request
      description: A Request contains information required by an AccessRequirement.
      required:
        - concreteType
    org.sagebionetworks.repo.model.file.BaseKeyUploadDestination:
      type: object
      properties:
        concreteType:
          type: string
          description: Indicates which implementation this object represents.
        storageLocationId:
          type: integer
          description: the unique id for the storage location, that points to the <a href="${org.sagebionetworks.repo.model.project.StorageLocationSetting}">StorageLocationSetting</a>
          format: int32
        uploadType:
          type: string
          description: The enumeration of possible upload types.
          enum:
            - S3
            - GOOGLECLOUDSTORAGE
            - SFTP
            - HTTPS
            - PROXYLOCAL
            - NONE
        banner:
          type: string
          description: If set, the client should show this banner every time an upload is initiated
        destinationProjectId:
          type: string
          description: The ID of the project where this file will be uploaded.
        projectStorageLocationUsage:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.limits.ProjectStorageLocationUsage'
          description: Represent the current size and limits for a single project storage location.
        baseKey:
          type: string
          description: the optional base key, which acts as a prefix or a base folder
      description: An upload destination with an optional base key
      oneOf:
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.file.S3UploadDestination'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.file.ExternalS3UploadDestination'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.file.ExternalGoogleCloudUploadDestination'
      required:
        - concreteType
      discriminator:
        propertyName: concreteType
    org.sagebionetworks.repo.model.audit.AccessRecord:
      type: object
      properties:
        sessionId:
          type: string
          description: The distinct ID assigned to this call.
        timestamp:
          type: integer
          description: The timestamp of the request, in UTC milliseconds
          format: int32
        userId:
          type: integer
          description: The ID of the user making the calls
          format: int32
        method:
          type: string
          description: The HTTP method
        requestURL:
          type: string
          description: The URL of the request
        userAgent:
          type: string
          description: Identifies the software agent that made the call. Extracted from the User-Agent header
        host:
          type: string
          description: The domain name of the server (for virtual hosting), and the TCP port number on which the server is listening
        origin:
          type: string
          description: Initiates a request for cross-origin resource sharing (asks server for an 'Access-Control-Allow-Origin' response header)
        xForwardedFor:
          type: string
          description: The X-Forwarded-For (XFF) HTTP header field is a de facto standard for identifying the originating IP address of a client connecting to a web server through an HTTP proxy or load balancer.
        via:
          type: string
          description: Informs the server of proxies through which the request was sent
        threadId:
          type: integer
          description: The ID of the thread that accepted this call
          format: int32
        elapseMS:
          type: integer
          description: The elapse time in MS for the call
          format: int32
        success:
          type: boolean
          description: Did the call complete without an error?
        stack:
          type: string
          description: This string identifies the stack where the request originated
        instance:
          type: string
          description: This string identifies the stack instance where the request originated.  This is used for partitioning.
        date:
          type: string
          description: This string identifies the stack instance where the request originated. This is used for partitioning.
        vmId:
          type: string
          description: The VMID of the JVM that processed this request. A VMID is a identifier that is unique across all Java virtual machines.
        returnObjectId:
          type: string
          description: The ID of the returned object when it exits.
        queryString:
          type: string
          description: The query string of the request.
        responseStatus:
          type: integer
          description: The resulting HTTP response code.
          format: int32
        oauthClientId:
          type: string
          description: The ID of the OAuth Client making the request
        basicAuthUsername:
          type: string
          description: The username used in the authorization header of the request, if the request used basic authentication.
        authenticationMethod:
          type: string
          description: The authentication method
      description: Data recored from a single web-services methods.
    org.sagebionetworks.repo.model.agent.AgentChatResponse:
      type: object
      properties:
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.agent.AgentChatResponse
        sessionId:
          type: string
          description: The sessionId that identifies the conversation with the agent.
        responseText:
          type: string
          description: The agent's text response to the user's request
      description: The response to an agent chat request.
      required:
        - concreteType
    org.sagebionetworks.repo.model.table.FacetColumnRequest:
      type: object
      properties:
        concreteType:
          type: string
        columnName:
          type: string
          description: The name of the faceted column
        jsonPath:
          type: string
          description: To filter on a jsonSubColumn of a JSON column, provide the jsonPath of the sub-column
      description: A set of values that have been selected for filtering in a faceted column
      oneOf:
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.FacetColumnValuesRequest'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.FacetColumnRangeRequest'
      required:
        - concreteType
      discriminator:
        propertyName: concreteType
    org.sagebionetworks.repo.model.grid.query.SelectItem:
      type: object
      properties:
        concreteType:
          type: string
          description: Required. Full name of the exact type used.
      description: A generic select item.
      oneOf:
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.grid.query.SelectAll'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.grid.query.function.CountStar'
      required:
        - concreteType
      discriminator:
        propertyName: concreteType
    org.sagebionetworks.repo.model.table.TableEntity:
      type: object
      properties:
        name:
          type: string
          description: 'The name of this entity.  Must be 256 characters or less. Names may only contain: letters, numbers, spaces, underscores, hyphens, periods, plus signs, apostrophes, and parentheses'
        description:
          type: string
          description: The description of this entity.  Must be 1000 characters or less.
        id:
          type: string
          description: The unique immutable ID for this entity.  A new ID will be generated for new Entities.  Once issued, this ID is guaranteed to never change or be re-issued
        etag:
          type: string
          description: Synapse employs an Optimistic Concurrency Control (OCC) scheme to handle concurrent updates. Since the E-Tag changes every time an entity is updated it is used to detect when a client's current representation of an entity is out-of-date.
        createdOn:
          type: string
          description: The date this entity was created.
        modifiedOn:
          type: string
          description: The date this entity was last modified.
        createdBy:
          type: string
          description: The ID of the user that created this entity.
        modifiedBy:
          type: string
          description: The ID of the user that last modified this entity.
        parentId:
          type: string
          description: The ID of the Entity that is the parent of this Entity.
        concreteType:
          type: string
          description: Indicates which implementation of Entity this object represents.  The value is the fully qualified class name, e.g. org.sagebionetworks.repo.model.FileEntity.
          enum:
            - org.sagebionetworks.repo.model.table.TableEntity
        versionNumber:
          type: integer
          description: The version number issued to this version on the object.
          format: int32
        versionLabel:
          type: string
          description: The version label for this entity
        versionComment:
          type: string
          description: The version comment for this entity
        isLatestVersion:
          type: boolean
          description: If this is the latest version of the object.
        columnIds:
          type: array
          items:
            type: string
          description: The list of ColumnModel IDs that define the schema of the object.
        isSearchEnabled:
          type: boolean
          description: When creating or updating a table or view specifies if full text search should be enabled.  Note that enabling full text search might slow down the indexing of the table or view.
      description: A TableEntity represents the metadata of a table.
      required:
        - concreteType
    org.sagebionetworks.repo.model.download.QueryRequestDetails:
      type: object
      properties:
        concreteType:
          type: string
          description: 'Required. Should be the full package name of the details implementation.  For example, the value should be: ''org.sagebionetworks.repo.model.download.AvailalbeFilesRequest'' for AvailalbeFilesRequest'
      description: Required.  Must be one of the implementations of QueryRequestDetails.
      oneOf:
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.download.ActionRequiredRequest'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.download.FilesStatisticsRequest'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.download.AvailableFilesRequest'
      required:
        - concreteType
      discriminator:
        propertyName: concreteType
    org.sagebionetworks.repo.model.oauth.GA4GHByType:
      type: string
      enum:
        - self
        - peer
        - system
        - so
        - dac
    org.sagebionetworks.evaluation.model.SubmissionEligibility:
      type: object
      properties:
        isEligible:
          type: boolean
          description: true if all criteria are met
        isRegistered:
          type: boolean
          description: true if team/individual is registered for challenge
        isQuotaFilled:
          type: boolean
          description: true if team/individual has reached the submission quota (for the given submission round)
      description: Describes the eligibility of a to submit to an Evaluation queue, reflecting the queue's submission quotas and current submissions.
    org.sagebionetworks.repo.model.registry.EntityTypeMetadata:
      type: object
      properties:
        name:
          type: string
          description: The Name of this entity.
        displayName:
          type: string
          description: The display name of this entity.
        className:
          type: string
          description: The class name of this entity.
        entityType:
          type: string
          description: Type of the Entity
          enum:
            - project
            - folder
            - file
            - table
            - link
            - entityview
            - dockerrepo
            - submissionview
            - dataset
            - datasetcollection
            - materializedview
            - virtualtable
            - recordset
        defaultParentPath:
          type: string
          description: The full path of the entity schema.
        validParentTypes:
          type: array
          items:
            type: string
          description: The full path of the entity schema.
        aliases:
          type: array
          items:
            type: string
          description: The list of aliases that can be used to look an entity type with a query.
      description: Metadata about entities
      required:
        - name
    org.sagebionetworks.repo.model.Favorite:
      type: object
      properties:
        entityId:
          type: string
        principalId:
          type: string
          description: The id of the principal who is granted access
        createdOn:
          type: string
          description: The date this entity was created.
      description: JSON schema for a Favorite POJO
    org.sagebionetworks.repo.model.table.FacetColumnResult:
      type: object
      properties:
        concreteType:
          type: string
        columnName:
          type: string
          description: The name of the faceted column
        facetType:
          type: string
          description: Set to one of the enumerated values to indicate a column should be treated as a facet
          enum:
            - enumeration
            - range
        jsonPath:
          type: string
          description: 'When present, these results represent a sub-column identified by its jsonPath.  Note: The ColumnName will be the name of the root JSON column.'
      description: Resulting information about a faceted column
      oneOf:
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.FacetColumnResultValues'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.FacetColumnResultRange'
      required:
        - concreteType
      discriminator:
        propertyName: concreteType
    org.sagebionetworks.repo.model.table.UploadToTableRequest:
      type: object
      properties:
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.table.UploadToTableRequest
        entityId:
          type: string
        tableId:
          type: string
          description: The ID of the table.
        uploadFileHandleId:
          type: string
          description: The ID of the file handle for a type of UPLOAD
        updateEtag:
          type: string
          description: Any RowSet returned from Synapse will contain the current etag of the change set.  To update any rows from a RowSet the etag must be provided with the POST.
        linesToSkip:
          type: integer
          description: The number of lines to skip from the start of the file.  The default value of 0 will be used if this is not provided by the caller.
          format: int32
        csvTableDescriptor:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.CsvTableDescriptor'
          description: The description of a csv for upload or download.
        columnIds:
          type: array
          items:
            type: string
          description: Deprecated.
      description: A CSV table upload request.
      required:
        - concreteType
    org.sagebionetworks.repo.model.v2.wiki.V2WikiHeader:
      type: object
      properties:
        id:
          type: string
          description: The ID of this wiki page.
        title:
          type: string
          description: The title to of this page.
        parentId:
          type: string
          description: The parentID to of this page.
      description: A WikiHeader contains basic metadata about a WikiPage.
    org.sagebionetworks.repo.model.message.cloudmailin.Headers:
      type: object
      properties:
        To:
          type: string
        Cc:
          type: string
        Bcc:
          type: string
        Subject:
          type: string
        From:
          type: string
      description: The headers from the email message.
    org.sagebionetworks.repo.model.grid.query.OrderByItem:
      type: object
      properties:
        columnName:
          type: string
          description: Name of a column.  Can also be the alias of an aggregate function in the select clause.
        direction:
          type: string
          description: The ordering direction (default is ASC).
          enum:
            - ASC
            - DESC
    org.sagebionetworks.repo.model.doi.v2.DataciteMetadata:
      type: object
      properties:
        creators:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.doi.v2.DoiCreator'
            description: JSON schema for DOI Metadata Creator.
          description: Required. The main researchers involved in producing the data, or the authors of the publication, in priority order.
        titles:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.doi.v2.DoiTitle'
            description: JSON schema for DOI Metadata Title.
          description: Required. A name or title by which a resource is known.
        publicationYear:
          type: integer
          description: Required. The year that this resource became publicly accessible. Must be in YYYY format.
          format: int32
        resourceType:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.doi.v2.DoiResourceType'
          description: Required. Describes the type of media that the DOI Metadata refers to.
        publisher:
          type: string
          description: The publisher of the DOI, for a portal DOI matches the Portal name
      description: JSON schema for metadata that is submitted to DataCite and can later be retrieved via DOI in Synapse, with the DataCite REST API, or with external citation services.
      oneOf:
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.doi.v2.Doi'
      discriminator:
        propertyName: concreteType
    org.sagebionetworks.repo.model.table.TableUpdateResponse:
      type: object
      properties:
        concreteType:
          type: string
      description: Abstraction for a response to update a table.
      oneOf:
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.EntityUpdateResults'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.TableSchemaChangeResponse'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.TableSearchChangeResponse'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.RowReferenceSetResults'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.UploadToTableResult'
      required:
        - concreteType
      discriminator:
        propertyName: concreteType
    org.sagebionetworks.repo.model.dataaccess.OpenSubmissionPage:
      type: object
      properties:
        openSubmissionList:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.dataaccess.OpenSubmission'
            description: This object stores information about the number of submitted Submissions for a single ACTAccessRequirement.
        nextPageToken:
          type: string
          description: The token to get the next page result.
      description: A page of OpenSubmission.
    PaginatedResultsOfVersionInfo:
      type: object
      properties:
        totalNumberOfResults:
          type: integer
          description: Calculating the actual totalNumberOfResults is not longer supported. Therefore, for each page, the totalNumberOfResults is estimated using the current page, limit, and offset. When the page size equals the limit, the totalNumberOfResults will be offset+pageSize+ 1. Otherwise, the totalNumberOfResults will be offset+pageSize.
          format: int32
        results:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.VersionInfo'
    org.sagebionetworks.repo.model.oauth.OAuthClientList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.oauth.OAuthClient'
            description: OAuth 2.0 Client metadata described in <a href="https://openid.net/specs/openid-connect-registration-1_0.html#ClientMetadata">OpenID Connect Core 1.0 Client Metadata</a>
        nextPageToken:
          type: string
          description: The token to get the next page of results.
      description: Metadata for a list page OAuth 2.0 clients
    org.sagebionetworks.repo.model.auth.LoginResponse:
      type: object
      properties:
        sessionToken:
          type: string
          description: (deprecated) A token that identifies the user
        accessToken:
          type: string
          description: A token that authorizes subsequent requests
        acceptsTermsOfUse:
          type: boolean
          description: Does the user accept the terms of use?
        authenticationReceipt:
          type: string
          description: A valid receipt allows the user to skip extra security checks.
      description: Holds a session token used for short-term authentication with Synapse
    org.sagebionetworks.repo.model.auth.TwoFactorAuthDisableRequest:
      type: object
      properties:
        twoFaToken:
          type: string
          description: The token that was included in the error response when authenticating.
        password:
          type: string
          description: The current user password that can be used in place of the twoFaToken (e.g. when authenticating with user/password or during a change password workflow).
        twoFaResetToken:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.auth.TwoFactorAuthResetToken'
          description: Signed token containing the the information necessary to reset 2fa for a user.
      description: Allows to disable two-factor authentication for the user account
    org.sagebionetworks.repo.model.DataType:
      type: string
      enum:
        - SENSITIVE_DATA
        - OPEN_DATA
    org.sagebionetworks.repo.model.message.MessageContent:
      type: object
      properties:
        id:
          type: string
          description: The unique identifier of the message or comment
        createdBy:
          type: string
          description: The unique identifier of the sender of this message
        fileHandleId:
          type: string
          description: 'The S3 file handle storing the body of this message.  Note: The file''s mime type should be ''text/plain'' or ''text/html''.  If no character encoding is specified, then UTF-8 is assumed.'
        createdOn:
          type: string
          description: When this message was created
      description: Contains fields common to all messages and comments
      oneOf:
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.message.Comment'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.message.MessageToUser'
      discriminator:
        propertyName: concreteType
    org.sagebionetworks.repo.model.curation.metadata.FileBasedMetadataTaskProperties:
      type: object
      properties:
        concreteType:
          type: string
          description: 'Indicates which implementation of CurationTaskProperties this object represents. Possible values include: ''org.sagebionetworks.repo.model.curation.metadata.FileBasedMetadataTaskProperties'' and ''org.sagebionetworks.repo.model.curation.metadata.RecordBasedMetadataTaskProperties''.'
          enum:
            - org.sagebionetworks.repo.model.curation.metadata.FileBasedMetadataTaskProperties
        uploadFolderId:
          type: string
          description: The synId of the folder where data files of this type are to be uploaded.
        fileViewId:
          type: string
          description: The synId of the FileView that shows all data of this type.  This FileView will be used to start new grid sessions for file annotation curation.
      description: A CurationTaskProperties for file-based data, describing where data is uploaded and a view which contains the annotations.
      required:
        - concreteType
    org.sagebionetworks.repo.model.discussion.DiscussionThreadBundle:
      type: object
      properties:
        id:
          type: string
          description: The ID of the Thread
        forumId:
          type: string
          description: The ID of the forum this Thread belongs to
        projectId:
          type: string
          description: The ID of the project this Thread belongs to
        title:
          type: string
          description: The title of the Thread
        createdOn:
          type: string
          description: The timestamp when this Thread was created
        createdBy:
          type: string
          description: The id of the user that created this Thread
        modifiedOn:
          type: string
          description: The timestamp when this Thread was last modified
        etag:
          type: string
          description: Synapse employs an Optimistic Concurrency Control (OCC) scheme to handle concurrent updates. Since the E-Tag changes every time an entity is updated it is used to detect when a client's current representation of an entity is out-of-date.
        messageKey:
          type: string
          description: The S3 key where the actual message stored
        numberOfViews:
          type: integer
          description: The number of unique users who has viewed this thread
          format: int32
        numberOfReplies:
          type: integer
          description: The number of replies to this thread
          format: int32
        lastActivity:
          type: string
          description: The timestamp when the last activity occurs on this Thread
        activeAuthors:
          type: array
          items:
            type: string
          description: 'The list of userId whose most active on this Thread '
        isEdited:
          type: boolean
          description: Has the author edited this Thread?
        isDeleted:
          type: boolean
          description: Has this Thread been deleted?
        isPinned:
          type: boolean
          description: Has this Thread been pinned?
      description: The Thread model object represents a single Thread.
    org.sagebionetworks.repo.model.drs.Content:
      type: object
      properties:
        name:
          type: string
          description: A name declared by the bundle author that must be used when materializing this object, overriding any name directly associated with the object itself. The name must be unique with the containing bundle.synID is used as name as its unique e.g syn123.1
        id:
          type: string
          description: A DRS-identifier of a DrsObject i.e synId e.g syn123.1
        drs_uri:
          type: string
          description: A list of full DRS identifier URI paths that may be used to obtain the object. These URIs may be external to this DRS instance. e.g drs://<host-name>/syn123.1
      description: For blob there is no contents and for bundle its list of object inside the bundle.
    org.sagebionetworks.repo.model.table.UploadToTablePreviewResult:
      type: object
      properties:
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.table.UploadToTablePreviewResult
        suggestedColumns:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.ColumnModel'
            description: A column model contains the metadata of a single column of a table or view.
          description: The list of ColumnModels that are compatible with the CSV file.  This is more accurate for a full scan than a partial scan.
        sampleRows:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.Row'
            description: Represents a single row of a TableEntity
          description: A sampling of the first few rows from the CSV as they would be applied with the provided parameters.
        rowsScanned:
          type: integer
          description: The total number of rows scanned to generate the preview.
          format: int32
      description: Resulting preview of a CSV upload to a Table.
      required:
        - concreteType
    org.sagebionetworks.repo.model.verification.VerificationSubmission:
      type: object
      properties:
        id:
          type: string
          description: The ID of this object
        createdOn:
          type: string
          description: The date and time this object was created
        createdBy:
          type: string
          description: The principal ID of the user requesting verification
        firstName:
          type: string
          description: This person's given name (forename)
        lastName:
          type: string
          description: This person's family name (surname)
        emails:
          type: array
          items:
            type: string
          description: The list of user email addresses registered to this user.
        notificationEmail:
          type: string
          description: The primary (notification) email address registered to this user.
        location:
          type: string
          description: This person's location
        company:
          type: string
          description: This person's current affiliation
        orcid:
          type: string
          description: The user's ORCID URI
        stateHistory:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.verification.VerificationState'
            description: The state of a verification submission
          description: List of state changes the submission has passed through, ordered by time.  The last in the list contains the current state of the submission.
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.verification.AttachmentMetadata'
            description: The metadata of a file attached to a Verification Submission
          description: Metadata of Files attached to the submission. The list will be emptied after the state is APPROVED or REJECTED.
      description: User info submitted for verification by Synapse ACT
    org.sagebionetworks.repo.model.table.SelectColumn:
      type: object
      properties:
        name:
          type: string
          description: The required display name of the column
        columnType:
          type: string
          description: The column type determines the type of data that can be stored in a column. Switching between types (using <a href="${POST.entity.id.table.transaction.async.start}">a transaction</a> with <a href="${org.sagebionetworks.repo.model.table.TableUpdateTransactionRequest}">TableUpdateTransactionRequest</a> in the "changes" list) is generally allowed except for switching to "_LIST" suffixed types. In such cases, a new column must be created and data must be copied over manually
          enum:
            - STRING
            - DOUBLE
            - INTEGER
            - BOOLEAN
            - DATE
            - FILEHANDLEID
            - ENTITYID
            - SUBMISSIONID
            - EVALUATIONID
            - LINK
            - MEDIUMTEXT
            - LARGETEXT
            - USERID
            - STRING_LIST
            - INTEGER_LIST
            - BOOLEAN_LIST
            - DATE_LIST
            - ENTITYID_LIST
            - USERID_LIST
            - JSON
        id:
          type: string
          description: The optional ID of the select column, if this is a direct column selected
      description: A column model contains the metadata of a single column of a TableEntity
    org.sagebionetworks.repo.model.ACTAccessRequirement:
      type: object
      properties:
        versionNumber:
          type: integer
          description: The version number issued to this version on the object.
          format: int32
        id:
          type: integer
          description: The unique immutable ID.  Provided by the system, the user may not set this field.
          format: int32
        description:
          type: string
          description: Depricated. Replaced by name.
        name:
          type: string
          description: Name of the AR. Limited to 50 characters and must be unique. Required.
        etag:
          type: string
          description: Synapse employs an Optimistic Concurrency Control (OCC) scheme to handle concurrent updates. Since the E-Tag changes every time an entity is updated it is used to detect when a client's current representation of an object is out-of-date.
        createdOn:
          type: string
          description: The date this object was created. Provided by the system, the user may not set this field.
        modifiedOn:
          type: string
          description: The date this object was last modified. Provided by the system, the user may not set this field.
        createdBy:
          type: string
          description: The user that created this object.  Provided by the system, the user may not set this field.
        modifiedBy:
          type: string
          description: The user that last modified this object.  Provided by the system, the user may not set this field.
        subjectsDefinedByAnnotations:
          type: boolean
          description: Defaults to 'false'.  When 'true', the subjects controlled by this AR are defined by the the'_accessRequirementIds' annotations on individual entities.  This property is mutually exclusive with 'subjectIds'.  If this is set to 'true' then 'subjectIds' must be excluded or empty.
        subjectIds:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.RestrictableObjectDescriptor'
          description: The IDs of the items controlled by this Access Requirement when 'subjectsDefinedByAnnotations=false'. This property is mutually exclusive with 'subjectsDefinedByAnnotations'.  When 'subjectsDefinedByAnnotations=true' then this property must be empty or excluded.  Required when creating or updating and 'subjectsDefinedByAnnotations=false' or 'subjectsDefinedByAnnotations' is excluded.
        accessType:
          type: string
          description: The enumeration of possible permission.
          enum:
            - CREATE
            - READ
            - UPDATE
            - DELETE
            - CHANGE_PERMISSIONS
            - DOWNLOAD
            - UPLOAD
            - PARTICIPATE
            - SUBMIT
            - READ_PRIVATE_SUBMISSION
            - UPDATE_SUBMISSION
            - DELETE_SUBMISSION
            - TEAM_MEMBERSHIP_UPDATE
            - SEND_MESSAGE
            - CHANGE_SETTINGS
            - MODERATE
            - REVIEW_SUBMISSIONS
            - EXEMPTION_ELIGIBLE
        concreteType:
          type: string
          description: Indicates which type of AccessRequirement this object represents.  Provided by the system, the user may not set this field.
          enum:
            - org.sagebionetworks.repo.model.ACTAccessRequirement
        actContactInfo:
          type: string
          description: Information on how to contact the Synapse ACT for access approval (external to Synapse).  Required when creating or updating.
        openJiraIssue:
          type: boolean
          description: If true, then in addition to following directions in the 'actContactInfo' the client should open a JIRA issue to notify the ACT.  If omitted, default is 'true'.
      description: JSON schema for out of band 'Access Control Team' controlled Access Requirement, a 'tier 3' Access Requirement. This access requirement directs user to contact an ACT member to gain access to the data.
      required:
        - concreteType
    org.sagebionetworks.repo.model.grid.ListGridSessionsRequest:
      type: object
      properties:
        sourceId:
          type: string
          description: Optional. When provided, only sessions with this synId will be returned.
        nextPageToken:
          type: string
          description: Forward the returned 'nextPageToken' to get the next page of results.
      description: Request to list a user's active grid sessions.
    org.sagebionetworks.evaluation.model.EvaluationRoundListRequest:
      type: object
      properties:
        nextPageToken:
          type: string
          description: Forward the returned 'nextPageToken' to get the next page of results.
      description: Request to list a single page of EvaluationRounds associated with an Evaluation
    org.sagebionetworks.repo.model.PaginatedTeamIds:
      type: object
      properties:
        teamIds:
          type: array
          items:
            type: string
          description: The requested team IDs.
        nextPageToken:
          type: string
          description: Token that can be used to get the next page.  Null if there are no more results.
      description: Container for a page of team IDs.
    org.sagebionetworks.repo.model.file.BatchFileHandleCopyRequest:
      type: object
      properties:
        copyRequests:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.file.FileHandleCopyRequest'
            description: Request to make a copy of an existing FileHandle.
          description: Defines the copy requests.
      description: Batch Request for copying FileHandles.
    org.sagebionetworks.repo.model.principal.EmailQuarantineReason:
      type: string
      enum:
        - PERMANENT_BOUNCE
        - TRANSIENT_BOUNCE
        - COMPLAINT
        - OTHER
    org.sagebionetworks.repo.model.oauth.OAuthClientVerificationPrecheckResult:
      type: object
      properties:
        reverificationRequired:
          type: boolean
          description: True iff the proposed changes to the OAuth client will require reverification
      description: boolean value indicating whether proposed changes to the OAuth client will require reverification
    org.sagebionetworks.repo.model.doi.v2.DoiRequest:
      type: object
      properties:
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.doi.v2.DoiRequest
        doi:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.doi.v2.Doi'
          description: 'JSON schema for fields associated with a DOI and its metadata. This object contains fields from both <a href="${org.sagebionetworks.repo.model.doi.v2.DoiAssociation}">DoiAssociation</a> and <a href="${org.sagebionetworks.repo.model.doi.v2.DataciteMetadata}">DataciteMetadata</a>.<br>To mint a DOI, the following fields are required: <ul> <li>Information that uniquely identifies an object in Synapse <ul><li> The object ID <i>(e.g. "syn12345")</i></li><li>The object type <i>(Note: as of this writing, only ENTITY is supported)</i></li><li>The version number of the object <i>(Optional. A "null" version will mint a DOI that will point to the most recent version of the object, even if the object changes)</i></li><li>An eTag <i>(Necessary when updating an existing DOI)</i></li></ul></li> <li>Additional supplementary information to mint a DOI <ul><li>Creator(s)</li><li>Title(s)</li><li>The general resource type</li><li>A publication year (no later than one year after the current year)</li></ul></li> </ul><br>For more information, see the <a href="${org.sagebionetworks.repo.model.doi.v2.DoiAssociation}">DoiAssociation</a> and <a href="${org.sagebionetworks.repo.model.doi.v2.DataciteMetadata}">DataciteMetadata</a> objects.'
      description: An AsynchronousRequestBody to mint or modify DOIs.
      required:
        - concreteType
    org.sagebionetworks.repo.model.FileEntity:
      type: object
      properties:
        name:
          type: string
          description: 'The name of this entity.  Must be 256 characters or less. Names may only contain: letters, numbers, spaces, underscores, hyphens, periods, plus signs, apostrophes, and parentheses'
        description:
          type: string
          description: The description of this entity.  Must be 1000 characters or less.
        id:
          type: string
          description: The unique immutable ID for this entity.  A new ID will be generated for new Entities.  Once issued, this ID is guaranteed to never change or be re-issued
        etag:
          type: string
          description: Synapse employs an Optimistic Concurrency Control (OCC) scheme to handle concurrent updates. Since the E-Tag changes every time an entity is updated it is used to detect when a client's current representation of an entity is out-of-date.
        createdOn:
          type: string
          description: The date this entity was created.
        modifiedOn:
          type: string
          description: The date this entity was last modified.
        createdBy:
          type: string
          description: The ID of the user that created this entity.
        modifiedBy:
          type: string
          description: The ID of the user that last modified this entity.
        parentId:
          type: string
          description: The ID of the Entity that is the parent of this Entity.
        concreteType:
          type: string
          description: Indicates which implementation of Entity this object represents.  The value is the fully qualified class name, e.g. org.sagebionetworks.repo.model.FileEntity.
          enum:
            - org.sagebionetworks.repo.model.FileEntity
        versionNumber:
          type: integer
          description: The version number issued to this version on the object.
          format: int32
        versionLabel:
          type: string
          description: The version label for this entity
        versionComment:
          type: string
          description: The version comment for this entity
        isLatestVersion:
          type: boolean
          description: If this is the latest version of the object.
        dataFileHandleId:
          type: string
          description: ID of the file associated with this entity.
        fileNameOverride:
          type: string
          description: An optional replacement for the name of the uploaded file.  This is distinct from the entity name.  If omitted the file will retain its original name.
      description: JSON schema for File POJO
      required:
        - concreteType
    ListWrapperOfUploadDestinationLocation:
      type: object
      properties:
        list:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.file.UploadDestinationLocation'
    org.sagebionetworks.repo.model.table.Table:
      type: object
      properties:
        name:
          type: string
          description: 'The name of this entity.  Must be 256 characters or less. Names may only contain: letters, numbers, spaces, underscores, hyphens, periods, plus signs, apostrophes, and parentheses'
        description:
          type: string
          description: The description of this entity.  Must be 1000 characters or less.
        id:
          type: string
          description: The unique immutable ID for this entity.  A new ID will be generated for new Entities.  Once issued, this ID is guaranteed to never change or be re-issued
        etag:
          type: string
          description: Synapse employs an Optimistic Concurrency Control (OCC) scheme to handle concurrent updates. Since the E-Tag changes every time an entity is updated it is used to detect when a client's current representation of an entity is out-of-date.
        createdOn:
          type: string
          description: The date this entity was created.
        modifiedOn:
          type: string
          description: The date this entity was last modified.
        createdBy:
          type: string
          description: The ID of the user that created this entity.
        modifiedBy:
          type: string
          description: The ID of the user that last modified this entity.
        parentId:
          type: string
          description: The ID of the Entity that is the parent of this Entity.
        concreteType:
          type: string
          description: Indicates which implementation of Entity this object represents.  The value is the fully qualified class name, e.g. org.sagebionetworks.repo.model.FileEntity.
        versionNumber:
          type: integer
          description: The version number issued to this version on the object.
          format: int32
        versionLabel:
          type: string
          description: The version label for this entity
        versionComment:
          type: string
          description: The version comment for this entity
        isLatestVersion:
          type: boolean
          description: If this is the latest version of the object.
        columnIds:
          type: array
          items:
            type: string
          description: The list of ColumnModel IDs that define the schema of the object.
        isSearchEnabled:
          type: boolean
          description: When creating or updating a table or view specifies if full text search should be enabled.  Note that enabling full text search might slow down the indexing of the table or view.
      description: JSON schema that defines a common interface for all the table type entities.
      oneOf:
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.SubmissionView'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.DatasetCollection'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.EntityView'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.VirtualTable'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.MaterializedView'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.Dataset'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.TableEntity'
      required:
        - concreteType
      discriminator:
        propertyName: concreteType
    org.sagebionetworks.repo.model.IdSet:
      type: object
      properties:
        set:
          type: array
          items:
            type: integer
            format: int32
          uniqueItems: true
      description: Set of IDs
    org.sagebionetworks.repo.model.table.EntityView:
      type: object
      properties:
        name:
          type: string
          description: 'The name of this entity.  Must be 256 characters or less. Names may only contain: letters, numbers, spaces, underscores, hyphens, periods, plus signs, apostrophes, and parentheses'
        description:
          type: string
          description: The description of this entity.  Must be 1000 characters or less.
        id:
          type: string
          description: The unique immutable ID for this entity.  A new ID will be generated for new Entities.  Once issued, this ID is guaranteed to never change or be re-issued
        etag:
          type: string
          description: Synapse employs an Optimistic Concurrency Control (OCC) scheme to handle concurrent updates. Since the E-Tag changes every time an entity is updated it is used to detect when a client's current representation of an entity is out-of-date.
        createdOn:
          type: string
          description: The date this entity was created.
        modifiedOn:
          type: string
          description: The date this entity was last modified.
        createdBy:
          type: string
          description: The ID of the user that created this entity.
        modifiedBy:
          type: string
          description: The ID of the user that last modified this entity.
        parentId:
          type: string
          description: The ID of the Entity that is the parent of this Entity.
        concreteType:
          type: string
          description: Indicates which implementation of Entity this object represents.  The value is the fully qualified class name, e.g. org.sagebionetworks.repo.model.FileEntity.
          enum:
            - org.sagebionetworks.repo.model.table.EntityView
        versionNumber:
          type: integer
          description: The version number issued to this version on the object.
          format: int32
        versionLabel:
          type: string
          description: The version label for this entity
        versionComment:
          type: string
          description: The version comment for this entity
        isLatestVersion:
          type: boolean
          description: If this is the latest version of the object.
        columnIds:
          type: array
          items:
            type: string
          description: The list of ColumnModel IDs that define the schema of the object.
        isSearchEnabled:
          type: boolean
          description: When creating or updating a table or view specifies if full text search should be enabled.  Note that enabling full text search might slow down the indexing of the table or view.
        viewTypeMask:
          type: integer
          description: 'Bit mask representing the types to include in the view. The following are the possible types (type=<mask_hex>): File=0x01, Project=0x02, Table=0x04, Folder=0x08, View=0x10, Docker=0x20, SubmissionView=0x40, Dataset=0x80, DatasetCollection=0x100, MaterializedView=0x200.'
          format: int32
        type:
          type: string
          description: 'Deprecated. Use: ''viewTypeMask'''
          enum:
            - file
            - project
            - file_and_table
        scopeIds:
          type: array
          items:
            type: string
          description: The list of container ids that define the scope of this view.
      description: A view of Entities within a defined scope.
      required:
        - concreteType
    org.sagebionetworks.repo.model.grid.query.SelectAll:
      type: object
      properties:
        concreteType:
          type: string
          description: Required. Full name of the exact type used.
          enum:
            - org.sagebionetworks.repo.model.grid.query.SelectAll
      description: A SelectItem that will result in the selection of all columns.
      required:
        - concreteType
    PaginatedResultsOfUserProfile:
      type: object
      properties:
        totalNumberOfResults:
          type: integer
          description: Calculating the actual totalNumberOfResults is not longer supported. Therefore, for each page, the totalNumberOfResults is estimated using the current page, limit, and offset. When the page size equals the limit, the totalNumberOfResults will be offset+pageSize+ 1. Otherwise, the totalNumberOfResults will be offset+pageSize.
          format: int32
        results:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.UserProfile'
    org.sagebionetworks.repo.model.dataaccess.UserSubmissionSearchResult:
      type: object
      properties:
        id:
          type: string
          description: The id of the submission
        createdOn:
          type: string
        modifiedOn:
          type: string
        accessRequirementId:
          type: string
          description: The id of the access requirement the submission is for
        accessRequirementVersion:
          type: string
          description: The version of the requirement that the submission refers to
        accessRequirementName:
          type: string
          description: The name of the access requirement
        submitterId:
          type: string
          description: The principal ID of the person who created the submission
        state:
          type: string
          description: The state of a Submission.
          enum:
            - SUBMITTED
            - APPROVED
            - REJECTED
            - CANCELLED
        userAccessApproval:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.AccessApproval'
          description: JSON schema for AccessApproval POJO
      description: The result item in a User Data Access Submission Search
    org.sagebionetworks.repo.model.docker.DockerRegistryEvent:
      type: object
      properties:
        id:
          type: string
          description: ID provides a unique identifier for the event.
        timestamp:
          type: string
          description: Timestamp is the time at which the event occurred.
        action:
          type: string
          enum:
            - push
            - pull
            - mount
        target:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.docker.RegistryEventTarget'
        request:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.docker.RegistryEventRequest'
        actor:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.docker.RegistryEventActor'
        source:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.docker.RegistryEventSource'
      description: https://godoc.org/github.com/docker/distribution/notifications#Event
    org.sagebionetworks.repo.model.table.TableBundle:
      type: object
      properties:
        columnModels:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.ColumnModel'
            description: A column model contains the metadata of a single column of a table or view.
          description: The list of ColumnModels currently used by this table.
        maxRowsPerPage:
          type: integer
          description: The maximum number of rows that can be requested or posted for this table in a single call.  This is a function of the columns that are currently assigned to this table.
          format: int32
      description: Metadata about a TableEntity that can be included in an EntityBundle
    org.sagebionetworks.repo.model.UserGroupHeader:
      type: object
      properties:
        ownerId:
          type: string
          description: A foreign key to the ID of the 'principal' object for the user.
        firstName:
          type: string
          description: First Name
        lastName:
          type: string
          description: Last Name
        userName:
          type: string
          description: A name chosen by the user that uniquely identifies them.
        email:
          type: string
          description: User's current email address
        displayName:
          type: string
          description: This is deprecated and will always be null
        isIndividual:
          type: boolean
          description: True if this is a user, false if it is a group
      description: JSON schema for UserHeader POJO
    org.sagebionetworks.repo.model.ChallengeTeamPagedResults:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.ChallengeTeam'
            description: Relationship between a Challenge and registered Team
          description: The list of results for this page
        totalNumberOfResults:
          type: integer
          description: The total number of results
          format: int32
      description: A paginated list of ChallengeTeam objects
    org.sagebionetworks.repo.model.grid.CellId:
      type: object
      properties:
        rowId:
          type: string
          description: The unique identifier for this cell's row
        columnName:
          type: string
          description: The unique name for this cell's column
      description: The immutable (stable) identifier for a cell.
    org.sagebionetworks.repo.model.auth.AccessTokenState:
      type: string
      enum:
        - ACTIVE
        - EXPIRED
    org.sagebionetworks.repo.model.wiki.WikiHeader:
      type: object
      properties:
        id:
          type: string
          description: The ID of this wiki page.
        title:
          type: string
          description: The title to of this page.
        parentId:
          type: string
          description: The parentID to of this page.
      description: A WikiHeader contains basic metadata about a WikiPage.
    org.sagebionetworks.repo.model.file.FileHandleRestoreResponse:
      type: object
      properties:
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.file.FileHandleRestoreResponse
        restoreResults:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.file.FileHandleRestoreResult'
            description: Result of a single file handle restore operation.
          description: The list of restore operation status for each of the file handle in the original request.
      description: Response of a restore operation. Each item in the list match the order of the file handle id in the original request.
      required:
        - concreteType
    org.sagebionetworks.repo.model.file.FileHandleResults:
      type: object
      properties:
        list:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.file.FileHandle'
            description: The FileHandle interface defines all of the fields that are common to all implementations.
      description: JSON schema for FileHandleResults.
    org.sagebionetworks.repo.model.search.query.FacetSort:
      type: object
      properties:
        facetName:
          type: string
          description: The facet name
        sortType:
          type: string
          description: The type of sort option for a facet
          enum:
            - ALPHA
            - COUNT
            - MAX
            - SUM
        sumFields:
          type: array
          items:
            type: string
          description: Sort the facet values by the sum of the values in two or more fields. This is a list of names of the fields to sum.
        maxfield:
          type: string
          description: The facet name
      description: JSON schema for a facet field sort key-value pair.
    PaginatedResultsOfTeamMember:
      type: object
      properties:
        totalNumberOfResults:
          type: integer
          description: Calculating the actual totalNumberOfResults is not longer supported. Therefore, for each page, the totalNumberOfResults is estimated using the current page, limit, and offset. When the page size equals the limit, the totalNumberOfResults will be offset+pageSize+ 1. Otherwise, the totalNumberOfResults will be offset+pageSize.
          format: int32
        results:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.TeamMember'
    org.sagebionetworks.evaluation.model.SubmissionStatusBatch:
      type: object
      properties:
        statuses:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.evaluation.model.SubmissionStatus'
            description: A SubmissionStatus is a secondary, mutable object associated with a Submission. This object should be used to contain scoring data about the Submission.
          description: A collection of Submission Statuses
        batchToken:
          type: string
          description: A token required to accept a batch submission for all but the first batch.
        isFirstBatch:
          type: boolean
          description: true if and only if this is the first batch to upload
        isLastBatch:
          type: boolean
          description: true if and only if this is the last batch to upload
      description: A batch of status objects, to be updated en masse.
    org.sagebionetworks.repo.model.table.ColumnSingleValueFilterOperator:
      type: string
      enum:
        - LIKE
        - EQUAL
        - IN
    org.sagebionetworks.repo.model.table.ColumnMultiValueFunction:
      type: string
      enum:
        - HAS
        - HAS_LIKE
    PaginatedResultsOfMessageBundle:
      type: object
      properties:
        totalNumberOfResults:
          type: integer
          description: Calculating the actual totalNumberOfResults is not longer supported. Therefore, for each page, the totalNumberOfResults is estimated using the current page, limit, and offset. When the page size equals the limit, the totalNumberOfResults will be offset+pageSize+ 1. Otherwise, the totalNumberOfResults will be offset+pageSize.
          format: int32
        results:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.message.MessageBundle'
    org.sagebionetworks.repo.model.attachment.UploadStatus:
      type: string
      enum:
        - FAILED
        - SUCCESS
    org.sagebionetworks.repo.model.dataaccess.SubmissionReviewerFilterType:
      type: string
      enum:
        - ALL
        - ACT_ONLY
        - DELEGATED_ONLY
    org.sagebionetworks.evaluation.model.SubmissionStatus:
      type: object
      properties:
        id:
          type: string
          description: The unique, immutable Synapse ID of the Submission.
        etag:
          type: string
          description: Synapse employs an Optimistic Concurrency Control (OCC) scheme to handle concurrent updates. The eTag changes every time an SubmissionStatus is updated; it is used to detect when a client's copy of an SubmissionStatus is out-of-date.
        modifiedOn:
          type: string
          description: The date on which this SubmissionStatus was last modified.
        status:
          type: string
          description: The possible states of a Synapse Submission.
          enum:
            - OPEN
            - CLOSED
            - SCORED
            - INVALID
            - VALIDATED
            - EVALUATION_IN_PROGRESS
            - RECEIVED
            - REJECTED
            - ACCEPTED
        score:
          type: number
          description: This field is deprecated and should not be used. Use the 'submissionAnnotations' field instead.
        report:
          type: string
          description: This field is deprecated and should not be used. Use the 'submissionAnnotations' field instead.
        annotations:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.annotation.Annotations'
          description: Primary container object for Annotations on a Synapse object
        submissionAnnotations:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.annotation.v2.Annotations'
          description: Annotations are additional key-value pair metadata that are associated with an object.
        entityId:
          type: string
          description: The Synapse ID of the Entity in this Submission.
        versionNumber:
          type: integer
          description: The version number of the Entity in this Submission.
          format: int32
        statusVersion:
          type: integer
          description: A version of the status, auto-generated and auto-incremented by the system and read-only to the client.
          format: int32
        canCancel:
          type: boolean
          description: Can this submission be cancelled? By default, this will be set to False. Users can read this value. Only the queue's scoring application can change this value.
        cancelRequested:
          type: boolean
          description: Has user requested to cancel this submission? By default, this will be set to False. Submission owner can read and request to change this value.
      description: A SubmissionStatus is a secondary, mutable object associated with a Submission. This object should be used to contain scoring data about the Submission.
    org.sagebionetworks.repo.model.table.QueryBundleRequest:
      type: object
      properties:
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.table.QueryBundleRequest
        entityId:
          type: string
        query:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.Query'
        partMask:
          type: integer
          description: Optional, default all. The 'partsMask' is an integer mask that can be combined into to request any desired part. The mask is defined as follows:<ul><li>Query Results <i>(queryResults)</i> = 0x1</li><li>Query Count <i>(queryCount)</i> = 0x2</li><li>Select Columns <i>(selectColumns)</i> = 0x4</li><li>Max Rows Per Page <i>(maxRowsPerPage)</i> = 0x8</li><li>The Table Columns <i>(columnModels)</i> = 0x10</li><li>Facet statistics for each faceted column <i>(facetStatistics)</i> = 0x20</li><li>The sum of the file sizes <i>(sumFileSizesBytes)</i> = 0x40</li><li>The last updated on date <i>(lastUpdatedOn)</i> = 0x80</li><li>The combined SQL query including additional filters <i>(combinedSql)</i> = 0x100</li><li>The list of actions required for any file in the query<i>(actionsRequired)</i> = 0x200 (The query.selectFileColumn needs to be specified)</li></ul>
          format: int32
      required:
        - concreteType
    org.sagebionetworks.repo.model.dataaccess.AccessApprovalSearchSort:
      type: object
      properties:
        field:
          type: string
          description: Field to sort on.
          enum:
            - MODIFIED_ON
            - EXPIRED_ON
        direction:
          type: string
          description: Direction of a sort.
          enum:
            - ASC
            - DESC
      description: Identifies both the field and direction for a single sort operation
    org.sagebionetworks.repo.model.grid.ListGridSessionsResponse:
      type: object
      properties:
        page:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.grid.GridSession'
            description: Basic information about a grid session.
          description: A single page of results that match the request parameters.
        nextPageToken:
          type: string
          description: Forward this token to get the next page of results.
      description: Response to a request to list a user's active grid session.
    org.sagebionetworks.repo.model.dataaccess.SubmissionSearchResponse:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.dataaccess.SubmissionSearchResult'
            description: ''
          description: The matching submissions information corresponding to the search parameters
        nextPageToken:
          type: string
          description: A token used to get the next page of a particular search query.
      description: Response for the request to search through the data access submissions
    org.sagebionetworks.repo.model.subscription.SubscriptionPagedResults:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.subscription.Subscription'
            description: The model object represents a single Subscription.
          description: The list of results for this page
        totalNumberOfResults:
          type: integer
          description: The total number of results
          format: int32
      description: A paginated list of Subscription objects
    org.sagebionetworks.repo.model.message.cloudmailin.AuthorizationCheckHeader:
      type: object
      properties:
        to:
          type: string
          description: The message recipient, this could be your CloudMailin email address or custom domain email.
        from:
          type: string
          description: The message sender's email address.
        size:
          type: integer
          description: The size of the message the user is trying to send. This isn't always available as it relies on SIZE being sent to our servers with the message sender.
          format: int32
        helo_domain:
          type: string
          description: The domain that the remote server authenticated with when it connected to the CloudMailin email Servers
        remote_ip:
          type: string
          description: The IP address of the server that is sending this message to the CloudMailin servers
      description: Message Envelope
    org.sagebionetworks.repo.model.report.DownloadStorageReportRequest:
      type: object
      properties:
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.report.DownloadStorageReportRequest
        reportType:
          type: string
          description: The type of storage report to generate. The default is "all_projects"
          enum:
            - ALL_PROJECTS
      description: A Storage Report CSV download request.
      required:
        - concreteType
    org.sagebionetworks.repo.model.table.QueryFilter:
      type: object
      properties:
        concreteType:
          type: string
        isDefiningCondition:
          type: boolean
          description: When null (default) or false, this condition will be applied to WHERE clause of table/view query.  When set to true, for a query against a VirtualTable, this condition will be applied to the WHERE clause of the VirtualTable's definingSQL.
      oneOf:
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.ColumnMultiValueFunctionQueryFilter'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.ColumnSingleValueQueryFilter'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.TextMatchesQueryFilter'
      required:
        - concreteType
      discriminator:
        propertyName: concreteType
    org.sagebionetworks.repo.model.versionInfo.SynapseVersionInfo:
      type: object
      properties:
        version:
          type: string
          description: The version of this stack
        stackInstance:
          type: string
          description: The current stack instance number assigned to the stack
      description: Information about the version of the stack
    org.sagebionetworks.repo.model.limits.ProjectStorageData:
      type: object
      properties:
        projectId:
          type: integer
          format: int32
        etag:
          type: string
        modifiedOn:
          type: string
        runtimeMs:
          type: integer
          format: int32
        storageLocationData:
          type: object
          additionalProperties:
            type: integer
            format: int32
      description: Internal DTO object that is used to store data about the current storage usage of a project
    org.sagebionetworks.repo.model.asynch.AsynchronousRequestBody:
      type: object
      properties:
        concreteType:
          type: string
      description: The body of an Asynchronous job request.
      oneOf:
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.download.AddToDownloadListRequest'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.DownloadFromTableRequest'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.download.DownloadListPackageRequest'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.QueryBundleRequest'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.grid.GridRecordSetExportRequest'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.TableSearchChangeRequest'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.TableUpdateTransactionRequest'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.download.DownloadListQueryRequest'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.agent.AgentChatRequest'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.grid.CreateGridRequest'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.file.FileHandleRestoreRequest'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.QueryNextPageToken'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.download.DownloadListManifestRequest'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.grid.DownloadFromGridRequest'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.report.DownloadStorageReportRequest'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.DownloadPFBRequest'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.UploadToTablePreviewRequest'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.doi.v2.DoiRequest'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.UploadToTableRequest'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.TableSchemaChangeRequest'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.ViewColumnModelRequest'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.grid.GridCsvImportRequest'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.file.FileHandleArchivalRequest'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.file.BulkFileDownloadRequest'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.migration.AsyncMigrationRequest'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.AppendableRowSetRequest'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.schema.CreateSchemaRequest'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.schema.GetValidationSchemaRequest'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.file.AddFileToDownloadListRequest'
      required:
        - concreteType
      discriminator:
        propertyName: concreteType
    org.sagebionetworks.repo.model.agent.ListAgentSessionsResponse:
      type: object
      properties:
        page:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.agent.AgentSession'
            description: Information about a specific session (conversation) with an agent.  Only the acess level can be changed on an existing session.  You will need to start a new session if you wish to use a different agentId.
        nextPageToken:
          type: string
          description: Forward this token to get the next page of results.
      description: A single page of agent sessions
    org.sagebionetworks.repo.model.ProjectHeader:
      type: object
      properties:
        name:
          type: string
          description: The  name of the project
        id:
          type: string
          description: The id of the project
        lastActivity:
          type: string
          description: The optional last recorded activity for this project and the current user.
        modifiedOn:
          type: string
          description: The date this project was last modified.
        modifiedBy:
          type: integer
          description: The ID of the user that last modified this project.
          format: int32
      description: JSON schema for ProjectHeader
    org.sagebionetworks.repo.model.table.Dataset:
      type: object
      properties:
        name:
          type: string
          description: 'The name of this entity.  Must be 256 characters or less. Names may only contain: letters, numbers, spaces, underscores, hyphens, periods, plus signs, apostrophes, and parentheses'
        description:
          type: string
          description: The description of this entity.  Must be 1000 characters or less.
        id:
          type: string
          description: The unique immutable ID for this entity.  A new ID will be generated for new Entities.  Once issued, this ID is guaranteed to never change or be re-issued
        etag:
          type: string
          description: Synapse employs an Optimistic Concurrency Control (OCC) scheme to handle concurrent updates. Since the E-Tag changes every time an entity is updated it is used to detect when a client's current representation of an entity is out-of-date.
        createdOn:
          type: string
          description: The date this entity was created.
        modifiedOn:
          type: string
          description: The date this entity was last modified.
        createdBy:
          type: string
          description: The ID of the user that created this entity.
        modifiedBy:
          type: string
          description: The ID of the user that last modified this entity.
        parentId:
          type: string
          description: The ID of the Entity that is the parent of this Entity.
        concreteType:
          type: string
          description: Indicates which implementation of Entity this object represents.  The value is the fully qualified class name, e.g. org.sagebionetworks.repo.model.FileEntity.
          enum:
            - org.sagebionetworks.repo.model.table.Dataset
        versionNumber:
          type: integer
          description: The version number issued to this version on the object.
          format: int32
        versionLabel:
          type: string
          description: The version label for this entity
        versionComment:
          type: string
          description: The version comment for this entity
        isLatestVersion:
          type: boolean
          description: If this is the latest version of the object.
        columnIds:
          type: array
          items:
            type: string
          description: The list of ColumnModel IDs that define the schema of the object.
        isSearchEnabled:
          type: boolean
          description: When creating or updating a table or view specifies if full text search should be enabled.  Note that enabling full text search might slow down the indexing of the table or view.
        items:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.EntityRef'
            description: Represents a reference to the id and version of an entity to be used in collections.
          description: 'The flat list of file entity references that define this dataset.  Limit: 30K items.'
        size:
          type: integer
          description: The cumulative size, in bytes, of all items(files) in the dataset. This will be automatically computed by the service.
          format: int32
        checksum:
          type: string
          description: 'The checksum is computed over a sorted concatenation of the checksums of all items in the dataset. For example, if a dataset contains two files with the following checksums: file1.md5 = 72794b6d and file2.md5 = 5e089d29. Then the checksum of the dataset is: md5(''5e089d2972794b6d'') = f7a29a04.  This will be automatically computed by the service.'
        count:
          type: integer
          description: The number of items/files in the dataset. This will be automatically computed by the service.
          format: int32
      description: A dataset is a type of view defined by a flat list of entities.
      required:
        - concreteType
    org.sagebionetworks.repo.model.Snapshotable:
      type: object
      properties: {}
      description: This interface helps identify object that can be captured.
      oneOf:
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.file.BulkFileDownloadResponse'
      discriminator:
        propertyName: concreteType
    org.sagebionetworks.repo.model.query.Row:
      type: object
      properties:
        values:
          type: array
          items:
            type: string
          description: The ordered list of annotation values for this object.
      description: A simple list of Strings to store query results about a single object.
    org.sagebionetworks.evaluation.model.SubmissionContributor:
      type: object
      properties:
        principalId:
          type: string
          description: ID of the contributor
        createdOn:
          type: string
          description: date when contributor was added to Submission.  Normally this will match the creation date of the Submission, but administrative override is allowed.
      description: A contributor to an evaluation Submission
    org.sagebionetworks.repo.model.table.RowReference:
      type: object
      properties:
        rowId:
          type: integer
          description: The immutable ID issued to a new row.
          format: int32
        versionNumber:
          type: integer
          description: The version number of this row. Each row version is immutable, so when a row is updated a new version is created.
          format: int32
      description: Reference for a single Row of a TableEntity
    org.sagebionetworks.repo.model.table.QueryResult:
      type: object
      properties:
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.table.QueryResult
        queryResults:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.RowSet'
          description: Represents a set of row of a TableEntity
        nextPageToken:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.QueryNextPageToken'
      description: A page of query result.
      required:
        - concreteType
    org.sagebionetworks.repo.model.dataaccess.Renewal:
      type: object
      properties:
        id:
          type: string
          description: The unique immutable ID for this request. A new ID will be generated for new Request. Once issued, this ID is guaranteed to never change or be re-issued.
        accessRequirementId:
          type: string
          description: The ID of the Access Requirement which requires a request to be submitted to gain access to a dataset. This request contains information that satisfies those requirements.
        researchProjectId:
          type: string
          description: The ID of the research project associated with this request.
        createdOn:
          type: string
          description: The date this request was created.
        modifiedOn:
          type: string
          description: The date this request was last modified.
        createdBy:
          type: string
          description: The ID of the user that created this request.
        modifiedBy:
          type: string
          description: The ID of the user that last modified this request.
        ducFileHandleId:
          type: string
          description: The Data Use Certificate uploaded by user.
        irbFileHandleId:
          type: string
          description: The Institutional Review Board Approval document uploaded by user.
        attachments:
          type: array
          items:
            type: string
          description: The set of file handle ID of attached files to this request.
        accessorChanges:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.dataaccess.AccessorChange'
            description: Request for a single user change access to a resource.
          description: List of user changes. A user can gain access, renew access or have access revoked.
        etag:
          type: string
          description: Synapse employs an Optimistic Concurrency Control (OCC) scheme to handle concurrent updates. Since the E-Tag changes every time a request is updated it is used to detect when a client's current representation of a request is out-of-date.
        concreteType:
          type: string
          description: Indicates which implementation of RequestInterface this object represents.
          enum:
            - org.sagebionetworks.repo.model.dataaccess.Renewal
        publication:
          type: string
          description: Link(s) to publication that used the controlled data.
        summaryOfUse:
          type: string
          description: Summary of how the data has been used.
      description: A Renewal contains information required by an AccessRequirement and additional information about renewing a request.
      required:
        - concreteType
    org.sagebionetworks.repo.model.grid.FeaturePriority:
      type: string
      enum:
        - low
        - medium
        - high
        - critical
    org.sagebionetworks.repo.model.agent.SessionHistoryRequest:
      type: object
      properties:
        nextPageToken:
          type: string
          description: Forward the returned 'nextPageToken' to get the next page of results.
      description: Request a single page of a session's history.  The history is ordered by the interaction time stamp descending.
    org.sagebionetworks.repo.model.drs.ChecksumType:
      type: string
      enum:
        - md5
    org.sagebionetworks.repo.model.download.ActionRequiredRequest:
      type: object
      properties:
        concreteType:
          type: string
          description: 'Required. For this type the value should be: ''org.sagebionetworks.repo.model.download.ActionRequiredRequest'''
          enum:
            - org.sagebionetworks.repo.model.download.ActionRequiredRequest
        nextPageToken:
          type: string
          description: Forward the resulting nextPageToken from a previous request to get the next page of results.
      description: Request to get a single page of actions that the user must take to download one or more files from their download list.
      required:
        - concreteType
    org.sagebionetworks.repo.model.dataaccess.AccessApprovalSearchRequest:
      type: object
      properties:
        accessorId:
          type: string
          description: Filter by the id of the principal that is an accessor in the approval. Note that the submitter is always part of the accessors. This field is required.
        accessRequirementId:
          type: string
          description: Filter by the id of the access requirement of the approvals.
        sort:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.dataaccess.AccessApprovalSearchSort'
            description: Identifies both the field and direction for a single sort operation
        nextPageToken:
          type: string
          description: A token used to get the next page of a request.
      description: A request to search through the access approval history
      required:
        - accessorId
    org.sagebionetworks.repo.model.message.PublishResult:
      type: object
      properties:
        changeNumber:
          type: integer
          description: The application change number created as a result of this change.
          format: int32
        success:
          type: boolean
          description: True when published successfully.
      description: JSON schema for a change message
    org.sagebionetworks.repo.model.table.SnapshotResponse:
      type: object
      properties:
        snapshotVersionNumber:
          type: integer
          description: The version number of the resulting snapshot.
          format: int32
      description: Response to creating a snapshot of a table of view.
    org.sagebionetworks.repo.model.principal.PrincipalAliasRequest:
      type: object
      properties:
        alias:
          type: string
          description: The alias to bind to the principal
        type:
          type: string
          description: The enumeration of the possible alias types that can be bound to a principal.  Note, these names must match those in AliasEnum. For an OAuthProvider type the matching alias is prefixed with USER_
          enum:
            - USER_NAME
            - TEAM_NAME
            - USER_EMAIL
            - USER_OPEN_ID
            - USER_ORCID
      description: The request to look a principal alias up
    org.sagebionetworks.repo.model.AccessRequirement:
      type: object
      properties:
        versionNumber:
          type: integer
          description: The version number issued to this version on the object.
          format: int32
        id:
          type: integer
          description: The unique immutable ID.  Provided by the system, the user may not set this field.
          format: int32
        description:
          type: string
          description: Depricated. Replaced by name.
        name:
          type: string
          description: Name of the AR. Limited to 50 characters and must be unique. Required.
        etag:
          type: string
          description: Synapse employs an Optimistic Concurrency Control (OCC) scheme to handle concurrent updates. Since the E-Tag changes every time an entity is updated it is used to detect when a client's current representation of an object is out-of-date.
        createdOn:
          type: string
          description: The date this object was created. Provided by the system, the user may not set this field.
        modifiedOn:
          type: string
          description: The date this object was last modified. Provided by the system, the user may not set this field.
        createdBy:
          type: string
          description: The user that created this object.  Provided by the system, the user may not set this field.
        modifiedBy:
          type: string
          description: The user that last modified this object.  Provided by the system, the user may not set this field.
        subjectsDefinedByAnnotations:
          type: boolean
          description: Defaults to 'false'.  When 'true', the subjects controlled by this AR are defined by the the'_accessRequirementIds' annotations on individual entities.  This property is mutually exclusive with 'subjectIds'.  If this is set to 'true' then 'subjectIds' must be excluded or empty.
        subjectIds:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.RestrictableObjectDescriptor'
          description: The IDs of the items controlled by this Access Requirement when 'subjectsDefinedByAnnotations=false'. This property is mutually exclusive with 'subjectsDefinedByAnnotations'.  When 'subjectsDefinedByAnnotations=true' then this property must be empty or excluded.  Required when creating or updating and 'subjectsDefinedByAnnotations=false' or 'subjectsDefinedByAnnotations' is excluded.
        accessType:
          type: string
          description: The enumeration of possible permission.
          enum:
            - CREATE
            - READ
            - UPDATE
            - DELETE
            - CHANGE_PERMISSIONS
            - DOWNLOAD
            - UPLOAD
            - PARTICIPATE
            - SUBMIT
            - READ_PRIVATE_SUBMISSION
            - UPDATE_SUBMISSION
            - DELETE_SUBMISSION
            - TEAM_MEMBERSHIP_UPDATE
            - SEND_MESSAGE
            - CHANGE_SETTINGS
            - MODERATE
            - REVIEW_SUBMISSIONS
            - EXEMPTION_ELIGIBLE
        concreteType:
          type: string
          description: Indicates which type of AccessRequirement this object represents.  Provided by the system, the user may not set this field.
      description: 'Interface for JSON schema for AccessRequirement.  The Access Requirement mechanism is distinct from the access control list in that it is controlled not by the entity owner but by a separate authority:  Access Requirements are created and maintained by the Synapse Access and Compliance Team (ACT).  ACTAccessRequirements can only be approved by the ACT.  Self-sign Access Requirements can be approved by the user desiring access, but said user first has to meet ''terms of use'' associated with the requirement.'
      oneOf:
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.PostMessageContentAccessRequirement'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.TermsOfUseAccessRequirement'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.ManagedACTAccessRequirement'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.SelfSignAccessRequirement'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.ACTAccessRequirement'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.LockAccessRequirement'
      required:
        - concreteType
      discriminator:
        propertyName: concreteType
    org.sagebionetworks.repo.model.feature.FeatureStatus:
      type: object
      properties:
        feature:
          type: string
          description: The name of the feature that can be enabled or disabled globally
          enum:
            - DATA_ACCESS_NOTIFICATIONS
            - DATA_ACCESS_AUTO_REVOCATION
            - MULTIPART_AUTO_CLEANUP
            - DATA_DOWNLOAD_THROUGH_CLOUDFRONT
            - CHANGE_PASSWORD_2FA_CHECK_BYPASS
            - USE_NEW_ASYNC_GOOGLE_MULTIPART_UPLOAD
            - ENFORCE_PROJECT_STORAGE_LIMITS
            - ALLOW_AGENT_WRITES
            - DISABLE_2FA_REQUIREMENT
        enabled:
          type: boolean
          description: True if the feature is enabled, false otherwise
      description: The status of a particular feature
    org.sagebionetworks.repo.model.file.MultipartUploadCopyRequest:
      type: object
      properties:
        concreteType:
          type: string
          description: Indicates which type of multi-part request to initiate. Currently supports <a href="${org.sagebionetworks.repo.model.file.MultipartUploadRequest}">MultipartUploadRequest</a> and <a href="${org.sagebionetworks.repo.model.file.MultipartUploadCopyRequest}">MultipartUploadCopyRequest</a>
          enum:
            - org.sagebionetworks.repo.model.file.MultipartUploadCopyRequest
        partSizeBytes:
          type: integer
          description: 'In order to copy a file, the client must split the process into ''parts'' and copy each part separately. This indicates the clients intended part size in bytes. Part size must be at least 5,242,880 bytes (5MB) with a max of 5,368,709,120 bytes (5GB). Also the maximum number of parts for a single file is 10K. The recommended part size for a single file copy should be: MAX(104857600, (originalFileSizeBytes/10000)).'
          format: int32
        fileName:
          type: string
          description: The name of the file to be uploaded.
        storageLocationId:
          type: integer
          description: The identifier of the storage location where this file should be copied to. The user must be the owner of the storage location.
          format: int32
        generatePreview:
          type: boolean
          description: Optional parameter.  When set to 'false' a preview will not be generated for the resulting file.
        sourceFileHandleAssociation:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.file.FileHandleAssociation'
          description: Describes an association of a FileHandle with another object.
      description: A multi-part upload that performs a copy of an existing file handle without data transfer from the client. Currently supports only copy from and to S3 buckets that live in the same region.
      required:
        - concreteType
    org.sagebionetworks.repo.model.webhook.VerifyWebhookRequest:
      type: object
      properties:
        verificationCode:
          type: string
          description: The verification code received by the webhook endpoint.
      description: Request body used to verify a webhook, the verification code is sent to the webhook endpoint when the webhook is created or when its endpoint is modified.
    org.sagebionetworks.repo.model.asynch.AsyncJobId:
      type: object
      properties:
        token:
          type: string
      description: Object used to track the status of an asynchronous job.
    org.sagebionetworks.repo.model.TeamMemberTypeFilterOptions:
      type: string
      enum:
        - ADMIN
        - MEMBER
        - ALL
    org.sagebionetworks.repo.model.principal.AliasList:
      type: object
      properties:
        list:
          type: array
          items:
            type: string
      description: List of principal aliases
    org.sagebionetworks.repo.model.audit.FileHandleSnapshot:
      type: object
      properties:
        id:
          type: string
          description: The ID of this FileHandle.  All references to this FileHandle will use this ID. Synapse will generate this ID when the FileHandle is created.
        createdBy:
          type: string
          description: The ID Of the user that created this file.
        createdOn:
          type: string
          description: The date when this file was uploaded.
        modifiedOn:
          type: string
          description: The date when this file was updated. Handled by the backend only.
        concreteType:
          type: string
          description: 'This is used to indicate the implementation of this interface. For example, an S3FileHandle should be set to: org.sagebionetworks.repo.model.file.S3FileHandle'
          enum:
            - org.sagebionetworks.repo.model.audit.FileHandleSnapshot
        contentMd5:
          type: string
          description: The file's content MD5.
        contentType:
          type: string
          description: The file's content type.'
        fileName:
          type: string
          description: The short, user visible name for this file.
        storageLocationId:
          type: integer
          description: The optional storage location descriptor
          format: int32
        contentSize:
          type: integer
          description: The size of the file in bytes.
          format: int32
        key:
          type: string
          description: Either the S3 bucket key or URL that points to an external file.
        bucket:
          type: string
          description: The S3 bucket where the file is stored. Null if the file is not stored in an S3 bucket.
        previewId:
          type: string
          description: If this file has a preview, then this will be the file ID of the preview.
        isPreview:
          type: boolean
          description: Whether or not this is a preview of another file
        status:
          type: string
          description: The status of the file handle as computed by the backend. This value cannot be changed, any file handle that is not AVAILABLE should not be used.
          enum:
            - AVAILABLE
            - UNLINKED
            - ARCHIVED
      description: The FileHandleSnapshot captures all of the fields that are common to all FileHandle implementations.
      required:
        - concreteType
    org.sagebionetworks.repo.model.file.FileDownloadCode:
      type: string
      enum:
        - NOT_FOUND
        - UNAUTHORIZED
        - DUPLICATE
        - EXCEEDS_SIZE_LIMIT
        - UNKNOWN_ERROR
    PaginatedResultsOfEvaluation:
      type: object
      properties:
        totalNumberOfResults:
          type: integer
          description: Calculating the actual totalNumberOfResults is not longer supported. Therefore, for each page, the totalNumberOfResults is estimated using the current page, limit, and offset. When the page size equals the limit, the totalNumberOfResults will be offset+pageSize+ 1. Otherwise, the totalNumberOfResults will be offset+pageSize.
          format: int32
        results:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.evaluation.model.Evaluation'
    org.sagebionetworks.repo.model.migration.IdRange:
      type: object
      properties:
        minimumId:
          type: integer
          description: The first ID in the range.
          format: int32
        maximumId:
          type: integer
          description: The last ID in the range plus one.
          format: int32
      description: A range of IDs
    org.sagebionetworks.repo.model.oauth.OAuthValidationRequest:
      type: object
      properties:
        provider:
          type: string
          description: Supported OAuth providers
          enum:
            - GOOGLE_OAUTH_2_0
            - ORCID
        authenticationCode:
          type: string
          description: The authorization code passed with the redirectUrl after successful user authentication from a 3rd party OAuth provider.  This code is used by Synapse to lookup the user's information from the OAuthProvider.
        redirectUrl:
          type: string
          description: This must be the same redirect URL used to in the first step.  This parameter is required by Google but not by all oauth providers.
      description: Request for an OAuth2 user validation.
    PaginatedResultsOfMessageToUser:
      type: object
      properties:
        totalNumberOfResults:
          type: integer
          description: Calculating the actual totalNumberOfResults is not longer supported. Therefore, for each page, the totalNumberOfResults is estimated using the current page, limit, and offset. When the page size equals the limit, the totalNumberOfResults will be offset+pageSize+ 1. Otherwise, the totalNumberOfResults will be offset+pageSize.
          format: int32
        results:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.message.MessageToUser'
    org.sagebionetworks.repo.model.BatchAccessApprovalInfoRequest:
      type: object
      properties:
        userId:
          type: string
          description: The ID of the user.
        accessRequirementIds:
          type: array
          items:
            type: string
          description: The ID of the access requirements.
      description: Request for a batch of AccessApprovalInfo.
    org.sagebionetworks.repo.model.daemon.BackupAliasType:
      type: string
      enum:
        - TABLE_NAME
        - MIGRATION_TYPE_NAME
    org.sagebionetworks.repo.model.schema.GetValidationSchemaRequest:
      type: object
      properties:
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.schema.GetValidationSchemaRequest
        $id:
          type: string
          description: The $id of the JSON schema to get the validation schema for.
      description: To use a JSON schema for validation, the JSON schema plus all of its dependency schemas must be provided to a JSON schema validator.  The 'validation' schema is simply a JSON schema with all of its dependencies added to the 'definitions' section of the schema, making the schema self-contained.
      required:
        - concreteType
    org.sagebionetworks.repo.model.file.FileHandleStatus:
      type: string
      enum:
        - AVAILABLE
        - UNLINKED
        - ARCHIVED
    org.sagebionetworks.repo.model.RecordSet:
      type: object
      properties:
        name:
          type: string
          description: 'The name of this entity.  Must be 256 characters or less. Names may only contain: letters, numbers, spaces, underscores, hyphens, periods, plus signs, apostrophes, and parentheses'
        description:
          type: string
          description: The description of this entity.  Must be 1000 characters or less.
        id:
          type: string
          description: The unique immutable ID for this entity.  A new ID will be generated for new Entities.  Once issued, this ID is guaranteed to never change or be re-issued
        etag:
          type: string
          description: Synapse employs an Optimistic Concurrency Control (OCC) scheme to handle concurrent updates. Since the E-Tag changes every time an entity is updated it is used to detect when a client's current representation of an entity is out-of-date.
        createdOn:
          type: string
          description: The date this entity was created.
        modifiedOn:
          type: string
          description: The date this entity was last modified.
        createdBy:
          type: string
          description: The ID of the user that created this entity.
        modifiedBy:
          type: string
          description: The ID of the user that last modified this entity.
        parentId:
          type: string
          description: The ID of the Entity that is the parent of this Entity.
        concreteType:
          type: string
          description: Indicates which implementation of Entity this object represents.  The value is the fully qualified class name, e.g. org.sagebionetworks.repo.model.FileEntity.
          enum:
            - org.sagebionetworks.repo.model.RecordSet
        versionNumber:
          type: integer
          description: The version number issued to this version on the object.
          format: int32
        versionLabel:
          type: string
          description: The version label for this entity
        versionComment:
          type: string
          description: The version comment for this entity
        isLatestVersion:
          type: boolean
          description: If this is the latest version of the object.
        dataFileHandleId:
          type: string
          description: ID of the file associated with this entity.
        upsertKey:
          type: array
          items:
            type: string
          description: One or more column names that define this upsert key for this set.  This key is used to determine if a new record should be treated as an update or an insert.
        csvDescriptor:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.CsvTableDescriptor'
          description: The description of a csv for upload or download.
        validationSummary:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.schema.ValidationSummaryStatistics'
          description: Summary statistics for the JSON schema validation results for the children of an Entity container (Project or Folder)
        fileNameOverride:
          type: string
          description: An optional replacement for the name of the uploaded file.  This is distinct from the entity name.  If omitted the file will retain its original name.
      description: Captures record-based metadata as a special type of CSV. The record set content can be curated using the grid services.
      required:
        - concreteType
    org.sagebionetworks.repo.model.EntityChildrenResponse:
      type: object
      properties:
        page:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.EntityHeader'
            description: JSON schema for EntityHeader POJO
          description: The headers of each child.
        nextPageToken:
          type: string
          description: Token that can be used to get the next page.  Null if there are no more results.
        totalChildCount:
          type: integer
          description: The total number of children with the requested parentId and types.  Only returned if requested.
          format: int32
        sumFileSizesBytes:
          type: integer
          description: The sum of the file sizes (bytes) with the requested parentId and types. Only returned if requested.
          format: int32
      description: Response of EntityHeaders for the children of a given parent Entity
    org.sagebionetworks.repo.model.auth.AccessTokenRecordList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.auth.AccessTokenRecord'
            description: Metadata related to an issued personal access token. After the token has been generated, it cannot be retrieved.
        nextPageToken:
          type: string
          description: The token to get the next page of results.
      description: Metadata for a paginated list of personal access token records.
    org.sagebionetworks.repo.model.migration.BackfillLastSeenOnResponse:
      type: object
      properties:
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.migration.BackfillLastSeenOnResponse
        count:
          type: integer
          description: The count of users processed in the request.
          format: int32
      description: Results for a lastSeenOn backfill request.
      required:
        - concreteType
    PaginatedResultsOfSubmissionStatus:
      type: object
      properties:
        totalNumberOfResults:
          type: integer
          description: Calculating the actual totalNumberOfResults is not longer supported. Therefore, for each page, the totalNumberOfResults is estimated using the current page, limit, and offset. When the page size equals the limit, the totalNumberOfResults will be offset+pageSize+ 1. Otherwise, the totalNumberOfResults will be offset+pageSize.
          format: int32
        results:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.evaluation.model.SubmissionStatus'
    org.sagebionetworks.repo.model.file.DownloadOrder:
      type: object
      properties:
        files:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.file.FileHandleAssociation'
            description: Describes an association of a FileHandle with another object.
          description: The list of files included in this order.
        orderId:
          type: string
          description: The ID of this order.
        createdBy:
          type: string
          description: The ID of the user that created this order.
        createdOn:
          type: string
          description: The date-time when the order was created.
        zipFileName:
          type: string
          description: The name of the file containing this order.
        totalSizeBytes:
          type: integer
          description: The total size of all files in this order in bytes (uncompressed).
          format: int32
        totalNumberOfFiles:
          type: integer
          description: The total number of files in this download order.
          format: int32
      description: The files of a download order.
    org.sagebionetworks.repo.model.form.SubmissionStatus:
      type: object
      properties:
        submittedOn:
          type: string
          description: The date when the object was submitted.
        reviewedOn:
          type: string
          description: The date when this submission was reviewed.
        reviewedBy:
          type: string
          description: The id of the service user that reviewed the submission.
        state:
          type: string
          description: The enumeration of possible FormData submission states.
          enum:
            - WAITING_FOR_SUBMISSION
            - SUBMITTED_WAITING_FOR_REVIEW
            - ACCEPTED
            - REJECTED
        rejectionMessage:
          type: string
          description: The message provided by the reviewer when a submission is rejected.
      description: The status of a a submitted FormData object.
    org.sagebionetworks.repo.model.UserPreference:
      type: object
      properties:
        name:
          type: string
          description: The name of the user preference.
        concreteType:
          type: string
      description: User preferences
      oneOf:
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.UserPreferenceBoolean'
      required:
        - concreteType
      discriminator:
        propertyName: concreteType
    org.sagebionetworks.repo.model.drs.Checksum:
      type: object
      properties:
        checksum:
          type: string
          description: The hex-encoded md5 string.
        type:
          type: string
          description: The digest method used to create the checksum eg md5.
          enum:
            - md5
      description: The hex-string encoded checksum for the drs object. At least one checksum must be provided. For blobs, the checksum is computed over the bytes in the blob that is md5. For bundles, the checksum is computed over a sorted concatenation of the checksums of its top-level contained objects.
    org.sagebionetworks.repo.model.subscription.Subscription:
      type: object
      properties:
        subscriptionId:
          type: string
          description: The ID of this subscription
        subscriberId:
          type: string
          description: The ID of the user who created this subscription
        objectId:
          type: string
          description: The ID of the object that being subscribed
        objectType:
          type: string
          description: The types of object that can be subscribed.
          enum:
            - FORUM
            - THREAD
            - DATA_ACCESS_SUBMISSION
            - DATA_ACCESS_SUBMISSION_STATUS
        createdOn:
          type: string
          description: The timestamp when this subscription was created
      description: The model object represents a single Subscription.
    org.sagebionetworks.repo.model.search.query.FacetSortOptions:
      type: string
      enum:
        - ALPHA
        - COUNT
        - MAX
        - SUM
    org.sagebionetworks.repo.model.file.AddFileToDownloadListRequest:
      type: object
      properties:
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.file.AddFileToDownloadListRequest
        folderId:
          type: string
          description: 'The ID of the folder containing the files to add to the user''s download list. Note: Only the files in this folder will be added to the download list, files in sub-folders will not be added. Should be null if setting a ''query''.'
        query:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.Query'
      description: Request to add either the children of a folder or the files of a view query to the user's download list.
      required:
        - concreteType
    org.sagebionetworks.repo.model.RestrictionFulfillment:
      type: object
      properties:
        accessRequirementId:
          type: integer
          description: The id of the access requirement that applies
          format: int32
        isApproved:
          type: boolean
          description: True if the user has an approval for the access requirement or if they are the owner of the data. Note that this property does not take into account an access requirement exemption.
        isMet:
          type: boolean
          description: True if the user meets the access requirement. Note that this property takes into account the access requirement exemption.
        isExempt:
          type: boolean
          description: True if the user is both a data contributor and eligible for exemption on the access requirement.
      description: Provides information about a restriction fulfillment for a user in the context of a restrictable object and access requirement
    org.sagebionetworks.repo.model.Preview:
      type: object
      properties:
        name:
          type: string
          description: 'The name of this entity.  Must be 256 characters or less. Names may only contain: letters, numbers, spaces, underscores, hyphens, periods, plus signs, apostrophes, and parentheses'
        description:
          type: string
          description: The description of this entity.  Must be 1000 characters or less.
        id:
          type: string
          description: The unique immutable ID for this entity.  A new ID will be generated for new Entities.  Once issued, this ID is guaranteed to never change or be re-issued
        etag:
          type: string
          description: Synapse employs an Optimistic Concurrency Control (OCC) scheme to handle concurrent updates. Since the E-Tag changes every time an entity is updated it is used to detect when a client's current representation of an entity is out-of-date.
        createdOn:
          type: string
          description: The date this entity was created.
        modifiedOn:
          type: string
          description: The date this entity was last modified.
        createdBy:
          type: string
          description: The ID of the user that created this entity.
        modifiedBy:
          type: string
          description: The ID of the user that last modified this entity.
        parentId:
          type: string
          description: The ID of the Entity that is the parent of this Entity.
        concreteType:
          type: string
          description: Indicates which implementation of Entity this object represents.  The value is the fully qualified class name, e.g. org.sagebionetworks.repo.model.FileEntity.
          enum:
            - org.sagebionetworks.repo.model.Preview
        previewString:
          type: string
          description: The String value of a preview
        headers:
          type: array
          items:
            type: string
        rows:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.Row'
            description: JSON schema for Row POJO
      description: This object is deprecated and will be removed in future versions of Synapse.
      required:
        - concreteType
    org.sagebionetworks.repo.model.PostMessageContentAccessRequirement:
      type: object
      properties:
        versionNumber:
          type: integer
          description: The version number issued to this version on the object.
          format: int32
        id:
          type: integer
          description: The unique immutable ID.  Provided by the system, the user may not set this field.
          format: int32
        description:
          type: string
          description: Depricated. Replaced by name.
        name:
          type: string
          description: Name of the AR. Limited to 50 characters and must be unique. Required.
        etag:
          type: string
          description: Synapse employs an Optimistic Concurrency Control (OCC) scheme to handle concurrent updates. Since the E-Tag changes every time an entity is updated it is used to detect when a client's current representation of an object is out-of-date.
        createdOn:
          type: string
          description: The date this object was created. Provided by the system, the user may not set this field.
        modifiedOn:
          type: string
          description: The date this object was last modified. Provided by the system, the user may not set this field.
        createdBy:
          type: string
          description: The user that created this object.  Provided by the system, the user may not set this field.
        modifiedBy:
          type: string
          description: The user that last modified this object.  Provided by the system, the user may not set this field.
        subjectsDefinedByAnnotations:
          type: boolean
          description: Defaults to 'false'.  When 'true', the subjects controlled by this AR are defined by the the'_accessRequirementIds' annotations on individual entities.  This property is mutually exclusive with 'subjectIds'.  If this is set to 'true' then 'subjectIds' must be excluded or empty.
        subjectIds:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.RestrictableObjectDescriptor'
          description: The IDs of the items controlled by this Access Requirement when 'subjectsDefinedByAnnotations=false'. This property is mutually exclusive with 'subjectsDefinedByAnnotations'.  When 'subjectsDefinedByAnnotations=true' then this property must be empty or excluded.  Required when creating or updating and 'subjectsDefinedByAnnotations=false' or 'subjectsDefinedByAnnotations' is excluded.
        accessType:
          type: string
          description: The enumeration of possible permission.
          enum:
            - CREATE
            - READ
            - UPDATE
            - DELETE
            - CHANGE_PERMISSIONS
            - DOWNLOAD
            - UPLOAD
            - PARTICIPATE
            - SUBMIT
            - READ_PRIVATE_SUBMISSION
            - UPDATE_SUBMISSION
            - DELETE_SUBMISSION
            - TEAM_MEMBERSHIP_UPDATE
            - SEND_MESSAGE
            - CHANGE_SETTINGS
            - MODERATE
            - REVIEW_SUBMISSIONS
            - EXEMPTION_ELIGIBLE
        concreteType:
          type: string
          description: Indicates which type of AccessRequirement this object represents.  Provided by the system, the user may not set this field.
          enum:
            - org.sagebionetworks.repo.model.PostMessageContentAccessRequirement
        url:
          type: string
          description: The URL of the IFrame to be displayed for the user.  Required when creating or updating.
      description: This class is deprecated and should not being used.
      required:
        - concreteType
    org.sagebionetworks.repo.model.UserGroup:
      type: object
      properties:
        id:
          type: string
          description: The id of either the user or group.
        isIndividual:
          type: boolean
          description: True if this is a user, false if it is a group
        etag:
          type: string
          description: Used to detect when a client's current representation of a user or group is out-of-date.
        creationDate:
          type: string
          description: The date this user or group was created.
        uri:
          type: string
      description: JSON schema for UserGroup POJO
    org.sagebionetworks.repo.model.IdList:
      type: object
      properties:
        list:
          type: array
          items:
            type: integer
            format: int32
      description: List of IDs
    org.sagebionetworks.repo.model.table.TableState:
      type: string
      enum:
        - AVAILABLE
        - PROCESSING
        - PROCESSING_FAILED
    org.sagebionetworks.repo.model.ResourceAccess:
      type: object
      properties:
        principalId:
          type: integer
          description: The id of the principal who is granted access
          format: int32
        accessType:
          type: array
          items:
            type: string
            description: The enumeration of possible permission.
            enum:
              - CREATE
              - READ
              - UPDATE
              - DELETE
              - CHANGE_PERMISSIONS
              - DOWNLOAD
              - UPLOAD
              - PARTICIPATE
              - SUBMIT
              - READ_PRIVATE_SUBMISSION
              - UPDATE_SUBMISSION
              - DELETE_SUBMISSION
              - TEAM_MEMBERSHIP_UPDATE
              - SEND_MESSAGE
              - CHANGE_SETTINGS
              - MODERATE
              - REVIEW_SUBMISSIONS
              - EXEMPTION_ELIGIBLE
          description: A list of types of access granted to the given principal
          uniqueItems: true
      description: JSON schema for a ResourceAccess POJO
    org.sagebionetworks.repo.model.table.VirtualTable:
      type: object
      properties:
        name:
          type: string
          description: 'The name of this entity.  Must be 256 characters or less. Names may only contain: letters, numbers, spaces, underscores, hyphens, periods, plus signs, apostrophes, and parentheses'
        description:
          type: string
          description: The description of this entity.  Must be 1000 characters or less.
        id:
          type: string
          description: The unique immutable ID for this entity.  A new ID will be generated for new Entities.  Once issued, this ID is guaranteed to never change or be re-issued
        etag:
          type: string
          description: Synapse employs an Optimistic Concurrency Control (OCC) scheme to handle concurrent updates. Since the E-Tag changes every time an entity is updated it is used to detect when a client's current representation of an entity is out-of-date.
        createdOn:
          type: string
          description: The date this entity was created.
        modifiedOn:
          type: string
          description: The date this entity was last modified.
        createdBy:
          type: string
          description: The ID of the user that created this entity.
        modifiedBy:
          type: string
          description: The ID of the user that last modified this entity.
        parentId:
          type: string
          description: The ID of the Entity that is the parent of this Entity.
        concreteType:
          type: string
          description: Indicates which implementation of Entity this object represents.  The value is the fully qualified class name, e.g. org.sagebionetworks.repo.model.FileEntity.
          enum:
            - org.sagebionetworks.repo.model.table.VirtualTable
        versionNumber:
          type: integer
          description: The version number issued to this version on the object.
          format: int32
        versionLabel:
          type: string
          description: The version label for this entity
        versionComment:
          type: string
          description: The version comment for this entity
        isLatestVersion:
          type: boolean
          description: If this is the latest version of the object.
        columnIds:
          type: array
          items:
            type: string
          description: The columns of a virtual table are dynamic based on the select statement of the definingSQL. This list of columnIds is for read only, and will be ignored for create and update operations.
        isSearchEnabled:
          type: boolean
          description: When creating or updating a table or view specifies if full text search should be enabled.  Note that enabling full text search might slow down the indexing of the table or view.
        definingSQL:
          type: string
          description: The synapse SQL statement that defines the data in the virtual table. The SQL CANNOT contain JOIN/UNION clauses on multiple tables.
      description: A virtual table is a type of table whose content is defined by a synapse SQL query. Its content is NOT persisted and any query on a virtual table will run the defined SQL statement. The defining SQL of the virtual table CANNOT contain JOIN clauses on multiple tables.
      required:
        - concreteType
    org.sagebionetworks.repo.model.search.FacetConstraint:
      type: object
      properties:
        value:
          type: string
          description: The value of the facet constraint
        count:
          type: integer
          description: The number of search results that are in this particular facet constraint
          format: int32
      description: JSON schema for a Facet Constraint for a particular facet in the search results.
    org.sagebionetworks.repo.model.TrashedEntity:
      type: object
      properties:
        entityId:
          type: string
          description: The id of the entity.
        entityName:
          type: string
          description: The name of this entity
        entityType:
          type: string
          description: Type of the Entity
          enum:
            - project
            - folder
            - file
            - table
            - link
            - entityview
            - dockerrepo
            - submissionview
            - dataset
            - datasetcollection
            - materializedview
            - virtualtable
            - recordset
        deletedByPrincipalId:
          type: string
          description: The ID of the user who deleted the entity.
        deletedOn:
          type: string
          description: The date and time when the deletion occurred.
        originalParentId:
          type: string
          description: The ID of the original parent before deletion.
      description: JSON schema for the TrashEntity POJO. A trashed entity is an entity in the trash can.
    org.sagebionetworks.repo.model.dataaccess.AccessRequirementStatus:
      type: object
      properties:
        accessRequirementId:
          type: string
          description: The ID of the requested AccessRequirement.
        concreteType:
          type: string
          description: Indicates which implementation of AccessRequirementStatus this object represents.
        isApproved:
          type: boolean
          description: True if there is an AccessApproval for the user for the given AccessRequirement.
        expiredOn:
          type: string
          description: The date that the user no longer have access to the data.
      description: The status of a user meeting an AccessRequirement.
      oneOf:
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.dataaccess.BasicAccessRequirementStatus'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.dataaccess.ManagedACTAccessRequirementStatus'
      required:
        - concreteType
      discriminator:
        propertyName: concreteType
    org.sagebionetworks.repo.model.report.DownloadStorageReportResponse:
      type: object
      properties:
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.report.DownloadStorageReportResponse
        resultsFileHandleId:
          type: string
          description: The resulting file handle ID can be used to download the CSV file created by this job.
      description: The response body of an asynchronous storage report CSV download job.
      required:
        - concreteType
    org.sagebionetworks.repo.model.dataaccess.AccessorGroupResponse:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.dataaccess.AccessorGroup'
            description: A group of accessors who gained access by the same submitter.
        nextPageToken:
          type: string
          description: The token to get the next page result.
      description: A page of AccessorGroup.
    org.sagebionetworks.repo.model.agent.UpdateAgentSessionRequest:
      type: object
      properties:
        sessionId:
          type: string
          description: The sessionId issued by Synapse when the session was started.
        agentAccessLevel:
          type: string
          description: Defines the level of data access that the agent will be given during a session.
          enum:
            - PUBLICLY_ACCESSIBLE
            - READ_YOUR_PRIVATE_DATA
            - WRITE_YOUR_PRIVATE_DATA
      description: Update the access level of an existing session.
    org.sagebionetworks.repo.model.table.FacetColumnResultValues:
      type: object
      properties:
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.table.FacetColumnResultValues
        columnName:
          type: string
          description: The name of the faceted column
        facetType:
          type: string
          description: Set to one of the enumerated values to indicate a column should be treated as a facet
          enum:
            - enumeration
            - range
        jsonPath:
          type: string
          description: 'When present, these results represent a sub-column identified by its jsonPath.  Note: The ColumnName will be the name of the root JSON column.'
        facetValues:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.FacetColumnResultValueCount'
            description: A pair containing the value of a column and the number of times that value appears
          description: 'The list of QueryFacetResultValue that contain frequency counts for its most frequent values '
      description: Contains the name and type of the filtered column, and its most frequent values along with the counts of those values.
      required:
        - concreteType
    org.sagebionetworks.repo.model.file.ExternalObjectStoreFileHandle:
      type: object
      properties:
        id:
          type: string
          description: The ID of this FileHandle.  All references to this FileHandle will use this ID.  Synapse will generate this ID when the FileHandle is created.
        etag:
          type: string
          description: FileHandles are immutable from the perspective of the API.  The only field that can be change is the previewId.  When a new previewId is set, the etag will change.
        createdBy:
          type: string
          description: The ID Of the user that created this file.
        createdOn:
          type: string
          description: The date when this file was uploaded.
        modifiedOn:
          type: string
          description: The date when the file was modified. This is handled by the backend and cannot be modified.
        concreteType:
          type: string
          description: 'This is used to indicate the implementation of this interface. For example, an S3FileHandle should be set to: org.sagebionetworks.repo.model.file.S3FileHandle'
          enum:
            - org.sagebionetworks.repo.model.file.ExternalObjectStoreFileHandle
        contentType:
          type: string
          description: 'Must be: http://en.wikipedia.org/wiki/Internet_media_type'
        contentMd5:
          type: string
          description: The file's content MD5.
        fileName:
          type: string
          description: The short, user visible name for this file.
        storageLocationId:
          type: integer
          description: The optional storage location descriptor
          format: int32
        contentSize:
          type: integer
          description: The size of the file in bytes.
          format: int32
        status:
          type: string
          description: The status of the file handle as computed by the backend. This value cannot be changed, any file handle that is not AVAILABLE should not be used.
          enum:
            - AVAILABLE
            - UNLINKED
            - ARCHIVED
        endpointUrl:
          type: string
          description: endpoint URL of the S3 service. Do NOT set this value when creating a ExternalObjectStoreFileHandle since it will be overwritten with the value defined in the ExternalObjectStorageLocationSetting it references.
        bucket:
          type: string
          description: the bucket to use. Do NOT set this value when creating a ExternalObjectStoreFileHandle since it will be  it will be overwritten with the value defined in the ExternalObjectStorageLocationSetting it references.
        fileKey:
          type: string
          description: The unique S3 key for this object
      description: Represents a file stored in an S3 Bucket to which Synapse cannot access. Together with ExternalObjectStorageLocationSetting, this object provides the information the client requires to access the S3 file.
      required:
        - fileKey
        - concreteType
    org.sagebionetworks.repo.model.annotation.LongAnnotation:
      type: object
      properties:
        key:
          type: string
          description: The key of this Annotation
        isPrivate:
          type: boolean
          description: Flag denoting whether this Annotation should be private.
        value:
          type: integer
          description: The value of this Annotation
          format: int32
      description: An Annotation containing a Long value
    ListWrapperOfColumnModel:
      type: object
      properties:
        list:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.ColumnModel'
    org.sagebionetworks.repo.model.table.EntityUpdateResults:
      type: object
      properties:
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.table.EntityUpdateResults
        updateResults:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.EntityUpdateResult'
            description: Result of a single Entity Update.
          description: List of Results
      description: A list of EntityUpdateResults
      required:
        - concreteType
    org.sagebionetworks.repo.model.principal.PrincipalAliasResponse:
      type: object
      properties:
        principalId:
          type: integer
          description: The ID of the principal to bind the alias too.
          format: int32
      description: The response of a principal alias lookup request
    PaginatedResultsOfMembershipInvitation:
      type: object
      properties:
        totalNumberOfResults:
          type: integer
          description: Calculating the actual totalNumberOfResults is not longer supported. Therefore, for each page, the totalNumberOfResults is estimated using the current page, limit, and offset. When the page size equals the limit, the totalNumberOfResults will be offset+pageSize+ 1. Otherwise, the totalNumberOfResults will be offset+pageSize.
          format: int32
        results:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.MembershipInvitation'
    org.sagebionetworks.repo.model.RSSFeed:
      type: object
      properties:
        title:
          type: string
          description: The title of this feed
        uri:
          type: string
          description: The uri of this feed
        author:
          type: string
          description: The author of this feed
        description:
          type: string
          description: The description of this feed.
        entries:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.RSSEntry'
            description: This contains items from an rss feed, and meta data about the rss feed itself
          description: The list of rss entries.
      description: This contains items from an rss feed, and meta data about the rss feed itself
    org.sagebionetworks.repo.model.dataaccess.NotificationType:
      type: string
      enum:
        - REVOCATION
        - FIRST_RENEWAL_REMINDER
        - SECOND_RENEWAL_REMINDER
    org.sagebionetworks.repo.model.dataaccess.SubmissionSearchRequest:
      type: object
      properties:
        accessorId:
          type: string
          description: Filter by the id of the principal that is an accessor in the submissions.
        accessRequirementId:
          type: string
          description: Filter by the id of the access requirement of the submissions.
        submissionState:
          type: string
          description: The state of a Submission.
          enum:
            - SUBMITTED
            - APPROVED
            - REJECTED
            - CANCELLED
        reviewerId:
          type: string
          description: A principal ID used to filter submissions whose access requirements can be reviewed by the specific reviewer.
        reviewerFilterType:
          type: string
          enum:
            - ALL
            - ACT_ONLY
            - DELEGATED_ONLY
        sort:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.dataaccess.SubmissionSearchSort'
            description: Identifies both the field and direction for a single sort operation
        nextPageToken:
          type: string
          description: A token used to get the next page of a request.
      description: A request to search through the data access submissions
    org.sagebionetworks.repo.model.drs.DrsObject:
      type: object
      properties:
        id:
          type: string
          description: 'An identifier unique to this DrsObject.A drs object id should be Synapse id with version which makes it immutable e.g syn32132536.1 '
        name:
          type: string
          description: A string that can be used to name a DrsObject. This string is made up of uppercase and lowercase letters, decimal digits, hypen, period, and underscore [A-Za-z0-9.-_].
        self_uri:
          type: string
          description: Drs self uri is drs://<hostname>/<id> and can be used by clients to store and pass around.
        size:
          type: integer
          description: For blobs, the blob size in bytes. For bundles, the cumulative size, in bytes, of items in the contents field.
          format: int32
        created_time:
          type: string
          description: Timestamp of object creation in RFC3339.
        updated_time:
          type: string
          description: Timestamp of object updated in RFC3339.
        version:
          type: string
          description: Version of drs object.
        mime_type:
          type: string
          description: 'The mime-type of the drs object. Must be: <a href="http://en.wikipedia.org/wiki/Internet_media_type"> Internet_media_type </a>'
        checksums:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.drs.Checksum'
            description: The hex-string encoded checksum for the drs object. At least one checksum must be provided. For blobs, the checksum is computed over the bytes in the blob that is md5. For bundles, the checksum is computed over a sorted concatenation of the checksums of its top-level contained objects.
          description: The hex-string encoded checksum for the drs object. At least one checksum must be provided. For blobs, the checksum is computed over the bytes in the blob that is md5. For bundles, the checksum is computed over a sorted concatenation of the checksums of its top-level contained objects.
        contents:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.drs.Content'
            description: For blob there is no contents and for bundle its list of object inside the bundle.
          description: For blob there is no contents and for bundle its list of object inside the bundle.
        access_methods:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.drs.AccessMethod'
            description: The list of access methods that can be used to fetch the DrsObject. Required for single blobs and bundles have no access method.
          description: The list of access methods that can be used to fetch the DrsObject. Required for single blobs and bundles have no access method.
        description:
          type: string
          description: A readable description of the DrsObject.
      description: The drs object metadata, Currently supported type is blob(DrsObject without contents array) and bundle(DrsObject with contents array).
    org.sagebionetworks.repo.model.file.FileHandleRestoreRequest:
      type: object
      properties:
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.file.FileHandleRestoreRequest
        fileHandleIds:
          type: array
          items:
            type: string
          description: The list of file handle ids to restore.
      description: Request used to restore a batch of file handles that might be UNLINKED or ARCHIVED. Note that only the owner of the file handle can initiate its restore.
      required:
        - concreteType
    org.sagebionetworks.repo.model.file.CloudProviderFileHandleInterface:
      type: object
      properties:
        id:
          type: string
          description: The ID of this FileHandle.  All references to this FileHandle will use this ID.  Synapse will generate this ID when the FileHandle is created.
        etag:
          type: string
          description: FileHandles are immutable from the perspective of the API.  The only field that can be change is the previewId.  When a new previewId is set, the etag will change.
        createdBy:
          type: string
          description: The ID Of the user that created this file.
        createdOn:
          type: string
          description: The date when this file was uploaded.
        modifiedOn:
          type: string
          description: The date when the file was modified. This is handled by the backend and cannot be modified.
        concreteType:
          type: string
          description: 'This is used to indicate the implementation of this interface. For example, an S3FileHandle should be set to: org.sagebionetworks.repo.model.file.S3FileHandle'
        contentType:
          type: string
          description: 'Must be: http://en.wikipedia.org/wiki/Internet_media_type'
        contentMd5:
          type: string
          description: The file's content MD5.
        fileName:
          type: string
          description: The short, user visible name for this file.
        storageLocationId:
          type: integer
          description: The optional storage location descriptor
          format: int32
        contentSize:
          type: integer
          description: The size of the file in bytes.
          format: int32
        status:
          type: string
          description: The status of the file handle as computed by the backend. This value cannot be changed, any file handle that is not AVAILABLE should not be used.
          enum:
            - AVAILABLE
            - UNLINKED
            - ARCHIVED
        bucketName:
          type: string
          description: The name of the bucket where this file resides
        key:
          type: string
          description: The path or resource name for this object
        previewId:
          type: string
          description: If this file has a preview, then this will be the file ID of the preview.
        isPreview:
          type: boolean
          description: Whether or not this is a preview of another file
      description: Defines the common fields of FileHandles that are uploaded to cloud providers such as AWS S3 and Google Cloud Storage.
      oneOf:
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.file.GoogleCloudFileHandle'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.file.S3FileHandle'
      required:
        - concreteType
      discriminator:
        propertyName: concreteType
    org.sagebionetworks.repo.model.file.FileHandleAssociation:
      type: object
      properties:
        fileHandleId:
          type: string
          description: The ID of the FileHandle.
        associateObjectId:
          type: string
          description: The ID of the object associated with the file
        associateObjectType:
          type: string
          description: Enumeration of all possible objects types that can be associated with a file.
          enum:
            - FileEntity
            - TableEntity
            - WikiAttachment
            - WikiMarkdown
            - UserProfileAttachment
            - MessageAttachment
            - TeamAttachment
            - SubmissionAttachment
            - VerificationSubmission
            - AccessRequirementAttachment
            - DataAccessRequestAttachment
            - DataAccessSubmissionAttachment
            - FormData
      description: Describes an association of a FileHandle with another object.
    org.sagebionetworks.repo.model.file.FileDownloadRecord:
      type: object
      properties:
        userId:
          type: string
          description: The ID of the user that downloaded the file.
        downloadedFile:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.file.FileHandleAssociation'
          description: Describes an association of a FileHandle with another object.
      description: Describes an association of a FileHandle with another object.
    org.sagebionetworks.evaluation.model.TeamSubmissionEligibility:
      type: object
      properties:
        teamId:
          type: string
          description: The ID of the Team of interest
        evaluationId:
          type: string
          description: The ID of the Evaluation of interest
        teamEligibility:
          $ref: '#/components/schemas/org.sagebionetworks.evaluation.model.SubmissionEligibility'
          description: Describes the eligibility of a to submit to an Evaluation queue, reflecting the queue's submission quotas and current submissions.
        membersEligibility:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.evaluation.model.MemberSubmissionEligibility'
            description: Describes the eligibility of an indivdiual to submit to an Evaluation queue, reflecting the queue's submission quotas and current submissions.
          description: Describes the submission eligibility of the contributors to the Submission.
        eligibilityStateHash:
          type: integer
          description: A hash of this object, used for optimistic concurrency.
          format: int32
      description: Describes the eligibility of a Challenge Team to submit to an Evalution queue, reflecting the queue's submission quotas and current submissions.
    org.sagebionetworks.repo.model.form.FormGroup:
      type: object
      properties:
        groupId:
          type: string
          description: Unique identifier provided by the system.
        name:
          type: string
          description: Unique name for the group provided by the caller.
        createdBy:
          type: string
          description: Id of the user that created this group
        createdOn:
          type: string
          description: The date this object was originally created.
      description: All form data belongs to a form group.  Access to the group is managed via the ACL of the group.
    org.sagebionetworks.repo.model.oauth.OAuthClientIdAndSecret:
      type: object
      properties:
        client_id:
          type: string
          description: The unique ID for the OAuth client, created by Synapse
        client_secret:
          type: string
          description: The shared secret used to exchange an access code for an access token.  Returned only during initial client creation.
      description: OAuth 2.0 Client ID and secret, generated when a new client is created
    org.sagebionetworks.repo.model.discussion.DiscussionSearchResponse:
      type: object
      properties:
        matches:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.discussion.Match'
            description: Represents a match for a search request in a forum, will include the forum and thread ids and if present the reply id matching a serch string
          description: A single page of results matching the original <a href="${org.sagebionetworks.repo.model.discussion.DiscussionSearchRequest}">DiscussionSearchRequest</a>.
        nextPageToken:
          type: string
          description: When present, then another page of results exists. Forward this token in another request to fetch the next page of results.
      description: The response to a <a href="${org.sagebionetworks.repo.model.discussion.DiscussionSearchRequest}">DiscussionSearchRequest</a>.
    org.sagebionetworks.repo.model.auth.CallersContext:
      type: object
      properties:
        sessionId:
          type: string
          description: Each web service request is issue a unique session ID (UUID) that is included in the call's access recored.  Events that are triggered by a web service request should include the session ID so that they can be linked to each other and the call's access record.
      description: Contextual information about a web service call.
    org.sagebionetworks.repo.model.auth.NewUser:
      type: object
      properties:
        email:
          type: string
          description: User's email
        firstName:
          type: string
          description: User's first name
        lastName:
          type: string
          description: User's last name
        userName:
          type: string
          description: A is a unique alias that will identify a user. A userName can only contain letters, numbers, dot (.), dash (-) and underscore (_) and must be at least 3 characters long.
        oauthProvider:
          type: string
          description: Supported OAuth providers
          enum:
            - GOOGLE_OAUTH_2_0
            - ORCID
        subject:
          type: string
          description: When the user is created through an oauth provider, this value identifies the user in the provider.
        encodedMembershipInvtnSignedToken:
          type: string
          description: Encoded signed token containing the information needed to retrieve a membership invitation.
      description: Fields required to create a new user account
    org.sagebionetworks.repo.model.ExampleEntity:
      type: object
      properties:
        name:
          type: string
          description: 'The name of this entity.  Must be 256 characters or less. Names may only contain: letters, numbers, spaces, underscores, hyphens, periods, plus signs, apostrophes, and parentheses'
        description:
          type: string
          description: The description of this entity.  Must be 1000 characters or less.
        id:
          type: string
          description: The unique immutable ID for this entity.  A new ID will be generated for new Entities.  Once issued, this ID is guaranteed to never change or be re-issued
        etag:
          type: string
          description: Synapse employs an Optimistic Concurrency Control (OCC) scheme to handle concurrent updates. Since the E-Tag changes every time an entity is updated it is used to detect when a client's current representation of an entity is out-of-date.
        createdOn:
          type: string
          description: The date this entity was created.
        modifiedOn:
          type: string
          description: The date this entity was last modified.
        createdBy:
          type: string
          description: The ID of the user that created this entity.
        modifiedBy:
          type: string
          description: The ID of the user that last modified this entity.
        parentId:
          type: string
          description: The ID of the Entity that is the parent of this Entity.
        concreteType:
          type: string
          description: Indicates which implementation of Entity this object represents.  The value is the fully qualified class name, e.g. org.sagebionetworks.repo.model.FileEntity.
          enum:
            - org.sagebionetworks.repo.model.ExampleEntity
        singleString:
          type: string
          description: This is an example of a single string
        stringList:
          type: array
          items:
            type: string
          description: This is an example of a list of strings
        singleDate:
          type: string
          description: This is an example of a single date
        dateList:
          type: array
          items:
            type: string
          description: This is an example of a list of dates
        singleDouble:
          type: number
          description: This is an example of a single Double
        doubleList:
          type: array
          items:
            type: number
          description: This is an example of a double list
        singleInteger:
          type: integer
          description: This is an example of a single Integer
          format: int32
        integerList:
          type: array
          items:
            type: integer
            format: int32
          description: This is an example of an Integer List.
        concept:
          type: string
          description: 'Type of tissue for the samples in this layer. <skos:altLabel>Tissue Types</skos:altLabel> Tissue is described by the Synapse ontology concept: http://synapse.sagebase.org/ontology#6501'
        someEnum:
          type: string
          description: The property is constrained by an enumeration
          enum:
            - CAT
            - DOG
            - FISH
        references:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.Reference'
            description: JSON schema for Reference POJO
          description: References
          uniqueItems: true
        environmentDescriptors:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.EnvironmentDescriptor'
            description: JSON schema for environment descriptor POJO
          description: The list of environment descriptors
          uniqueItems: true
      description: This object is deprecated and will be removed in future versions of Synapse.
      required:
        - concreteType
    org.sagebionetworks.repo.model.subscription.SubscriberCount:
      type: object
      properties:
        count:
          type: integer
          description: The total number of subscribers for a given topic.
          format: int32
    org.sagebionetworks.repo.model.table.DownloadPFBResult:
      type: object
      properties:
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.table.DownloadPFBResult
        resultsFileHandleId:
          type: string
          description: The resulting file handle ID can be used to download the PFB file created by this job.
        tableId:
          type: string
          description: The ID of the table identified in the from clause of the table query.
      description: Response of a PFB download
      required:
        - concreteType
    org.sagebionetworks.repo.model.dataaccess.AccessRequirementSearchSort:
      type: object
      properties:
        field:
          type: string
          description: Field to sort on.
          enum:
            - CREATED_ON
            - NAME
            - CONCRETE_TYPE
        direction:
          type: string
          description: Direction of a sort.
          enum:
            - ASC
            - DESC
      description: Identifies both the field and direction for a single sort operation
    org.sagebionetworks.repo.model.schema.GetValidationSchemaResponse:
      type: object
      properties:
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.schema.GetValidationSchemaResponse
        validationSchema:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.schema.JsonSchema'
          description: 'The JSON schema is defined by: <a href="https://json-schema.org/">json-schema.org</a>, specifically draft-07.  Only features listed here are currently supported.'
      description: Response body containing the resulting compiled validation schema.
      required:
        - concreteType
    org.sagebionetworks.repo.model.table.PartialRowSet:
      type: object
      properties:
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.table.PartialRowSet
        tableId:
          type: string
          description: The ID of the TableEntity than owns these rows
        rows:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.PartialRow'
            description: Represents a single partial row of a TableEntity.
          description: The partial rows of this set.
      description: Represents a set of row of a TableEntity
      required:
        - concreteType
    org.sagebionetworks.repo.model.table.ViewColumnModelRequest:
      type: object
      properties:
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.table.ViewColumnModelRequest
        viewScope:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.ViewScope'
          description: List of parent IDs that define a view scope.
        includeDerivedAnnotations:
          type: boolean
          description: If true will include colum models that map to annotations that are derived from the schemas of the entities in the scope
        nextPageToken:
          type: string
          description: Optional token used to retrieve subsequent pages, returned as part of the <a href="${org.sagebionetworks.repo.model.table.ViewColumnModelResponse}">ViewColumnModelResponse</a>
      description: An asynchronous request to compute the column models from the annotations in a given scope, note that the result won't include the default column model.
      required:
        - concreteType
    org.sagebionetworks.repo.model.table.TextMatchesQueryFilter:
      type: object
      properties:
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.table.TextMatchesQueryFilter
        isDefiningCondition:
          type: boolean
          description: When null (default) or false, this condition will be applied to WHERE clause of table/view query.  When set to true, for a query against a VirtualTable, this condition will be applied to the WHERE clause of the VirtualTable's definingSQL.
        searchExpression:
          type: string
          description: The search expression to match against the table rows.
        searchMode:
          type: string
          description: The search mode for the filter
          enum:
            - NATURAL_LANGUAGE
            - BOOLEAN
      description: A filter to apply a TEXT_MATCHES predicate (full text search) to the query using the given searchExpression as value.
      required:
        - concreteType
    org.sagebionetworks.evaluation.model.EvaluationRoundListResponse:
      type: object
      properties:
        page:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.evaluation.model.EvaluationRound'
            description: Defines the duration of a round and sets limits for maximum submissions per round
        nextPageToken:
          type: string
          description: Forward this token to get the next page of results.
      description: A single page of the EvaluationRounds currently associated with an Evaluation
    org.sagebionetworks.repo.model.TeamSortOrder:
      type: string
      enum:
        - TEAM_NAME
    org.sagebionetworks.repo.model.download.DownloadListPackageResponse:
      type: object
      properties:
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.download.DownloadListPackageResponse
        resultFileHandleId:
          type: string
          description: The identifier of a FileHandle that contains the resulting package zip file.
      description: Response of a job to package files from the user's download list.'
      required:
        - concreteType
    org.sagebionetworks.repo.model.subscription.SortByType:
      type: string
      enum:
        - SUBSCRIPTION_ID
        - SUBSCRIBER_ID
        - OBJECT_ID
        - OBJECT_TYPE
        - CREATED_ON
    org.sagebionetworks.repo.model.ErrorResponse:
      type: object
      properties:
        concreteType:
          type: string
          description: Indicates which implementation of BaseError this object represents.  The value is the fully qualified class name, e.g. org.sagebionetworks.repo.model.ErrorResponse.
          enum:
            - org.sagebionetworks.repo.model.ErrorResponse
        reason:
          type: string
          description: The reason for the error
        errorCode:
          type: string
          description: A code to be used by clients to handle the error.
          enum:
            - PASSWORD_RESET_VIA_EMAIL_REQUIRED
            - USER_CERTIFICATION_REQUIRED
            - INVALID_TABLE_QUERY_FACET_COLUMN_REQUEST
            - OAUTH_CLIENT_NOT_VERIFIED
            - TWO_FA_REQUIRED
            - UNSUPPORTED_WEBHOOK_DOMAIN
            - PROJECT_STORAGE_LIMIT_EXCEEDED
            - TWO_FA_ENABLED_REQUIRED
      description: JSON schema for an error
      required:
        - concreteType
    org.sagebionetworks.repo.model.discussion.Forum:
      type: object
      properties:
        id:
          type: string
          description: The ID of this object
        projectId:
          type: string
          description: The ID of the project to which this forum belongs. This ID may or may not start with prefix 'syn'.
        etag:
          type: string
          description: Synapse employs an Optimistic Concurrency Control (OCC) scheme to handle concurrent updates. Since the E-Tag changes every time an entity is updated it is used to detect when a client's current representation of an entity is out-of-date.
    org.sagebionetworks.evaluation.model.SubmissionEligibilityInterface:
      type: object
      properties:
        isEligible:
          type: boolean
          description: true if all criteria are met
        isRegistered:
          type: boolean
          description: true if team/individual is registered for challenge
        isQuotaFilled:
          type: boolean
          description: true if team/individual has reached the submission quota (for the given submission round)
      description: Describes the eligibility of a to submit to an Evaluation queue, reflecting the queue's submission quotas and current submissions.
      oneOf:
        - $ref: '#/components/schemas/org.sagebionetworks.evaluation.model.SubmissionEligibility'
        - $ref: '#/components/schemas/org.sagebionetworks.evaluation.model.MemberSubmissionEligibility'
      discriminator:
        propertyName: concreteType
    org.sagebionetworks.repo.model.curation.ListCurationTaskRequest:
      type: object
      properties:
        projectId:
          type: string
          description: The project ID. Required.
        nextPageToken:
          type: string
          description: Forward the returned 'nextPageToken' to get the next page of results.
      description: Request for a single page of CurationTasks for a project.
      required:
        - projectId
    org.sagebionetworks.repo.model.table.ReplicatedEvent:
      type: object
      properties:
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.table.ReplicatedEvent
        objectId:
          type: string
          description: The unique identifier of the object that changed.
        objectVersion:
          type: integer
          description: Identifier for a specific version of an object.
          format: int32
        objectType:
          type: string
          description: JSON enum for the types of objects in Synapse.
          enum:
            - ENTITY
            - ENTITY_CONTAINER
            - PRINCIPAL
            - ACTIVITY
            - EVALUATION
            - EVALUATION_ROUND
            - SUBMISSION
            - EVALUATION_SUBMISSIONS
            - FILE
            - MESSAGE
            - WIKI
            - FAVORITE
            - ACCESS_REQUIREMENT
            - ACCESS_APPROVAL
            - TEAM
            - TABLE
            - ACCESS_CONTROL_LIST
            - PROJECT_SETTING
            - VERIFICATION_SUBMISSION
            - CERTIFIED_USER_PASSING_RECORD
            - FORUM
            - THREAD
            - REPLY
            - FORM_GROUP
            - ORGANIZATION
            - FORM_DATA
            - ENTITY_VIEW
            - USER_PROFILE
            - DATA_ACCESS_REQUEST
            - DATA_ACCESS_SUBMISSION
            - DATA_ACCESS_SUBMISSION_STATUS
            - MEMBERSHIP_INVITATION
            - JSON_SCHEMA
            - JSON_SCHEMA_DEPENDANT
            - DATASET
            - DATASET_COLLECTION
            - THREAD_VIEW
            - MATERIALIZED_VIEW
            - VIRTUAL_TABLE
            - TABLE_STATUS_EVENT
            - DATA_ACCESS_SUBMISSION_EVENT
            - FILE_EVENT
            - QUERY_CACHE_HIT
            - PROJECT_STORAGE_EVENT
            - REPLICATED_EVENT
            - PORTAL
            - OAUTH_CLIENT
        timestamp:
          type: string
          description: The timestamp when this change was originally committed.
        replicatedObjectType:
          type: string
          description: JSON enum for the types of objects in Synapse.
          enum:
            - ENTITY
            - ENTITY_CONTAINER
            - PRINCIPAL
            - ACTIVITY
            - EVALUATION
            - EVALUATION_ROUND
            - SUBMISSION
            - EVALUATION_SUBMISSIONS
            - FILE
            - MESSAGE
            - WIKI
            - FAVORITE
            - ACCESS_REQUIREMENT
            - ACCESS_APPROVAL
            - TEAM
            - TABLE
            - ACCESS_CONTROL_LIST
            - PROJECT_SETTING
            - VERIFICATION_SUBMISSION
            - CERTIFIED_USER_PASSING_RECORD
            - FORUM
            - THREAD
            - REPLY
            - FORM_GROUP
            - ORGANIZATION
            - FORM_DATA
            - ENTITY_VIEW
            - USER_PROFILE
            - DATA_ACCESS_REQUEST
            - DATA_ACCESS_SUBMISSION
            - DATA_ACCESS_SUBMISSION_STATUS
            - MEMBERSHIP_INVITATION
            - JSON_SCHEMA
            - JSON_SCHEMA_DEPENDANT
            - DATASET
            - DATASET_COLLECTION
            - THREAD_VIEW
            - MATERIALIZED_VIEW
            - VIRTUAL_TABLE
            - TABLE_STATUS_EVENT
            - DATA_ACCESS_SUBMISSION_EVENT
            - FILE_EVENT
            - QUERY_CACHE_HIT
            - PROJECT_STORAGE_EVENT
            - REPLICATED_EVENT
            - PORTAL
            - OAUTH_CLIENT
        pathIds:
          type: array
          items:
            type: integer
            format: int32
          description: The distinct set of pathIs associated a batch of objects that were replciated.
      description: Event created after data is replcated.
      required:
        - concreteType
    org.sagebionetworks.repo.model.auth.ChangePasswordInterface:
      type: object
      properties:
        newPassword:
          type: string
          description: The new password
        concreteType:
          type: string
          description: 'Indicates which implementation of PasswordChangeInterface this object represents. Valid Values: org.sagebionetworks.repo.model.auth.ChangePasswordWithToken org.sagebionetworks.repo.model.auth.ChangePasswordWithCurrentPassword'
      description: Defines an interface for changing an user account's password
      oneOf:
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.auth.ChangePasswordWithToken'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.auth.ChangePasswordWithCurrentPassword'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.auth.ChangePasswordWithTwoFactorAuthToken'
      required:
        - concreteType
      discriminator:
        propertyName: concreteType
    org.sagebionetworks.repo.model.table.Query:
      type: object
      properties:
        sql:
          type: string
          description: The SQL query string.
        additionalFilters:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.QueryFilter'
          description: Appends additional filters to the SQL query. These are applied before facets. Filters within the list have an AND relationship. If a WHERE clause already exists on the SQL query or facets are selected, it will also be ANDed with the query generated by these additional filters.
        selectedFacets:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.FacetColumnRequest'
            description: A set of values that have been selected for filtering in a faceted column
          description: The selected facet filters.
        includeEntityEtag:
          type: boolean
          description: 'Optional, default false. When true, a query results against views will include the Etag of each entity in the results.  Note: The etag is necessary to update Entities in the view.'
        selectFileColumn:
          type: integer
          description: The id of the column used to select file entities (e.g. to fetch the action required for download). The column needs to be an ENTITYID type column and be part of the schema of the underlying table/view.
          format: int32
        selectFileVersionColumn:
          type: integer
          description: The id of the column used as the version for selecting file entities when required (e.g. to add a materialized view query to the download cart with version enabled). The column needs to be an INTEGER type column and be part of the schema of the underlying table/view.
          format: int32
        offset:
          type: integer
          description: The optional offset into the results
          format: int32
        limit:
          type: integer
          description: The optional limit to the results
          format: int32
        sort:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.SortItem'
    org.sagebionetworks.repo.model.file.DownloadOrderSummaryRequest:
      type: object
      properties:
        nextPageToken:
          type: string
          description: To recieve the next page, forward the nextPageToken returned with the pevious reponse.
      description: Request for a single page of DownloadOrderSummary objects.
    org.sagebionetworks.repo.model.doi.v2.Doi:
      type: object
      properties:
        creators:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.doi.v2.DoiCreator'
            description: JSON schema for DOI Metadata Creator.
          description: Required. The main researchers involved in producing the data, or the authors of the publication, in priority order.
        titles:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.doi.v2.DoiTitle'
            description: JSON schema for DOI Metadata Title.
          description: Required. A name or title by which a resource is known.
        publicationYear:
          type: integer
          description: Required. The year that this resource became publicly accessible. Must be in YYYY format.
          format: int32
        resourceType:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.doi.v2.DoiResourceType'
          description: Required. Describes the type of media that the DOI Metadata refers to.
        publisher:
          type: string
          description: The publisher of the DOI, for a portal DOI matches the Portal name
        associationId:
          type: string
          description: The unique ID of this DOI stored in Synapse. Provided by Synapse.
        etag:
          type: string
          description: For Optimistic Concurrency Control (OCC). Required to successfully update a DOI.
        doiUri:
          type: string
          description: The unique URI of this DOI to which the resource can be resolved. Provided by Synapse.
        doiUrl:
          type: string
          description: The DOI URL that will point to the Synapse object.  Provided by Synapse.
        portalId:
          type: string
          description: The id of the portal that this DOI is associated with.
        objectId:
          type: string
          description: Required. The ID of the digital object in Synapse for which this DOI is created.
        objectType:
          type: string
          description: The type of objects that support DOI minting
          enum:
            - ENTITY
            - PORTAL_RESOURCE
        objectVersion:
          type: integer
          description: Optional. The version of the digital object. When null, the DOI is associated with the current version of the object.
          format: int32
        associatedBy:
          type: string
          description: The ID of the user that creates this DOI. Provided by Synapse.
        associatedOn:
          type: string
          description: The date time this DOI is first created. Provided by Synapse.
        updatedBy:
          type: string
          description: The ID of the user that last updated this DOI. Provided by Synapse.
        updatedOn:
          type: string
          description: The date time this DOI is last updated. Provided by Synapse.
      description: 'JSON schema for fields associated with a DOI and its metadata. This object contains fields from both <a href="${org.sagebionetworks.repo.model.doi.v2.DoiAssociation}">DoiAssociation</a> and <a href="${org.sagebionetworks.repo.model.doi.v2.DataciteMetadata}">DataciteMetadata</a>.<br>To mint a DOI, the following fields are required: <ul> <li>Information that uniquely identifies an object in Synapse <ul><li> The object ID <i>(e.g. "syn12345")</i></li><li>The object type <i>(Note: as of this writing, only ENTITY is supported)</i></li><li>The version number of the object <i>(Optional. A "null" version will mint a DOI that will point to the most recent version of the object, even if the object changes)</i></li><li>An eTag <i>(Necessary when updating an existing DOI)</i></li></ul></li> <li>Additional supplementary information to mint a DOI <ul><li>Creator(s)</li><li>Title(s)</li><li>The general resource type</li><li>A publication year (no later than one year after the current year)</li></ul></li> </ul><br>For more information, see the <a href="${org.sagebionetworks.repo.model.doi.v2.DoiAssociation}">DoiAssociation</a> and <a href="${org.sagebionetworks.repo.model.doi.v2.DataciteMetadata}">DataciteMetadata</a> objects.'
    org.sagebionetworks.repo.model.migration.BackupTypeResponse:
      type: object
      properties:
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.migration.BackupTypeResponse
        backupFileKey:
          type: string
          description: The key of the resulting backup file.
      description: Results for a backup type job.
      required:
        - concreteType
    org.sagebionetworks.repo.model.grid.CreateReplicaRequest:
      type: object
      properties:
        gridSessionId:
          type: string
          description: The ID of the grid seesion.
      description: Request to create a new replica. A replica represents an 'in-memory' grid document identifed by a unique replicaId.
    org.sagebionetworks.repo.model.dataaccess.AccessRequirementSearchResult:
      type: object
      properties:
        id:
          type: string
          description: The id of the AR
        type:
          type: string
          description: The concrete type of the AR
        createdOn:
          type: string
          description: The creation date of the AR
        modifiedOn:
          type: string
          description: The last modification date of the AR
        name:
          type: string
          description: The name of the AR
        version:
          type: string
          description: The current revision of the AR
        relatedProjectIds:
          type: array
          items:
            type: string
          description: List of project ids which the AR is direclty or indirectly applied to
        reviewerIds:
          type: array
          items:
            type: string
          description: List of principal ids that are allowed to review the AR submissions
      description: Result item of an Access Requirement search
    org.sagebionetworks.repo.model.drs.PackageInformation:
      type: object
      properties:
        group:
          type: string
          description: The group information of DRS, eg GA4GH.
        artifact:
          type: string
          description: The artifact information of DRS.
        version:
          type: string
          description: The version of DRS specification.
      description: The DRS package information follows GA4GH specification.
    org.sagebionetworks.repo.model.table.FacetColumnValuesRequest:
      type: object
      properties:
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.table.FacetColumnValuesRequest
        columnName:
          type: string
          description: The name of the faceted column
        jsonPath:
          type: string
          description: To filter on a jsonSubColumn of a JSON column, provide the jsonPath of the sub-column
        facetValues:
          type: array
          items:
            type: string
          description: The set of facet values that were selected
          uniqueItems: true
      description: Contains the name and type of the column to be filtered, and the facet values to filter on.
      required:
        - concreteType
    org.sagebionetworks.repo.model.performance.PerformanceRecord:
      type: object
      properties:
        method:
          type: string
          description: The java bean method
        totalCount:
          type: integer
          description: The total number of calls
          format: int32
        totalTime:
          type: integer
          description: The total time taken in ns
          format: int32
      description: Data record for call performance.
    org.sagebionetworks.repo.model.dataaccess.AccessRequirementSearchRequest:
      type: object
      properties:
        nameContains:
          type: string
          description: Optional substring used to filter Access Requirements by name
        ids:
          type: array
          items:
            type: integer
            format: int32
          description: Optional list of ids used to filter access requirements with specific ids.
        relatedProjectId:
          type: string
          description: Optional id used to filter Access Requirements to retrieve only those that have been applied within a particular project.
        reviewerId:
          type: string
          description: Optional principal ID used to filter Access Requirements to retrieve only those that can be reviewed by the specific reviewer.
        accessType:
          type: string
          description: The enumeration of possible permission.
          enum:
            - CREATE
            - READ
            - UPDATE
            - DELETE
            - CHANGE_PERMISSIONS
            - DOWNLOAD
            - UPLOAD
            - PARTICIPATE
            - SUBMIT
            - READ_PRIVATE_SUBMISSION
            - UPDATE_SUBMISSION
            - DELETE_SUBMISSION
            - TEAM_MEMBERSHIP_UPDATE
            - SEND_MESSAGE
            - CHANGE_SETTINGS
            - MODERATE
            - REVIEW_SUBMISSIONS
            - EXEMPTION_ELIGIBLE
        type:
          type: string
          description: Optional filter by the access requirement fully qualified concrete type (e.g. org.sagebionetworks.repo.model.ManagedACTAccessRequirement)
        sort:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.dataaccess.AccessRequirementSearchSort'
            description: Identifies both the field and direction for a single sort operation
        nextPageToken:
          type: string
          description: A token used to get the next page of a particular search query.
      description: Describes the parameters for searching Access Requirements
    org.sagebionetworks.repo.model.migration.TypeData:
      type: object
      properties:
        migrationType:
          type: string
        backupIdColumnName:
          type: string
          description: The database column name of the backupId for this type.
      description: Data about a migration type according to the migration source.
    PaginatedResultsOfV2WikiHistorySnapshot:
      type: object
      properties:
        totalNumberOfResults:
          type: integer
          description: Calculating the actual totalNumberOfResults is not longer supported. Therefore, for each page, the totalNumberOfResults is estimated using the current page, limit, and offset. When the page size equals the limit, the totalNumberOfResults will be offset+pageSize+ 1. Otherwise, the totalNumberOfResults will be offset+pageSize.
          format: int32
        results:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.v2.wiki.V2WikiHistorySnapshot'
    org.sagebionetworks.repo.model.file.FileHandle:
      type: object
      properties:
        id:
          type: string
          description: The ID of this FileHandle.  All references to this FileHandle will use this ID.  Synapse will generate this ID when the FileHandle is created.
        etag:
          type: string
          description: FileHandles are immutable from the perspective of the API.  The only field that can be change is the previewId.  When a new previewId is set, the etag will change.
        createdBy:
          type: string
          description: The ID Of the user that created this file.
        createdOn:
          type: string
          description: The date when this file was uploaded.
        modifiedOn:
          type: string
          description: The date when the file was modified. This is handled by the backend and cannot be modified.
        concreteType:
          type: string
          description: 'This is used to indicate the implementation of this interface. For example, an S3FileHandle should be set to: org.sagebionetworks.repo.model.file.S3FileHandle'
        contentType:
          type: string
          description: 'Must be: http://en.wikipedia.org/wiki/Internet_media_type'
        contentMd5:
          type: string
          description: The file's content MD5.
        fileName:
          type: string
          description: The short, user visible name for this file.
        storageLocationId:
          type: integer
          description: The optional storage location descriptor
          format: int32
        contentSize:
          type: integer
          description: The size of the file in bytes.
          format: int32
        status:
          type: string
          description: The status of the file handle as computed by the backend. This value cannot be changed, any file handle that is not AVAILABLE should not be used.
          enum:
            - AVAILABLE
            - UNLINKED
            - ARCHIVED
      description: The FileHandle interface defines all of the fields that are common to all implementations.
      oneOf:
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.file.ExternalObjectStoreFileHandle'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.file.GoogleCloudFileHandle'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.file.ProxyFileHandle'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.file.ExternalFileHandle'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.file.S3FileHandle'
      required:
        - concreteType
      discriminator:
        propertyName: concreteType
    org.sagebionetworks.repo.model.Project:
      type: object
      properties:
        name:
          type: string
          description: 'The name of this entity.  Must be 256 characters or less. Names may only contain: letters, numbers, spaces, underscores, hyphens, periods, plus signs, apostrophes, and parentheses'
        description:
          type: string
          description: The description of this entity.  Must be 1000 characters or less.
        id:
          type: string
          description: The unique immutable ID for this entity.  A new ID will be generated for new Entities.  Once issued, this ID is guaranteed to never change or be re-issued
        etag:
          type: string
          description: Synapse employs an Optimistic Concurrency Control (OCC) scheme to handle concurrent updates. Since the E-Tag changes every time an entity is updated it is used to detect when a client's current representation of an entity is out-of-date.
        createdOn:
          type: string
          description: The date this entity was created.
        modifiedOn:
          type: string
          description: The date this entity was last modified.
        createdBy:
          type: string
          description: The ID of the user that created this entity.
        modifiedBy:
          type: string
          description: The ID of the user that last modified this entity.
        parentId:
          type: string
          description: The ID of the Entity that is the parent of this Entity.
        concreteType:
          type: string
          description: Indicates which implementation of Entity this object represents.  The value is the fully qualified class name, e.g. org.sagebionetworks.repo.model.FileEntity.
          enum:
            - org.sagebionetworks.repo.model.Project
        alias:
          type: string
          description: The project alias for use in friendly project urls.
      description: A Project is a top-level container for organizing data in Synapse.
      required:
        - concreteType
    org.sagebionetworks.repo.model.webhook.WebhookSynapseEventMessage:
      type: object
      properties:
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.webhook.WebhookSynapseEventMessage
        messageId:
          type: string
          description: Unique message identifier.
        eventTimestamp:
          type: string
          description: The timestamp when the event occurred, in ISO 8601 format.
        objectId:
          type: string
          description: The ID of the object affected by a change.
        objectType:
          type: string
          description: The supported synapse object types for a Webhook
          enum:
            - ENTITY
        eventType:
          type: string
          description: The type of the WebhookEvent.
          enum:
            - CREATE
            - UPDATE
            - DELETE
      description: A webhook message for an event in Synapse.
      required:
        - messageId
        - eventTimestamp
        - concreteType
    org.sagebionetworks.repo.model.search.query.KeyValue:
      type: object
      properties:
        key:
          type: string
          description: The facet name
        value:
          type: string
          description: The facet value
        not:
          type: boolean
          description: True when this key value should be negated
      description: JSON schema for a faceted key-value pair.
    org.sagebionetworks.repo.model.migration.BackupManifest:
      type: object
      properties:
        primaryType:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.migration.TypeData'
          description: Data about a migration type according to the migration source.
        aliasType:
          type: string
          description: The value to use as the alias in the XML migration backup file
          enum:
            - TABLE_NAME
            - MIGRATION_TYPE_NAME
        batchSize:
          type: integer
          description: The batch size determines the maximum number of rows that will be loaded into memory at one time.
          format: int32
        minimumId:
          type: integer
          description: The first ID in the range of IDs (inclusive)
          format: int32
        maximumId:
          type: integer
          description: The last ID in the range of IDs (inclusive)
          format: int32
        secondaryTypes:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.migration.TypeData'
            description: Data about a migration type according to the migration source.
          description: The secondary types according to the source of the backup.
      description: Manifest of all metadata associated with a single backup file
    org.sagebionetworks.repo.model.dataaccess.Submission:
      type: object
      properties:
        id:
          type: string
          description: The unique immutable ID for this submission. A new ID will be generated for new Submission. Once issued, this ID is guaranteed to never change or be re-issued.
        accessRequirementId:
          type: string
          description: The ID of the Access Requirement which requires a request to be submitted to gain access to a dataset. This submission contains information that satisfies those requirements.
        accessRequirementVersion:
          type: integer
          description: The version of the Access Requirement which requires a request to be submitted to gain access to a dataset. This submission contains information that satisfies those requirements.
          format: int32
        requestId:
          type: string
          description: The ID of the Request which is used to create this submission.
        ducFileHandleId:
          type: string
          description: The Data Use Certificate uploaded by user.
        irbFileHandleId:
          type: string
          description: The Institutional Review Board Approval document uploaded by user.
        attachments:
          type: array
          items:
            type: string
          description: The set of file handle ID of attached files to this request.
        accessorChanges:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.dataaccess.AccessorChange'
            description: Request for a single user change access to a resource.
          description: List of user changes. A user can gain access, renew access or have access revoked.
        researchProjectSnapshot:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.dataaccess.ResearchProject'
          description: A research project describes a project at an institution that used a controlled data set for the purposes that are stated in the Intended Data Use Statement.
        isRenewalSubmission:
          type: boolean
          description: True if this submission is a renewal submission.
        publication:
          type: string
          description: Link(s) to publication that used the controlled data.
        summaryOfUse:
          type: string
          description: Summary of how the data has been used.
        submittedOn:
          type: string
          description: The date this submission was created.
        modifiedOn:
          type: string
          description: The date this submission was reviewed or was cancelled.
        submittedBy:
          type: string
          description: The ID of the user that submitted this submission.
        modifiedBy:
          type: string
          description: The ID of the user that last modified the status of this submission.
        state:
          type: string
          description: The state of a Submission.
          enum:
            - SUBMITTED
            - APPROVED
            - REJECTED
            - CANCELLED
        rejectedReason:
          type: string
          description: The reason this submission is rejected, if it's rejected.
        etag:
          type: string
          description: Synapse employs an Optimistic Concurrency Control (OCC) scheme to handle concurrent updates. Since the E-Tag changes every time a request is updated it is used to detect when a client's current representation of a request is out-of-date.
        subjectId:
          type: string
          description: The ID of the subject user interested in. This information will be used to help user navigate back to where they were to continue their work.
        subjectType:
          type: string
          description: JSON enum for the types of objects which can be restricted by an AccessRequirement.
          enum:
            - ENTITY
            - EVALUATION
            - TEAM
      description: A submission to request access to controlled data.
    org.sagebionetworks.repo.model.grid.query.RowValidationResultFilter:
      type: object
      properties:
        concreteType:
          type: string
          description: 'Required. Must be a properly quoted JSON string matching one of: "org.sagebionetworks.repo.model.grid.query.RowValidationResultFilter", "org.sagebionetworks.repo.model.grid.query.RowSelectionFilter", "org.sagebionetworks.repo.model.grid.query.RowIsValidFilter", or "org.sagebionetworks.repo.model.grid.query.CellValueFilter"'
          enum:
            - org.sagebionetworks.repo.model.grid.query.RowValidationResultFilter
        operator:
          type: string
          description: The comparison operator.
          enum:
            - LIKE
            - NOT_LIKE
        validationResultValue:
          type: string
          description: 'A validation result value.  For wildcards use ''%'' to represents zero or more characters, and ''_'' to represents a single character.  For example, LIKE ''%expected type: String, found%'' would match rows with a validation result that contains the message: ''expected type: String, found''. Use the ''NOT_LIKE'' operator to find all rows that do not have a validation message matching the provided ''validationResultValue''.'
      description: Use this filter to find rows that have data quality issues or schema validation errors. This is ideal for requests about finding 'errors', 'invalid data', or 'rows that failed validation'. To find rows with a specific error message, set the 'operator' to 'LIKE' and provide the error text in 'validationResultValue'. For example, for a user request like 'show me all rows with a type error', a good value for 'validationResultValue' would be '%expected type:%'.
      required:
        - concreteType
    org.sagebionetworks.repo.model.doi.DoiStatus:
      type: string
      enum:
        - IN_PROCESS
        - CREATED
        - READY
        - ERROR
    org.sagebionetworks.repo.model.LogEntry:
      type: object
      properties:
        label:
          type: string
          description: The label for the message to log, which determines grouping in cloudwatch.
        message:
          type: string
          description: The message to log.
        stacktrace:
          type: string
          description: The optional stacktrace to log.
      description: JSON schema for a log entry
    org.sagebionetworks.repo.model.file.UploadType:
      type: string
      enum:
        - S3
        - GOOGLECLOUDSTORAGE
        - SFTP
        - HTTPS
        - PROXYLOCAL
        - NONE
    org.sagebionetworks.repo.model.Team:
      type: object
      properties:
        id:
          type: string
          description: The id of the Team.
        name:
          type: string
          description: The name of the Team.
        description:
          type: string
          description: A short description of this Team.
        icon:
          type: string
          description: fileHandleId for icon image of the Team
        canPublicJoin:
          type: boolean
          description: true for teams which members can join without an invitation or approval. When this is true, canRequestMembership must be false or empty.
        canRequestMembership:
          type: boolean
          description: true for teams where users can create a membership request to join. When this is true, canPublicJoin must be false or empty.
        etag:
          type: string
          description: Synapse employs an Optimistic Concurrency Control (OCC) scheme to handle concurrent updates. Since the E-Tag changes every time a Team is updated it is used to detect when a client's current representation of a Team is out-of-date.
        createdOn:
          type: string
          description: The date this Team was created.
        modifiedOn:
          type: string
          description: The date this Team was last modified.
        createdBy:
          type: string
          description: The ID of the user that created this Team.
        modifiedBy:
          type: string
          description: The ID of the user that last modified this Team.
      description: JSON schema for Team POJO
    ListWrapperOfTeamMember:
      type: object
      properties:
        list:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.TeamMember'
    PaginatedResultsOfAccessRequirement:
      type: object
      properties:
        totalNumberOfResults:
          type: integer
          description: Calculating the actual totalNumberOfResults is not longer supported. Therefore, for each page, the totalNumberOfResults is estimated using the current page, limit, and offset. When the page size equals the limit, the totalNumberOfResults will be offset+pageSize+ 1. Otherwise, the totalNumberOfResults will be offset+pageSize.
          format: int32
        results:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.AccessRequirement'
    org.sagebionetworks.repo.model.doi.v2.DoiResourceTypeGeneral:
      type: string
      enum:
        - Audiovisual
        - Collection
        - DataPaper
        - Dataset
        - Event
        - Image
        - InteractiveResource
        - Model
        - PhysicalObject
        - Service
        - Software
        - Sound
        - Text
        - Workflow
        - Other
    org.sagebionetworks.repo.model.webhook.VerifyWebhookResponse:
      type: object
      properties:
        isValid:
          type: boolean
          description: True if the webhook was successfully verified.
        invalidReason:
          type: string
          description: If the Webhook is invalid, this will contain a string describing why it is invalid.
      description: Response body containg the result of a webhook verification reqeust.
    org.sagebionetworks.repo.model.SignedTokenInterface:
      type: object
      properties:
        concreteType:
          type: string
        hmac:
          type: string
          description: The hash message authentication code for the message.
        version:
          type: integer
          description: The version of the key used to generate the HMAC.
          format: int32
        expiresOn:
          type: string
          description: The date-time when this token expires.
        createdOn:
          type: string
          description: The date-time the token was generated.
      description: Interface for signed tokens
      oneOf:
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.auth.TwoFactorAuthToken'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.InviteeVerificationSignedToken'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.auth.TwoFactorAuthResetToken'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.auth.PasswordResetSignedToken'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.message.NotificationSettingsSignedToken'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.auth.AuthenticationReceiptToken'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.MembershipInvtnSignedToken'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.auth.NewUserSignedToken'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.JoinTeamSignedToken'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.principal.EmailValidationSignedToken'
      required:
        - concreteType
      discriminator:
        propertyName: concreteType
    org.sagebionetworks.repo.model.migration.AsyncMigrationTypeCountRequest:
      type: object
      properties:
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.migration.AsyncMigrationTypeCountRequest
        type:
          type: string
          description: The migration type
      description: Request count for migration type.
      required:
        - concreteType
    org.sagebionetworks.repo.model.search.query.KeyRange:
      type: object
      properties:
        key:
          type: string
          description: The facet's name
        min:
          type: string
          description: The minimum value in the facet's range. The min value is included in the range. At least one of either 'min' or 'max' must be set for this range to be valid
        max:
          type: string
          description: The maximum value in the facet's range. The max value is included in the range. At least one of either 'min' or 'max' must be set for this range to be valid
      description: JSON schema for a faceted key-value-range. This filter will match for values where min<=value<=max. At least one of either 'min' or 'max' must be set for this range to be valid
      required:
        - key
    org.sagebionetworks.repo.model.migration.AsyncMigrationRangeChecksumRequest:
      type: object
      properties:
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.migration.AsyncMigrationRangeChecksumRequest
        migrationType:
          type: string
          description: 'JSON enum for the types of objects which can be migrated. NOTE: The order of this enumeration determines the migration order.'
          enum:
            - PRINCIPAL
            - GROUP_MEMBERS
            - CREDENTIAL
            - AUTHENTICATED_ON
            - PRINCIPAL_ALIAS
            - NOTIFICATION_EMAIL
            - USER_PROFILE
            - STORAGE_LOCATION
            - FILE_HANDLE
            - MULTIPART_UPLOAD
            - MULTIPART_UPLOAD_PART_STATE
            - MULTIPART_UPLOAD_COMPOSER_PART_STATE
            - MESSAGE_CONTENT
            - MESSAGE_TO_USER
            - MESSAGE_RECIPIENT
            - MESSAGE_STATUS
            - COMMENT
            - V2_WIKI_PAGE
            - V2_WIKI_ATTACHMENT_RESERVATION
            - V2_WIKI_MARKDOWN
            - V2_WIKI_OWNERS
            - ACTIVITY
            - NODE
            - NODE_REVISION
            - NODE_ACCESS_REQUIRMENT
            - DOCKER_REPOSITORY_NAME
            - DOCKER_COMMIT
            - TEAM
            - MEMBERSHIP_INVITATION_SUBMISSION
            - MEMBERSHIP_REQUEST_SUBMISSION
            - EVALUATION
            - EVALUATION_ROUND
            - EVALUATION_SUBMISSIONS
            - SUBMISSION
            - SUBMISSION_CONTRIBUTOR
            - SUBMISSION_FILE
            - SUBMISSION_STATUS
            - PROJECT_SETTINGS
            - PROJECT_STATS
            - ACCESS_REQUIREMENT
            - ACCESS_REQUIREMENT_REVISION
            - ACCESS_APPROVAL
            - ACL
            - ACL_ACCESS
            - ACL_ACCESS_TYPE
            - FAVORITE
            - TRASH_CAN
            - PORTAL
            - DOI
            - CHALLENGE
            - CHALLENGE_TEAM
            - COLUMN_MODEL
            - BOUND_COLUMN_OWNER
            - BOUND_COLUMN_ORDINAL
            - TABLE_TRANSACTION
            - TABLE_TRANSACTION_TO_VERSION
            - TABLE_SEQUENCE
            - TABLE_CHANGE
            - QUIZ_RESPONSE
            - VERIFICATION_SUBMISSION
            - VERIFICATION_STATE
            - VERIFICATION_FILE
            - FORUM
            - DISCUSSION_THREAD
            - DISCUSSION_THREAD_VIEW
            - DISCUSSION_THREAD_ENTITY_REFERENCE
            - DISCUSSION_REPLY
            - SUBSCRIPTION
            - BROADCAST_MESSAGE
            - VIEW_TYPE
            - VIEW_SCOPE
            - VIEW_SNAPSHOT
            - THROTTLE_RULE
            - RESEARCH_PROJECT
            - DATA_ACCESS_REQUEST
            - DATA_ACCESS_SUBMISSION
            - DATA_ACCESS_SUBMISSION_SUBMITTER
            - DATA_ACCESS_SUBMISSION_STATUS
            - DATA_ACCESS_SUBMISSION_ACCESSOR_CHANGE
            - DATA_ACCESS_NOTIFICATIONS
            - FORM_GROUP
            - FORM_DATA
            - ORGANIZATION
            - JSON_SCHEMA
            - JSON_SCHEMA_BLOB
            - JSON_SCHEMA_VERSION
            - JSON_SCHEMA_LATEST_VERSION
            - JSON_SCHEMA_DEPENDENCY
            - JSON_SCHEMA_OBJECT_BINDING
            - DOWNLOAD_LIST
            - DOWNLOAD_LIST_ITEM
            - DOWNLOAD_ORDER
            - DOWNLOAD_LIST_2
            - DOWNLOAD_LIST_ITEM_2
            - DATA_TYPE
            - OAUTH_SECTOR_IDENTIFIER
            - OAUTH_CLIENT
            - OAUTH_REFRESH_TOKEN
            - OAUTH_ACCESS_TOKEN
            - PERSONAL_ACCESS_TOKEN
            - AUTHORIZATION_GRANT
            - SES_NOTIFICATIONS
            - QUARANTINED_EMAILS
            - FEATURE_STATUS
            - MATERIALIZED_VIEW_ID
            - MATERIALIZED_VIEW_SOURCE_TABLE
            - PRINCIPAL_OIDC_BINDING
            - OTP_SECRET
            - OTP_RECOVERY_CODE
            - TWO_FA_STATUS
            - WEBHOOK
            - WEBHOOK_VERIFICATION
            - WEBHOOK_ALLOWED_DOMAIN
            - AGENT_REGISTRATION
            - AGENT_SESSION
            - TOS_REQUIREMENTS
            - TOS_AGREEMENT
            - PROJECT_STORAGE_DATA
            - PROJECT_STORAGE_LIMIT
            - GRID_SESSION
            - GRID_REPLICA
            - GRID_CONNECTION
            - GRID_PATCH
            - CURATION_TASK
            - USER_STATUS
            - RECORDSET_VALIDATION_STATS
            - CHANGE
        type:
          type: string
          description: 'Deprecated.  Use: ''migrationType'''
        salt:
          type: string
          description: Salt
        minId:
          type: integer
          description: Minimum id
          format: int32
        maxId:
          type: integer
          description: Maximum id
          format: int32
      description: Request checksum for range of given type.
      required:
        - concreteType
    org.sagebionetworks.repo.model.file.UploadDestinationLocation:
      type: object
      properties:
        storageLocationId:
          type: integer
          description: the unique id for the storage location
          format: int32
        description:
          type: string
          description: The description to show the user when the user has to choose which upload destination to use
        uploadType:
          type: string
          description: The enumeration of possible upload types.
          enum:
            - S3
            - GOOGLECLOUDSTORAGE
            - SFTP
            - HTTPS
            - PROXYLOCAL
            - NONE
      description: An upload destination location contains the id of the StorageLocation where a file can be uploaded.
    org.sagebionetworks.repo.model.message.ChangeType:
      type: string
      enum:
        - CREATE
        - UPDATE
        - DELETE
    org.sagebionetworks.repo.model.docker.RegistryEventTarget:
      type: object
      properties:
        mediaType:
          type: string
        size:
          type: integer
          format: int32
        digest:
          type: string
          description: The digest of the image being pushed or pulled.
        length:
          type: integer
          format: int32
        repository:
          type: string
          description: The path of the repository which is the subject of the event.
        tag:
          type: string
          description: The user supplied tag for the commit of the repository being pushed or pulled.
        url:
          type: string
    org.sagebionetworks.repo.model.grid.GridRecordSetExportRequest:
      type: object
      properties:
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.grid.GridRecordSetExportRequest
        sessionId:
          type: string
          description: The grid session ID.
      description: A request to export a grid created from a record set back to the original record set. A CSV file will be generated and set as a new version of the recordset.
      required:
        - concreteType
    org.sagebionetworks.repo.model.grid.query.result.ValidationResults:
      type: object
      properties:
        isValid:
          type: boolean
          description: Will be 'true' if the row is valid according to the JSON schema. Will be 'false' when the row is invalid.
        validationErrorMessage:
          type: string
          description: If the object is not valid according to the schema, a simple one line error message will be provided.
        allValidationMessages:
          type: array
          items:
            type: string
          description: If the object is not valid according to the schema, a the flat list of error messages will be provided with one error message per sub-schema.
      description: Results of a grid row against a JSON schema
    org.sagebionetworks.repo.model.auth.SecretKey:
      type: object
      properties:
        secretKey:
          type: string
          description: The user's secret key
      description: Data transfer object for a secret key
    org.sagebionetworks.repo.model.grid.query.CellValueFilter:
      type: object
      properties:
        concreteType:
          type: string
          description: 'Required. Must be a properly quoted JSON string matching one of: "org.sagebionetworks.repo.model.grid.query.RowValidationResultFilter", "org.sagebionetworks.repo.model.grid.query.RowSelectionFilter", "org.sagebionetworks.repo.model.grid.query.RowIsValidFilter", or "org.sagebionetworks.repo.model.grid.query.CellValueFilter"'
          enum:
            - org.sagebionetworks.repo.model.grid.query.CellValueFilter
        columnName:
          type: string
          description: Required. The name of the column to filter by.
        operator:
          type: string
          description: The comparison operator.
          enum:
            - EQUALS
            - NOT_EQUALS
            - GREATER_THAN
            - LESS_THAN
            - GREATER_THAN_OR_EQUALS
            - LESS_THAN_OR_EQUALS
            - IN
            - NOT_IN
            - LIKE
            - NOT_LIKE
            - IS_NULL
            - IS_NOT_NULL
        value:
          type: array
          items: {}
          description: 'A filter used to select rows based on a specific column''s cell value. Use operators like ''EQUALS'' or ''LIKE'' with the ''value'' array for standard comparisons. For user requests about finding ''empty'', ''blank'', or ''null'' values, use the ''IS_NULL'' operator and omit the ''value'' property. To find rows that are not empty, use the ''IS_NOT_NULL'' operator. When using either ''LIKE'' or ''NOT_LIKE'', the wildcard character: ''%'' is used to represents zero or more characters, and ''_'' is used to represents a single character.'
      description: A filter used to select rows based on cell values. For example, to handle a user request like 'find all rows where the Project column is Alpha', you would set 'columnName' to 'Project', 'operator' to 'EQUALS', and 'value' to ['Alpha']
      required:
        - concreteType
    org.sagebionetworks.repo.model.oauth.OAuthProvider:
      type: string
      enum:
        - GOOGLE_OAUTH_2_0
        - ORCID
    org.sagebionetworks.repo.model.table.ColumnType:
      type: string
      enum:
        - STRING
        - DOUBLE
        - INTEGER
        - BOOLEAN
        - DATE
        - FILEHANDLEID
        - ENTITYID
        - SUBMISSIONID
        - EVALUATIONID
        - LINK
        - MEDIUMTEXT
        - LARGETEXT
        - USERID
        - STRING_LIST
        - INTEGER_LIST
        - BOOLEAN_LIST
        - DATE_LIST
        - ENTITYID_LIST
        - USERID_LIST
        - JSON
    org.sagebionetworks.repo.model.SelfSignAccessRequirementInterface:
      type: object
      properties:
        versionNumber:
          type: integer
          description: The version number issued to this version on the object.
          format: int32
        id:
          type: integer
          description: The unique immutable ID.  Provided by the system, the user may not set this field.
          format: int32
        description:
          type: string
          description: Depricated. Replaced by name.
        name:
          type: string
          description: Name of the AR. Limited to 50 characters and must be unique. Required.
        etag:
          type: string
          description: Synapse employs an Optimistic Concurrency Control (OCC) scheme to handle concurrent updates. Since the E-Tag changes every time an entity is updated it is used to detect when a client's current representation of an object is out-of-date.
        createdOn:
          type: string
          description: The date this object was created. Provided by the system, the user may not set this field.
        modifiedOn:
          type: string
          description: The date this object was last modified. Provided by the system, the user may not set this field.
        createdBy:
          type: string
          description: The user that created this object.  Provided by the system, the user may not set this field.
        modifiedBy:
          type: string
          description: The user that last modified this object.  Provided by the system, the user may not set this field.
        subjectsDefinedByAnnotations:
          type: boolean
          description: Defaults to 'false'.  When 'true', the subjects controlled by this AR are defined by the the'_accessRequirementIds' annotations on individual entities.  This property is mutually exclusive with 'subjectIds'.  If this is set to 'true' then 'subjectIds' must be excluded or empty.
        subjectIds:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.RestrictableObjectDescriptor'
          description: The IDs of the items controlled by this Access Requirement when 'subjectsDefinedByAnnotations=false'. This property is mutually exclusive with 'subjectsDefinedByAnnotations'.  When 'subjectsDefinedByAnnotations=true' then this property must be empty or excluded.  Required when creating or updating and 'subjectsDefinedByAnnotations=false' or 'subjectsDefinedByAnnotations' is excluded.
        accessType:
          type: string
          description: The enumeration of possible permission.
          enum:
            - CREATE
            - READ
            - UPDATE
            - DELETE
            - CHANGE_PERMISSIONS
            - DOWNLOAD
            - UPLOAD
            - PARTICIPATE
            - SUBMIT
            - READ_PRIVATE_SUBMISSION
            - UPDATE_SUBMISSION
            - DELETE_SUBMISSION
            - TEAM_MEMBERSHIP_UPDATE
            - SEND_MESSAGE
            - CHANGE_SETTINGS
            - MODERATE
            - REVIEW_SUBMISSIONS
            - EXEMPTION_ELIGIBLE
        concreteType:
          type: string
          description: Indicates which type of AccessRequirement this object represents.  Provided by the system, the user may not set this field.
      description: JSON schema for the super-type of requirements which a user may approve themselves.
      oneOf:
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.PostMessageContentAccessRequirement'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.TermsOfUseAccessRequirement'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.SelfSignAccessRequirement'
      required:
        - concreteType
      discriminator:
        propertyName: concreteType
    org.sagebionetworks.repo.model.attachment.URLStatus:
      type: string
      enum:
        - DOES_NOT_EXIST
        - READ_FOR_DOWNLOAD
    org.sagebionetworks.repo.model.auth.TermsOfServiceRequirements:
      type: object
      properties:
        requirementDate:
          type: string
          description: The date/time when the new ToS requirement will go into effect.
        minimumTermsOfServiceVersion:
          type: string
          description: The minimum semantic version of the ToS that all users must agree to by the provided date.  Any user that has agreed to this version, or higher, will be required to agree to the latest version of the ToS after the provided date.
      description: Information about the global ToS Synapse requirements that all users must agree to.
    org.sagebionetworks.repo.model.message.MessageToUser:
      type: object
      properties:
        id:
          type: string
          description: The unique identifier of the message or comment
        createdBy:
          type: string
          description: The unique identifier of the sender of this message
        fileHandleId:
          type: string
          description: 'The S3 file handle storing the body of this message.  Note: The file''s mime type should be ''text/plain'' or ''text/html''.  If no character encoding is specified, then UTF-8 is assumed.'
        createdOn:
          type: string
          description: When this message was created
        recipients:
          type: array
          items:
            type: string
          description: The unique identifiers of the intended recipients of a message
          uniqueItems: true
        subject:
          type: string
          description: Topic of this message.  Optional
        inReplyTo:
          type: string
          description: The unique identifier of the message being replied to.  Can be null
        inReplyToRoot:
          type: string
          description: The unique identifier of the root message being replied to
        notificationUnsubscribeEndpoint:
          type: string
          description: the portal prefix for one-click email unsubscription.  A signed, serialized token is appended to create the complete URL.  If omitted, the default endpoint will be used.
        userProfileSettingEndpoint:
          type: string
          description: the portal link to user profile setting page. If omitted, the default endpoint will be used.
        withUnsubscribeLink:
          type: boolean
          description: should the unsubscribe link be included in the email?
        withProfileSettingLink:
          type: boolean
          description: should the user profile setting link be included in the email?
        isNotificationMessage:
          type: boolean
          description: A notification message is sent from a noreply email address, delivery failures are not sent back to the sender
        to:
          type: string
          description: The email addresses in the 'to' field of the email message
        cc:
          type: string
          description: The email addresses in the 'cc' field of the email message
        bcc:
          type: string
          description: The email addresses in the 'bcc' field of the email message
      description: JSON schema for a message to another user
    org.sagebionetworks.repo.model.EntityPath:
      type: object
      properties:
        path:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.EntityHeader'
            description: JSON schema for EntityHeader POJO
          description: The list of all entities in this entites path.  The first element is the root parent and the last element (n) is the entity.
      description: All entities in this Entity's path
    org.sagebionetworks.repo.model.auth.ChangePasswordWithToken:
      type: object
      properties:
        newPassword:
          type: string
          description: The new password
        concreteType:
          type: string
          description: 'Indicates which implementation of PasswordChangeInterface this object represents. Valid Values: org.sagebionetworks.repo.model.auth.ChangePasswordWithToken org.sagebionetworks.repo.model.auth.ChangePasswordWithCurrentPassword'
          enum:
            - org.sagebionetworks.repo.model.auth.ChangePasswordWithToken
        passwordChangeToken:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.auth.PasswordResetSignedToken'
          description: Signed token containing the the information necessary to reset the password for a user.
      description: Change user account's password by providing a token issued by the server
      required:
        - concreteType
    ListOfString:
      type: array
      items:
        type: string
    org.sagebionetworks.repo.model.principal.AliasType:
      type: string
      enum:
        - USER_NAME
        - TEAM_NAME
        - USER_EMAIL
        - USER_OPEN_ID
        - USER_ORCID
    org.sagebionetworks.repo.model.dataaccess.SortDirection:
      type: string
      enum:
        - ASC
        - DESC
    org.sagebionetworks.repo.model.file.BatchPresignedUploadUrlRequest:
      type: object
      properties:
        uploadId:
          type: string
          description: The unique identifier of a multi-part request.
        partNumbers:
          type: array
          items:
            type: integer
            format: int32
          description: The part numbers to get pre-signed URLs for.
        contentType:
          type: string
          description: Optional parameter.  When included each pre-signed URL will be signed with the given Content-Type.  This is necessary for clients that must include the header 'Content-Type' with all HTTP GET calls.
      description: Request a batch of multi-part upload or copy pre-signed URLs.
    org.sagebionetworks.repo.model.curation.CurationTaskProperties:
      type: object
      properties:
        concreteType:
          type: string
          description: 'Indicates which implementation of CurationTaskProperties this object represents. Possible values include: ''org.sagebionetworks.repo.model.curation.metadata.FileBasedMetadataTaskProperties'' and ''org.sagebionetworks.repo.model.curation.metadata.RecordBasedMetadataTaskProperties''.'
      description: The properties of a CurationTask
      oneOf:
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.curation.metadata.RecordBasedMetadataTaskProperties'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.curation.metadata.FileBasedMetadataTaskProperties'
      required:
        - concreteType
      discriminator:
        propertyName: concreteType
    org.sagebionetworks.repo.model.table.TableUpdateRequest:
      type: object
      properties:
        concreteType:
          type: string
        entityId:
          type: string
      description: Abstraction for a request to update a table.
      oneOf:
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.TableSearchChangeRequest'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.AppendableRowSetRequest'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.UploadToTableRequest'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.TableSchemaChangeRequest'
      required:
        - concreteType
      discriminator:
        propertyName: concreteType
    org.sagebionetworks.repo.model.file.MultipartUploadStatus:
      type: object
      properties:
        uploadId:
          type: string
          description: The unique identifier of a multi-part file upload.
        startedBy:
          type: string
          description: The id of the user that started this multi-part file upload.
        startedOn:
          type: string
          description: The date and time this upload was first initiated.
        updatedOn:
          type: string
          description: The date and time this upload was last updated.
        partsState:
          type: string
          description: A binary representation of the upload status of all parts comprising the file to be uploaded.  A part that has been 'added' will have a state of '1', while a part that is 'missing' will have a state = '0'.  For example, a two part file for which the first part has been added but the second part is missing would have a partState='10'.
        state:
          type: string
          description: The state of this file upload.
          enum:
            - UPLOADING
            - COMPLETED
        resultFileHandleId:
          type: string
          description: After a multi-part file upload is completed, a file handle will be created to represent the resulting file with this ID.  This value will be null until the multi-part file upload state transitions to COMPLETED
      description: Describes the status of a multi-part file upload.
    org.sagebionetworks.repo.model.oauth.OAuthClientAuthorizationHistory:
      type: object
      properties:
        client:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.oauth.OAuthClient'
          description: OAuth 2.0 Client metadata described in <a href="https://openid.net/specs/openid-connect-registration-1_0.html#ClientMetadata">OpenID Connect Core 1.0 Client Metadata</a>
        authorizedOn:
          type: string
          description: The date that authorization was granted to the OAuth client, i.e. the oldest timestamp for an active refresh token for the given client and user.
        lastUsed:
          type: string
          description: The most recent time the OAuth client has utilized its authorization by requesting an access token.
      description: An object representing an OAuth 2.0 client that has been authorized to request a user's resources and identity
    org.sagebionetworks.repo.model.auth.LoginRequest:
      type: object
      properties:
        username:
          type: string
          description: The user's username
        password:
          type: string
          description: The user's password
        authenticationReceipt:
          type: string
          description: Optional, but highly recommended. The most recent authentication receipt given to the last success login from this machine, using this client. Having this allows you to bypass throttling on consecutive authentication attempts with a wrong password.
      description: Used to login via username, password, and previous authentication receipt.
    org.sagebionetworks.repo.model.download.FilesStatisticsResponse:
      type: object
      properties:
        concreteType:
          type: string
          description: Will indicate the full package name of the response type.
          enum:
            - org.sagebionetworks.repo.model.download.FilesStatisticsResponse
        totalNumberOfFiles:
          type: integer
          description: The total number of files on the user's download list.
          format: int32
        numberOfFilesAvailableForDownload:
          type: integer
          description: The number of files that are currently available for download.
          format: int32
        numberOfFilesAvailableForDownloadAndEligibleForPackaging:
          type: integer
          description: The number of files that are currently available for download and eligible for packaging.
          format: int32
        numberOfFilesRequiringAction:
          type: integer
          description: The number of files that are currently unavailable for download.  These are files that require some action on the user's part in order gain download access.
          format: int32
        sumOfFileSizesAvailableForDownload:
          type: integer
          description: The sum of all of the files sizes on the user's download list that are currently available for download.
          format: int32
      description: The response of a FilesStatisticsRequest.
      required:
        - concreteType
    org.sagebionetworks.repo.model.table.PartialRow:
      type: object
      properties:
        etag:
          type: string
          description: The current etag of this object.
        rowId:
          type: integer
          description: The immutable ID of a row.
          format: int32
        values:
          type: object
          description: The values for columns of this row as a map. The key is the columnId and value is the cell value. To perform updates on a row inside of Views, a pair of {"key":"etag", "value":"REPLACE-WITH-ETAG-OF-ENTITY-BEING-UPDATED"} must be also included.
          additionalProperties:
            type: string
      description: Represents a single partial row of a TableEntity.
    org.sagebionetworks.repo.model.quiz.MultichoiceQuestion:
      type: object
      properties:
        questionIndex:
          type: integer
          description: an index unique in the Quiz, used to refer to this question
          format: int32
        prompt:
          type: string
          description: the user-readable prompt for this question
        reference:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.dao.WikiPageKey'
          description: Reference to a WikiPage
        docLink:
          type: string
          description: Link to the document that contains information for background reading related to the question.
        helpText:
          type: string
          description: A short text that provides a snippet of help to answer the question.
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.quiz.MultichoiceQuestion
        exclusive:
          type: boolean
          description: If true then only one response is correct
        answers:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.quiz.MultichoiceAnswer'
            description: One of the multiple choices in a multiple choice question
          description: The possible answers for this question
      description: A multiple choice question
      required:
        - concreteType
    org.sagebionetworks.repo.model.grid.query.result.SelectColumn:
      type: object
      properties:
        columnName:
          type: string
          description: The name of the column.  Will be the alias if one is provide in the select item.
        columnIndex:
          type: integer
          description: The index of this column. The first column will have an index of zero.
          format: int32
      description: Information about a single selected column.
    org.sagebionetworks.repo.model.project.UploadDestinationListSetting:
      type: object
      properties:
        concreteType:
          type: string
          description: Indicates which implementation this object represents.
          enum:
            - org.sagebionetworks.repo.model.project.UploadDestinationListSetting
        id:
          type: string
          description: The unique ID assigned to this setting
        projectId:
          type: string
          description: The ID for the project this setting applies to
        settingsType:
          type: string
          description: The enumeration of project setting types.
          enum:
            - upload
        etag:
          type: string
          description: Synapse employs an Optimistic Concurrency Control (OCC) scheme to handle concurrent updates. Since the E-Tag changes every time a Project Setting is updated it is used to detect when a client's current representation of a Project Setting is out-of-date.
        locations:
          type: array
          items:
            type: integer
            description: The id of a StorageLocationSetting
            format: int32
          description: List of ids pointing to <a href="${org.sagebionetworks.repo.model.project.StorageLocationSetting}">StorageLocationSetting</a>. The first one in the list is the default location; The maximum number of storage locations for a project is limited to 10.
      description: This setting type contains the list of upload locations for files in a project. Each id in the locations attribute points to an existing <a href="${org.sagebionetworks.repo.model.project.StorageLocationSetting}">StorageLocationSetting</a>. The maximum number of storage locations that can be stored for a project is 10.
      required:
        - concreteType
    org.sagebionetworks.repo.model.download.EnableTwoFa:
      type: object
      properties:
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.download.EnableTwoFa
        accessRequirementId:
          type: integer
          description: The ID of the first access requirement that requires two factor authentication.
          format: int32
      description: In order to download a file the user will need to enable two factor authentication.
      required:
        - concreteType
    org.sagebionetworks.repo.model.RestrictableObjectDescriptorResponse:
      type: object
      properties:
        subjects:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.RestrictableObjectDescriptor'
          description: a page of subjects
        nextPageToken:
          type: string
          description: Token that can be used to get the next page. Null if there are no more results.
    org.sagebionetworks.repo.model.grid.query.RowSelectionFilter:
      type: object
      properties:
        concreteType:
          type: string
          description: 'Required. Must be a properly quoted JSON string matching one of: "org.sagebionetworks.repo.model.grid.query.RowValidationResultFilter", "org.sagebionetworks.repo.model.grid.query.RowSelectionFilter", "org.sagebionetworks.repo.model.grid.query.RowIsValidFilter", or "org.sagebionetworks.repo.model.grid.query.CellValueFilter"'
          enum:
            - org.sagebionetworks.repo.model.grid.query.RowSelectionFilter
        isSelected:
          type: boolean
          description: 'When true, only rows that the user has selected will be returned.  When false, rows that the user has selected with be excluded.  This filter should be excluded to ignore the user''s row selection. '
      description: Use this filter to narrow down results based on rows the user has actively selected in the interface. For user requests like 'show me only my selected items' or 'run this analysis on the rows I've checked', set the 'isSelected' property to true. For requests to see the opposite, like 'show me the unselected rows', set 'isSelected' to false. If the user makes no mention of selected items, do not include this filter in the query.
      required:
        - concreteType
    org.sagebionetworks.repo.model.v2.wiki.V2WikiOrderHint:
      type: object
      properties:
        ownerId:
          type: string
          description: The ID of the owner of the wiki page with rootWikiId.
        ownerObjectType:
          type: string
          description: JSON enum for the types of objects in Synapse.
          enum:
            - ENTITY
            - ENTITY_CONTAINER
            - PRINCIPAL
            - ACTIVITY
            - EVALUATION
            - EVALUATION_ROUND
            - SUBMISSION
            - EVALUATION_SUBMISSIONS
            - FILE
            - MESSAGE
            - WIKI
            - FAVORITE
            - ACCESS_REQUIREMENT
            - ACCESS_APPROVAL
            - TEAM
            - TABLE
            - ACCESS_CONTROL_LIST
            - PROJECT_SETTING
            - VERIFICATION_SUBMISSION
            - CERTIFIED_USER_PASSING_RECORD
            - FORUM
            - THREAD
            - REPLY
            - FORM_GROUP
            - ORGANIZATION
            - FORM_DATA
            - ENTITY_VIEW
            - USER_PROFILE
            - DATA_ACCESS_REQUEST
            - DATA_ACCESS_SUBMISSION
            - DATA_ACCESS_SUBMISSION_STATUS
            - MEMBERSHIP_INVITATION
            - JSON_SCHEMA
            - JSON_SCHEMA_DEPENDANT
            - DATASET
            - DATASET_COLLECTION
            - THREAD_VIEW
            - MATERIALIZED_VIEW
            - VIRTUAL_TABLE
            - TABLE_STATUS_EVENT
            - DATA_ACCESS_SUBMISSION_EVENT
            - FILE_EVENT
            - QUERY_CACHE_HIT
            - PROJECT_STORAGE_EVENT
            - REPLICATED_EVENT
            - PORTAL
            - OAUTH_CLIENT
        idList:
          type: array
          items:
            type: string
          description: The list of sub wiki ids that in the order that they should be placed relative to their siblings.
        etag:
          type: string
          description: The title etag of this object. Should be used to handle concurrently updating wiki order hints (e.g. if the etag of the order hint to update does not match the etag of the associated order hint in the database, reject the update).
      description: A V2WikiOrderHint contains the order hint for the root wiki that corresponds to the given owner ID and type.
    org.sagebionetworks.repo.model.auth.ChangePasswordWithCurrentPassword:
      type: object
      properties:
        newPassword:
          type: string
          description: The new password
        concreteType:
          type: string
          description: 'Indicates which implementation of PasswordChangeInterface this object represents. Valid Values: org.sagebionetworks.repo.model.auth.ChangePasswordWithToken org.sagebionetworks.repo.model.auth.ChangePasswordWithCurrentPassword'
          enum:
            - org.sagebionetworks.repo.model.auth.ChangePasswordWithCurrentPassword
        username:
          type: string
          description: The user's username
        currentPassword:
          type: string
          description: The user's current password
        authenticationReceipt:
          type: string
          description: Optional, but highly recommended. The most recent authentication receipt given to the last success login from this machine, using this client. Having this allows you to bypass throttling on consecutive authentication attempts with a wrong password.
      description: Change user account's password by verifying the current password
      required:
        - concreteType
    org.sagebionetworks.repo.model.dataaccess.AccessApprovalNotificationRequest:
      type: object
      properties:
        requirementId:
          type: integer
          description: The id of the access requirement.
          format: int32
        recipientIds:
          type: array
          items:
            type: integer
            format: int32
          description: The list of recipient ids, max of 25 recipients allowed.
      description: A request to retrieve the notifications for an access requirement and a list of recipients.
    org.sagebionetworks.repo.model.oauth.OAuthValidationRequestInterface:
      type: object
      properties:
        provider:
          type: string
          description: Supported OAuth providers
          enum:
            - GOOGLE_OAUTH_2_0
            - ORCID
        authenticationCode:
          type: string
          description: The authorization code passed with the redirectUrl after successful user authentication from a 3rd party OAuth provider.  This code is used by Synapse to lookup the user's information from the OAuthProvider.
        redirectUrl:
          type: string
          description: This must be the same redirect URL used to in the first step.  This parameter is required by Google but not by all oauth providers.
      description: Request for an OAuth2 user validation.
      oneOf:
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.oauth.OAuthValidationRequest'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.oauth.OAuthAccountCreationRequest'
      discriminator:
        propertyName: concreteType
    org.sagebionetworks.repo.model.migration.AsyncMigrationRequest:
      type: object
      properties:
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.migration.AsyncMigrationRequest
        adminRequest:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.migration.AdminRequest'
          description: Abstraction for Admin request
      description: Async Migration requests will implement this type of AsynchronousRequestBody
      required:
        - concreteType
    org.sagebionetworks.repo.model.auth.TotpSecret:
      type: object
      properties:
        secretId:
          type: string
          description: The id of the generated secret
        secret:
          type: string
          description: 'The base32 encoded secret '
        alg:
          type: string
          description: The algorithm used for the TOTP
        digits:
          type: integer
          description: Number of digits for the TOTP
          format: int32
        period:
          type: integer
          description: The validity period for the TOTP
          format: int32
        username:
          type: string
          description: The username of the calling user. Can be used to display a friendly name in an authenticator app.
      description: The generated shared secret to enable two factor authentication with TOTP compatible authenticator app. The secret is not active.
    org.sagebionetworks.repo.model.quiz.QuestionVariety:
      type: object
      properties:
        questionOptions:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.quiz.Question'
            description: a single question in a Quiz
          description: A list of variations of a question
      description: A list of variations of a question
    org.sagebionetworks.repo.model.download.MeetAccessRequirement:
      type: object
      properties:
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.download.MeetAccessRequirement
        accessRequirementId:
          type: integer
          description: The ID of the access requirement that the user needs to meet in order to download a file.
          format: int32
      description: In order to download a file the user will need to meet an access requirement associated with the file.
      required:
        - concreteType
    org.sagebionetworks.repo.model.subscription.SubscriberPagedResults:
      type: object
      properties:
        subscribers:
          type: array
          items:
            type: string
          description: The list of subscriberId for this page
        nextPageToken:
          type: string
          description: The token to get the next page result.
      description: A paginated list of subscribers
    org.sagebionetworks.repo.model.table.QueryCacheHitEvent:
      type: object
      properties:
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.table.QueryCacheHitEvent
        objectId:
          type: string
          description: The unique identifier of the object that changed.
        objectVersion:
          type: integer
          description: Identifier for a specific version of an object.
          format: int32
        objectType:
          type: string
          description: JSON enum for the types of objects in Synapse.
          enum:
            - ENTITY
            - ENTITY_CONTAINER
            - PRINCIPAL
            - ACTIVITY
            - EVALUATION
            - EVALUATION_ROUND
            - SUBMISSION
            - EVALUATION_SUBMISSIONS
            - FILE
            - MESSAGE
            - WIKI
            - FAVORITE
            - ACCESS_REQUIREMENT
            - ACCESS_APPROVAL
            - TEAM
            - TABLE
            - ACCESS_CONTROL_LIST
            - PROJECT_SETTING
            - VERIFICATION_SUBMISSION
            - CERTIFIED_USER_PASSING_RECORD
            - FORUM
            - THREAD
            - REPLY
            - FORM_GROUP
            - ORGANIZATION
            - FORM_DATA
            - ENTITY_VIEW
            - USER_PROFILE
            - DATA_ACCESS_REQUEST
            - DATA_ACCESS_SUBMISSION
            - DATA_ACCESS_SUBMISSION_STATUS
            - MEMBERSHIP_INVITATION
            - JSON_SCHEMA
            - JSON_SCHEMA_DEPENDANT
            - DATASET
            - DATASET_COLLECTION
            - THREAD_VIEW
            - MATERIALIZED_VIEW
            - VIRTUAL_TABLE
            - TABLE_STATUS_EVENT
            - DATA_ACCESS_SUBMISSION_EVENT
            - FILE_EVENT
            - QUERY_CACHE_HIT
            - PROJECT_STORAGE_EVENT
            - REPLICATED_EVENT
            - PORTAL
            - OAUTH_CLIENT
        timestamp:
          type: string
          description: The timestamp when this change was originally committed.
        queryRequestHash:
          type: string
          description: 'The has (SHA 256 Hex) of a query request that resulted in the cache hit. '
      description: An event fired when a user runs a query that results in a cache hit.
      required:
        - concreteType
    org.sagebionetworks.repo.model.form.FormRejection:
      type: object
      properties:
        reason:
          type: string
          description: The reason for the rejection. Limit 500 characters or less.
      description: Form reviewer rejection data
    org.sagebionetworks.repo.model.VersionInfo:
      type: object
      properties:
        id:
          type: string
          description: The id of the entity
        versionNumber:
          type: integer
          description: The version number of the entity
          format: int32
        versionLabel:
          type: string
          description: The user defined version label of the entity
        versionComment:
          type: string
          description: The user defined version label of the entity
        isLatestVersion:
          type: boolean
          description: If this version is the latest version of the entity
        modifiedBy:
          type: string
          description: The display name of the user that last modified this entity.
        contentSize:
          type: string
          description: The size of the associated file (when applicable and available).
        contentMd5:
          type: string
          description: Calculated md5 of the associated file (when applicable and available).
        fileHandleId:
          type: string
          description: The file handle id of the associated file (when applicable and available).
        modifiedByPrincipalId:
          type: string
          description: The user that last modified this entity.
        modifiedOn:
          type: string
          description: The date this entity was last modified.
      description: JSON schema for VersionInfo POJO
    org.sagebionetworks.repo.model.agent.GridAgentSessionContext:
      type: object
      properties:
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.agent.GridAgentSessionContext
        gridSessionId:
          type: string
          description: Required. The grid session ID.
        usersReplicaId:
          type: integer
          description: Required. The calling user's grid replica ID.
          format: int32
      description: Additional context provided for grid agent chat sessions.
      required:
        - concreteType
    org.sagebionetworks.repo.model.docker.DockerCommit:
      type: object
      properties:
        tag:
          type: string
          description: A user supplied name for a specific version of a repository.
        digest:
          type: string
          description: A unique id for the commit, generated by hashing its content.
        createdOn:
          type: string
          description: The date this commit was created.
      description: 'Metadata for an image in a Docker Repository:  A digest and optional tag.'
    org.sagebionetworks.repo.model.SubmissionTeam:
      type: object
      properties:
        teamId:
          type: string
          description: Team ID
        challengeId:
          type: string
          description: Challenge ID
        isRegistered:
          type: boolean
          description: true if and only if the given team is registered for the given challenge.
      description: Record for a Team that can be used to submit to a challenge, including whether said Team is already registered.
    org.sagebionetworks.repo.model.auth.AuthenticationReceiptToken:
      type: object
      properties:
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.auth.AuthenticationReceiptToken
        hmac:
          type: string
          description: The hash message authentication code for the message.
        version:
          type: integer
          description: The version of the key used to generate the HMAC.
          format: int32
        expiresOn:
          type: string
          description: The date-time when this token expires.
        createdOn:
          type: string
          description: The date-time the token was generated.
        userId:
          type: integer
          description: The ID of the user account.
          format: int32
      description: A token returned to the user upon successful authentication.
      required:
        - concreteType
    org.sagebionetworks.repo.model.asynch.AsynchronousResponseBody:
      type: object
      properties:
        concreteType:
          type: string
      description: The body of an Asynchronous job response.
      oneOf:
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.EntityUpdateResults'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.schema.CreateSchemaResponse'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.grid.CreateGridResponse'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.RowReferenceSetResults'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.download.DownloadListQueryResponse'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.grid.GridCsvImportResponse'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.DownloadFromTableResult'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.file.BulkFileDownloadResponse'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.file.AddFileToDownloadListResponse'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.doi.v2.DoiResponse'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.TableSearchChangeResponse'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.download.DownloadListManifestResponse'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.file.FileHandleRestoreResponse'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.TableUpdateTransactionResponse'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.file.FileHandleArchivalResponse'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.agent.AgentChatResponse'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.UploadToTableResult'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.schema.GetValidationSchemaResponse'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.migration.AsyncMigrationResponse'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.report.DownloadStorageReportResponse'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.grid.DownloadFromGridResult'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.download.AddToDownloadListResponse'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.QueryResultBundle'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.UploadToTablePreviewResult'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.TableSchemaChangeResponse'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.DownloadPFBResult'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.download.DownloadListPackageResponse'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.ViewColumnModelResponse'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.QueryResult'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.grid.GridRecordSetExportResponse'
      required:
        - concreteType
      discriminator:
        propertyName: concreteType
    org.sagebionetworks.repo.model.PaginatedIds:
      type: object
      properties:
        results:
          type: array
          items:
            type: string
          description: The list of Object Ids for this page
        totalNumberOfResults:
          type: integer
          description: The total number of results
          format: int32
      description: Paginated results of strings
    org.sagebionetworks.repo.model.download.SortField:
      type: string
      enum:
        - fileName
        - projectName
        - synId
        - versionNumber
        - addedOn
        - createdBy
        - createdOn
        - fileSize
        - isEligibleForPackaging
    org.sagebionetworks.repo.model.agent.AgentType:
      type: string
      enum:
        - BASELINE
        - CUSTOM
    org.sagebionetworks.repo.model.quiz.QuizGenerator:
      type: object
      properties:
        id:
          type: integer
          description: the ID of this Quiz
          format: int32
        header:
          type: string
          description: Content preceding the series of questions
        minimumScore:
          type: integer
          description: Minimum number of questions to answer correctly to pass
          format: int32
        questions:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.quiz.QuestionVariety'
            description: A list of variations of a question
          description: The questions in the Quiz
      description: Schema for a quiz and, optionally, its answer key
    org.sagebionetworks.repo.model.verification.AttachmentMetadata:
      type: object
      properties:
        fileName:
          type: string
          description: The name of a file
        id:
          type: string
          description: The identifier of a file
      description: The metadata of a file attached to a Verification Submission
    org.sagebionetworks.repo.model.file.FileResultFailureCode:
      type: string
      enum:
        - NOT_FOUND
        - UNAUTHORIZED
    org.sagebionetworks.repo.model.agent.AgentChatRequest:
      type: object
      properties:
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.agent.AgentChatRequest
        sessionId:
          type: string
          description: The sessionId that identifies the conversation with the agent.
        chatText:
          type: string
          description: The user's text message to send to the agent.
        enableTrace:
          type: boolean
          description: Optional. When trace is enabled, the agent will include information about its decision process and the functions/tools it will use to process this request. Default value is false.
      description: Send a chat message to the Synapse chat agent
      required:
        - concreteType
    org.sagebionetworks.repo.model.grid.GridCsvImportRequest:
      type: object
      properties:
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.grid.GridCsvImportRequest
        sessionId:
          type: string
          description: The grid session ID.
        fileHandleId:
          type: string
          description: The id of the file handle that contains the CSV data.
        csvDescriptor:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.CsvTableDescriptor'
          description: The description of a csv for upload or download.
        schema:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.ColumnModel'
            description: A column model contains the metadata of a single column of a table or view.
          description: The list of ColumnModel that describe the CSV file. Currently this is is required.
      description: A request to import a CSV file into a grid. Currently supports only grid created from a record set.
      required:
        - concreteType
    org.sagebionetworks.repo.model.table.ColumnModel:
      type: object
      properties:
        name:
          type: string
          description: The display name of the column
        columnType:
          type: string
          description: The column type determines the type of data that can be stored in a column. Switching between types (using <a href="${POST.entity.id.table.transaction.async.start}">a transaction</a> with <a href="${org.sagebionetworks.repo.model.table.TableUpdateTransactionRequest}">TableUpdateTransactionRequest</a> in the "changes" list) is generally allowed except for switching to "_LIST" suffixed types. In such cases, a new column must be created and data must be copied over manually
          enum:
            - STRING
            - DOUBLE
            - INTEGER
            - BOOLEAN
            - DATE
            - FILEHANDLEID
            - ENTITYID
            - SUBMISSIONID
            - EVALUATIONID
            - LINK
            - MEDIUMTEXT
            - LARGETEXT
            - USERID
            - STRING_LIST
            - INTEGER_LIST
            - BOOLEAN_LIST
            - DATE_LIST
            - ENTITYID_LIST
            - USERID_LIST
            - JSON
        facetType:
          type: string
          description: Set to one of the enumerated values to indicate a column should be treated as a facet
          enum:
            - enumeration
            - range
        id:
          type: string
          description: The immutable ID issued to new columns
        defaultValue:
          type: string
          description: The default value for this column. Columns of type ENTITYID, FILEHANDLEID, USERID, and LARGETEXT are not allowed to have default values.
        maximumSize:
          type: integer
          description: A parameter for columnTypes with a maximum size.  For example, ColumnType.STRINGs have a default maximum size of 50 characters, but can be set to a maximumSize of 1 to 1000 characters. For columnType of STRING_LIST, this limits the size of individual string elements in the list
          format: int32
        maximumListLength:
          type: integer
          description: Required if using a columnType with a "_LIST" suffix. Describes the maximum number of values that will appear in that list. Value range 1-100 inclusive. Default 100
          format: int32
        enumValues:
          type: array
          items:
            type: string
          description: Columns of type STRING can be constrained to an enumeration values set on this list. The maximum number of entries for an enum is 100
        jsonSubColumns:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.JsonSubColumnModel'
            description: Defines a single sub-column of a column of type JSON.  This can be used to enable the faceting of the sub-columns.
          description: For column of type JSON that represents the combination of multiple sub-columns, this property is used to define each sub-column.
      description: A column model contains the metadata of a single column of a table or view.
    org.sagebionetworks.repo.model.search.query.SearchFacetSort:
      type: string
      enum:
        - ALPHA
        - COUNT
    org.sagebionetworks.repo.model.dataaccess.DataAccessSubmissionEvent:
      type: object
      properties:
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.dataaccess.DataAccessSubmissionEvent
        objectId:
          type: string
          description: The unique identifier of the object that changed.
        objectVersion:
          type: integer
          description: Identifier for a specific version of an object.
          format: int32
        objectType:
          type: string
          description: JSON enum for the types of objects in Synapse.
          enum:
            - ENTITY
            - ENTITY_CONTAINER
            - PRINCIPAL
            - ACTIVITY
            - EVALUATION
            - EVALUATION_ROUND
            - SUBMISSION
            - EVALUATION_SUBMISSIONS
            - FILE
            - MESSAGE
            - WIKI
            - FAVORITE
            - ACCESS_REQUIREMENT
            - ACCESS_APPROVAL
            - TEAM
            - TABLE
            - ACCESS_CONTROL_LIST
            - PROJECT_SETTING
            - VERIFICATION_SUBMISSION
            - CERTIFIED_USER_PASSING_RECORD
            - FORUM
            - THREAD
            - REPLY
            - FORM_GROUP
            - ORGANIZATION
            - FORM_DATA
            - ENTITY_VIEW
            - USER_PROFILE
            - DATA_ACCESS_REQUEST
            - DATA_ACCESS_SUBMISSION
            - DATA_ACCESS_SUBMISSION_STATUS
            - MEMBERSHIP_INVITATION
            - JSON_SCHEMA
            - JSON_SCHEMA_DEPENDANT
            - DATASET
            - DATASET_COLLECTION
            - THREAD_VIEW
            - MATERIALIZED_VIEW
            - VIRTUAL_TABLE
            - TABLE_STATUS_EVENT
            - DATA_ACCESS_SUBMISSION_EVENT
            - FILE_EVENT
            - QUERY_CACHE_HIT
            - PROJECT_STORAGE_EVENT
            - REPLICATED_EVENT
            - PORTAL
            - OAUTH_CLIENT
        timestamp:
          type: string
          description: The timestamp when this change was originally committed.
      description: An envent that is fired after a user creates a data access submission
      required:
        - concreteType
    org.sagebionetworks.repo.model.audit.DeletedNode:
      type: object
      properties:
        id:
          type: string
      description: Data record a deleted node.
    org.sagebionetworks.repo.model.agent.SessionContext:
      type: object
      properties:
        concreteType:
          type: string
      description: Provides additional context for agent sessions.
      oneOf:
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.agent.GridAgentSessionContext'
      required:
        - concreteType
      discriminator:
        propertyName: concreteType
    PaginatedResultsOfDiscussionThreadBundle:
      type: object
      properties:
        totalNumberOfResults:
          type: integer
          description: Calculating the actual totalNumberOfResults is not longer supported. Therefore, for each page, the totalNumberOfResults is estimated using the current page, limit, and offset. When the page size equals the limit, the totalNumberOfResults will be offset+pageSize+ 1. Otherwise, the totalNumberOfResults will be offset+pageSize.
          format: int32
        results:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.discussion.DiscussionThreadBundle'
    org.sagebionetworks.repo.model.statistics.MonthlyFilesStatistics:
      type: object
      properties:
        lastUpdatedOn:
          type: string
          description: The approximate time the files statistics were refreshed. If the statistics were not yet computed the value will not be set
        months:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.statistics.FilesCountStatistics'
            description: Describes an aggregate of file actions (e.g. downloads/uploads) and (unique) users count for a specific time frame
          description: The file count buckets ordered by month, always contains the past 12 months (No matter if statistics are computed or not)
      description: Container for the statistics relative to file downloads or uploads for the past 12 months (Excluding the current month).
    org.sagebionetworks.repo.model.sts.StsPermission:
      type: string
      enum:
        - read_only
        - read_write
    org.sagebionetworks.repo.model.limits.ProjectStorageLocationUsage:
      type: object
      properties:
        storageLocationId:
          type: integer
          description: The ID of the storage location
          format: int32
        sumFileBytes:
          type: integer
          description: The total number of bytes, of files, currently associated with this project storage location.
          format: int32
        maxAllowedFileBytes:
          type: integer
          description: When missing, there is not limit for this project storage location.  When set, this number represent to the total number of allowed bytes for this project storage location.  If the sumFileSizesBytes is greater than this value, then this project storage location is over its limit all new uploads to this project storage location will be blocked.
          format: int32
        isOverLimit:
          type: boolean
          description: When true, sumFileSizesBytes is greater than maxAllowedFileSizeBytes and all new uploads to this project storage location will be blocked.
      description: Represent the current size and limits for a single project storage location.
    org.sagebionetworks.repo.model.download.RemoveBatchOfFilesFromDownloadListResponse:
      type: object
      properties:
        numberOfFilesRemoved:
          type: integer
          description: The number of files that were removed.
          format: int32
      description: Response to remove a single batch of files from the user's download list.
    org.sagebionetworks.repo.model.entity.query.Sort:
      type: object
      properties:
        columnName:
          type: string
          description: The name of the column to sort by. The value can either be an annotation name or an EntityFieldName
        direction:
          type: string
          description: Direction of the sort
          enum:
            - ASC
            - DESC
      description: Defines an entity query sort.
    org.sagebionetworks.repo.model.project.BucketOwnerStorageLocationSetting:
      type: object
      properties:
        concreteType:
          type: string
          description: Indicates which implementation this object represents.
        storageLocationId:
          type: integer
          description: The unique ID for this storage location
          format: int32
        uploadType:
          type: string
          description: The enumeration of possible upload types.
          enum:
            - S3
            - GOOGLECLOUDSTORAGE
            - SFTP
            - HTTPS
            - PROXYLOCAL
            - NONE
        banner:
          type: string
          description: The banner text to display to a user every time a file is uploaded. This field is optional.
        description:
          type: string
          description: A description of the storage location. This description is shown when a user has to choose which upload destination to use.
        etag:
          type: string
          description: Synapse employs an Optimistic Concurrency Control (OCC) scheme to handle concurrent updates. Since the E-Tag changes every time a Project Setting is updated it is used to detect when a client's current representation of a Project Setting is out-of-date.
        createdOn:
          type: string
          description: The date this storage location setting was created.
        createdBy:
          type: integer
          description: The ID of the user that created this storage location setting.
          format: int32
        bucket:
          type: string
          description: The bucket name
        baseKey:
          type: string
          description: the optional base key, which acts as a prefix or a base folder
      description: 'A storage location that defines an external bucket that needs to be verified for ownership. For this type of storage location, upon creation there is a process of verification that will check that a owner.txt file is uploaded to the bucket (and if present within the baseKey folder) and that contains a line separated list of user identifiers. Valid user identifiers for verifications are: user id or id of a team the user is part of.'
      oneOf:
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.project.ExternalGoogleCloudStorageLocationSetting'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.project.ExternalS3StorageLocationSetting'
      required:
        - bucket
        - concreteType
      discriminator:
        propertyName: concreteType
    org.sagebionetworks.repo.model.EntityIdList:
      type: object
      properties:
        idList:
          type: array
          items:
            type: string
          description: A list of entity IDs. Limit size 20.
      description: A list of entity IDs
    org.sagebionetworks.repo.model.table.TableSearchChangeRequest:
      type: object
      properties:
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.table.TableSearchChangeRequest
        entityId:
          type: string
        searchEnabled:
          type: boolean
          description: Specifies if the search should be enabled or disabled on the table
      description: An AsynchronousRequestBody to change the search configuration of a table.
      required:
        - concreteType
    org.sagebionetworks.repo.model.status.StatusEnum:
      type: string
      enum:
        - READ_WRITE
        - READ_ONLY
        - DOWN
    org.sagebionetworks.repo.model.entity.BindSchemaToEntityRequest:
      type: object
      properties:
        entityId:
          type: string
          description: The ID of the the entity.
        schema$id:
          type: string
          description: 'The $id of the JSON schema to bind to the entity.  Note: If the $id includes a semantic version then entity will be bound to that specific version.  If the $id excludes the semantic version then the entity will be bound to the latest version of that schema.'
        enableDerivedAnnotations:
          type: boolean
          description: When 'true', Synapse will automatically, calculate the derived annotations for the Entities bound to this schema.  Defaults to 'false'.
      description: Request to bind an Entity to a JSON schema.
    org.sagebionetworks.repo.model.search.Document:
      type: object
      properties:
        type:
          type: string
          description: Type of the search document. These must be lower case per the search spec.
          enum:
            - add
            - delete
        id:
          type: string
          description: The id of the search document.  Currently we are using the Synapse entity id for this.
        fields:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.search.DocumentFields'
          description: JSON schema for the fields of a search document.  Note that awesome search does not support camel case so we have to deviate from the usual naming scheme for properties.
      description: JSON schema for a search document.
      required:
        - type
        - id
    org.sagebionetworks.repo.model.table.ColumnChange:
      type: object
      properties:
        oldColumnId:
          type: string
          description: The ID of the old ColumnModel to be replaced with the new.  Set to null to indicate a new column should be added without replacing an old column.
        newColumnId:
          type: string
          description: The ID of the new ColumnModel to replace the old. Set to null to indicate the old column should be removed without being replaced.
      description: Describes a change from one column to another.
    org.sagebionetworks.repo.model.file.ExternalFileHandle:
      type: object
      properties:
        id:
          type: string
          description: The ID of this FileHandle.  All references to this FileHandle will use this ID.  Synapse will generate this ID when the FileHandle is created.
        etag:
          type: string
          description: FileHandles are immutable from the perspective of the API.  The only field that can be change is the previewId.  When a new previewId is set, the etag will change.
        createdBy:
          type: string
          description: The ID Of the user that created this file.
        createdOn:
          type: string
          description: The date when this file was uploaded.
        modifiedOn:
          type: string
          description: The date when the file was modified. This is handled by the backend and cannot be modified.
        concreteType:
          type: string
          description: 'This is used to indicate the implementation of this interface. For example, an S3FileHandle should be set to: org.sagebionetworks.repo.model.file.S3FileHandle'
          enum:
            - org.sagebionetworks.repo.model.file.ExternalFileHandle
        contentType:
          type: string
          description: 'Must be: http://en.wikipedia.org/wiki/Internet_media_type'
        contentMd5:
          type: string
          description: The file's content MD5.
        fileName:
          type: string
          description: The short, user visible name for this file.
        storageLocationId:
          type: integer
          description: The optional storage location descriptor
          format: int32
        contentSize:
          type: integer
          description: The size of the file in bytes.
          format: int32
        status:
          type: string
          description: The status of the file handle as computed by the backend. This value cannot be changed, any file handle that is not AVAILABLE should not be used.
          enum:
            - AVAILABLE
            - UNLINKED
            - ARCHIVED
        externalURL:
          type: string
          description: The external URL of this file.
      description: An ExternalFileHandle represents a file that is not stored in Synapse.  Instead, ExternalFileHandles reside somewhere accessible via a URL. Synapse will attempt to generate a preview for any external URL that can be publicly read.
      required:
        - concreteType
    org.sagebionetworks.repo.model.principal.AccountSetupInfo:
      type: object
      properties:
        firstName:
          type: string
          description: The user's first name
        lastName:
          type: string
          description: The user's last name
        username:
          type: string
          description: The requested account user name.
        password:
          type: string
          description: The password to be applied to the new account.
        emailValidationSignedToken:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.principal.EmailValidationSignedToken'
          description: Signed token containing the the information necessary to create a new account or add an email address to an existing account.
      description: Information needed to establish a new user account, following email validation.
    org.sagebionetworks.repo.model.favorite.SortDirection:
      type: string
      enum:
        - ASC
        - DESC
    org.sagebionetworks.repo.model.subscription.SubscriptionObjectType:
      type: string
      enum:
        - FORUM
        - THREAD
        - DATA_ACCESS_SUBMISSION
        - DATA_ACCESS_SUBMISSION_STATUS
    org.sagebionetworks.repo.model.table.ViewType:
      type: string
      enum:
        - file
        - project
        - file_and_table
    org.sagebionetworks.evaluation.model.EvaluationSubmissions:
      type: object
      properties:
        id:
          type: integer
          description: The unique immutable ID for this object.
          format: int32
        etag:
          type: string
          description: a etag that changes whenever any SubmissionStatus under the parent Evaluation does
        evaluationId:
          type: integer
          description: The ID of the Evaluation.
          format: int32
      description: This object holds the metadata for a collection of Submissions belonging to an Evaluation.
    org.sagebionetworks.repo.model.project.BaseKeyStorageLocationSetting:
      type: object
      properties:
        concreteType:
          type: string
          description: Indicates which implementation this object represents.
        storageLocationId:
          type: integer
          description: The unique ID for this storage location
          format: int32
        uploadType:
          type: string
          description: The enumeration of possible upload types.
          enum:
            - S3
            - GOOGLECLOUDSTORAGE
            - SFTP
            - HTTPS
            - PROXYLOCAL
            - NONE
        banner:
          type: string
          description: The banner text to display to a user every time a file is uploaded. This field is optional.
        description:
          type: string
          description: A description of the storage location. This description is shown when a user has to choose which upload destination to use.
        etag:
          type: string
          description: Synapse employs an Optimistic Concurrency Control (OCC) scheme to handle concurrent updates. Since the E-Tag changes every time a Project Setting is updated it is used to detect when a client's current representation of a Project Setting is out-of-date.
        createdOn:
          type: string
          description: The date this storage location setting was created.
        createdBy:
          type: integer
          description: The ID of the user that created this storage location setting.
          format: int32
        baseKey:
          type: string
          description: the optional base key, which acts as a prefix or a base folder
      description: A storage location with an optional base key
      oneOf:
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.project.S3StorageLocationSetting'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.project.ExternalGoogleCloudStorageLocationSetting'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.project.ExternalS3StorageLocationSetting'
      required:
        - concreteType
      discriminator:
        propertyName: concreteType
    org.sagebionetworks.repo.model.oauth.OIDCClaimName:
      type: string
      enum:
        - iss
        - sub
        - aud
        - iat
        - nbf
        - exp
        - auth_time
        - email
        - email_verified
        - given_name
        - family_name
        - company
        - team
        - userid
        - user_name
        - orcid
        - is_certified
        - is_validated
        - validated_given_name
        - validated_family_name
        - validated_location
        - validated_email
        - validated_company
        - validated_orcid
        - validated_at
        - refresh_token_id
        - token_type
        - ga4gh_passport_v1
    org.sagebionetworks.repo.model.project.ProjectSetting:
      type: object
      properties:
        concreteType:
          type: string
          description: Indicates which implementation this object represents.
        id:
          type: string
          description: The unique ID assigned to this setting
        projectId:
          type: string
          description: The ID for the project this setting applies to
        settingsType:
          type: string
          description: The enumeration of project setting types.
          enum:
            - upload
        etag:
          type: string
          description: Synapse employs an Optimistic Concurrency Control (OCC) scheme to handle concurrent updates. Since the E-Tag changes every time a Project Setting is updated it is used to detect when a client's current representation of a Project Setting is out-of-date.
      description: A project based setting
      oneOf:
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.project.UploadDestinationListSetting'
      required:
        - concreteType
      discriminator:
        propertyName: concreteType
    org.sagebionetworks.repo.model.table.MaterializedView:
      type: object
      properties:
        name:
          type: string
          description: 'The name of this entity.  Must be 256 characters or less. Names may only contain: letters, numbers, spaces, underscores, hyphens, periods, plus signs, apostrophes, and parentheses'
        description:
          type: string
          description: The description of this entity.  Must be 1000 characters or less.
        id:
          type: string
          description: The unique immutable ID for this entity.  A new ID will be generated for new Entities.  Once issued, this ID is guaranteed to never change or be re-issued
        etag:
          type: string
          description: Synapse employs an Optimistic Concurrency Control (OCC) scheme to handle concurrent updates. Since the E-Tag changes every time an entity is updated it is used to detect when a client's current representation of an entity is out-of-date.
        createdOn:
          type: string
          description: The date this entity was created.
        modifiedOn:
          type: string
          description: The date this entity was last modified.
        createdBy:
          type: string
          description: The ID of the user that created this entity.
        modifiedBy:
          type: string
          description: The ID of the user that last modified this entity.
        parentId:
          type: string
          description: The ID of the Entity that is the parent of this Entity.
        concreteType:
          type: string
          description: Indicates which implementation of Entity this object represents.  The value is the fully qualified class name, e.g. org.sagebionetworks.repo.model.FileEntity.
          enum:
            - org.sagebionetworks.repo.model.table.MaterializedView
        versionNumber:
          type: integer
          description: The version number issued to this version on the object.
          format: int32
        versionLabel:
          type: string
          description: The version label for this entity
        versionComment:
          type: string
          description: The version comment for this entity
        isLatestVersion:
          type: boolean
          description: If this is the latest version of the object.
        columnIds:
          type: array
          items:
            type: string
          description: The columns of a materialized view are dynamic based on the select statement of the definingSQL. This list of columnIds is for read only, and will be ignored for create and update operations.
        isSearchEnabled:
          type: boolean
          description: When creating or updating a table or view specifies if full text search should be enabled.  Note that enabling full text search might slow down the indexing of the table or view.
        definingSQL:
          type: string
          description: The synapse SQL statement that defines the data in the materialized view. The SQL may contain JOIN/UNION clauses on multiple tables.
      description: A materialized view is a type of table that is automatically built from a Synapse SQL query. Its content is persisted. The SQL of the materialized view may contain JOIN clauses on multiple tables.
      required:
        - concreteType
    org.sagebionetworks.repo.model.file.ExternalUploadDestination:
      type: object
      properties:
        concreteType:
          type: string
          description: Indicates which implementation this object represents.
          enum:
            - org.sagebionetworks.repo.model.file.ExternalUploadDestination
        storageLocationId:
          type: integer
          description: the unique id for the storage location, that points to the <a href="${org.sagebionetworks.repo.model.project.StorageLocationSetting}">StorageLocationSetting</a>
          format: int32
        uploadType:
          type: string
          description: The enumeration of possible upload types.
          enum:
            - S3
            - GOOGLECLOUDSTORAGE
            - SFTP
            - HTTPS
            - PROXYLOCAL
            - NONE
        banner:
          type: string
          description: If set, the client should show this banner every time an upload is initiated
        destinationProjectId:
          type: string
          description: The ID of the project where this file will be uploaded.
        projectStorageLocationUsage:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.limits.ProjectStorageLocationUsage'
          description: Represent the current size and limits for a single project storage location.
        url:
          type: string
          description: the generated file URL for uploading to the external destination
      description: This upload destination contains information to start an upload to an SFTP or HTTPS destination. The destination is mapped from an <a href="${org.sagebionetworks.repo.model.project.ExternalStorageLocationSetting}">ExternalStorageLocationSetting</a>.
      required:
        - concreteType
    org.sagebionetworks.repo.model.table.RowSet:
      type: object
      properties:
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.table.RowSet
        tableId:
          type: string
          description: The ID of the TableEntity than owns these rows
        etag:
          type: string
          description: Any RowSet returned from Synapse will contain the current etag of the change set.  To update any rows from a RowSet the etag must be provided with the POST.
        headers:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.SelectColumn'
            description: A column model contains the metadata of a single column of a TableEntity
          description: The list of SelectColumns that describes the rows of this set.
        rows:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.Row'
            description: Represents a single row of a TableEntity
          description: The Rows of this set.  The index of each row value aligns with the index of each header.
      description: Represents a set of row of a TableEntity
      required:
        - concreteType
    org.sagebionetworks.repo.model.file.UploadDestination:
      type: object
      properties:
        concreteType:
          type: string
          description: Indicates which implementation this object represents.
        storageLocationId:
          type: integer
          description: the unique id for the storage location, that points to the <a href="${org.sagebionetworks.repo.model.project.StorageLocationSetting}">StorageLocationSetting</a>
          format: int32
        uploadType:
          type: string
          description: The enumeration of possible upload types.
          enum:
            - S3
            - GOOGLECLOUDSTORAGE
            - SFTP
            - HTTPS
            - PROXYLOCAL
            - NONE
        banner:
          type: string
          description: If set, the client should show this banner every time an upload is initiated
        destinationProjectId:
          type: string
          description: The ID of the project where this file will be uploaded.
        projectStorageLocationUsage:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.limits.ProjectStorageLocationUsage'
          description: Represent the current size and limits for a single project storage location.
      description: The upload destination contains information to start an upload of a file generated according to the underlying <a href="${org.sagebionetworks.repo.model.project.StorageLocationSetting}">StorageLocationSetting</a>.
      oneOf:
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.file.S3UploadDestination'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.file.ExternalObjectStoreUploadDestination'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.file.ExternalUploadDestination'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.file.ExternalS3UploadDestination'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.file.ExternalGoogleCloudUploadDestination'
      required:
        - concreteType
      discriminator:
        propertyName: concreteType
    org.sagebionetworks.repo.model.oauth.OAuthScopeList:
      type: object
      properties:
        list:
          type: array
          items:
            type: string
            description: The OAuth 2.0 scopes supported by Synapse
            enum:
              - openid
              - email
              - profile
              - ga4gh_passport_v1
              - view
              - download
              - modify
              - authorize
              - offline_access
    org.sagebionetworks.repo.model.provenance.UsedEntity:
      type: object
      properties:
        wasExecuted:
          type: boolean
          description: The enclosed entity was used and also executed in the Activity
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.provenance.UsedEntity
        reference:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.Reference'
          description: JSON schema for Reference POJO
      description: Interface for JSON schema for UsedEntity POJO
      required:
        - concreteType
    org.sagebionetworks.repo.model.subscription.SubscriptionRequest:
      type: object
      properties:
        objectType:
          type: string
          description: The types of object that can be subscribed.
          enum:
            - FORUM
            - THREAD
            - DATA_ACCESS_SUBMISSION
            - DATA_ACCESS_SUBMISSION_STATUS
        idList:
          type: array
          items:
            type: string
          description: The list of objectId
        sortByType:
          type: string
          description: Subscription sort by types.
          enum:
            - SUBSCRIPTION_ID
            - SUBSCRIBER_ID
            - OBJECT_ID
            - OBJECT_TYPE
            - CREATED_ON
        sortDirection:
          type: string
          description: Subscription sort directions.
          enum:
            - ASC
            - DESC
      description: A object that is used to request a list of Subscription
    org.sagebionetworks.repo.model.download.SortDirection:
      type: string
      enum:
        - ASC
        - DESC
    org.sagebionetworks.repo.model.discussion.DiscussionReplyBundle:
      type: object
      properties:
        id:
          type: string
          description: The ID of the reply
        threadId:
          type: string
          description: The ID of the thread this Reply belongs to
        forumId:
          type: string
          description: The ID of the forum this Reply belongs to
        projectId:
          type: string
          description: The ID of the project this Reply belongs to
        createdOn:
          type: string
          description: The timestamp when this Reply was created
        createdBy:
          type: string
          description: The id of the user that created this Reply
        modifiedOn:
          type: string
          description: The timestamp when this Reply was last modified
        etag:
          type: string
          description: Synapse employs an Optimistic Concurrency Control (OCC) scheme to handle concurrent updates. Since the E-Tag changes every time an entity is updated it is used to detect when a client's current representation of an entity is out-of-date.
        messageKey:
          type: string
          description: The S3 key where the actual message stored
        isEdited:
          type: boolean
          description: Has the author edited this Reply?
        isDeleted:
          type: boolean
          description: Has this Reply been deleted?
      description: The Reply model object represents a single reply in a thread.
    org.sagebionetworks.repo.model.file.MultipartUploadRequest:
      type: object
      properties:
        concreteType:
          type: string
          description: Indicates which type of multi-part request to initiate. Currently supports <a href="${org.sagebionetworks.repo.model.file.MultipartUploadRequest}">MultipartUploadRequest</a> and <a href="${org.sagebionetworks.repo.model.file.MultipartUploadCopyRequest}">MultipartUploadCopyRequest</a>
          enum:
            - org.sagebionetworks.repo.model.file.MultipartUploadRequest
        partSizeBytes:
          type: integer
          description: 'In order to upload a file, the client must split the process into ''parts'' and upload each part separately. This indicates the clients intended part size in bytes. Part size must be at least 5,242,880 bytes (5MB) with a max of 5,368,709,120 bytes (5GB). Also the maximum number of parts for a single file is 10K. The recommended part size for a single file upload should be: MAX(5242880, (fileSizeBytes/10000)).'
          format: int32
        fileName:
          type: string
          description: The name of the file to be uploaded.
        storageLocationId:
          type: integer
          description: The identifier of the storage location where this file should be stored.  A value of null indicates the default synapse storage.
          format: int32
        generatePreview:
          type: boolean
          description: Optional parameter.  When set to 'false' a preview will not be generated for the resulting file.
        contentMD5Hex:
          type: string
          description: The MD5 of the entire file to be uploaded represented as a HEX string.
        contentType:
          type: string
          description: The content type of the file.
        fileSizeBytes:
          type: integer
          description: The size of the entire file in bytes.
          format: int32
      description: Request to start or continue a multi-part file upload.
      required:
        - concreteType
    org.sagebionetworks.repo.model.discussion.CreateDiscussionReply:
      type: object
      properties:
        threadId:
          type: string
          description: The ID of the thread this Reply belongs to
        messageMarkdown:
          type: string
          description: The markdown of the Reply's message
      description: The model object represents a single Reply creation.
    org.sagebionetworks.repo.model.search.DocumentBatch:
      type: object
      properties:
        documents:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.search.Document'
            description: JSON schema for a search document.
          description: The set of search documents.
      description: JSON schema for a batch of search documents.
    org.sagebionetworks.repo.model.RestResourceList:
      type: object
      properties:
        list:
          type: array
          items:
            type: string
          description: The List of Rest Resources
      description: JSON schema for the REST Resource List POJO
    PaginatedResultsOfReference:
      type: object
      properties:
        totalNumberOfResults:
          type: integer
          description: Calculating the actual totalNumberOfResults is not longer supported. Therefore, for each page, the totalNumberOfResults is estimated using the current page, limit, and offset. When the page size equals the limit, the totalNumberOfResults will be offset+pageSize+ 1. Otherwise, the totalNumberOfResults will be offset+pageSize.
          format: int32
        results:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.Reference'
    PaginatedResultsOfV2WikiHeader:
      type: object
      properties:
        totalNumberOfResults:
          type: integer
          description: Calculating the actual totalNumberOfResults is not longer supported. Therefore, for each page, the totalNumberOfResults is estimated using the current page, limit, and offset. When the page size equals the limit, the totalNumberOfResults will be offset+pageSize+ 1. Otherwise, the totalNumberOfResults will be offset+pageSize.
          format: int32
        results:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.v2.wiki.V2WikiHeader'
    org.sagebionetworks.repo.model.grid.DownloadFromGridRequest:
      type: object
      properties:
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.grid.DownloadFromGridRequest
        sessionId:
          type: string
          description: The grid session ID.
        writeHeader:
          type: boolean
          description: Should the first line contain the columns names as a header in the resulting file?  Set to 'true' to include the headers else, 'false'.  The default value is 'true'.
        includeRowIdAndRowVersion:
          type: boolean
          description: Should the first two columns contain the row ID and row version?  The default value is 'true'.
        includeEtag:
          type: boolean
          description: Should the first (or third if includeRowIdAndRowVersion is true) column contain the row etag? The default value is 'true'.
        csvTableDescriptor:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.CsvTableDescriptor'
          description: The description of a csv for upload or download.
        fileName:
          type: string
          description: The optional name for the downloaded table.
      description: A CSV Grid download request.
      required:
        - concreteType
    org.sagebionetworks.repo.model.schema.JsonSchemaVersionInfo:
      type: object
      properties:
        organizationId:
          type: string
          description: The Synapse issued numeric identifier for the organization.
        organizationName:
          type: string
          description: The name of the organization to which this schema belongs.
        schemaId:
          type: string
          description: The Synapse issued numeric identifier for the schema.
        schemaName:
          type: string
          description: The name of the this schema.
        versionId:
          type: string
          description: The Synapse issued numeric identifier for this version.
        $id:
          type: string
          description: The full '$id' of this schema version
        semanticVersion:
          type: string
          description: The semantic version label provided when this version was created.  Can be null if a semantic version was not provided when this version was created.
        jsonSHA256Hex:
          type: string
          description: The SHA-256 hexadecimal hash of the UTF-8 encoded JSON schema.
        createdOn:
          type: string
          description: The date this JSON schema version was created.
        createdBy:
          type: string
          description: The ID of the user that created this JSON schema version.
      description: Information about a single version of a JSON schema.
    org.sagebionetworks.repo.model.file.BulkFileDownloadResponse:
      type: object
      properties:
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.file.BulkFileDownloadResponse
        resultZipFileHandleId:
          type: string
          description: The FileHandle.id of the resulting zip file. This zip file will contain all of the requested files that the caller was authorized to download.
        fileSummary:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.file.FileDownloadSummary'
            description: Summary of a requested file download.
          description: The summary of each requested file.
        userId:
          type: string
          description: The ID of the user that made this request.
      description: Response for a bulk file download.
      required:
        - concreteType
    org.sagebionetworks.repo.model.annotation.AnnotationBase:
      type: object
      properties:
        key:
          type: string
          description: The key of this Annotation
        isPrivate:
          type: boolean
          description: Flag denoting whether this Annotation should be private.
      description: Generic interface for a key-value Annotation pair
      oneOf:
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.annotation.StringAnnotation'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.annotation.LongAnnotation'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.annotation.DoubleAnnotation'
      discriminator:
        propertyName: concreteType
    org.sagebionetworks.repo.model.asynch.AsynchronousAdminRequestBody:
      type: object
      properties:
        concreteType:
          type: string
      description: Jobs that that implement this type of AsynchronousRequestBody will only be executable by administrators
      oneOf:
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.file.FileHandleArchivalRequest'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.migration.AsyncMigrationRequest'
      required:
        - concreteType
      discriminator:
        propertyName: concreteType
    org.sagebionetworks.repo.model.UserPreferenceBoolean:
      type: object
      properties:
        name:
          type: string
          description: The name of the user preference.
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.UserPreferenceBoolean
        value:
          type: boolean
          description: the value of the user preference
      description: A user preference of type boolean
      required:
        - concreteType
    org.sagebionetworks.repo.model.grid.CreateGridPresignedUrlResponse:
      type: object
      properties:
        presignedUrl:
          type: string
          description: A presigned URL used to establish a websocket connection to the grid session.
      description: Response to create a grid presigned URL.
    org.sagebionetworks.repo.model.quiz.QuestionResponse:
      type: object
      properties:
        questionIndex:
          type: integer
          description: an index unique in the Quiz, used to refer to the question being answered
          format: int32
        concreteType:
          type: string
      description: The response to a question
      oneOf:
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.quiz.MultichoiceResponse'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.quiz.TextFieldResponse'
      required:
        - concreteType
      discriminator:
        propertyName: concreteType
    org.sagebionetworks.repo.model.migration.CalculateOptimalRangeRequest:
      type: object
      properties:
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.migration.CalculateOptimalRangeRequest
        migrationType:
          type: string
          description: 'JSON enum for the types of objects which can be migrated. NOTE: The order of this enumeration determines the migration order.'
          enum:
            - PRINCIPAL
            - GROUP_MEMBERS
            - CREDENTIAL
            - AUTHENTICATED_ON
            - PRINCIPAL_ALIAS
            - NOTIFICATION_EMAIL
            - USER_PROFILE
            - STORAGE_LOCATION
            - FILE_HANDLE
            - MULTIPART_UPLOAD
            - MULTIPART_UPLOAD_PART_STATE
            - MULTIPART_UPLOAD_COMPOSER_PART_STATE
            - MESSAGE_CONTENT
            - MESSAGE_TO_USER
            - MESSAGE_RECIPIENT
            - MESSAGE_STATUS
            - COMMENT
            - V2_WIKI_PAGE
            - V2_WIKI_ATTACHMENT_RESERVATION
            - V2_WIKI_MARKDOWN
            - V2_WIKI_OWNERS
            - ACTIVITY
            - NODE
            - NODE_REVISION
            - NODE_ACCESS_REQUIRMENT
            - DOCKER_REPOSITORY_NAME
            - DOCKER_COMMIT
            - TEAM
            - MEMBERSHIP_INVITATION_SUBMISSION
            - MEMBERSHIP_REQUEST_SUBMISSION
            - EVALUATION
            - EVALUATION_ROUND
            - EVALUATION_SUBMISSIONS
            - SUBMISSION
            - SUBMISSION_CONTRIBUTOR
            - SUBMISSION_FILE
            - SUBMISSION_STATUS
            - PROJECT_SETTINGS
            - PROJECT_STATS
            - ACCESS_REQUIREMENT
            - ACCESS_REQUIREMENT_REVISION
            - ACCESS_APPROVAL
            - ACL
            - ACL_ACCESS
            - ACL_ACCESS_TYPE
            - FAVORITE
            - TRASH_CAN
            - PORTAL
            - DOI
            - CHALLENGE
            - CHALLENGE_TEAM
            - COLUMN_MODEL
            - BOUND_COLUMN_OWNER
            - BOUND_COLUMN_ORDINAL
            - TABLE_TRANSACTION
            - TABLE_TRANSACTION_TO_VERSION
            - TABLE_SEQUENCE
            - TABLE_CHANGE
            - QUIZ_RESPONSE
            - VERIFICATION_SUBMISSION
            - VERIFICATION_STATE
            - VERIFICATION_FILE
            - FORUM
            - DISCUSSION_THREAD
            - DISCUSSION_THREAD_VIEW
            - DISCUSSION_THREAD_ENTITY_REFERENCE
            - DISCUSSION_REPLY
            - SUBSCRIPTION
            - BROADCAST_MESSAGE
            - VIEW_TYPE
            - VIEW_SCOPE
            - VIEW_SNAPSHOT
            - THROTTLE_RULE
            - RESEARCH_PROJECT
            - DATA_ACCESS_REQUEST
            - DATA_ACCESS_SUBMISSION
            - DATA_ACCESS_SUBMISSION_SUBMITTER
            - DATA_ACCESS_SUBMISSION_STATUS
            - DATA_ACCESS_SUBMISSION_ACCESSOR_CHANGE
            - DATA_ACCESS_NOTIFICATIONS
            - FORM_GROUP
            - FORM_DATA
            - ORGANIZATION
            - JSON_SCHEMA
            - JSON_SCHEMA_BLOB
            - JSON_SCHEMA_VERSION
            - JSON_SCHEMA_LATEST_VERSION
            - JSON_SCHEMA_DEPENDENCY
            - JSON_SCHEMA_OBJECT_BINDING
            - DOWNLOAD_LIST
            - DOWNLOAD_LIST_ITEM
            - DOWNLOAD_ORDER
            - DOWNLOAD_LIST_2
            - DOWNLOAD_LIST_ITEM_2
            - DATA_TYPE
            - OAUTH_SECTOR_IDENTIFIER
            - OAUTH_CLIENT
            - OAUTH_REFRESH_TOKEN
            - OAUTH_ACCESS_TOKEN
            - PERSONAL_ACCESS_TOKEN
            - AUTHORIZATION_GRANT
            - SES_NOTIFICATIONS
            - QUARANTINED_EMAILS
            - FEATURE_STATUS
            - MATERIALIZED_VIEW_ID
            - MATERIALIZED_VIEW_SOURCE_TABLE
            - PRINCIPAL_OIDC_BINDING
            - OTP_SECRET
            - OTP_RECOVERY_CODE
            - TWO_FA_STATUS
            - WEBHOOK
            - WEBHOOK_VERIFICATION
            - WEBHOOK_ALLOWED_DOMAIN
            - AGENT_REGISTRATION
            - AGENT_SESSION
            - TOS_REQUIREMENTS
            - TOS_AGREEMENT
            - PROJECT_STORAGE_DATA
            - PROJECT_STORAGE_LIMIT
            - GRID_SESSION
            - GRID_REPLICA
            - GRID_CONNECTION
            - GRID_PATCH
            - CURATION_TASK
            - USER_STATUS
            - RECORDSET_VALIDATION_STATS
            - CHANGE
        minimumId:
          type: integer
          description: The first ID in the range of IDs (inclusive)
          format: int32
        maximumId:
          type: integer
          description: The last ID in the range of IDs (inclusive)
          format: int32
        optimalRowsPerRange:
          type: integer
          description: The optimal number of rows per range.
          format: int32
      description: Request to calculate the ID ranges with the optimal number of rows.
      required:
        - concreteType
    org.sagebionetworks.repo.model.schema.JsonSchemaInfo:
      type: object
      properties:
        organizationId:
          type: string
          description: The Synapse identifier issued to the Organization to which this JsonSchema belongs.
        organizationName:
          type: string
          description: The name of the Organization to which this JsonSchema belongs.
        schemaId:
          type: string
          description: The Synapse identifier issued to the JsonSchema.
        schemaName:
          type: string
          description: The name of the JsonSchema.
        createdOn:
          type: string
          description: The date this JsonSchema was created.
        createdBy:
          type: string
          description: The ID of the user that created this JsonSchema.
      description: Information about a single JSON schema.
    org.sagebionetworks.evaluation.model.SubmissionBundle:
      type: object
      properties:
        submission:
          $ref: '#/components/schemas/org.sagebionetworks.evaluation.model.Submission'
          description: A Submission to a Synapse Evaluation is a pointer to a versioned Entity. Submissions are immutable, so we archive a copy of the EntityBundle at the time of submission.
        submissionStatus:
          $ref: '#/components/schemas/org.sagebionetworks.evaluation.model.SubmissionStatus'
          description: A SubmissionStatus is a secondary, mutable object associated with a Submission. This object should be used to contain scoring data about the Submission.
      description: A bundle object to contain a Submission and its accompanying SubmissionStatus.
    org.sagebionetworks.repo.model.message.MessageRecipientSet:
      type: object
      properties:
        recipients:
          type: array
          items:
            type: string
          description: The unique identifiers of the intended recipients of a message
          uniqueItems: true
      description: Contains a set of IDs of the intended recipients of a message
    org.sagebionetworks.repo.model.file.StsUploadDestination:
      type: object
      properties:
        concreteType:
          type: string
          description: Indicates which implementation this object represents.
        storageLocationId:
          type: integer
          description: the unique id for the storage location, that points to the <a href="${org.sagebionetworks.repo.model.project.StorageLocationSetting}">StorageLocationSetting</a>
          format: int32
        uploadType:
          type: string
          description: The enumeration of possible upload types.
          enum:
            - S3
            - GOOGLECLOUDSTORAGE
            - SFTP
            - HTTPS
            - PROXYLOCAL
            - NONE
        banner:
          type: string
          description: If set, the client should show this banner every time an upload is initiated
        destinationProjectId:
          type: string
          description: The ID of the project where this file will be uploaded.
        projectStorageLocationUsage:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.limits.ProjectStorageLocationUsage'
          description: Represent the current size and limits for a single project storage location.
        baseKey:
          type: string
          description: the optional base key, which acts as a prefix or a base folder
        stsEnabled:
          type: boolean
          description: Enables STS on this Storage Location
      description: An StsUploadDestination provides settings to enable Synapse to call AWS Security Token Service (STS) to get temporary AWS credentials
      oneOf:
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.file.S3UploadDestination'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.file.ExternalS3UploadDestination'
      required:
        - concreteType
      discriminator:
        propertyName: concreteType
    org.sagebionetworks.repo.model.webhook.SynapseEventType:
      type: string
      enum:
        - CREATE
        - UPDATE
        - DELETE
    org.sagebionetworks.repo.model.table.DownloadFromTableResult:
      type: object
      properties:
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.table.DownloadFromTableResult
        resultsFileHandleId:
          type: string
          description: The resulting file handle ID can be used to download the CSV file created by this job.  The file will contain all of the data requested in the query SQL provided when the job was started.
        tableId:
          type: string
          description: The ID of the table identified in the from clause of the table query.
        etag:
          type: string
          description: Any RowSet returned from Synapse will contain the current etag of the change set.  To update any rows from a RowSet the etag must be provided with the POST.
        headers:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.SelectColumn'
            description: A column model contains the metadata of a single column of a TableEntity
          description: The list of SelectColumns that describes the rows of this set.
      description: The response body of an asynchronous CSV table download job.
      required:
        - concreteType
    org.sagebionetworks.repo.model.table.DownloadPFBRequest:
      type: object
      properties:
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.table.DownloadPFBRequest
        entityId:
          type: string
        pfbEntityName:
          type: string
          description: Required. Used for the PFB entity.name field of each row added to the resulting avro file.
        fileName:
          type: string
          description: Set the name of the resulting PFB file. An auto-generated name will be used if omitted.
        sql:
          type: string
          description: The SQL query string.
        additionalFilters:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.QueryFilter'
          description: Appends additional filters to the SQL query. These are applied before facets. Filters within the list have an AND relationship. If a WHERE clause already exists on the SQL query or facets are selected, it will also be ANDed with the query generated by these additional filters.
        selectedFacets:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.FacetColumnRequest'
            description: A set of values that have been selected for filtering in a faceted column
          description: The selected facet filters.
        includeEntityEtag:
          type: boolean
          description: 'Optional, default false. When true, a query results against views will include the Etag of each entity in the results.  Note: The etag is necessary to update Entities in the view.'
        selectFileColumn:
          type: integer
          description: The id of the column used to select file entities (e.g. to fetch the action required for download). The column needs to be an ENTITYID type column and be part of the schema of the underlying table/view.
          format: int32
        selectFileVersionColumn:
          type: integer
          description: The id of the column used as the version for selecting file entities when required (e.g. to add a materialized view query to the download cart with version enabled). The column needs to be an INTEGER type column and be part of the schema of the underlying table/view.
          format: int32
        offset:
          type: integer
          description: The optional offset into the results
          format: int32
        limit:
          type: integer
          description: The optional limit to the results
          format: int32
        sort:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.SortItem'
      description: Request to download a Portable Format for Biomedical (PFB) file from a table/view query result.
      required:
        - concreteType
    org.sagebionetworks.repo.model.doi.v2.DoiObjectType:
      type: string
      enum:
        - ENTITY
        - PORTAL_RESOURCE
    org.sagebionetworks.repo.model.SubmissionTeamPagedResults:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.SubmissionTeam'
            description: Record for a Team that can be used to submit to a challenge, including whether said Team is already registered.
          description: The list of results for this page
        totalNumberOfResults:
          type: integer
          description: The total number of results
          format: int32
      description: A paginated list of SubmissionTeam objects
    org.sagebionetworks.repo.model.message.Message:
      type: object
      properties:
        concreteType:
          type: string
        objectId:
          type: string
          description: The unique identifier of the object that changed.
        objectVersion:
          type: integer
          description: Identifier for a specific version of an object.
          format: int32
        objectType:
          type: string
          description: JSON enum for the types of objects in Synapse.
          enum:
            - ENTITY
            - ENTITY_CONTAINER
            - PRINCIPAL
            - ACTIVITY
            - EVALUATION
            - EVALUATION_ROUND
            - SUBMISSION
            - EVALUATION_SUBMISSIONS
            - FILE
            - MESSAGE
            - WIKI
            - FAVORITE
            - ACCESS_REQUIREMENT
            - ACCESS_APPROVAL
            - TEAM
            - TABLE
            - ACCESS_CONTROL_LIST
            - PROJECT_SETTING
            - VERIFICATION_SUBMISSION
            - CERTIFIED_USER_PASSING_RECORD
            - FORUM
            - THREAD
            - REPLY
            - FORM_GROUP
            - ORGANIZATION
            - FORM_DATA
            - ENTITY_VIEW
            - USER_PROFILE
            - DATA_ACCESS_REQUEST
            - DATA_ACCESS_SUBMISSION
            - DATA_ACCESS_SUBMISSION_STATUS
            - MEMBERSHIP_INVITATION
            - JSON_SCHEMA
            - JSON_SCHEMA_DEPENDANT
            - DATASET
            - DATASET_COLLECTION
            - THREAD_VIEW
            - MATERIALIZED_VIEW
            - VIRTUAL_TABLE
            - TABLE_STATUS_EVENT
            - DATA_ACCESS_SUBMISSION_EVENT
            - FILE_EVENT
            - QUERY_CACHE_HIT
            - PROJECT_STORAGE_EVENT
            - REPLICATED_EVENT
            - PORTAL
            - OAUTH_CLIENT
        timestamp:
          type: string
          description: The timestamp when this change was originally committed.
      description: JSON schema for a message
      oneOf:
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.QueryCacheHitEvent'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.message.ChangeMessage'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.limits.ProjectStorageEvent'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.ReplicatedEvent'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.dataaccess.DataAccessSubmissionEvent'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.file.FileEvent'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.TableStatusChangeEvent'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.message.LocalStackChangeMesssage'
      required:
        - concreteType
      discriminator:
        propertyName: concreteType
    org.sagebionetworks.repo.model.webhook.ListUserWebhooksResponse:
      type: object
      properties:
        page:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.webhook.Webhook'
            description: An object that serves as registration for a Synapse user to receive events for the specified event.
          description: The Webhooks belonging to a given user.
        nextPageToken:
          type: string
          description: Forward this token to get the next page of results.
      description: Response body containing the list of webhook for a user.
    org.sagebionetworks.repo.model.StatusHistoryRecord:
      type: object
      properties:
        statusName:
          type: string
        date:
          type: string
      description: JSON schema for StatusHistoryRecord POJO
    org.sagebionetworks.repo.model.webhook.SynapseObjectType:
      type: string
      enum:
        - ENTITY
    org.sagebionetworks.repo.model.EntityId:
      type: object
      properties:
        id:
          type: string
          description: The id of an entity.
      description: JSON schema for EntityId POJO
    org.sagebionetworks.repo.model.dataaccess.SubmissionPage:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.dataaccess.Submission'
            description: A submission to request access to controlled data.
        nextPageToken:
          type: string
          description: The token to get the next page result.
      description: A page of Submission.
    org.sagebionetworks.repo.model.subscription.Topic:
      type: object
      properties:
        objectId:
          type: string
          description: The ID of the object that could be subscribed
        objectType:
          type: string
          description: The types of object that can be subscribed.
          enum:
            - FORUM
            - THREAD
            - DATA_ACCESS_SUBMISSION
            - DATA_ACCESS_SUBMISSION_STATUS
      description: The model object represents a topic of subscription.
    org.sagebionetworks.repo.model.message.LocalStackMessage:
      type: object
      properties:
        concreteType:
          type: string
        objectId:
          type: string
          description: The unique identifier of the object that changed.
        objectVersion:
          type: integer
          description: Identifier for a specific version of an object.
          format: int32
        objectType:
          type: string
          description: JSON enum for the types of objects in Synapse.
          enum:
            - ENTITY
            - ENTITY_CONTAINER
            - PRINCIPAL
            - ACTIVITY
            - EVALUATION
            - EVALUATION_ROUND
            - SUBMISSION
            - EVALUATION_SUBMISSIONS
            - FILE
            - MESSAGE
            - WIKI
            - FAVORITE
            - ACCESS_REQUIREMENT
            - ACCESS_APPROVAL
            - TEAM
            - TABLE
            - ACCESS_CONTROL_LIST
            - PROJECT_SETTING
            - VERIFICATION_SUBMISSION
            - CERTIFIED_USER_PASSING_RECORD
            - FORUM
            - THREAD
            - REPLY
            - FORM_GROUP
            - ORGANIZATION
            - FORM_DATA
            - ENTITY_VIEW
            - USER_PROFILE
            - DATA_ACCESS_REQUEST
            - DATA_ACCESS_SUBMISSION
            - DATA_ACCESS_SUBMISSION_STATUS
            - MEMBERSHIP_INVITATION
            - JSON_SCHEMA
            - JSON_SCHEMA_DEPENDANT
            - DATASET
            - DATASET_COLLECTION
            - THREAD_VIEW
            - MATERIALIZED_VIEW
            - VIRTUAL_TABLE
            - TABLE_STATUS_EVENT
            - DATA_ACCESS_SUBMISSION_EVENT
            - FILE_EVENT
            - QUERY_CACHE_HIT
            - PROJECT_STORAGE_EVENT
            - REPLICATED_EVENT
            - PORTAL
            - OAUTH_CLIENT
        timestamp:
          type: string
          description: The timestamp when this change was originally committed.
      description: JSON schema for a message that can be sent to the local stack and does not migrate.
      oneOf:
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.QueryCacheHitEvent'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.limits.ProjectStorageEvent'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.ReplicatedEvent'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.dataaccess.DataAccessSubmissionEvent'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.file.FileEvent'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.TableStatusChangeEvent'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.message.LocalStackChangeMesssage'
      required:
        - concreteType
      discriminator:
        propertyName: concreteType
    org.sagebionetworks.repo.model.auth.ChangePasswordRequest:
      type: object
      properties:
        sessionToken:
          type: string
          description: A token that identifies the user
        password:
          type: string
          description: The new password
      description: DEPRECATED. Please use an implementation of ChangePasswordInterface instead. Contains fields required to change a user's password
    org.sagebionetworks.repo.model.discussion.CreateDiscussionThread:
      type: object
      properties:
        forumId:
          type: string
          description: The ID of the forum this CreateThread belongs to
        title:
          type: string
          description: The title of the Thread
        messageMarkdown:
          type: string
          description: The markdown of the Thread's message
      description: The model object represents a single Thread creation.
    org.sagebionetworks.repo.model.file.AddPartResponse:
      type: object
      properties:
        uploadId:
          type: string
          description: The unique identifier of a multi-part request.
        partNumber:
          type: integer
          description: The part number of the add.
          format: int32
        addPartState:
          type: string
          description: The state of this add.
          enum:
            - ADD_SUCCESS
            - ADD_FAILED
        errorMessage:
          type: string
          description: If the added failed, this will contain the error message of the cause.  Will be null when the add is successful.
      description: Response from adding a part to multi-part upload or copy.
    org.sagebionetworks.repo.model.principal.AccountCreationToken:
      type: object
      properties:
        emailValidationSignedToken:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.principal.EmailValidationSignedToken'
          description: Signed token containing the the information necessary to create a new account or add an email address to an existing account.
        encodedMembershipInvtnSignedToken:
          type: string
          description: Encoded signed token containing the information needed to retrieve a membership invitation.
      description: Information needed to start the process of creating a new account.
    org.sagebionetworks.repo.model.agent.TraceEventsRequest:
      type: object
      properties:
        jobId:
          type: string
          description: The job ID issued when the agent chat request job was started.
        newerThanTimestamp:
          type: integer
          description: When a timestamp value is provided, only trace events that occurred after the provided timestamp will be included in the results.
          format: int32
      description: A request to get a single page of trace events for a specified asynchronous job.
    org.sagebionetworks.repo.model.search.query.SearchFieldName:
      type: string
      enum:
        - Id
        - Name
        - Description
        - EntityType
        - ModifiedBy
        - ModifiedOn
        - CreatedBy
        - CreatedOn
        - Consortium
        - Diagnosis
        - Organ
        - Tissue
    org.sagebionetworks.repo.model.file.FileDownloadSummary:
      type: object
      properties:
        fileHandleId:
          type: string
          description: The file handle id of a requested file.
        associateObjectId:
          type: string
          description: The ID of the object associated with the file
        associateObjectType:
          type: string
          description: Enumeration of all possible objects types that can be associated with a file.
          enum:
            - FileEntity
            - TableEntity
            - WikiAttachment
            - WikiMarkdown
            - UserProfileAttachment
            - MessageAttachment
            - TeamAttachment
            - SubmissionAttachment
            - VerificationSubmission
            - AccessRequirementAttachment
            - DataAccessRequestAttachment
            - DataAccessSubmissionAttachment
            - FormData
        zipEntryName:
          type: string
          description: The zip entry name used for this file.  This entry includes both the path and file name.  The value will only be set if the status is set to 'SUCCESS'
        status:
          type: string
          description: The download status of this file.
          enum:
            - SUCCESS
            - FAILURE
        failureMessage:
          type: string
          description: If the download status of this file is set to 'FAILURE', then this will be the failure message. Null for 'SUCCESS'.
        failureCode:
          type: string
          description: If the download status of this file is set to 'FAILURE', then this will be the failure code. Null for 'SUCCESS'.
          enum:
            - NOT_FOUND
            - UNAUTHORIZED
            - DUPLICATE
            - EXCEEDS_SIZE_LIMIT
            - UNKNOWN_ERROR
      description: Summary of a requested file download.
    org.sagebionetworks.repo.model.registry.EntityMigration:
      type: object
      properties:
        toRename:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.registry.RenameData'
            description: Rename datat
          description: The full path of the entity schema.
      description: Metadata about migrating entities
    org.sagebionetworks.repo.model.dataaccess.SubmissionStateChangeRequest:
      type: object
      properties:
        submissionId:
          type: string
          description: The ID of the requested Submission.
        newState:
          type: string
          description: The state of a Submission.
          enum:
            - SUBMITTED
            - APPROVED
            - REJECTED
            - CANCELLED
        rejectedReason:
          type: string
          description: The reason that the Submission is rejected if newState is REJECTED.
      description: A request to change the state of a Submission.
    org.sagebionetworks.repo.model.grid.query.Query:
      type: object
      properties:
        columnSelection:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.grid.query.SelectItem'
            description: A generic select item.
          description: 'One or more SelectItem is required to define the columns that will be returned by this query.  Each SelectItem must be a complete JSON object with the required ''concreteType'' property. IMPORTANT: Do not use SQL syntax - use the predefined SelectItem objects. Examples: To select all columns: {"concreteType":"org.sagebionetworks.repo.model.grid..query.SelectAll"}. To select the count of the number of rows use: {"concreteType":"org.sagebionetworks.repo.model.grid.query.function.CountStar"}'
        filters:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.grid.query.Filter'
            description: 'All filter objects must use valid JSON syntax with double quotes around all strings. There are four different types of filters that can be applied to a grid query. For example, a filter to find all rows where column named: ''someInt'' has a value greater than 12, the following filter would be used:[{"concreteType":"org.sagebionetworks.repo.model.grid.query.CellValueFilter","columnName":"someInt","operator":"GREATER_THAN","value":[12]}]. In order to find all rows with a JSON schema validation error use the following filter: [{"concreteType":"org.sagebionetworks.repo.model.grid.query.RowIsValidFilter","value":false}].  In order to find all rows with JSON schema validation error message that indicates the wrong type was provided, you could use the filter: [{"concreteType":"org.sagebionetworks.repo.model.grid.query.RowValidationResultFilter","operator":"LIKE","validationResultValue":"%expected type%"}]. In order to find all rows that are currently selected by the user, you would use the following filter: [{"concreteType":"org.sagebionetworks.repo.model.grid.query.RowSelectionFilter","isSelected":true}].'
          description: 'Optional. Each filter must be a complete JSON object with the required ''concreteType'' property. IMPORTANT: Do not use SQL syntax - use the predefined filter objects. Examples: To find invalid rows: [{"concreteType":"org.sagebionetworks.repo.model.grid.query.RowIsValidFilter","value":false}]. To find rows where ''age'' > 25: [{"concreteType":"org.sagebionetworks.repo.model.grid.query.CellValueFilter","columnName":"age","operator":"GREATER_THAN","value":[25]}]. Multiple filters are combined with AND logic.'
        limit:
          type: integer
          description: Required. Limit of the number of rows returned to avoid loading more data than needed into your context window.
          format: int32
        offset:
          type: integer
          description: Optional. specifies the offset of the first row to return.
          format: int32
      description: Defines a structured query using JSON SelectItems and Filters objects - NOT SQL syntax. Use the predefined SelectItems and Filters with specific concreteType values.
    org.sagebionetworks.repo.model.schema.ObjectType:
      type: string
      enum:
        - entity
    org.sagebionetworks.repo.model.webhook.WebhookMessage:
      type: object
      properties:
        concreteType:
          type: string
        messageId:
          type: string
          description: Unique message identifier.
        eventTimestamp:
          type: string
          description: The timestamp when the event occurred, in ISO 8601 format.
      description: Data transfer object for messages to be sent to webhook endpoints.
      oneOf:
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.webhook.WebhookSynapseEventMessage'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.webhook.WebhookVerificationMessage'
      required:
        - messageId
        - eventTimestamp
        - concreteType
      discriminator:
        propertyName: concreteType
    org.sagebionetworks.repo.model.dataaccess.SubmissionInfoPage:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.dataaccess.SubmissionInfo'
            description: Information about a request to access controlled data and its related Research Project
        nextPageToken:
          type: string
          description: The token to get the next page result.
      description: A page of Submission Information
    org.sagebionetworks.repo.model.doi.v2.NameIdentifierScheme:
      type: string
      enum:
        - ORCID
        - ISNI
    org.sagebionetworks.repo.model.entity.FileHandleUpdateRequest:
      type: object
      properties:
        oldFileHandleId:
          type: string
          description: The id of the file handle currently associated to the FileEntity. Used to avoid conflicting cuncurrent updates, if the id does not match the current file handle id the request will be rejected with a PRECONDITION_FAILED (412) response.
        newFileHandleId:
          type: string
          description: The id of the new file handle to be associated with the FileEntity. The user performing the request must be the owner of the file handle.
      description: Reuqest that can be used to update the file handle of an <a href="org.sagebionetworks.repo.model.FileEntity>FileEntity</a>". The MD5 of new file handle should match the MD5 of the current file handle.
    org.sagebionetworks.repo.model.attachment.UploadResult:
      type: object
      properties:
        message:
          type: string
          description: The uplaod message
        uploadStatus:
          type: string
          description: The status of the upload.
          enum:
            - FAILED
            - SUCCESS
      description: This object is deprecated and will be removed in future versions of Synapse.
    org.sagebionetworks.repo.model.grid.CreateReplicaResponse:
      type: object
      properties:
        replica:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.grid.GridReplica'
          description: Information about a replica.
      description: Response to a create replica request.
    org.sagebionetworks.repo.model.discussion.MessageURL:
      type: object
      properties:
        messageUrl:
          type: string
          description: The URL to download the file which contains the message.
    org.sagebionetworks.repo.model.message.cloudmailin.Envelope:
      type: object
      properties:
        to:
          type: string
          description: The email address the server is sending to. Note this might not always be the address within the message headers. For that reason you should also look at the headers parameter.
        recipients:
          type: array
          items:
            type: string
          description: The full list of recipients that the remote server is attempting to send to in this transaction.
        from:
          type: string
          description: The email address that the server was sending from. Note this might not always be the address within the message headers. For that reason you should also look at the headers parameter.
        helo_domain:
          type: string
          description: The domain reported by the sending server as it sends the helo or ehlo command.
        remote_ip:
          type: string
          description: The remote IP address of the sending server if available.
        spf:
          type: string
          description: The SPF result for the given IP address and Domain.
      description: Message Envelope
    org.sagebionetworks.repo.model.table.TableStatusChangeEvent:
      type: object
      properties:
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.table.TableStatusChangeEvent
        objectId:
          type: string
          description: The unique identifier of the object that changed.
        objectVersion:
          type: integer
          description: Identifier for a specific version of an object.
          format: int32
        objectType:
          type: string
          description: JSON enum for the types of objects in Synapse.
          enum:
            - ENTITY
            - ENTITY_CONTAINER
            - PRINCIPAL
            - ACTIVITY
            - EVALUATION
            - EVALUATION_ROUND
            - SUBMISSION
            - EVALUATION_SUBMISSIONS
            - FILE
            - MESSAGE
            - WIKI
            - FAVORITE
            - ACCESS_REQUIREMENT
            - ACCESS_APPROVAL
            - TEAM
            - TABLE
            - ACCESS_CONTROL_LIST
            - PROJECT_SETTING
            - VERIFICATION_SUBMISSION
            - CERTIFIED_USER_PASSING_RECORD
            - FORUM
            - THREAD
            - REPLY
            - FORM_GROUP
            - ORGANIZATION
            - FORM_DATA
            - ENTITY_VIEW
            - USER_PROFILE
            - DATA_ACCESS_REQUEST
            - DATA_ACCESS_SUBMISSION
            - DATA_ACCESS_SUBMISSION_STATUS
            - MEMBERSHIP_INVITATION
            - JSON_SCHEMA
            - JSON_SCHEMA_DEPENDANT
            - DATASET
            - DATASET_COLLECTION
            - THREAD_VIEW
            - MATERIALIZED_VIEW
            - VIRTUAL_TABLE
            - TABLE_STATUS_EVENT
            - DATA_ACCESS_SUBMISSION_EVENT
            - FILE_EVENT
            - QUERY_CACHE_HIT
            - PROJECT_STORAGE_EVENT
            - REPLICATED_EVENT
            - PORTAL
            - OAUTH_CLIENT
        timestamp:
          type: string
          description: The timestamp when this change was originally committed.
        state:
          type: string
          description: The Table's state can be one of the following enumerations
          enum:
            - AVAILABLE
            - PROCESSING
            - PROCESSING_FAILED
      description: Object used to propagate table status changes
      required:
        - concreteType
    org.sagebionetworks.repo.model.RestrictionInformationBatchResponse:
      type: object
      properties:
        restrictionInformation:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.RestrictionInformationResponse'
            description: The information about restriction level on a restrict-able object.
          description: The list of RestrictionInformationResponse for each of the object ids included in the request.
      description: The information about restriction level on a list of restrict-able objects.
    org.sagebionetworks.evaluation.model.BatchUploadResponse:
      type: object
      properties:
        nextUploadToken:
          type: string
          description: The token required to be sent with the subsequent batch.
      description: The response for a batch SubmissionStatus upload.
    org.sagebionetworks.repo.model.Link:
      type: object
      properties:
        name:
          type: string
          description: 'The name of this entity.  Must be 256 characters or less. Names may only contain: letters, numbers, spaces, underscores, hyphens, periods, plus signs, apostrophes, and parentheses'
        description:
          type: string
          description: The description of this entity.  Must be 1000 characters or less.
        id:
          type: string
          description: The unique immutable ID for this entity.  A new ID will be generated for new Entities.  Once issued, this ID is guaranteed to never change or be re-issued
        etag:
          type: string
          description: Synapse employs an Optimistic Concurrency Control (OCC) scheme to handle concurrent updates. Since the E-Tag changes every time an entity is updated it is used to detect when a client's current representation of an entity is out-of-date.
        createdOn:
          type: string
          description: The date this entity was created.
        modifiedOn:
          type: string
          description: The date this entity was last modified.
        createdBy:
          type: string
          description: The ID of the user that created this entity.
        modifiedBy:
          type: string
          description: The ID of the user that last modified this entity.
        parentId:
          type: string
          description: The ID of the Entity that is the parent of this Entity.
        concreteType:
          type: string
          description: Indicates which implementation of Entity this object represents.  The value is the fully qualified class name, e.g. org.sagebionetworks.repo.model.FileEntity.
          enum:
            - org.sagebionetworks.repo.model.Link
        linksTo:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.Reference'
          description: JSON schema for Reference POJO
        linksToClassName:
          type: string
          description: The synapse Entity's class name that this link points to.
      description: JSON schema for a Link
      required:
        - concreteType
    org.sagebionetworks.repo.model.auth.AccessTokenGenerationResponse:
      type: object
      properties:
        token:
          type: string
          description: The generated token. The token cannot be retrieved again after the time of creation.
      description: Response body generated when creating a personal access token.
    org.sagebionetworks.repo.model.dataaccess.AccessRequirementSearchResponse:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.dataaccess.AccessRequirementSearchResult'
            description: Result item of an Access Requirement search
          description: The results of an access requirement search
        nextPageToken:
          type: string
          description: A token used to get the next page of a particular search query.
      description: Describes the response object for an Access Requirement search
    org.sagebionetworks.repo.model.wiki.WikiPage:
      type: object
      properties:
        id:
          type: string
          description: The ID of this wiki page.
        etag:
          type: string
          description: The etag of this object
        createdOn:
          type: string
          description: The timestamp when this page was created.
        createdBy:
          type: string
          description: The id of the user that created this page.
        modifiedOn:
          type: string
          description: The timestamp when this page was last modified.
        modifiedBy:
          type: string
          description: The id of the user that last modified this page.
        parentWikiId:
          type: string
          description: When set, the WikiPage is a sub-page of the indicated parent WikiPage.
        title:
          type: string
          description: The title of this page.
        markdown:
          type: string
          description: The markdown for this wiki page.
        attachmentFileHandleIds:
          type: array
          items:
            type: string
          description: The list of attachment file handle ids of this page.
      description: The WikiPage model object represent a single user managed wiki page.
    org.sagebionetworks.repo.model.grid.ReplicaSelectionModel:
      type: object
      properties:
        columnSelection:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.grid.CrdtId'
            description: Represents a single CRDT node's identifier.
          description: Each SelectionId is an arr node's id from the 'columnOrder' array
        rowSelection:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.grid.CrdtId'
            description: Represents a single CRDT node's identifier.
          description: Each SelectionId is an arr node's id from the 'rows' array
        columnSelectAll:
          type: boolean
          description: When true, all columns are selected and 'columnSelection' will be ignored.
        rowSelectAll:
          type: boolean
          description: When true, all rows are selected, and 'rowSelection' will be ignored.
      description: Defines a user's selection of columns and rows for a replica.
    org.sagebionetworks.repo.model.oauth.OAuthGrantType:
      type: string
      enum:
        - authorization_code
        - refresh_token
    org.sagebionetworks.repo.model.file.FileDownloadStatus:
      type: string
      enum:
        - SUCCESS
        - FAILURE
    org.sagebionetworks.repo.model.AccessApprovalInfo:
      type: object
      properties:
        userId:
          type: string
          description: The ID of the user.
        accessRequirementId:
          type: string
          description: The ID of the access requirement.
        hasAccessApproval:
          type: boolean
          description: True if userId has an AccessApproval for the specified accessRequirementId; false otherwise.
      description: Information about whether or not a user has an AccessApproval for an AccessRequirement.
    org.sagebionetworks.repo.model.table.ValidateDefiningSqlResponse:
      type: object
      properties:
        isValid:
          type: boolean
          description: True if the provided SQL is valid, false otherwise.
        invalidReason:
          type: string
          description: If the definingSQL is invalid, this will contain a string describing why it is invalid. Otherwise, this will be null.
      description: The response body from validateDefiningSql
    org.sagebionetworks.repo.model.oauth.GA4GHVisaType:
      type: string
      enum:
        - AffiliationAndRole
        - AcceptedTermsAndPolicies
        - ResearcherStatus
        - ControlledAccessGrants
        - LinkedIdentities
    org.sagebionetworks.repo.model.dataaccess.AccessApprovalSearchResponse:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.dataaccess.AccessApprovalSearchResult'
            description: The result item in an Access Approval search
          description: The matching Access Approval information corresponding to the search parameters
        nextPageToken:
          type: string
          description: A token used to get the next page of a particular search query.
      description: Response for the request to search through the access approval history
    org.sagebionetworks.repo.model.migration.AdminResponse:
      type: object
      properties:
        concreteType:
          type: string
      description: Abstraction for Admin response
      oneOf:
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.migration.BackupTypeResponse'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.migration.MigrationTypeChecksum'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.migration.CalculateOptimalRangeResponse'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.migration.RestoreTypeResponse'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.migration.MigrationTypeCounts'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.migration.MigrationRangeChecksum'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.migration.MigrationTypeCount'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.migration.BackfillLastSeenOnResponse'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.migration.BatchChecksumResponse'
      required:
        - concreteType
      discriminator:
        propertyName: concreteType
    org.sagebionetworks.repo.model.table.EntityRefCollectionView:
      type: object
      properties:
        name:
          type: string
          description: 'The name of this entity.  Must be 256 characters or less. Names may only contain: letters, numbers, spaces, underscores, hyphens, periods, plus signs, apostrophes, and parentheses'
        description:
          type: string
          description: The description of this entity.  Must be 1000 characters or less.
        id:
          type: string
          description: The unique immutable ID for this entity.  A new ID will be generated for new Entities.  Once issued, this ID is guaranteed to never change or be re-issued
        etag:
          type: string
          description: Synapse employs an Optimistic Concurrency Control (OCC) scheme to handle concurrent updates. Since the E-Tag changes every time an entity is updated it is used to detect when a client's current representation of an entity is out-of-date.
        createdOn:
          type: string
          description: The date this entity was created.
        modifiedOn:
          type: string
          description: The date this entity was last modified.
        createdBy:
          type: string
          description: The ID of the user that created this entity.
        modifiedBy:
          type: string
          description: The ID of the user that last modified this entity.
        parentId:
          type: string
          description: The ID of the Entity that is the parent of this Entity.
        concreteType:
          type: string
          description: Indicates which implementation of Entity this object represents.  The value is the fully qualified class name, e.g. org.sagebionetworks.repo.model.FileEntity.
        versionNumber:
          type: integer
          description: The version number issued to this version on the object.
          format: int32
        versionLabel:
          type: string
          description: The version label for this entity
        versionComment:
          type: string
          description: The version comment for this entity
        isLatestVersion:
          type: boolean
          description: If this is the latest version of the object.
        columnIds:
          type: array
          items:
            type: string
          description: The list of ColumnModel IDs that define the schema of the object.
        isSearchEnabled:
          type: boolean
          description: When creating or updating a table or view specifies if full text search should be enabled.  Note that enabling full text search might slow down the indexing of the table or view.
        items:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.EntityRef'
            description: Represents a reference to the id and version of an entity to be used in collections.
          description: 'The flat list of entities referenced by this view.  Limit: 30K items.'
      description: A view referencing a fixed collections of entities
      oneOf:
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.DatasetCollection'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.Dataset'
      required:
        - concreteType
      discriminator:
        propertyName: concreteType
    org.sagebionetworks.repo.model.annotation.v2.Annotations:
      type: object
      properties:
        id:
          type: string
          description: ID of the object to which this annotation belongs
        etag:
          type: string
          description: Etag of the object to which this annotation belongs. To update an AnnotationV2, this field must match the current etag on the object.
        annotations:
          type: object
          description: Additional metadata associated with the object. The key is the name of your desired annotations. The value is an object containing a list of string values (use empty list to represent no values for key) and the value type associated with all values in the list
          additionalProperties:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.annotation.v2.AnnotationsValue'
            description: Contains a AnnotationV2's value and its type
      description: Annotations are additional key-value pair metadata that are associated with an object.
    org.sagebionetworks.repo.model.agent.SessionHistoryResponse:
      type: object
      properties:
        sessionId:
          type: string
          description: The session ID of this conversation's history
        page:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.agent.Interaction'
            description: Represents a single interaction between the user and an agent.
          description: A single page of a session's history.  The history is ordered by the interaction time stamp descending.
        nextPageToken:
          type: string
          description: Forward this token to get the next page of results.
      description: A single page of an agent session history
    org.sagebionetworks.repo.model.principal.PrincipalAlias:
      type: object
      properties:
        aliasId:
          type: integer
          description: Each alias is assigned a unique id.
          format: int32
        etag:
          type: string
          description: The etag of this alias.
        principalId:
          type: integer
          description: The ID of the principal to bind the alias too.
          format: int32
        alias:
          type: string
          description: The alias to bind to the principal
        type:
          type: string
          description: The enumeration of the possible alias types that can be bound to a principal.  Note, these names must match those in AliasEnum. For an OAuthProvider type the matching alias is prefixed with USER_
          enum:
            - USER_NAME
            - TEAM_NAME
            - USER_EMAIL
            - USER_OPEN_ID
            - USER_ORCID
      description: Alias binding of a principal
    org.sagebionetworks.repo.model.message.ChangeMessages:
      type: object
      properties:
        list:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.message.ChangeMessage'
            description: JSON schema for a change message
      description: JSON schema for list of ChangeMessages.
    org.sagebionetworks.repo.model.principal.UserGroupHeaderResponse:
      type: object
      properties:
        list:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.UserGroupHeader'
            description: JSON schema for UserHeader POJO
          description: The list of UserGroupHeaders.
      description: A list of UserGroupHeaders.
    org.sagebionetworks.repo.model.auth.Username:
      type: object
      properties:
        email:
          type: string
          description: The user's email
      description: Contains the user's email
    org.sagebionetworks.repo.model.dataaccess.AccessType:
      type: string
      enum:
        - GAIN_ACCESS
        - RENEW_ACCESS
        - REVOKE_ACCESS
    org.sagebionetworks.repo.model.table.HasEntityId:
      type: object
      properties:
        entityId:
          type: string
      description: The object that implements this interface contains an entityId.
      oneOf:
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.QueryBundleRequest'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.TableSearchChangeRequest'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.TableUpdateTransactionRequest'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.DownloadPFBRequest'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.DownloadFromTableRequest'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.AppendableRowSetRequest'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.UploadToTableRequest'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.QueryNextPageToken'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.TableSchemaChangeRequest'
      discriminator:
        propertyName: concreteType
    org.sagebionetworks.repo.model.message.Settings:
      type: object
      properties:
        sendEmailNotifications:
          type: boolean
          description: Should the user receive email notifications?  Default true.
        markEmailedMessagesAsRead:
          type: boolean
          description: Should messages that are emailed to the user be marked as READ in Synapse?  Default false.
      description: Contains a user's notification settings
    org.sagebionetworks.repo.model.registry.FieldMigrationSpec:
      type: object
      properties:
        source:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.registry.FieldDescription'
        destination:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.registry.FieldDescription'
      description: Metadata to describe the migration of a generic field
    org.sagebionetworks.repo.model.Entity:
      type: object
      properties:
        name:
          type: string
          description: 'The name of this entity.  Must be 256 characters or less. Names may only contain: letters, numbers, spaces, underscores, hyphens, periods, plus signs, apostrophes, and parentheses'
        description:
          type: string
          description: The description of this entity.  Must be 1000 characters or less.
        id:
          type: string
          description: The unique immutable ID for this entity.  A new ID will be generated for new Entities.  Once issued, this ID is guaranteed to never change or be re-issued
        etag:
          type: string
          description: Synapse employs an Optimistic Concurrency Control (OCC) scheme to handle concurrent updates. Since the E-Tag changes every time an entity is updated it is used to detect when a client's current representation of an entity is out-of-date.
        createdOn:
          type: string
          description: The date this entity was created.
        modifiedOn:
          type: string
          description: The date this entity was last modified.
        createdBy:
          type: string
          description: The ID of the user that created this entity.
        modifiedBy:
          type: string
          description: The ID of the user that last modified this entity.
        parentId:
          type: string
          description: The ID of the Entity that is the parent of this Entity.
        concreteType:
          type: string
          description: Indicates which implementation of Entity this object represents.  The value is the fully qualified class name, e.g. org.sagebionetworks.repo.model.FileEntity.
      description: This is the base interface that all Entities implement.
      oneOf:
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.docker.DockerRepository'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.DatasetCollection'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.EntityView'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.VirtualTable'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.RecordSet'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.Preview'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.Link'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.FileEntity'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.TableEntity'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.Folder'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.SubmissionView'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.MaterializedView'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.Project'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.ExampleEntity'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.Dataset'
      required:
        - concreteType
      discriminator:
        propertyName: concreteType
    org.sagebionetworks.repo.model.file.FileHandleAssociateType:
      type: string
      enum:
        - FileEntity
        - TableEntity
        - WikiAttachment
        - WikiMarkdown
        - UserProfileAttachment
        - MessageAttachment
        - TeamAttachment
        - SubmissionAttachment
        - VerificationSubmission
        - AccessRequirementAttachment
        - DataAccessRequestAttachment
        - DataAccessSubmissionAttachment
        - FormData
    org.sagebionetworks.repo.model.migration.MigrationRangeChecksum:
      type: object
      properties:
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.migration.MigrationRangeChecksum
        type:
          type: string
          description: 'JSON enum for the types of objects which can be migrated. NOTE: The order of this enumeration determines the migration order.'
          enum:
            - PRINCIPAL
            - GROUP_MEMBERS
            - CREDENTIAL
            - AUTHENTICATED_ON
            - PRINCIPAL_ALIAS
            - NOTIFICATION_EMAIL
            - USER_PROFILE
            - STORAGE_LOCATION
            - FILE_HANDLE
            - MULTIPART_UPLOAD
            - MULTIPART_UPLOAD_PART_STATE
            - MULTIPART_UPLOAD_COMPOSER_PART_STATE
            - MESSAGE_CONTENT
            - MESSAGE_TO_USER
            - MESSAGE_RECIPIENT
            - MESSAGE_STATUS
            - COMMENT
            - V2_WIKI_PAGE
            - V2_WIKI_ATTACHMENT_RESERVATION
            - V2_WIKI_MARKDOWN
            - V2_WIKI_OWNERS
            - ACTIVITY
            - NODE
            - NODE_REVISION
            - NODE_ACCESS_REQUIRMENT
            - DOCKER_REPOSITORY_NAME
            - DOCKER_COMMIT
            - TEAM
            - MEMBERSHIP_INVITATION_SUBMISSION
            - MEMBERSHIP_REQUEST_SUBMISSION
            - EVALUATION
            - EVALUATION_ROUND
            - EVALUATION_SUBMISSIONS
            - SUBMISSION
            - SUBMISSION_CONTRIBUTOR
            - SUBMISSION_FILE
            - SUBMISSION_STATUS
            - PROJECT_SETTINGS
            - PROJECT_STATS
            - ACCESS_REQUIREMENT
            - ACCESS_REQUIREMENT_REVISION
            - ACCESS_APPROVAL
            - ACL
            - ACL_ACCESS
            - ACL_ACCESS_TYPE
            - FAVORITE
            - TRASH_CAN
            - PORTAL
            - DOI
            - CHALLENGE
            - CHALLENGE_TEAM
            - COLUMN_MODEL
            - BOUND_COLUMN_OWNER
            - BOUND_COLUMN_ORDINAL
            - TABLE_TRANSACTION
            - TABLE_TRANSACTION_TO_VERSION
            - TABLE_SEQUENCE
            - TABLE_CHANGE
            - QUIZ_RESPONSE
            - VERIFICATION_SUBMISSION
            - VERIFICATION_STATE
            - VERIFICATION_FILE
            - FORUM
            - DISCUSSION_THREAD
            - DISCUSSION_THREAD_VIEW
            - DISCUSSION_THREAD_ENTITY_REFERENCE
            - DISCUSSION_REPLY
            - SUBSCRIPTION
            - BROADCAST_MESSAGE
            - VIEW_TYPE
            - VIEW_SCOPE
            - VIEW_SNAPSHOT
            - THROTTLE_RULE
            - RESEARCH_PROJECT
            - DATA_ACCESS_REQUEST
            - DATA_ACCESS_SUBMISSION
            - DATA_ACCESS_SUBMISSION_SUBMITTER
            - DATA_ACCESS_SUBMISSION_STATUS
            - DATA_ACCESS_SUBMISSION_ACCESSOR_CHANGE
            - DATA_ACCESS_NOTIFICATIONS
            - FORM_GROUP
            - FORM_DATA
            - ORGANIZATION
            - JSON_SCHEMA
            - JSON_SCHEMA_BLOB
            - JSON_SCHEMA_VERSION
            - JSON_SCHEMA_LATEST_VERSION
            - JSON_SCHEMA_DEPENDENCY
            - JSON_SCHEMA_OBJECT_BINDING
            - DOWNLOAD_LIST
            - DOWNLOAD_LIST_ITEM
            - DOWNLOAD_ORDER
            - DOWNLOAD_LIST_2
            - DOWNLOAD_LIST_ITEM_2
            - DATA_TYPE
            - OAUTH_SECTOR_IDENTIFIER
            - OAUTH_CLIENT
            - OAUTH_REFRESH_TOKEN
            - OAUTH_ACCESS_TOKEN
            - PERSONAL_ACCESS_TOKEN
            - AUTHORIZATION_GRANT
            - SES_NOTIFICATIONS
            - QUARANTINED_EMAILS
            - FEATURE_STATUS
            - MATERIALIZED_VIEW_ID
            - MATERIALIZED_VIEW_SOURCE_TABLE
            - PRINCIPAL_OIDC_BINDING
            - OTP_SECRET
            - OTP_RECOVERY_CODE
            - TWO_FA_STATUS
            - WEBHOOK
            - WEBHOOK_VERIFICATION
            - WEBHOOK_ALLOWED_DOMAIN
            - AGENT_REGISTRATION
            - AGENT_SESSION
            - TOS_REQUIREMENTS
            - TOS_AGREEMENT
            - PROJECT_STORAGE_DATA
            - PROJECT_STORAGE_LIMIT
            - GRID_SESSION
            - GRID_REPLICA
            - GRID_CONNECTION
            - GRID_PATCH
            - CURATION_TASK
            - USER_STATUS
            - RECORDSET_VALIDATION_STATS
            - CHANGE
        checksum:
          type: string
        minid:
          type: integer
          format: int32
        maxid:
          type: integer
          format: int32
      description: Checksum (aggregate) for record range from minId to maxId of migration type 'type'
      required:
        - concreteType
    org.sagebionetworks.repo.model.table.HasValues:
      type: object
      properties:
        values:
          type: array
          items:
            type: string
          description: Values to be used with the filter.
      oneOf:
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.ColumnMultiValueFunctionQueryFilter'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.ColumnSingleValueQueryFilter'
      discriminator:
        propertyName: concreteType
    org.sagebionetworks.repo.model.HasAccessorRequirement:
      type: object
      properties:
        isCertifiedUserRequired:
          type: boolean
          description: If true, then accessor needs to be a Synapse Certified User to gain access.
        isValidatedProfileRequired:
          type: boolean
          description: If true, then accessor needs to have their Synapse Profile validated to gain access.
      description: Include requirements that may or may not require from an accessor.
      oneOf:
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.ManagedACTAccessRequirement'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.SelfSignAccessRequirement'
      discriminator:
        propertyName: concreteType
    org.sagebionetworks.repo.model.oauth.OAuthUrlRequest:
      type: object
      properties:
        provider:
          type: string
          description: Supported OAuth providers
          enum:
            - GOOGLE_OAUTH_2_0
            - ORCID
        redirectUrl:
          type: string
          description: The URL that the OAuth provider is expected to redirect to after authenticating the user.
        state:
          type: string
          description: State to be echoed in the redirect URL as a request parameter named 'state'. Supported by some OAuth providers.
      description: Request for an OAuth2 authorization url.
    org.sagebionetworks.repo.model.ObjectType:
      type: string
      enum:
        - ENTITY
        - ENTITY_CONTAINER
        - PRINCIPAL
        - ACTIVITY
        - EVALUATION
        - EVALUATION_ROUND
        - SUBMISSION
        - EVALUATION_SUBMISSIONS
        - FILE
        - MESSAGE
        - WIKI
        - FAVORITE
        - ACCESS_REQUIREMENT
        - ACCESS_APPROVAL
        - TEAM
        - TABLE
        - ACCESS_CONTROL_LIST
        - PROJECT_SETTING
        - VERIFICATION_SUBMISSION
        - CERTIFIED_USER_PASSING_RECORD
        - FORUM
        - THREAD
        - REPLY
        - FORM_GROUP
        - ORGANIZATION
        - FORM_DATA
        - ENTITY_VIEW
        - USER_PROFILE
        - DATA_ACCESS_REQUEST
        - DATA_ACCESS_SUBMISSION
        - DATA_ACCESS_SUBMISSION_STATUS
        - MEMBERSHIP_INVITATION
        - JSON_SCHEMA
        - JSON_SCHEMA_DEPENDANT
        - DATASET
        - DATASET_COLLECTION
        - THREAD_VIEW
        - MATERIALIZED_VIEW
        - VIRTUAL_TABLE
        - TABLE_STATUS_EVENT
        - DATA_ACCESS_SUBMISSION_EVENT
        - FILE_EVENT
        - QUERY_CACHE_HIT
        - PROJECT_STORAGE_EVENT
        - REPLICATED_EVENT
        - PORTAL
        - OAUTH_CLIENT
    org.sagebionetworks.repo.model.grid.query.function.CountStar:
      type: object
      properties:
        concreteType:
          type: string
          description: Required. Full name of the exact type used.
          enum:
            - org.sagebionetworks.repo.model.grid.query.function.CountStar
      description: Use this to count the total number of rows that match the query. For example, for a user request like 'how many rows are there in total?', select this item. The alias property can be used to name the resulting count column.
      required:
        - concreteType
    org.sagebionetworks.repo.model.InviteeVerificationSignedToken:
      type: object
      properties:
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.InviteeVerificationSignedToken
        hmac:
          type: string
          description: The hash message authentication code for the message.
        version:
          type: integer
          description: The version of the key used to generate the HMAC.
          format: int32
        expiresOn:
          type: string
          description: The date-time when this token expires.
        createdOn:
          type: string
          description: The date-time the token was generated.
        inviteeId:
          type: string
          description: The ID of the invitee.
        membershipInvitationId:
          type: string
          description: The ID of the MembershipInvitation to update.
      description: Signed token containing the information needed to update the inviteeId of a MembershipInvitation.
      required:
        - concreteType
    org.sagebionetworks.repo.model.table.SortDirection:
      type: string
      enum:
        - ASC
        - DESC
    org.sagebionetworks.repo.model.table.DefiningSqlEntityType:
      type: string
      enum:
        - materializedview
        - virtualtable
    org.sagebionetworks.repo.model.dataaccess.AccessorChange:
      type: object
      properties:
        userId:
          type: string
          description: The ID of the user.
        type:
          type: string
          description: The type of access change for this user. Users can gain access, renew access, or have access revoked.
          enum:
            - GAIN_ACCESS
            - RENEW_ACCESS
            - REVOKE_ACCESS
      description: Request for a single user change access to a resource.
    org.sagebionetworks.repo.model.download.DownloadListQueryRequest:
      type: object
      properties:
        concreteType:
          type: string
          description: 'Required. For this type the value should be: ''org.sagebionetworks.repo.model.download.DownloadListQueryRequest'''
          enum:
            - org.sagebionetworks.repo.model.download.DownloadListQueryRequest
        requestDetails:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.download.QueryRequestDetails'
          description: Required.  Must be one of the implementations of QueryRequestDetails.
      description: A request to start an asynchronous job to query a user's download list.  The type of query is defined by provided requestDetails.
      required:
        - concreteType
    org.sagebionetworks.repo.model.asynch.AsynchronousJobStatus:
      type: object
      properties:
        jobState:
          type: string
          description: The job's state can be one of the following enumerations
          enum:
            - PROCESSING
            - FAILED
            - COMPLETE
        jobCanceling:
          type: boolean
          description: Was the job being asked to cancel.
        requestBody:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.asynch.AsynchronousRequestBody'
          description: The body of an Asynchronous job request.
        responseBody:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.asynch.AsynchronousResponseBody'
          description: The body of an Asynchronous job response.
        etag:
          type: string
          description: The etag of the status will change whenever the status changes.
        jobId:
          type: string
          description: The ID if the job issued when this job request was issued.
        startedByUserId:
          type: integer
          description: The ID of the user that started the job
          format: int32
        startedOn:
          type: string
          description: The date-time when the status of this table last changed to PROCESSING.
        changedOn:
          type: string
          description: The date-time when the status of this table last changed.
        progressMessage:
          type: string
          description: The current message of the progress tracker.
        progressCurrent:
          type: integer
          description: 'The progress current value indicates how much progress has been made. For example: If progressTotal = 100; and progressCurrent = 50; then the work is 50% complete.'
          format: int32
        progressTotal:
          type: integer
          description: 'The progress total indicates the total amount of work to complete. For example: If progressTotal = 100; and progressCurrent = 50; then the work is 50% complete.'
          format: int32
        exception:
          type: string
          description: The exception that needs to be thrown
        errorMessage:
          type: string
          description: When processing fails, this is a one line error message.
        errorDetails:
          type: string
          description: When processing fails, this is the full stack trace of the error.
        runtimeMS:
          type: integer
          description: The number of milliseconds from the start to completion of this job.
          format: int32
        callersContext:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.auth.CallersContext'
          description: Contextual information about a web service call.
      description: Object used to track the status of an Asynchronous Job.
    org.sagebionetworks.repo.model.auth.TwoFactorState:
      type: string
      enum:
        - ENABLED
        - DISABLED
    org.sagebionetworks.repo.model.search.DocumentTypeNames:
      type: string
      enum:
        - add
        - delete
    org.sagebionetworks.repo.model.file.AddFileToDownloadListResponse:
      type: object
      properties:
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.file.AddFileToDownloadListResponse
        downloadList:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.file.DownloadList'
          description: User's list of files they wish to download.
      description: Response for a request to add files to a user's download list.
      required:
        - concreteType
    org.sagebionetworks.repo.model.favorite.SortBy:
      type: string
      enum:
        - FAVORITED_ON
        - NAME
    org.sagebionetworks.repo.model.statistics.ProjectFilesStatisticsRequest:
      type: object
      properties:
        concreteType:
          type: string
          description: The type identifying the concrete request
          enum:
            - org.sagebionetworks.repo.model.statistics.ProjectFilesStatisticsRequest
        objectId:
          type: string
          description: The id of the object for which this request is targeted on
        fileDownloads:
          type: boolean
          description: Specifies if the statistics about file downloads should be included in the response, defaults to true
        fileUploads:
          type: boolean
          description: Specifies if the statistics about file uploads should be included in the response, defaults to true
      description: Request body for retrieving the statistics relative to files for a specific project. Allows to retrieve the monthly count of files downloaded and/or uploaded as well as the (unique) number of users that performed a download/upload for the past 12 months (excluding the current month). The response type for this request is <a href="${org.sagebionetworks.repo.model.statistics.ProjectFilesStatisticsResponse}">ProjectFilesStatisticsResponse</a>
      required:
        - concreteType
    org.sagebionetworks.repo.model.auth.TwoFactorAuthOtpType:
      type: string
      enum:
        - TOTP
        - RECOVERY_CODE
    org.sagebionetworks.repo.model.request.ReferenceList:
      type: object
      properties:
        references:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.Reference'
            description: JSON schema for Reference POJO
          description: The list of references
      description: An array of Reference objects
    org.sagebionetworks.repo.model.agent.TraceEventsResponse:
      type: object
      properties:
        jobId:
          type: string
          description: The job ID issued when the agent chat request job was started.
        page:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.agent.TraceEvent'
            description: Represents a single trace event generated during an agent chat asynchronous job request.
          description: A single page of trace events.
      description: A single page of an agent trace events for an asynchronous agent chat job. The events are sorted by timestamp ascending.
    org.sagebionetworks.repo.model.project.ProjectSettingsType:
      type: string
      enum:
        - upload
    org.sagebionetworks.repo.model.registry.FieldDescription:
      type: object
      properties:
        name:
          type: string
          description: Name of field
        type:
          type: string
          description: Type of field
        bucket:
          type: string
          description: Bucket where the field resides
    org.sagebionetworks.repo.model.RestrictionInformationBatchRequest:
      type: object
      properties:
        restrictableObjectType:
          type: string
          description: JSON enum for the types of objects which can be restricted by an AccessRequirement.
          enum:
            - ENTITY
            - EVALUATION
            - TEAM
        objectIds:
          type: array
          items:
            type: string
          description: The list of IDs to request restriction information about. Limited to a max of 50 object ids.
      description: A batch request to retrieve the information about restriction level on a list of restrict-able objects.
    PaginatedResultsOfDockerCommit:
      type: object
      properties:
        totalNumberOfResults:
          type: integer
          description: Calculating the actual totalNumberOfResults is not longer supported. Therefore, for each page, the totalNumberOfResults is estimated using the current page, limit, and offset. When the page size equals the limit, the totalNumberOfResults will be offset+pageSize+ 1. Otherwise, the totalNumberOfResults will be offset+pageSize.
          format: int32
        results:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.docker.DockerCommit'
    org.sagebionetworks.repo.model.docker.DockerRepository:
      type: object
      properties:
        name:
          type: string
          description: 'The name of this entity.  Must be 256 characters or less. Names may only contain: letters, numbers, spaces, underscores, hyphens, periods, plus signs, apostrophes, and parentheses'
        description:
          type: string
          description: The description of this entity.  Must be 1000 characters or less.
        id:
          type: string
          description: The unique immutable ID for this entity.  A new ID will be generated for new Entities.  Once issued, this ID is guaranteed to never change or be re-issued
        etag:
          type: string
          description: Synapse employs an Optimistic Concurrency Control (OCC) scheme to handle concurrent updates. Since the E-Tag changes every time an entity is updated it is used to detect when a client's current representation of an entity is out-of-date.
        createdOn:
          type: string
          description: The date this entity was created.
        modifiedOn:
          type: string
          description: The date this entity was last modified.
        createdBy:
          type: string
          description: The ID of the user that created this entity.
        modifiedBy:
          type: string
          description: The ID of the user that last modified this entity.
        parentId:
          type: string
          description: The ID of the Entity that is the parent of this Entity.
        concreteType:
          type: string
          description: Indicates which implementation of Entity this object represents.  The value is the fully qualified class name, e.g. org.sagebionetworks.repo.model.FileEntity.
          enum:
            - org.sagebionetworks.repo.model.docker.DockerRepository
        repositoryName:
          type: string
          description: This is the repository name, [host[:port]/]path
        isManaged:
          type: boolean
          description: Indicates that the repository is managed by Synapse, rather than by an external registry.
      description: A Docker repository is a lightweight virtual machine image.
      required:
        - concreteType
    org.sagebionetworks.repo.model.form.ListRequest:
      type: object
      properties:
        filterByState:
          type: array
          items:
            type: string
            description: The enumeration of possible FormData submission states.
            enum:
              - WAITING_FOR_SUBMISSION
              - SUBMITTED_WAITING_FOR_REVIEW
              - ACCEPTED
              - REJECTED
          description: Only return results with a state that matches elements from this set.  Required. Must include at least one element.
          uniqueItems: true
        groupId:
          type: string
          description: The group identifier. Required.
        nextPageToken:
          type: string
          description: The results are automatically paginated.  To get the next page, forward the nextPageToken returned from the last request.
      description: Request for a list of FormData matching the provided filters.
    org.sagebionetworks.repo.model.dataaccess.AccessApprovalNotification:
      type: object
      properties:
        notificationType:
          type: string
          enum:
            - REVOCATION
            - FIRST_RENEWAL_REMINDER
            - SECOND_RENEWAL_REMINDER
        requirementId:
          type: integer
          description: The id of the access requirement.
          format: int32
        recipientId:
          type: integer
          description: The id of the recipient.
          format: int32
        sentOn:
          type: string
          description: When the notification was sent.
      description: Information about the a notification for an access approval.
    org.sagebionetworks.repo.model.file.DownloadOrderSummaryResponse:
      type: object
      properties:
        page:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.file.DownloadOrderSummary'
            description: Summary of files included in a download order.
          description: A single page of DownloadOrderSummary objects.
        nextPageToken:
          type: string
          description: Forward this token in the next request to recieve the next page.
      description: Response for a DownloadOrderSummaryRequest.
    org.sagebionetworks.repo.model.webhook.ListUserWebhooksRequest:
      type: object
      properties:
        nextPageToken:
          type: string
          description: Forward this token to get the next page of results.
      description: Request body for listing the user webhooks.
    org.sagebionetworks.repo.model.dataaccess.AccessApprovalSortField:
      type: string
      enum:
        - MODIFIED_ON
        - EXPIRED_ON
    org.sagebionetworks.repo.model.file.DownloadList:
      type: object
      properties:
        ownerId:
          type: string
          description: The ID of the user that owns this download list.
        updatedOn:
          type: string
          description: The date-time when the list was last updated.
        etag:
          type: string
          description: The UUID assigned to a user's download list upon each change to the list.
        filesToDownload:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.file.FileHandleAssociation'
            description: Describes an association of a FileHandle with another object.
          description: The list of files to download.
      description: User's list of files they wish to download.
    org.sagebionetworks.repo.model.doi.v2.DoiAssociation:
      type: object
      properties:
        associationId:
          type: string
          description: The unique ID of this DOI stored in Synapse. Provided by Synapse.
        etag:
          type: string
          description: For Optimistic Concurrency Control (OCC). Required to successfully update a DOI.
        doiUri:
          type: string
          description: The unique URI of this DOI to which the resource can be resolved. Provided by Synapse.
        doiUrl:
          type: string
          description: The DOI URL that will point to the Synapse object.  Provided by Synapse.
        portalId:
          type: string
          description: The id of the portal that this DOI is associated with.
        objectId:
          type: string
          description: Required. The ID of the digital object in Synapse for which this DOI is created.
        objectType:
          type: string
          description: The type of objects that support DOI minting
          enum:
            - ENTITY
            - PORTAL_RESOURCE
        objectVersion:
          type: integer
          description: Optional. The version of the digital object. When null, the DOI is associated with the current version of the object.
          format: int32
        associatedBy:
          type: string
          description: The ID of the user that creates this DOI. Provided by Synapse.
        associatedOn:
          type: string
          description: The date time this DOI is first created. Provided by Synapse.
        updatedBy:
          type: string
          description: The ID of the user that last updated this DOI. Provided by Synapse.
        updatedOn:
          type: string
          description: The date time this DOI is last updated. Provided by Synapse.
      description: All fields that associate a Synapse object with a DOI. The objectId and objectType are required to create or mint a DOI in all circumstances.
    org.sagebionetworks.repo.model.form.FormChangeRequest:
      type: object
      properties:
        name:
          type: string
          description: The name of the form. Required for FormData create.  Optional for FormData update. Between 3 and 256 characters
        fileHandleId:
          type: string
          description: The fileHandleId for the data of the form.
      description: Request changes to a FormData object.
    org.sagebionetworks.repo.model.grid.FeatureCategory:
      type: string
      enum:
        - data_cleaning
        - data_transformation
        - data_validation
        - data_analysis
        - visualization
        - import_export
        - collaboration
        - automation
        - other
    org.sagebionetworks.repo.model.limits.ProjectStorageEvent:
      type: object
      properties:
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.limits.ProjectStorageEvent
        objectId:
          type: string
          description: The unique identifier of the object that changed.
        objectVersion:
          type: integer
          description: Identifier for a specific version of an object.
          format: int32
        objectType:
          type: string
          description: JSON enum for the types of objects in Synapse.
          enum:
            - ENTITY
            - ENTITY_CONTAINER
            - PRINCIPAL
            - ACTIVITY
            - EVALUATION
            - EVALUATION_ROUND
            - SUBMISSION
            - EVALUATION_SUBMISSIONS
            - FILE
            - MESSAGE
            - WIKI
            - FAVORITE
            - ACCESS_REQUIREMENT
            - ACCESS_APPROVAL
            - TEAM
            - TABLE
            - ACCESS_CONTROL_LIST
            - PROJECT_SETTING
            - VERIFICATION_SUBMISSION
            - CERTIFIED_USER_PASSING_RECORD
            - FORUM
            - THREAD
            - REPLY
            - FORM_GROUP
            - ORGANIZATION
            - FORM_DATA
            - ENTITY_VIEW
            - USER_PROFILE
            - DATA_ACCESS_REQUEST
            - DATA_ACCESS_SUBMISSION
            - DATA_ACCESS_SUBMISSION_STATUS
            - MEMBERSHIP_INVITATION
            - JSON_SCHEMA
            - JSON_SCHEMA_DEPENDANT
            - DATASET
            - DATASET_COLLECTION
            - THREAD_VIEW
            - MATERIALIZED_VIEW
            - VIRTUAL_TABLE
            - TABLE_STATUS_EVENT
            - DATA_ACCESS_SUBMISSION_EVENT
            - FILE_EVENT
            - QUERY_CACHE_HIT
            - PROJECT_STORAGE_EVENT
            - REPLICATED_EVENT
            - PORTAL
            - OAUTH_CLIENT
        timestamp:
          type: string
          description: The timestamp when this change was originally committed.
        projectId:
          type: integer
          description: The id of the project affected by the event
          format: int32
      description: Event send when project storage changes needs to be propagated.
      required:
        - concreteType
    org.sagebionetworks.repo.model.table.TableStatus:
      type: object
      properties:
        state:
          type: string
          description: The Table's state can be one of the following enumerations
          enum:
            - AVAILABLE
            - PROCESSING
            - PROCESSING_FAILED
        tableId:
          type: string
          description: The ID of the table.
        version:
          type: integer
          description: For cases where a query is run against a particualr version of a table, this will be that version.  This field is exclueded for all other cases.
          format: int32
        startedOn:
          type: string
          description: The date-time when the status of this table last changed to PROCESSING.
        changedOn:
          type: string
          description: The date-time when the status of this table last changed.
        resetToken:
          type: string
          description: Whenever the status of a table is rest to PROCESSING, a new reset-token will be issued.  The table status can only be set to AVAILABLE by providing the current reset-token.
        lastTableChangeEtag:
          type: string
          description: Whenever the status of a table is set to AVAILABLE, this will be set to the etag of the last table change applied to the index.
        progressMessage:
          type: string
          description: The current message of the progress tracker.
        progressCurrent:
          type: integer
          description: 'The progress current value indicates how much progress has been made. For example: If progressTotal = 100; and progressCurrent = 50; then the work is 50% complete.'
          format: int32
        progressTotal:
          type: integer
          description: 'The progress total indicates the total amount of work to complete. For example: If progressTotal = 100; and progressCurrent = 50; then the work is 50% complete.'
          format: int32
        errorMessage:
          type: string
          description: When processing fails, this is a one line error message.
        errorDetails:
          type: string
          description: When processing fails, this is the full stack trace of the error.
        totalTimeMS:
          type: integer
          description: The total run time (MS) of the last processing job.
          format: int32
      description: Object used to track the status of a Table.
    org.sagebionetworks.repo.model.grid.query.RowIsValidFilter:
      type: object
      properties:
        concreteType:
          type: string
          description: 'Required. Must be a properly quoted JSON string matching one of: "org.sagebionetworks.repo.model.grid.query.RowValidationResultFilter", "org.sagebionetworks.repo.model.grid.query.RowSelectionFilter", "org.sagebionetworks.repo.model.grid.query.RowIsValidFilter", or "org.sagebionetworks.repo.model.grid.query.CellValueFilter"'
          enum:
            - org.sagebionetworks.repo.model.grid.query.RowIsValidFilter
        value:
          type: boolean
          description: Set to 'true' to find rows that are valid according to the schema. Set to 'false' to find rows that are invalid and have validation errors.'
      description: Use this filter for simple requests to find all 'valid' or 'invalid' rows based on their overall validation status.
      required:
        - concreteType
    org.sagebionetworks.repo.model.download.DownloadListManifestResponse:
      type: object
      properties:
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.download.DownloadListManifestResponse
        resultFileHandleId:
          type: string
          description: The identifier of a FileHandle that contains the resulting files manifest.
      description: The results of a job to generate a metadata manifest CSV of the available files from the user's download list.
      required:
        - concreteType
    org.sagebionetworks.repo.model.oauth.OIDCSubjectIdentifierType:
      type: string
      enum:
        - pairwise
    org.sagebionetworks.repo.model.file.ExternalObjectStoreUploadDestination:
      type: object
      properties:
        concreteType:
          type: string
          description: Indicates which implementation this object represents.
          enum:
            - org.sagebionetworks.repo.model.file.ExternalObjectStoreUploadDestination
        storageLocationId:
          type: integer
          description: the unique id for the storage location, that points to the <a href="${org.sagebionetworks.repo.model.project.StorageLocationSetting}">StorageLocationSetting</a>
          format: int32
        uploadType:
          type: string
          description: The enumeration of possible upload types.
          enum:
            - S3
            - GOOGLECLOUDSTORAGE
            - SFTP
            - HTTPS
            - PROXYLOCAL
            - NONE
        banner:
          type: string
          description: If set, the client should show this banner every time an upload is initiated
        destinationProjectId:
          type: string
          description: The ID of the project where this file will be uploaded.
        projectStorageLocationUsage:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.limits.ProjectStorageLocationUsage'
          description: Represent the current size and limits for a single project storage location.
        endpointUrl:
          type: string
          description: 'endpoint URL of the S3 service (for example: ''https://s3.amazonaws.com'')'
        bucket:
          type: string
          description: the bucket to use
        keyPrefixUUID:
          type: string
          description: A UUID prefix used to identify the file to be uploaded. This field will have a new, unique value every time a new UploadDestination is retrieved.
      description: The upload destination contains information necessary to start an upload to an S3 bucket not managed by Synapse. This destination is mapped from an <a href="${org.sagebionetworks.repo.model.project.ExternalObjectStorageLocationSetting}">ExternalObjectStorageLocationSetting</a>.
      required:
        - concreteType
    org.sagebionetworks.repo.model.table.Row:
      type: object
      properties:
        rowId:
          type: integer
          description: The immutable ID issued to a new row.
          format: int32
        versionNumber:
          type: integer
          description: The version number of this row. Each row version is immutable, so when a row is updated a new version is created.
          format: int32
        etag:
          type: string
          description: For queries against EntityViews with query.includeEntityEtag=true, this field will contain the etag of the entity.  Will be null for all other cases.
        values:
          type: array
          items:
            type: string
          description: 'The values for each column of this row. To delete a row, set this to an empty list: []'
      description: Represents a single row of a TableEntity
    org.sagebionetworks.repo.model.file.ExternalGoogleCloudUploadDestination:
      type: object
      properties:
        concreteType:
          type: string
          description: Indicates which implementation this object represents.
          enum:
            - org.sagebionetworks.repo.model.file.ExternalGoogleCloudUploadDestination
        storageLocationId:
          type: integer
          description: the unique id for the storage location, that points to the <a href="${org.sagebionetworks.repo.model.project.StorageLocationSetting}">StorageLocationSetting</a>
          format: int32
        uploadType:
          type: string
          description: The enumeration of possible upload types.
          enum:
            - S3
            - GOOGLECLOUDSTORAGE
            - SFTP
            - HTTPS
            - PROXYLOCAL
            - NONE
        banner:
          type: string
          description: If set, the client should show this banner every time an upload is initiated
        destinationProjectId:
          type: string
          description: The ID of the project where this file will be uploaded.
        projectStorageLocationUsage:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.limits.ProjectStorageLocationUsage'
          description: Represent the current size and limits for a single project storage location.
        baseKey:
          type: string
          description: the optional base key, which acts as a prefix or a base folder
        bucket:
          type: string
          description: the bucket to use
      description: This upload destination contains information to start an upload to an external Google Cloud Storage bucket connected with synapse. The destination is mapped from an <a href="${org.sagebionetworks.repo.model.project.ExternalGoogleCloudStorageLocationSetting}">ExternalGoogleCloudStorageLocationSetting</a>.
      required:
        - concreteType
    org.sagebionetworks.repo.model.download.DownloadListQueryResponse:
      type: object
      properties:
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.download.DownloadListQueryResponse
        responseDetails:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.download.QueryResponseDetails'
          description: Base interface that all download lists query response types implement.
      description: The results of an asynchronous job to query a user's download list.
      required:
        - concreteType
    org.sagebionetworks.repo.model.discussion.DiscussionReplyOrder:
      type: string
      enum:
        - CREATED_ON
    org.sagebionetworks.repo.model.auth.TermsOfServiceInfo:
      type: object
      properties:
        termsOfServiceUrl:
          type: string
          description: The URL that can be used to fetch the latest ToS using an HTTPS GET.
        latestTermsOfServiceVersion:
          type: string
          description: The semantic version of the latest ToS in the provided URL.  Callers will need to provide this version when submitting a request to agree to shown ToS.
        currentRequirements:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.auth.TermsOfServiceRequirements'
          description: Information about the global ToS Synapse requirements that all users must agree to.
      description: Information about the current Synapse Terms of Service (ToS).
    org.sagebionetworks.repo.model.AcquisitionStatusNames:
      type: string
      enum:
        - requested
        - approved
        - denied
        - pending
        - acquired
    org.sagebionetworks.repo.model.limits.ProjectStorageUsage:
      type: object
      properties:
        projectId:
          type: string
          description: The ID of the project
        locations:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.limits.ProjectStorageLocationUsage'
            description: Represent the current size and limits for a single project storage location.
      description: Provides information about file allocations and limits for each storage location associated with a single project.
    org.sagebionetworks.repo.model.download.DownloadListItem:
      type: object
      properties:
        fileEntityId:
          type: string
          description: The 'syn' identifier of a file entity.
        versionNumber:
          type: integer
          description: When included, indicates that a specific version of a files was added to the user's download list.  When excluded, the current version was added.
          format: int32
      description: A single item for a user's download list.
    org.sagebionetworks.repo.model.message.Comment:
      type: object
      properties:
        id:
          type: string
          description: The unique identifier of the message or comment
        createdBy:
          type: string
          description: The unique identifier of the sender of this message
        fileHandleId:
          type: string
          description: 'The S3 file handle storing the body of this message.  Note: The file''s mime type should be ''text/plain'' or ''text/html''.  If no character encoding is specified, then UTF-8 is assumed.'
        createdOn:
          type: string
          description: When this message was created
        targetType:
          type: string
          description: JSON enum for the types of objects in Synapse.
          enum:
            - ENTITY
            - ENTITY_CONTAINER
            - PRINCIPAL
            - ACTIVITY
            - EVALUATION
            - EVALUATION_ROUND
            - SUBMISSION
            - EVALUATION_SUBMISSIONS
            - FILE
            - MESSAGE
            - WIKI
            - FAVORITE
            - ACCESS_REQUIREMENT
            - ACCESS_APPROVAL
            - TEAM
            - TABLE
            - ACCESS_CONTROL_LIST
            - PROJECT_SETTING
            - VERIFICATION_SUBMISSION
            - CERTIFIED_USER_PASSING_RECORD
            - FORUM
            - THREAD
            - REPLY
            - FORM_GROUP
            - ORGANIZATION
            - FORM_DATA
            - ENTITY_VIEW
            - USER_PROFILE
            - DATA_ACCESS_REQUEST
            - DATA_ACCESS_SUBMISSION
            - DATA_ACCESS_SUBMISSION_STATUS
            - MEMBERSHIP_INVITATION
            - JSON_SCHEMA
            - JSON_SCHEMA_DEPENDANT
            - DATASET
            - DATASET_COLLECTION
            - THREAD_VIEW
            - MATERIALIZED_VIEW
            - VIRTUAL_TABLE
            - TABLE_STATUS_EVENT
            - DATA_ACCESS_SUBMISSION_EVENT
            - FILE_EVENT
            - QUERY_CACHE_HIT
            - PROJECT_STORAGE_EVENT
            - REPLICATED_EVENT
            - PORTAL
            - OAUTH_CLIENT
        targetId:
          type: string
          description: The unique identifier of the target object
      description: JSON schema for a comment on a Synapse object
    org.sagebionetworks.repo.model.auth.HasTwoFactorAuthToken:
      type: object
      properties:
        userId:
          type: integer
          description: The id of the user that attempted to authenticate.
          format: int32
        twoFaToken:
          type: string
          description: The token that was included in the error response when authenticating.
        otpCode:
          type: string
          description: One time password (e.g. generated by the authenticator application, depending on the otpType value)
        otpType:
          type: string
          description: The type of one time password code that can be used to authenticate through two factor authentication.
          enum:
            - TOTP
            - RECOVERY_CODE
      description: Used to perform operations that require two factor authentication.
      oneOf:
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.auth.TwoFactorAuthLoginRequest'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.auth.ChangePasswordWithTwoFactorAuthToken'
      discriminator:
        propertyName: concreteType
    org.sagebionetworks.repo.model.table.JsonSubColumnModel:
      type: object
      properties:
        name:
          type: string
          description: The display name of the column
        columnType:
          type: string
          description: The column type determines the type of data that can be stored in a column. Switching between types (using <a href="${POST.entity.id.table.transaction.async.start}">a transaction</a> with <a href="${org.sagebionetworks.repo.model.table.TableUpdateTransactionRequest}">TableUpdateTransactionRequest</a> in the "changes" list) is generally allowed except for switching to "_LIST" suffixed types. In such cases, a new column must be created and data must be copied over manually
          enum:
            - STRING
            - DOUBLE
            - INTEGER
            - BOOLEAN
            - DATE
            - FILEHANDLEID
            - ENTITYID
            - SUBMISSIONID
            - EVALUATIONID
            - LINK
            - MEDIUMTEXT
            - LARGETEXT
            - USERID
            - STRING_LIST
            - INTEGER_LIST
            - BOOLEAN_LIST
            - DATE_LIST
            - ENTITYID_LIST
            - USERID_LIST
            - JSON
        facetType:
          type: string
          description: Set to one of the enumerated values to indicate a column should be treated as a facet
          enum:
            - enumeration
            - range
        jsonPath:
          type: string
          description: 'Defines the JSON path of the sub column. Use the ''$'' char to represent the root of JSON object. If the JSON key of a sub column is ''a'', then the jsonPath for that column would be: ''$.a''.'
      description: Defines a single sub-column of a column of type JSON.  This can be used to enable the faceting of the sub-columns.
    org.sagebionetworks.repo.model.table.TextMatchesMode:
      type: string
      enum:
        - NATURAL_LANGUAGE
        - BOOLEAN
    org.sagebionetworks.repo.model.TeamMembershipStatus:
      type: object
      properties:
        teamId:
          type: string
          description: The id of the Team.
        userId:
          type: string
          description: The principal id of the user.
        isMember:
          type: boolean
          description: true if and only if the user is a member of the team
        hasOpenInvitation:
          type: boolean
          description: true if and only if  the user has an open invitation to join the team
        hasOpenRequest:
          type: boolean
          description: true if and only if  the user has an open request to join the team
        canJoin:
          type: boolean
          description: true if and only if the user requesting this status information can join the user to the team
        membershipApprovalRequired:
          type: boolean
          description: true if and only if  team admin approval is required for the user to join the team
        hasUnmetAccessRequirement:
          type: boolean
          description: true if and only if  there is at least one unmet access requirement for the user on the team
        canSendEmail:
          type: boolean
          description: true if and only if the user can send an email to the team
      description: JSON schema for the possible status of a User with respect to Team membership.
    org.sagebionetworks.repo.model.discussion.DiscussionThreadOrder:
      type: string
      enum:
        - NUMBER_OF_REPLIES
        - NUMBER_OF_VIEWS
        - PINNED_AND_LAST_ACTIVITY
        - THREAD_TITLE
    org.sagebionetworks.repo.model.form.ListResponse:
      type: object
      properties:
        page:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.form.FormData'
            description: User's data gathered from a form template. All FormData belongs to a single FormGroup.
          description: A single page of results matching the request.
        nextPageToken:
          type: string
          description: The results are automatically paginated.  If another page of results exists then a nextPageToken will be provided.  Forward the provided nextPageTokens in a subsequent list request to get the next page.
      description: A single page of results from a ListRequest.
    org.sagebionetworks.repo.model.quiz.Question:
      type: object
      properties:
        questionIndex:
          type: integer
          description: an index unique in the Quiz, used to refer to this question
          format: int32
        prompt:
          type: string
          description: the user-readable prompt for this question
        reference:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.dao.WikiPageKey'
          description: Reference to a WikiPage
        docLink:
          type: string
          description: Link to the document that contains information for background reading related to the question.
        helpText:
          type: string
          description: A short text that provides a snippet of help to answer the question.
        concreteType:
          type: string
      description: a single question in a Quiz
      oneOf:
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.quiz.MultichoiceQuestion'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.quiz.TextFieldQuestion'
      required:
        - concreteType
      discriminator:
        propertyName: concreteType
    org.sagebionetworks.repo.model.migration.IdGeneratorExport:
      type: object
      properties:
        exportScript:
          type: string
          description: The SQL statement to be used to re-create the ID generator database.
      description: Export script for the ID generator.
    org.sagebionetworks.repo.model.ProjectListType:
      type: string
      enum:
        - ALL
        - CREATED
        - PARTICIPATED
        - TEAM
    org.sagebionetworks.repo.model.docker.RegistryEventRequest:
      type: object
      properties:
        id:
          type: string
        addr:
          type: string
        host:
          type: string
          description: The host name (CNAME or IP with optional :port) of the registry where the event occurred.
        method:
          type: string
        useragent:
          type: string
    PaginatedResultsOfSubmission:
      type: object
      properties:
        totalNumberOfResults:
          type: integer
          description: Calculating the actual totalNumberOfResults is not longer supported. Therefore, for each page, the totalNumberOfResults is estimated using the current page, limit, and offset. When the page size equals the limit, the totalNumberOfResults will be offset+pageSize+ 1. Otherwise, the totalNumberOfResults will be offset+pageSize.
          format: int32
        results:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.evaluation.model.Submission'
    org.sagebionetworks.repo.model.entitybundle.v2.EntityBundle:
      type: object
      properties:
        entity:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.Entity'
          description: This is the base interface that all Entities implement.
        entityType:
          type: string
          description: Type of the Entity
          enum:
            - project
            - folder
            - file
            - table
            - link
            - entityview
            - dockerrepo
            - submissionview
            - dataset
            - datasetcollection
            - materializedview
            - virtualtable
            - recordset
        annotations:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.annotation.v2.Annotations'
          description: Annotations are additional key-value pair metadata that are associated with an object.
        permissions:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.auth.UserEntityPermissions'
          description: The permission a User has for a given Entity
        path:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.EntityPath'
          description: All entities in this Entity's path
        hasChildren:
          type: boolean
          description: Whether or not this Entity has children
        accessControlList:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.AccessControlList'
          description: Contains list of principals who can access the data with the allowed types of access for each.
        fileHandles:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.file.FileHandle'
            description: The FileHandle interface defines all of the fields that are common to all implementations.
          description: FileHandles associated with this Entity
        tableBundle:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.TableBundle'
          description: Metadata about a TableEntity that can be included in an EntityBundle
        rootWikiId:
          type: string
          description: Id of the root Wiki associated with this Entity
        benefactorAcl:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.AccessControlList'
          description: Contains list of principals who can access the data with the allowed types of access for each.
        doiAssociation:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.doi.v2.DoiAssociation'
          description: All fields that associate a Synapse object with a DOI. The objectId and objectType are required to create or mint a DOI in all circumstances.
        fileName:
          type: string
          description: If this Entity is a FileEntity, this is its filename
        threadCount:
          type: integer
          description: Number of disucssion threads that reference this Entity
          format: int32
        restrictionInformation:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.RestrictionInformationResponse'
          description: The information about restriction level on a restrict-able object.
        activity:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.provenance.Activity'
          description: Interface for JSON schema for Activity POJO.
      description: Bundle to transport an Entity and related data objects
    org.sagebionetworks.repo.model.auth.TwoFactorAuthTokenContext:
      type: string
      enum:
        - AUTHENTICATION
        - PASSWORD_CHANGE
    org.sagebionetworks.repo.model.download.AvailableFilter:
      type: string
      enum:
        - eligibleForPackaging
        - ineligibleForPackaging
    org.sagebionetworks.repo.model.file.FileEventType:
      type: string
      enum:
        - FILE_DOWNLOAD
        - FILE_UPLOAD
    org.sagebionetworks.repo.model.auth.TwoFactorAuthResetToken:
      type: object
      properties:
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.auth.TwoFactorAuthResetToken
        hmac:
          type: string
          description: The hash message authentication code for the message.
        version:
          type: integer
          description: The version of the key used to generate the HMAC.
          format: int32
        expiresOn:
          type: string
          description: The date-time when this token expires.
        createdOn:
          type: string
          description: The date-time the token was generated.
        userId:
          type: integer
          description: The id of the user.
          format: int32
      description: Signed token containing the the information necessary to reset 2fa for a user.
      required:
        - concreteType
    org.sagebionetworks.repo.model.schema.JsonSchema:
      type: object
      properties:
        $schema:
          type: string
          description: 'See: <a href="https://json-schema.org/draft/2019-09/json-schema-core.html#rfc.section.8.1.1">The "$schema" Keyword</a>'
        $id:
          type: string
          description: 'See: <a href="https://json-schema.org/draft/2019-09/json-schema-core.html#rfc.section.8.2.2">The "$id" Keyword</a>'
        $ref:
          type: string
          description: 'See: <a href="https://json-schema.org/draft/2019-09/json-schema-core.html#rfc.section.8.2.4.1">Direct References with "$ref"</a>'
        type:
          type: string
          description: 'See: <a href="https://json-schema.org/draft/2019-09/json-schema-core.html#rfc.section.4.2.1">Instance Data Model</a>'
          enum:
            - 'null'
            - boolean
            - object
            - array
            - number
            - string
            - integer
        items:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.schema.JsonSchema'
        properties:
          type: object
          description: 'See: <a href="https://json-schema.org/draft/2019-09/json-schema-core.html#rfc.section.9.3.2.1">properties</a>'
          additionalProperties:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.schema.JsonSchema'
        title:
          type: string
          description: 'See: <a href="https://json-schema.org/draft/2019-09/json-schema-hypermedia.html#rfc.section.6.5.1">title</a>'
        description:
          type: string
          description: 'See: <a href="https://json-schema.org/draft/2019-09/json-schema-hypermedia.html#rfc.section.6.5.2">description</a>'
        allOf:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.schema.JsonSchema'
          description: 'Use allOf to ''extend'' or ''implement'' one or more schemas.  See: <a href="https://json-schema.org/draft/2019-09/json-schema-core.html#rfc.section.9.2.1.1">allOf</a>'
        anyOf:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.schema.JsonSchema'
          description: 'See: <a href="https://json-schema.org/draft/2019-09/json-schema-core.html#rfc.section.9.2.1.2">anyOf</a>'
        oneOf:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.schema.JsonSchema'
          description: 'See: <a href="https://json-schema.org/draft/2019-09/json-schema-core.html#rfc.section.9.2.1.3">oneOf</a>'
        not:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.schema.JsonSchema'
        format:
          type: string
          description: 'See: <a href="https://json-schema.org/draft/2019-09/json-schema-validation.html#rfc.section.7.3">Defined Formats</a>'
        definitions:
          type: object
          description: 'In an effor to support draft-07 implementations, we are using ''definitions'' instead of ''$defs''.  See: <a href="https://json-schema.org/draft/2019-09/json-schema-validation.html#rfc.appendix.A">Appendix A</a>'
          additionalProperties:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.schema.JsonSchema'
        enum:
          type: array
          items: {}
          description: 'See: <a href="https://json-schema.org/draft/2019-09/json-schema-validation.html#rfc.section.6.1.2">enum</a>'
        const:
          description: 'See: <a href="https://json-schema.org/draft/2019-09/json-schema-validation.html#rfc.section.6.1.3">const</a>'
        source:
          type: string
          description: Used to indicate that this schema is derived from another object/schema.  The value should be a URL reference to the original work.  The 'source' is solely descriptive and should have no impact on validation.
        required:
          type: array
          items:
            type: string
          description: 'See: <a href="https://json-schema.org/draft/2019-09/json-schema-validation.html#rfc.section.6.5.3">required</a>'
        maxLength:
          type: integer
          description: 'See: <a href="https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-6.3.1">maxLength</a>'
          format: int32
        minLength:
          type: integer
          description: 'See: <a href="https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-6.3.2">minLength</a>'
          format: int32
        uniqueItems:
          type: boolean
          description: 'See: <a href="https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-6.4.3">uniqueItems</a>'
        pattern:
          type: string
          description: 'See: <a href="https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-6.3.3">pattern</a>'
        if:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.schema.JsonSchema'
        then:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.schema.JsonSchema'
        else:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.schema.JsonSchema'
        maximum:
          type: integer
          description: 'See: <a href="https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-6.2.2">maximum</a>'
          format: int32
        minimum:
          type: integer
          description: 'See: <a href="https://tools.ietf.org/html/draft-handrews-json-schema-validation-02#section-6.2.4">minimum</a>'
          format: int32
        default:
          description: 'See: <a href="https://json-schema.org/draft/2019-09/json-schema-validation.html#rfc.section.9.2">default</a>'
        contains:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.schema.JsonSchema'
        additionalProperties:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.schema.JsonSchema'
      description: 'The JSON schema is defined by: <a href="https://json-schema.org/">json-schema.org</a>, specifically draft-07.  Only features listed here are currently supported.'
    org.sagebionetworks.repo.model.table.PaginatedColumnModels:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.ColumnModel'
            description: A column model contains the metadata of a single column of a table or view.
          description: The list of ColumnModels for this page
        totalNumberOfResults:
          type: integer
          description: The total number of results
          format: int32
      description: Paginated results of a ColumnModel
    org.sagebionetworks.repo.model.message.FireMessagesResult:
      type: object
      properties:
        nextChangeNumber:
          type: integer
          description: The next change number to fire.
          format: int32
      description: JSON schema for a change message
    org.sagebionetworks.repo.model.CurationTrackingData:
      type: object
      properties:
        status:
          type: string
          description: The status of data curation process
          enum:
            - loaded
            - processed
            - published
        curator:
          type: string
          description: Contact id of person who curated the data
        history:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.StatusHistoryRecord'
            description: JSON schema for StatusHistoryRecord POJO
          description: Status history
      description: JSON schema for CurationTrackingData
    org.sagebionetworks.repo.model.message.PublishResults:
      type: object
      properties:
        list:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.message.PublishResult'
            description: JSON schema for a change message
      description: JSON schema for list of PublishResult.
    org.sagebionetworks.repo.model.MembershipInvitation:
      type: object
      properties:
        id:
          type: string
          description: The id of the MembershipInvitation.
        teamId:
          type: string
          description: The id of the Team which the user is invited to join.
        inviteeId:
          type: string
          description: The principal ID of the user being invited to join the Team.
        inviteeEmail:
          type: string
          description: The email address of the user being invited to join the Team.
        message:
          type: string
          description: The invitation message (optional).
        expiresOn:
          type: string
          description: The date this invitation expires (optional).
        createdOn:
          type: string
          description: The date this MembershipInvitation was created.
        createdBy:
          type: string
          description: The ID of the user that created this MembershipInvitation.
      description: 'JSON schema for MembershipInvitation POJO. \nNote: certain fields may be omitted when returned if the field value is null.'
    org.sagebionetworks.repo.model.provenance.Used:
      type: object
      properties:
        wasExecuted:
          type: boolean
          description: The enclosed entity was used and also executed in the Activity
        concreteType:
          type: string
      description: Interface for JSON schema for a Used record in Provenance
      oneOf:
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.provenance.UsedURL'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.provenance.UsedEntity'
      required:
        - concreteType
      discriminator:
        propertyName: concreteType
    org.sagebionetworks.repo.model.table.TableUpdateTransactionRequest:
      type: object
      properties:
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.table.TableUpdateTransactionRequest
        entityId:
          type: string
        changes:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.TableUpdateRequest'
            description: Abstraction for a request to update a table.
          description: List of changes that describes schema and/or row changes to a table. For a view the changes are eventually consistent.
        createSnapshot:
          type: boolean
          description: When set to 'true', a snapshot of the table or view will be created and a new version of the entity will be persisted. For a table the snapshot is created after any change from this transaction request are applied to the table. Views do not support changes in the request when a snapshot is created.
        snapshotOptions:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.SnapshotRequest'
          description: Request to create a new snapshot of a table or view.  The provided comment, label, and activity ID will be applied to the current version thereby creating a snapshot and locking the current version.  After the snapshot is created a new version will be started with an 'in-progress' label.
      description: An AsynchronousRequestBody to used make multiple changes to a table or view as a single 'transaction'. All changes will either succeed or fail as a unit.
      required:
        - concreteType
    org.sagebionetworks.repo.model.project.ExternalStorageLocationSetting:
      type: object
      properties:
        concreteType:
          type: string
          description: Indicates which implementation this object represents.
          enum:
            - org.sagebionetworks.repo.model.project.ExternalStorageLocationSetting
        storageLocationId:
          type: integer
          description: The unique ID for this storage location
          format: int32
        uploadType:
          type: string
          description: The enumeration of possible upload types.
          enum:
            - S3
            - GOOGLECLOUDSTORAGE
            - SFTP
            - HTTPS
            - PROXYLOCAL
            - NONE
        banner:
          type: string
          description: The banner text to display to a user every time a file is uploaded. This field is optional.
        description:
          type: string
          description: A description of the storage location. This description is shown when a user has to choose which upload destination to use.
        etag:
          type: string
          description: Synapse employs an Optimistic Concurrency Control (OCC) scheme to handle concurrent updates. Since the E-Tag changes every time a Project Setting is updated it is used to detect when a client's current representation of a Project Setting is out-of-date.
        createdOn:
          type: string
          description: The date this storage location setting was created.
        createdBy:
          type: integer
          description: The ID of the user that created this storage location setting.
          format: int32
        url:
          type: string
          description: the base URL for uploading to the external destination
        supportsSubfolders:
          type: boolean
          description: 'does the destination support creating subfolders under the base url (default: false)'
      description: The external upload destination setting contains information to generate an SFTP or HTTPS upload destination.
      required:
        - concreteType
    org.sagebionetworks.repo.model.download.RemoveBatchOfFilesFromDownloadListRequest:
      type: object
      properties:
        batchToRemove:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.download.DownloadListItem'
            description: A single item for a user's download list.
          description: 'The batch of files to remove from the user''s download list. Note: There is a limit of 1000 files per batch.'
      description: Request to remove a single batch of files to the user's download list.
    org.sagebionetworks.repo.model.discussion.ThreadCount:
      type: object
      properties:
        count:
          type: integer
          description: The total number of threads.
          format: int32
    org.sagebionetworks.repo.model.file.ExternalFileHandleInterface:
      type: object
      properties:
        id:
          type: string
          description: The ID of this FileHandle.  All references to this FileHandle will use this ID.  Synapse will generate this ID when the FileHandle is created.
        etag:
          type: string
          description: FileHandles are immutable from the perspective of the API.  The only field that can be change is the previewId.  When a new previewId is set, the etag will change.
        createdBy:
          type: string
          description: The ID Of the user that created this file.
        createdOn:
          type: string
          description: The date when this file was uploaded.
        modifiedOn:
          type: string
          description: The date when the file was modified. This is handled by the backend and cannot be modified.
        concreteType:
          type: string
          description: 'This is used to indicate the implementation of this interface. For example, an S3FileHandle should be set to: org.sagebionetworks.repo.model.file.S3FileHandle'
        contentType:
          type: string
          description: 'Must be: http://en.wikipedia.org/wiki/Internet_media_type'
        contentMd5:
          type: string
          description: The file's content MD5.
        fileName:
          type: string
          description: The short, user visible name for this file.
        storageLocationId:
          type: integer
          description: The optional storage location descriptor
          format: int32
        contentSize:
          type: integer
          description: The size of the file in bytes.
          format: int32
        status:
          type: string
          description: The status of the file handle as computed by the backend. This value cannot be changed, any file handle that is not AVAILABLE should not be used.
          enum:
            - AVAILABLE
            - UNLINKED
            - ARCHIVED
      description: Defines FileHandles for files that are stored externally and can not be controlled by Synapse. All file access authentication and download/upload/delete operations are delegated the client.
      oneOf:
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.file.ExternalObjectStoreFileHandle'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.file.ProxyFileHandle'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.file.ExternalFileHandle'
      required:
        - concreteType
      discriminator:
        propertyName: concreteType
    org.sagebionetworks.repo.model.principal.AliasCheckResponse:
      type: object
      properties:
        available:
          type: boolean
          description: True is the alias is available.
        valid:
          type: boolean
          description: True if the alias is valid for the passed type.
      description: Response to an alias check request.
    org.sagebionetworks.repo.model.dataaccess.AccessorGroupRequest:
      type: object
      properties:
        accessRequirementId:
          type: string
          description: The condition to filter by AccessRequirement. Use NULL to ignore this filter.
        submitterId:
          type: string
          description: The condition to filter by submitter. Use NULL to ignore this filter.
        accessorId:
          type: string
          description: The condition to filter by accessor. Use NULL to ignore this filter.
        expireBefore:
          type: string
          description: The condition to filter by expiration. Use NULL to ignore this filter.
        nextPageToken:
          type: string
          description: The token to get the next page result. Use NULL to get the first page.
      description: A request to retrieve a page of accessor groups. Accessors will be group by submitter and access requirement.
    org.sagebionetworks.repo.model.migration.MigrationTypeList:
      type: object
      properties:
        list:
          type: array
          items:
            type: string
            description: 'JSON enum for the types of objects which can be migrated. NOTE: The order of this enumeration determines the migration order.'
            enum:
              - PRINCIPAL
              - GROUP_MEMBERS
              - CREDENTIAL
              - AUTHENTICATED_ON
              - PRINCIPAL_ALIAS
              - NOTIFICATION_EMAIL
              - USER_PROFILE
              - STORAGE_LOCATION
              - FILE_HANDLE
              - MULTIPART_UPLOAD
              - MULTIPART_UPLOAD_PART_STATE
              - MULTIPART_UPLOAD_COMPOSER_PART_STATE
              - MESSAGE_CONTENT
              - MESSAGE_TO_USER
              - MESSAGE_RECIPIENT
              - MESSAGE_STATUS
              - COMMENT
              - V2_WIKI_PAGE
              - V2_WIKI_ATTACHMENT_RESERVATION
              - V2_WIKI_MARKDOWN
              - V2_WIKI_OWNERS
              - ACTIVITY
              - NODE
              - NODE_REVISION
              - NODE_ACCESS_REQUIRMENT
              - DOCKER_REPOSITORY_NAME
              - DOCKER_COMMIT
              - TEAM
              - MEMBERSHIP_INVITATION_SUBMISSION
              - MEMBERSHIP_REQUEST_SUBMISSION
              - EVALUATION
              - EVALUATION_ROUND
              - EVALUATION_SUBMISSIONS
              - SUBMISSION
              - SUBMISSION_CONTRIBUTOR
              - SUBMISSION_FILE
              - SUBMISSION_STATUS
              - PROJECT_SETTINGS
              - PROJECT_STATS
              - ACCESS_REQUIREMENT
              - ACCESS_REQUIREMENT_REVISION
              - ACCESS_APPROVAL
              - ACL
              - ACL_ACCESS
              - ACL_ACCESS_TYPE
              - FAVORITE
              - TRASH_CAN
              - PORTAL
              - DOI
              - CHALLENGE
              - CHALLENGE_TEAM
              - COLUMN_MODEL
              - BOUND_COLUMN_OWNER
              - BOUND_COLUMN_ORDINAL
              - TABLE_TRANSACTION
              - TABLE_TRANSACTION_TO_VERSION
              - TABLE_SEQUENCE
              - TABLE_CHANGE
              - QUIZ_RESPONSE
              - VERIFICATION_SUBMISSION
              - VERIFICATION_STATE
              - VERIFICATION_FILE
              - FORUM
              - DISCUSSION_THREAD
              - DISCUSSION_THREAD_VIEW
              - DISCUSSION_THREAD_ENTITY_REFERENCE
              - DISCUSSION_REPLY
              - SUBSCRIPTION
              - BROADCAST_MESSAGE
              - VIEW_TYPE
              - VIEW_SCOPE
              - VIEW_SNAPSHOT
              - THROTTLE_RULE
              - RESEARCH_PROJECT
              - DATA_ACCESS_REQUEST
              - DATA_ACCESS_SUBMISSION
              - DATA_ACCESS_SUBMISSION_SUBMITTER
              - DATA_ACCESS_SUBMISSION_STATUS
              - DATA_ACCESS_SUBMISSION_ACCESSOR_CHANGE
              - DATA_ACCESS_NOTIFICATIONS
              - FORM_GROUP
              - FORM_DATA
              - ORGANIZATION
              - JSON_SCHEMA
              - JSON_SCHEMA_BLOB
              - JSON_SCHEMA_VERSION
              - JSON_SCHEMA_LATEST_VERSION
              - JSON_SCHEMA_DEPENDENCY
              - JSON_SCHEMA_OBJECT_BINDING
              - DOWNLOAD_LIST
              - DOWNLOAD_LIST_ITEM
              - DOWNLOAD_ORDER
              - DOWNLOAD_LIST_2
              - DOWNLOAD_LIST_ITEM_2
              - DATA_TYPE
              - OAUTH_SECTOR_IDENTIFIER
              - OAUTH_CLIENT
              - OAUTH_REFRESH_TOKEN
              - OAUTH_ACCESS_TOKEN
              - PERSONAL_ACCESS_TOKEN
              - AUTHORIZATION_GRANT
              - SES_NOTIFICATIONS
              - QUARANTINED_EMAILS
              - FEATURE_STATUS
              - MATERIALIZED_VIEW_ID
              - MATERIALIZED_VIEW_SOURCE_TABLE
              - PRINCIPAL_OIDC_BINDING
              - OTP_SECRET
              - OTP_RECOVERY_CODE
              - TWO_FA_STATUS
              - WEBHOOK
              - WEBHOOK_VERIFICATION
              - WEBHOOK_ALLOWED_DOMAIN
              - AGENT_REGISTRATION
              - AGENT_SESSION
              - TOS_REQUIREMENTS
              - TOS_AGREEMENT
              - PROJECT_STORAGE_DATA
              - PROJECT_STORAGE_LIMIT
              - GRID_SESSION
              - GRID_REPLICA
              - GRID_CONNECTION
              - GRID_PATCH
              - CURATION_TASK
              - USER_STATUS
              - RECORDSET_VALIDATION_STATS
              - CHANGE
      description: List of Migration types.
    org.sagebionetworks.repo.model.grid.UpdateGridResponse:
      type: object
      properties:
        updatedRowCount:
          type: integer
          description: The number of rows updated with this request.
          format: int32
      description: Response to an Update grid SQL request.
    org.sagebionetworks.repo.model.TermsOfUseAccessRequirement:
      type: object
      properties:
        versionNumber:
          type: integer
          description: The version number issued to this version on the object.
          format: int32
        id:
          type: integer
          description: The unique immutable ID.  Provided by the system, the user may not set this field.
          format: int32
        description:
          type: string
          description: Depricated. Replaced by name.
        name:
          type: string
          description: Name of the AR. Limited to 50 characters and must be unique. Required.
        etag:
          type: string
          description: Synapse employs an Optimistic Concurrency Control (OCC) scheme to handle concurrent updates. Since the E-Tag changes every time an entity is updated it is used to detect when a client's current representation of an object is out-of-date.
        createdOn:
          type: string
          description: The date this object was created. Provided by the system, the user may not set this field.
        modifiedOn:
          type: string
          description: The date this object was last modified. Provided by the system, the user may not set this field.
        createdBy:
          type: string
          description: The user that created this object.  Provided by the system, the user may not set this field.
        modifiedBy:
          type: string
          description: The user that last modified this object.  Provided by the system, the user may not set this field.
        subjectsDefinedByAnnotations:
          type: boolean
          description: Defaults to 'false'.  When 'true', the subjects controlled by this AR are defined by the the'_accessRequirementIds' annotations on individual entities.  This property is mutually exclusive with 'subjectIds'.  If this is set to 'true' then 'subjectIds' must be excluded or empty.
        subjectIds:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.RestrictableObjectDescriptor'
          description: The IDs of the items controlled by this Access Requirement when 'subjectsDefinedByAnnotations=false'. This property is mutually exclusive with 'subjectsDefinedByAnnotations'.  When 'subjectsDefinedByAnnotations=true' then this property must be empty or excluded.  Required when creating or updating and 'subjectsDefinedByAnnotations=false' or 'subjectsDefinedByAnnotations' is excluded.
        accessType:
          type: string
          description: The enumeration of possible permission.
          enum:
            - CREATE
            - READ
            - UPDATE
            - DELETE
            - CHANGE_PERMISSIONS
            - DOWNLOAD
            - UPLOAD
            - PARTICIPATE
            - SUBMIT
            - READ_PRIVATE_SUBMISSION
            - UPDATE_SUBMISSION
            - DELETE_SUBMISSION
            - TEAM_MEMBERSHIP_UPDATE
            - SEND_MESSAGE
            - CHANGE_SETTINGS
            - MODERATE
            - REVIEW_SUBMISSIONS
            - EXEMPTION_ELIGIBLE
        concreteType:
          type: string
          description: Indicates which type of AccessRequirement this object represents.  Provided by the system, the user may not set this field.
          enum:
            - org.sagebionetworks.repo.model.TermsOfUseAccessRequirement
        termsOfUse:
          type: string
          description: Terms Of Use for Access, stored directly in the document (versus in a referenced Location)  Required when creating or updating.
      description: JSON schema for Terms of Use Access Requirement, used for a 'tier 2' Access Requirement
      required:
        - concreteType
    org.sagebionetworks.repo.model.discussion.UpdateThreadMessage:
      type: object
      properties:
        messageMarkdown:
          type: string
          description: The new message markdown
    org.sagebionetworks.repo.model.schema.ValidationResults:
      type: object
      properties:
        objectId:
          type: string
          description: The identifier of the object that was validated.
        objectType:
          type: string
          description: Type types of Synapse objects that can have a JSON schema.
          enum:
            - entity
        objectEtag:
          type: string
          description: 'The etag of the object at the time of validation.  Note: If this etag does not match the current etag of the object then these validation results should be considered out of date.'
        schema$id:
          type: string
          description: The $id of the schema that the object was validated against.
        isValid:
          type: boolean
          description: True if the object is currently valid according to the schema.
        validatedOn:
          type: string
          description: The date-time this object was validated
        validationErrorMessage:
          type: string
          description: If the object is not valid according to the schema, a simple one line error message will be provided.
        allValidationMessages:
          type: array
          items:
            type: string
          description: If the object is not valid according to the schema, a the flat list of error messages will be provided with one error message per sub-schema.
        validationException:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.schema.ValidationException'
          description: A recursive ValidationException that describes all schema violations for an entire schema tree.
      description: Results of validating an object against a schema
    org.sagebionetworks.repo.model.RestrictableObjectDescriptor:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
          description: JSON enum for the types of objects which can be restricted by an AccessRequirement.
          enum:
            - ENTITY
            - EVALUATION
            - TEAM
    org.sagebionetworks.repo.model.drs.AccessMethodType:
      type: string
      enum:
        - https
    org.sagebionetworks.repo.model.project.ExternalS3StorageLocationSetting:
      type: object
      properties:
        concreteType:
          type: string
          description: Indicates which implementation this object represents.
          enum:
            - org.sagebionetworks.repo.model.project.ExternalS3StorageLocationSetting
        storageLocationId:
          type: integer
          description: The unique ID for this storage location
          format: int32
        uploadType:
          type: string
          description: The enumeration of possible upload types.
          enum:
            - S3
            - GOOGLECLOUDSTORAGE
            - SFTP
            - HTTPS
            - PROXYLOCAL
            - NONE
        banner:
          type: string
          description: The banner text to display to a user every time a file is uploaded. This field is optional.
        description:
          type: string
          description: A description of the storage location. This description is shown when a user has to choose which upload destination to use.
        etag:
          type: string
          description: Synapse employs an Optimistic Concurrency Control (OCC) scheme to handle concurrent updates. Since the E-Tag changes every time a Project Setting is updated it is used to detect when a client's current representation of a Project Setting is out-of-date.
        createdOn:
          type: string
          description: The date this storage location setting was created.
        createdBy:
          type: integer
          description: The ID of the user that created this storage location setting.
          format: int32
        bucket:
          type: string
          description: The bucket name
        baseKey:
          type: string
          description: the optional base key, which acts as a prefix or a base folder
        stsEnabled:
          type: boolean
          description: Enables STS on this Storage Location
        endpointUrl:
          type: string
          description: 'the optional s3 endpoint URL for uploading to (default: https://s3.amazonaws.com)'
      description: The external upload destination setting contains information to generate an external S3 upload destination connected with Synapse. For details on how to create a custom S3 storage location in the web client, see <a href="https://help.synapse.org/docs/Custom-Storage-Locations.2048327803.html">Custom Storage Locations</a>
      required:
        - bucket
        - concreteType
    org.sagebionetworks.repo.model.limits.ProjectStorageLocationLimit:
      type: object
      properties:
        projectId:
          type: string
          description: The ID of the project
        storageLocationId:
          type: integer
          description: The ID of the storage location
          format: int32
        maxAllowedFileBytes:
          type: integer
          description: Sets the limit on the number of file bytes that can be associated with this project storage location. The value can be null if there is no limit for the storage location.
          format: int32
      description: Set the limit on the number of files bytes for a single project storage location
      required:
        - projectId
        - storageLocationId
    org.sagebionetworks.repo.model.table.EntityUpdateFailureCode:
      type: string
      enum:
        - NOT_FOUND
        - UNAUTHORIZED
        - CONCURRENT_UPDATE
        - ILLEGAL_ARGUMENT
        - UNKNOWN
    org.sagebionetworks.repo.model.migration.MigrationTypeCounts:
      type: object
      properties:
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.migration.MigrationTypeCounts
        list:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.migration.MigrationTypeCount'
            description: A record containing count of instances, minimum id and maximum id for a migration type
      description: List of MigrationTypeCount records
      required:
        - concreteType
    org.sagebionetworks.repo.model.file.FileHandleCopyResult:
      type: object
      properties:
        newFileHandle:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.file.FileHandle'
          description: The FileHandle interface defines all of the fields that are common to all implementations.
        originalFileHandleId:
          type: string
          description: The Id of the original FileHandle.
        failureCode:
          type: string
          description: Failure code for a files that cannot be copied.
          enum:
            - NOT_FOUND
            - UNAUTHORIZED
      description: Result of a FileHandleCopyRequest.
    org.sagebionetworks.repo.model.dataaccess.UserSubmissionSearchResponse:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.dataaccess.UserSubmissionSearchResult'
            description: The result item in a User Data Access Submission Search
          description: The matching submissions information corresponding to the search parameters
        nextPageToken:
          type: string
          description: A token used to get the next page of a particular search query.
      description: Response for the request to search through the user data access submissions
    org.sagebionetworks.repo.model.file.BatchFileResult:
      type: object
      properties:
        requestedFiles:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.file.FileResult'
            description: Result of a single File request.
          description: Defines the files to get.
      description: Batch of results for file pre-signed-URLs and/or FileHandles requests.
    org.sagebionetworks.repo.model.search.query.FacetTopN:
      type: object
      properties:
        key:
          type: string
          description: The facet name
        value:
          type: integer
          description: The maximum number of facet constraints to be included.
          format: int32
      description: JSON schema for a faceted key-value pair.
    PaginatedResultsOfWikiHeader:
      type: object
      properties:
        totalNumberOfResults:
          type: integer
          description: Calculating the actual totalNumberOfResults is not longer supported. Therefore, for each page, the totalNumberOfResults is estimated using the current page, limit, and offset. When the page size equals the limit, the totalNumberOfResults will be offset+pageSize+ 1. Otherwise, the totalNumberOfResults will be offset+pageSize.
          format: int32
        results:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.wiki.WikiHeader'
    org.sagebionetworks.repo.model.message.MessageStatus:
      type: object
      properties:
        messageId:
          type: string
          description: The unique identifier of the message.
        recipientId:
          type: string
          description: The unique identifier of the recipient of this message.
        status:
          type: string
          description: The status of the message, from the RECIPIENT'S standpoint
          enum:
            - READ
            - UNREAD
            - ARCHIVED
      description: JSON schema for message status from the RECIPIENT'S standpoint
    org.sagebionetworks.repo.model.drs.DrsErrorResponse:
      type: object
      properties:
        concreteType:
          type: string
          description: Indicates which implementation of BaseError this object represents.  The value is the fully qualified class name, e.g. org.sagebionetworks.repo.model.ErrorResponse.
          enum:
            - org.sagebionetworks.repo.model.drs.DrsErrorResponse
        msg:
          type: string
          description: A detailed error message.
        status_code:
          type: integer
          description: The integer representing the HTTP status code (e.g. 200, 404).
          format: int32
      description: JSON schema for an error returned by Drs Services. Used to align error messages with <a href="https://ga4gh.github.io/data-repository-service-schemas/preview/release/drs-1.2.0/docs/#tag/ErrorModel">Error</a>
      required:
        - concreteType
    org.sagebionetworks.repo.model.ACTAccessRequirementInterface:
      type: object
      properties:
        versionNumber:
          type: integer
          description: The version number issued to this version on the object.
          format: int32
        id:
          type: integer
          description: The unique immutable ID.  Provided by the system, the user may not set this field.
          format: int32
        description:
          type: string
          description: Depricated. Replaced by name.
        name:
          type: string
          description: Name of the AR. Limited to 50 characters and must be unique. Required.
        etag:
          type: string
          description: Synapse employs an Optimistic Concurrency Control (OCC) scheme to handle concurrent updates. Since the E-Tag changes every time an entity is updated it is used to detect when a client's current representation of an object is out-of-date.
        createdOn:
          type: string
          description: The date this object was created. Provided by the system, the user may not set this field.
        modifiedOn:
          type: string
          description: The date this object was last modified. Provided by the system, the user may not set this field.
        createdBy:
          type: string
          description: The user that created this object.  Provided by the system, the user may not set this field.
        modifiedBy:
          type: string
          description: The user that last modified this object.  Provided by the system, the user may not set this field.
        subjectsDefinedByAnnotations:
          type: boolean
          description: Defaults to 'false'.  When 'true', the subjects controlled by this AR are defined by the the'_accessRequirementIds' annotations on individual entities.  This property is mutually exclusive with 'subjectIds'.  If this is set to 'true' then 'subjectIds' must be excluded or empty.
        subjectIds:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.RestrictableObjectDescriptor'
          description: The IDs of the items controlled by this Access Requirement when 'subjectsDefinedByAnnotations=false'. This property is mutually exclusive with 'subjectsDefinedByAnnotations'.  When 'subjectsDefinedByAnnotations=true' then this property must be empty or excluded.  Required when creating or updating and 'subjectsDefinedByAnnotations=false' or 'subjectsDefinedByAnnotations' is excluded.
        accessType:
          type: string
          description: The enumeration of possible permission.
          enum:
            - CREATE
            - READ
            - UPDATE
            - DELETE
            - CHANGE_PERMISSIONS
            - DOWNLOAD
            - UPLOAD
            - PARTICIPATE
            - SUBMIT
            - READ_PRIVATE_SUBMISSION
            - UPDATE_SUBMISSION
            - DELETE_SUBMISSION
            - TEAM_MEMBERSHIP_UPDATE
            - SEND_MESSAGE
            - CHANGE_SETTINGS
            - MODERATE
            - REVIEW_SUBMISSIONS
            - EXEMPTION_ELIGIBLE
        concreteType:
          type: string
          description: Indicates which type of AccessRequirement this object represents.  Provided by the system, the user may not set this field.
      description: JSON schema for 'Access Control Team' controlled Access Requirement, a 'tier 3' Access Requirement
      oneOf:
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.ManagedACTAccessRequirement'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.ACTAccessRequirement'
      required:
        - concreteType
      discriminator:
        propertyName: concreteType
    org.sagebionetworks.repo.model.oauth.OAuthConsentGrantedResponse:
      type: object
      properties:
        granted:
          type: boolean
          description: True if consent for the given authorization request was already given.
      description: Response to the check of whether consent was already granted.
    PaginatedResultsOfMembershipRequest:
      type: object
      properties:
        totalNumberOfResults:
          type: integer
          description: Calculating the actual totalNumberOfResults is not longer supported. Therefore, for each page, the totalNumberOfResults is estimated using the current page, limit, and offset. When the page size equals the limit, the totalNumberOfResults will be offset+pageSize+ 1. Otherwise, the totalNumberOfResults will be offset+pageSize.
          format: int32
        results:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.MembershipRequest'
    org.sagebionetworks.repo.model.table.FacetColumnRangeRequest:
      type: object
      properties:
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.table.FacetColumnRangeRequest
        columnName:
          type: string
          description: The name of the faceted column
        jsonPath:
          type: string
          description: To filter on a jsonSubColumn of a JSON column, provide the jsonPath of the sub-column
        min:
          type: string
        max:
          type: string
      description: Selected minimum and maximum values for a range type facet
      required:
        - concreteType
    org.sagebionetworks.repo.model.Count:
      type: object
      properties:
        count:
          type: integer
          format: int32
    org.sagebionetworks.repo.model.file.AddPartState:
      type: string
      enum:
        - ADD_SUCCESS
        - ADD_FAILED
    org.sagebionetworks.repo.model.dataaccess.AccessRequirementConversionRequest:
      type: object
      properties:
        accessRequirementId:
          type: string
          description: The ID of an ACTAccessRequirement.
        etag:
          type: string
          description: The etag of the AccessRequirement. This field is used for concurrency check.
        currentVersion:
          type: integer
          description: The current version of the AccessRequirement. This field is used for concurrency check.
          format: int32
      description: A request to convert an ACTAccessRequirement to a ManagedACTAccessRequirement.
    org.sagebionetworks.repo.model.principal.EmailQuarantineStatus:
      type: object
      properties:
        reason:
          type: string
          description: The enumeration of the possible reason for a notification email quarantine
          enum:
            - PERMANENT_BOUNCE
            - TRANSIENT_BOUNCE
            - COMPLAINT
            - OTHER
        reasonDetails:
          type: string
          description: Additional detaul about the reason for the quarantine
        expiration:
          type: string
          description: If an expiration is set for the quarantine will hold the date till which the user will not receive messages
      description: Information about the quarantine status of a notification email
    org.sagebionetworks.repo.model.entity.EntityLookupRequest:
      type: object
      properties:
        parentId:
          type: string
          description: The parentID
        entityName:
          type: string
          description: The entity name
      description: A request to look up an entity given parentId and the entity name.
    org.sagebionetworks.repo.model.table.TableUpdateTransactionResponse:
      type: object
      properties:
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.table.TableUpdateTransactionResponse
        results:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.TableUpdateResponse'
            description: Abstraction for a response to update a table.
          description: List of responses. There will be one response for each request in the transaction.
        snapshotVersionNumber:
          type: integer
          description: The version number of the snapshot.  Returned only, if a new snapshot was requested.
          format: int32
      description: An AsynchronousResponseBody returned from a table update transaction.
      required:
        - concreteType
    org.sagebionetworks.repo.model.download.AvailableFilesResponse:
      type: object
      properties:
        concreteType:
          type: string
          description: Will indicate the full package name of the response type.
          enum:
            - org.sagebionetworks.repo.model.download.AvailableFilesResponse
        page:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.download.DownloadListItemResult'
            description: The results of a single item on a user's download list.
          description: The page of download list items
        nextPageToken:
          type: string
          description: When provided, the nextPageToken indicates that there are more results.  Forward this token to the next request to get the next page.
      description: Represents a single page of files that are available for download from the user's download list.
      required:
        - concreteType
    PaginatedResultsOfDiscussionReplyBundle:
      type: object
      properties:
        totalNumberOfResults:
          type: integer
          description: Calculating the actual totalNumberOfResults is not longer supported. Therefore, for each page, the totalNumberOfResults is estimated using the current page, limit, and offset. When the page size equals the limit, the totalNumberOfResults will be offset+pageSize+ 1. Otherwise, the totalNumberOfResults will be offset+pageSize.
          format: int32
        results:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.discussion.DiscussionReplyBundle'
    org.sagebionetworks.repo.model.message.NotificationSettingsSignedToken:
      type: object
      properties:
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.message.NotificationSettingsSignedToken
        hmac:
          type: string
          description: The hash message authentication code for the message.
        version:
          type: integer
          description: The version of the key used to generate the HMAC.
          format: int32
        expiresOn:
          type: string
          description: The date-time when this token expires.
        createdOn:
          type: string
          description: The date-time the token was generated.
        userId:
          type: string
          description: The ID of the user wishing to suppress email notifications.  The HMAC in the token authenticates that the request is being made by this user.
        settings:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.message.Settings'
          description: Contains a user's notification settings
      description: Signed token supporting one-click email suppression.
      required:
        - concreteType
    org.sagebionetworks.repo.model.search.DocumentFields:
      type: object
      properties:
        name:
          type: string
          description: The name of this entity
        description:
          type: string
          description: The description of this entity.
        parent_id:
          type: string
          description: The ID of the parent of this entity
        node_type:
          type: string
          description: The type of this entity.
        etag:
          type: string
          description: Synapse employs an Optimistic Concurrency Control (OCC) scheme to handle concurrent updates. Since the E-Tag changes every time an entity is updated it is used to detect when a client's current representation of an entity is out-of-date.
        created_on:
          type: integer
          description: The seconds since epoch date this entity was created.
          format: int32
        modified_on:
          type: integer
          description: The seconds since epoch date this entity was last modified.
          format: int32
        created_by:
          type: string
          description: The user that created this entity.
        modified_by:
          type: string
          description: The user that last modified this entity.
        acl:
          type: array
          items:
            type: string
          description: All group names with READ access to this entity
        update_acl:
          type: array
          items:
            type: string
          description: All group names with UPDATE access to this entity
        diagnosis:
          type: string
          description: The result of a medical investigation to identify a disorder from its signs and symptoms.
        tissue:
          type: string
          description: Type of tissue for the samples in this entity.
        consortium:
          type: string
          description: The name of the consortium
        organ:
          type: string
          description: A unique macroscopic (gross) anatomic structure that performs specific functions. It is composed of various tissues. An organ is part of an anatomic system or a body region.
      description: JSON schema for the fields of a search document.  Note that awesome search does not support camel case so we have to deviate from the usual naming scheme for properties.
    org.sagebionetworks.repo.model.agent.AgentRegistration:
      type: object
      properties:
        agentRegistrationId:
          type: string
          description: The unique ID issued by Synapse when this agent was registered. Provide this ID when starting a session to use the registered agent for a session.
        awsAgentId:
          type: string
          description: The AWS issued agent ID of the agent.
        awsAliasId:
          type: string
          description: The AWS issued agent alias ID. If an alias ID was not provided, a default value of 'TSTALIASID' will be used.
        registeredOn:
          type: string
          description: The date this agent was registered.
        type:
          type: string
          description: ...
          enum:
            - BASELINE
            - CUSTOM
      description: The registration of a custom AWS agent.
    org.sagebionetworks.repo.model.schema.ValidationSummaryStatistics:
      type: object
      properties:
        containerId:
          type: string
          description: The ID of the container Entity.
        totalNumberOfChildren:
          type: integer
          description: The total number of children in the container.
          format: int32
        numberOfValidChildren:
          type: integer
          description: The total number of children that are valid according to their bound JSON schema.
          format: int32
        numberOfInvalidChildren:
          type: integer
          description: The total number of children that are invalid according to their bound JSON schema.
          format: int32
        numberOfUnknownChildren:
          type: integer
          description: The total number of children that do not have validation results.  This can occur when a child does not have a bound JSON schema or when a child has not been validated yet.
          format: int32
        generatedOn:
          type: string
          description: The date-time when the statistics were calculated.
      description: Summary statistics for the JSON schema validation results for the children of an Entity container (Project or Folder)
    org.sagebionetworks.repo.model.grid.CreateGridResponse:
      type: object
      properties:
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.grid.CreateGridResponse
        gridSession:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.grid.GridSession'
          description: Basic information about a grid session.
      description: The response to creating a new grid sesion.
      required:
        - concreteType
    org.sagebionetworks.repo.model.oauth.OIDCClaimsRequestDetails:
      type: object
      properties:
        essential:
          type: boolean
        value:
          type: string
        values:
          type: array
          items:
            type: string
      description: <a href="https://openid.net/specs/openid-connect-core-1_0.html#ClaimsParameter">OIDC Core 1.0 Claims Request</a> value
    org.sagebionetworks.repo.model.message.MessageBundle:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.message.MessageToUser'
          description: JSON schema for a message to another user
        status:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.message.MessageStatus'
          description: JSON schema for message status from the RECIPIENT'S standpoint
      description: JSON schema for a user message bundled with a status
    org.sagebionetworks.repo.model.file.FileHandleRestoreStatus:
      type: string
      enum:
        - NOT_FOUND
        - UNAUTHORIZED
        - FAILED
        - NO_ACTION
        - RESTORED
        - RESTORING
    org.sagebionetworks.repo.model.grid.GridCsvImportResponse:
      type: object
      properties:
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.grid.GridCsvImportResponse
        sessionId:
          type: string
          description: The grid session ID.
        totalCount:
          type: integer
          description: The total number of processed rows.
          format: int32
        createdCount:
          type: integer
          description: The number of newly created rows in the grid.
          format: int32
        updatedCount:
          type: integer
          description: The number of updated rows in the grid.
          format: int32
      description: The result of a CSV import into the grid.
      required:
        - concreteType
    org.sagebionetworks.repo.model.auth.Session:
      type: object
      properties:
        sessionToken:
          type: string
          description: A token that identifies the user
        acceptsTermsOfUse:
          type: boolean
          description: Does the user accept the terms of use?
      description: Holds a session token used for short-term authentication with Synapse
    org.sagebionetworks.repo.model.dataaccess.SubmissionInfoPageRequest:
      type: object
      properties:
        accessRequirementId:
          type: string
          description: The ID of an AccessRequirement.
        nextPageToken:
          type: string
          description: The token to get the next page result.
      description: A request to retrieve a page of Submission Information
    org.sagebionetworks.repo.model.grid.internal.Connection:
      type: object
      properties:
        gridSessionId:
          type: integer
          description: The unique sessionId that identifies the grid session.
          format: int32
        replicaId:
          type: integer
          description: The replica ID of the client connection.
          format: int32
        userId:
          type: integer
          description: The ID of the user that establilshed this connection.
          format: int32
      description: Connection information from a presigned URL.
    org.sagebionetworks.repo.model.auth.TwoFactorAuthLoginRequest:
      type: object
      properties:
        userId:
          type: integer
          description: The id of the user that attempted to authenticate.
          format: int32
        twoFaToken:
          type: string
          description: The token that was included in the error response when authenticating.
        otpCode:
          type: string
          description: One time password (e.g. generated by the authenticator application, depending on the otpType value)
        otpType:
          type: string
          description: The type of one time password code that can be used to authenticate through two factor authentication.
          enum:
            - TOTP
            - RECOVERY_CODE
      description: Used to login when two factor authentication is enabled.
    org.sagebionetworks.repo.model.table.UploadToTablePreviewRequest:
      type: object
      properties:
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.table.UploadToTablePreviewRequest
        uploadFileHandleId:
          type: string
          description: The ID of the file handle for a type of UPLOAD
        linesToSkip:
          type: integer
          description: The number of lines to skip from the start of the file.  The default value of 0 will be used if this is not provided by the caller.
          format: int32
        csvTableDescriptor:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.CsvTableDescriptor'
          description: The description of a csv for upload or download.
        doFullFileScan:
          type: boolean
          description: When set to true the full file will be scanned for a schema suggestions.  A full scan is more accurate but can take more time.  When set to false only a sub-set of the first rows will be scanned, which can be faster but is less accurate. The default value is false.
      description: 'Request for a preview of an upload to a Table. '
      required:
        - concreteType
    org.sagebionetworks.repo.model.file.RemoteFilePreviewGenerationRequest:
      type: object
      properties:
        source:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.file.S3FileHandle'
          description: An S3FileHandle represents a file stored in AWS S3.
        destination:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.file.S3FileHandle'
          description: An S3FileHandle represents a file stored in AWS S3.
      description: Request remote preview generation from an S3 file handle into an S3 file handle.
    org.sagebionetworks.repo.model.verification.VerificationStateEnum:
      type: string
      enum:
        - SUBMITTED
        - APPROVED
        - REJECTED
        - SUSPENDED
    org.sagebionetworks.repo.model.AcquisitionTrackingData:
      type: object
      properties:
        status:
          type: string
          description: The status of data acquisition process
          enum:
            - requested
            - approved
            - denied
            - pending
            - acquired
        dataAcquisitionReference:
          type: string
          description: Reference id of data acquisition
        requestor:
          type: string
          description: Contact id of person who requested the data
        followupRequirements:
          type: string
          description: Short description of followup requirements
        comments:
          type: string
          description: Comments on acquisition process
        history:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.StatusHistoryRecord'
            description: JSON schema for StatusHistoryRecord POJO
          description: Status history
      description: JSON schema for AcquisitionTrackingData
    org.sagebionetworks.repo.model.discussion.EntityThreadCount:
      type: object
      properties:
        entityId:
          type: string
        count:
          type: integer
          description: The number of threads that the current user can view.
          format: int32
      description: The model object represents the number of threads that mentioned a particular entity.
    org.sagebionetworks.repo.model.discussion.Match:
      type: object
      properties:
        forumId:
          type: string
          description: The ID of the matching forum
        threadId:
          type: string
          description: The ID of the matching thread
        replyId:
          type: string
          description: The optional ID of the matching reply
      description: Represents a match for a search request in a forum, will include the forum and thread ids and if present the reply id matching a serch string
    org.sagebionetworks.repo.model.dataaccess.SubmissionSearchResult:
      type: object
      properties:
        id:
          type: string
          description: The id of the submission
        createdOn:
          type: string
        modifiedOn:
          type: string
        accessRequirementId:
          type: string
          description: The id of the access requirement the submission is for
        accessRequirementVersion:
          type: string
          description: The version of the requirement that the submission refers to
        accessRequirementName:
          type: string
          description: The name of the access requirement
        accessRequirementReviewerIds:
          type: array
          items:
            type: string
          description: The list of principal ids that are allowed to review the submission
        submitterId:
          type: string
          description: The principal ID of the person who created the submission
        accessorChanges:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.dataaccess.AccessorChange'
            description: Request for a single user change access to a resource.
          description: List of user changes. A user can gain access, renew access or have access revoked.
        state:
          type: string
          description: The state of a Submission.
          enum:
            - SUBMITTED
            - APPROVED
            - REJECTED
            - CANCELLED
      description: ''
    org.sagebionetworks.repo.model.DatasetTrackingData:
      type: object
      properties:
        acquisitionTrackingData:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.AcquisitionTrackingData'
          description: JSON schema for AcquisitionTrackingData
        curationTrackingData:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.CurationTrackingData'
          description: JSON schema for CurationTrackingData
      description: JSON schema for DatasetTrackingData POJO
    org.sagebionetworks.repo.model.agent.Interaction:
      type: object
      properties:
        requestText:
          type: string
          description: The text of the user's request
        requestTimestamp:
          type: string
          description: The time stamp when the user made the request
        responseText:
          type: string
          description: The text of the agent's response
        responseTimestamp:
          type: string
          description: The time stamp when the agent produced the response.
      description: Represents a single interaction between the user and an agent.
    org.sagebionetworks.repo.model.ResponseMessage:
      type: object
      properties:
        message:
          type: string
          description: a user-readable message describing the response to a request
      description: JSON schema for a user-readable message describing the response to a request.
    org.sagebionetworks.repo.model.EntityGroupRecord:
      type: object
      properties:
        entityReference:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.Reference'
          description: JSON schema for Reference POJO
        note:
          type: string
          description: A note for this record
      description: JSON schema for Entity Group Record POJO
    org.sagebionetworks.repo.model.grid.query.CellValueOperator:
      type: string
      enum:
        - EQUALS
        - NOT_EQUALS
        - GREATER_THAN
        - LESS_THAN
        - GREATER_THAN_OR_EQUALS
        - LESS_THAN_OR_EQUALS
        - IN
        - NOT_IN
        - LIKE
        - NOT_LIKE
        - IS_NULL
        - IS_NOT_NULL
    org.sagebionetworks.repo.model.oauth.OAuthRefreshTokenInformation:
      type: object
      properties:
        tokenId:
          type: string
          description: The unique ID for this refresh token.
        clientId:
          type: string
          description: The unique ID for the OAuth client that may utilize this token.
        principalId:
          type: string
          description: The unique ID for the user whose resources can be accessed with this token.
        name:
          type: string
          description: A human-readable identifier for the token.
        scopes:
          type: array
          items:
            type: string
            description: The OAuth 2.0 scopes supported by Synapse
            enum:
              - openid
              - email
              - profile
              - ga4gh_passport_v1
              - view
              - download
              - modify
              - authorize
              - offline_access
          description: An array containing each scope that this refresh token grants access to.
        claims:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.oauth.OIDCClaimsRequest'
          description: Stores OIDC claims and details in accordance with <a href="https://openid.net/specs/openid-connect-core-1_0.html#ClaimsParameter">OIDC Core 1.0 Claims Request</a>. The keys used in these maps are <a href="${org.sagebionetworks.repo.model.oauth.OIDCClaimName}">OIDCClaimName</a>s
        authorizedOn:
          type: string
          description: The date this refresh token was initially issued.
        lastUsed:
          type: string
          description: The date this refresh token was last used by the client to issue a new access token.
        modifiedOn:
          type: string
          description: The date this refresh token metadata was last modified.
        etag:
          type: string
          description: Synapse employs an Optimistic Concurrency Control (OCC) scheme to handle concurrent updates. Since the E-Tag changes every time a client is updated it is used to detect when a client's current representation of an entity is out-of-date.
      description: OAuth 2.0 refresh token metadata. Note that the token itself may not be retrieved after it is issued to a client.
    org.sagebionetworks.repo.model.annotation.v2.AnnotationsValue:
      type: object
      properties:
        type:
          type: string
          description: describes the type of a AnnotationV2's value
          enum:
            - STRING
            - DOUBLE
            - LONG
            - TIMESTAMP_MS
            - BOOLEAN
        value:
          type: array
          items:
            type: string
          description: List of values as strings. Clients should use the "type" field to determine how to interpret the strings. Single values Annotations are represented as a list of size 1, and multiple values size > 1. Empty list or null is not allowed
      description: Contains a AnnotationV2's value and its type
      required:
        - value
    org.sagebionetworks.repo.model.grid.CreateGridPresignedUrlRequest:
      type: object
      properties:
        gridSessionId:
          type: string
          description: Identifies the grid session to establish a websocket connection with.
        replicaId:
          type: integer
          description: Identifies the replica that will be establishing the websocket connection.
          format: int32
      description: Request to create a new presigned URL that is used to establish a grid websocket connection.
    org.sagebionetworks.repo.model.table.SortItem:
      type: object
      properties:
        column:
          type: string
          description: The column to sort on.
        direction:
          type: string
          description: Optional sort direction. Default is the default mysql sort direction for that type.
          enum:
            - ASC
            - DESC
    org.sagebionetworks.repo.model.doi.v2.DoiResponse:
      type: object
      properties:
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.doi.v2.DoiResponse
        doi:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.doi.v2.Doi'
          description: 'JSON schema for fields associated with a DOI and its metadata. This object contains fields from both <a href="${org.sagebionetworks.repo.model.doi.v2.DoiAssociation}">DoiAssociation</a> and <a href="${org.sagebionetworks.repo.model.doi.v2.DataciteMetadata}">DataciteMetadata</a>.<br>To mint a DOI, the following fields are required: <ul> <li>Information that uniquely identifies an object in Synapse <ul><li> The object ID <i>(e.g. "syn12345")</i></li><li>The object type <i>(Note: as of this writing, only ENTITY is supported)</i></li><li>The version number of the object <i>(Optional. A "null" version will mint a DOI that will point to the most recent version of the object, even if the object changes)</i></li><li>An eTag <i>(Necessary when updating an existing DOI)</i></li></ul></li> <li>Additional supplementary information to mint a DOI <ul><li>Creator(s)</li><li>Title(s)</li><li>The general resource type</li><li>A publication year (no later than one year after the current year)</li></ul></li> </ul><br>For more information, see the <a href="${org.sagebionetworks.repo.model.doi.v2.DoiAssociation}">DoiAssociation</a> and <a href="${org.sagebionetworks.repo.model.doi.v2.DataciteMetadata}">DataciteMetadata</a> objects.'
      description: An response to a DOI mint or update request.
      required:
        - concreteType
    PaginatedResultsOfUserGroup:
      type: object
      properties:
        totalNumberOfResults:
          type: integer
          description: Calculating the actual totalNumberOfResults is not longer supported. Therefore, for each page, the totalNumberOfResults is estimated using the current page, limit, and offset. When the page size equals the limit, the totalNumberOfResults will be offset+pageSize+ 1. Otherwise, the totalNumberOfResults will be offset+pageSize.
          format: int32
        results:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.UserGroup'
    org.sagebionetworks.repo.model.project.ExternalObjectStorageLocationSetting:
      type: object
      properties:
        concreteType:
          type: string
          description: Indicates which implementation this object represents.
          enum:
            - org.sagebionetworks.repo.model.project.ExternalObjectStorageLocationSetting
        storageLocationId:
          type: integer
          description: The unique ID for this storage location
          format: int32
        uploadType:
          type: string
          description: The enumeration of possible upload types.
          enum:
            - S3
            - GOOGLECLOUDSTORAGE
            - SFTP
            - HTTPS
            - PROXYLOCAL
            - NONE
        banner:
          type: string
          description: The banner text to display to a user every time a file is uploaded. This field is optional.
        description:
          type: string
          description: A description of the storage location. This description is shown when a user has to choose which upload destination to use.
        etag:
          type: string
          description: Synapse employs an Optimistic Concurrency Control (OCC) scheme to handle concurrent updates. Since the E-Tag changes every time a Project Setting is updated it is used to detect when a client's current representation of a Project Setting is out-of-date.
        createdOn:
          type: string
          description: The date this storage location setting was created.
        createdBy:
          type: integer
          description: The ID of the user that created this storage location setting.
          format: int32
        bucket:
          type: string
          description: The bucket name
        endpointUrl:
          type: string
          description: 'endpoint URL of the S3 service (for example: ''https://s3.amazonaws.com'')'
      description: The external upload destination setting contains information to generate an upload destination for an S3 object storage NOT managed by Synapse. This is different from ExternalS3StorageLocationSetting, which contains information about an external S3 storage that is managed by Synapse
      required:
        - bucket
        - endpointUrl
        - concreteType
    org.sagebionetworks.repo.model.table.AppendableRowSetRequest:
      type: object
      properties:
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.table.AppendableRowSetRequest
        entityId:
          type: string
        toAppend:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.AppendableRowSet'
          description: Abstraction for a set of rows that can be appended to a table.
      required:
        - concreteType
    org.sagebionetworks.repo.model.dao.WikiPageKey:
      type: object
      properties:
        wikiPageId:
          type: string
          description: The ID of the wiki page.
        ownerObjectId:
          type: string
          description: The owner of this page.
        ownerObjectType:
          type: string
          description: JSON enum for the types of objects in Synapse.
          enum:
            - ENTITY
            - ENTITY_CONTAINER
            - PRINCIPAL
            - ACTIVITY
            - EVALUATION
            - EVALUATION_ROUND
            - SUBMISSION
            - EVALUATION_SUBMISSIONS
            - FILE
            - MESSAGE
            - WIKI
            - FAVORITE
            - ACCESS_REQUIREMENT
            - ACCESS_APPROVAL
            - TEAM
            - TABLE
            - ACCESS_CONTROL_LIST
            - PROJECT_SETTING
            - VERIFICATION_SUBMISSION
            - CERTIFIED_USER_PASSING_RECORD
            - FORUM
            - THREAD
            - REPLY
            - FORM_GROUP
            - ORGANIZATION
            - FORM_DATA
            - ENTITY_VIEW
            - USER_PROFILE
            - DATA_ACCESS_REQUEST
            - DATA_ACCESS_SUBMISSION
            - DATA_ACCESS_SUBMISSION_STATUS
            - MEMBERSHIP_INVITATION
            - JSON_SCHEMA
            - JSON_SCHEMA_DEPENDANT
            - DATASET
            - DATASET_COLLECTION
            - THREAD_VIEW
            - MATERIALIZED_VIEW
            - VIRTUAL_TABLE
            - TABLE_STATUS_EVENT
            - DATA_ACCESS_SUBMISSION_EVENT
            - FILE_EVENT
            - QUERY_CACHE_HIT
            - PROJECT_STORAGE_EVENT
            - REPLICATED_EVENT
            - PORTAL
            - OAUTH_CLIENT
      description: Reference to a WikiPage
    org.sagebionetworks.repo.model.audit.AclRecord:
      type: object
      properties:
        ownerType:
          type: string
          description: JSON enum for the types of objects in Synapse.
          enum:
            - ENTITY
            - ENTITY_CONTAINER
            - PRINCIPAL
            - ACTIVITY
            - EVALUATION
            - EVALUATION_ROUND
            - SUBMISSION
            - EVALUATION_SUBMISSIONS
            - FILE
            - MESSAGE
            - WIKI
            - FAVORITE
            - ACCESS_REQUIREMENT
            - ACCESS_APPROVAL
            - TEAM
            - TABLE
            - ACCESS_CONTROL_LIST
            - PROJECT_SETTING
            - VERIFICATION_SUBMISSION
            - CERTIFIED_USER_PASSING_RECORD
            - FORUM
            - THREAD
            - REPLY
            - FORM_GROUP
            - ORGANIZATION
            - FORM_DATA
            - ENTITY_VIEW
            - USER_PROFILE
            - DATA_ACCESS_REQUEST
            - DATA_ACCESS_SUBMISSION
            - DATA_ACCESS_SUBMISSION_STATUS
            - MEMBERSHIP_INVITATION
            - JSON_SCHEMA
            - JSON_SCHEMA_DEPENDANT
            - DATASET
            - DATASET_COLLECTION
            - THREAD_VIEW
            - MATERIALIZED_VIEW
            - VIRTUAL_TABLE
            - TABLE_STATUS_EVENT
            - DATA_ACCESS_SUBMISSION_EVENT
            - FILE_EVENT
            - QUERY_CACHE_HIT
            - PROJECT_STORAGE_EVENT
            - REPLICATED_EVENT
            - PORTAL
            - OAUTH_CLIENT
        id:
          type: string
          description: The entity id
        createdBy:
          type: string
          description: UNUSED -- maintained only for backwards compatibility with archived objects
        creationDate:
          type: string
        modifiedBy:
          type: string
          description: UNUSED -- maintained only for backwards compatibility with archived objects
        modifiedOn:
          type: string
          description: UNUSED -- maintained only for backwards compatibility with archived objects
        etag:
          type: string
        resourceAccess:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.ResourceAccess'
            description: JSON schema for a ResourceAccess POJO
          description: The list of principals who can access the data with the allowed types of access for each.
          uniqueItems: true
      description: Data record from an access control list.
    org.sagebionetworks.repo.model.doi.Doi:
      type: object
      properties:
        id:
          type: string
          description: The unique ID of this DOI.
        etag:
          type: string
          description: For Optimistic Concurrency Control (OCC).
        doiStatus:
          type: string
          description: Status of DOI creation.
          enum:
            - IN_PROCESS
            - CREATED
            - READY
            - ERROR
        objectId:
          type: string
          description: The ID of the digital object for which this DOI is created.
        objectType:
          type: string
          description: JSON enum for the types of objects in Synapse.
          enum:
            - ENTITY
            - ENTITY_CONTAINER
            - PRINCIPAL
            - ACTIVITY
            - EVALUATION
            - EVALUATION_ROUND
            - SUBMISSION
            - EVALUATION_SUBMISSIONS
            - FILE
            - MESSAGE
            - WIKI
            - FAVORITE
            - ACCESS_REQUIREMENT
            - ACCESS_APPROVAL
            - TEAM
            - TABLE
            - ACCESS_CONTROL_LIST
            - PROJECT_SETTING
            - VERIFICATION_SUBMISSION
            - CERTIFIED_USER_PASSING_RECORD
            - FORUM
            - THREAD
            - REPLY
            - FORM_GROUP
            - ORGANIZATION
            - FORM_DATA
            - ENTITY_VIEW
            - USER_PROFILE
            - DATA_ACCESS_REQUEST
            - DATA_ACCESS_SUBMISSION
            - DATA_ACCESS_SUBMISSION_STATUS
            - MEMBERSHIP_INVITATION
            - JSON_SCHEMA
            - JSON_SCHEMA_DEPENDANT
            - DATASET
            - DATASET_COLLECTION
            - THREAD_VIEW
            - MATERIALIZED_VIEW
            - VIRTUAL_TABLE
            - TABLE_STATUS_EVENT
            - DATA_ACCESS_SUBMISSION_EVENT
            - FILE_EVENT
            - QUERY_CACHE_HIT
            - PROJECT_STORAGE_EVENT
            - REPLICATED_EVENT
            - PORTAL
            - OAUTH_CLIENT
        objectVersion:
          type: integer
          description: The version of the digital object. When null, the DOI is associated with the current version of the object.
          format: int32
        createdBy:
          type: string
          description: The ID of the user that creates this DOI.
        createdOn:
          type: string
          description: The date time this DOI is first created.
        updatedOn:
          type: string
          description: The date time this DOI is last updated.
      description: JSON schema for DOI.
      required:
        - id
        - objectId
        - createdBy
    org.sagebionetworks.repo.model.drs.ServiceInformation:
      type: object
      properties:
        id:
          type: string
          description: The globally unique identifier of the service. Reverse domain name notation is used as id.
        name:
          type: string
          description: The name of the service.
        type:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.drs.PackageInformation'
          description: The DRS package information follows GA4GH specification.
        description:
          type: string
          description: The description of the service.
        organization:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.drs.OrganizationInformation'
          description: The information of the organization, which provides DRS API implementation.
        contactUrl:
          type: string
          description: The contact url of the organization.
        documentationUrl:
          type: string
          description: The url of supporting document for the service.
        createdAt:
          type: string
          description: The creation date of the Drs services.
        updatedAt:
          type: string
          description: The update date of the Drs services.
        environment:
          type: string
          description: The environment of the service in which its up and running.
        version:
          type: string
          description: The version of software in which Drs services released.
      description: Drs service information
    org.sagebionetworks.repo.model.report.StorageReportType:
      type: string
      enum:
        - ALL_PROJECTS
    org.sagebionetworks.repo.model.schema.CreateOrganizationRequest:
      type: object
      properties:
        organizationName:
          type: string
          description: An organization name must be one or more alphanumeric strings each separated by a dot [ <alpha_num>('.'<alpha_num>)]. An alphanumeric string must start with a letter followed by one or more letters or digits a-z. The name must be at least 6 characters and no more than 250 characters. Names are case insensitive. Names cannot contain the reserved word 'sagebionetworks'
      description: Request to create a new Organization.
    org.sagebionetworks.repo.model.ManagedACTAccessRequirement:
      type: object
      properties:
        versionNumber:
          type: integer
          description: The version number issued to this version on the object.
          format: int32
        id:
          type: integer
          description: The unique immutable ID.  Provided by the system, the user may not set this field.
          format: int32
        description:
          type: string
          description: Depricated. Replaced by name.
        name:
          type: string
          description: Name of the AR. Limited to 50 characters and must be unique. Required.
        etag:
          type: string
          description: Synapse employs an Optimistic Concurrency Control (OCC) scheme to handle concurrent updates. Since the E-Tag changes every time an entity is updated it is used to detect when a client's current representation of an object is out-of-date.
        createdOn:
          type: string
          description: The date this object was created. Provided by the system, the user may not set this field.
        modifiedOn:
          type: string
          description: The date this object was last modified. Provided by the system, the user may not set this field.
        createdBy:
          type: string
          description: The user that created this object.  Provided by the system, the user may not set this field.
        modifiedBy:
          type: string
          description: The user that last modified this object.  Provided by the system, the user may not set this field.
        subjectsDefinedByAnnotations:
          type: boolean
          description: Defaults to 'false'.  When 'true', the subjects controlled by this AR are defined by the the'_accessRequirementIds' annotations on individual entities.  This property is mutually exclusive with 'subjectIds'.  If this is set to 'true' then 'subjectIds' must be excluded or empty.
        subjectIds:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.RestrictableObjectDescriptor'
          description: The IDs of the items controlled by this Access Requirement when 'subjectsDefinedByAnnotations=false'. This property is mutually exclusive with 'subjectsDefinedByAnnotations'.  When 'subjectsDefinedByAnnotations=true' then this property must be empty or excluded.  Required when creating or updating and 'subjectsDefinedByAnnotations=false' or 'subjectsDefinedByAnnotations' is excluded.
        accessType:
          type: string
          description: The enumeration of possible permission.
          enum:
            - CREATE
            - READ
            - UPDATE
            - DELETE
            - CHANGE_PERMISSIONS
            - DOWNLOAD
            - UPLOAD
            - PARTICIPATE
            - SUBMIT
            - READ_PRIVATE_SUBMISSION
            - UPDATE_SUBMISSION
            - DELETE_SUBMISSION
            - TEAM_MEMBERSHIP_UPDATE
            - SEND_MESSAGE
            - CHANGE_SETTINGS
            - MODERATE
            - REVIEW_SUBMISSIONS
            - EXEMPTION_ELIGIBLE
        concreteType:
          type: string
          description: Indicates which type of AccessRequirement this object represents.  Provided by the system, the user may not set this field.
          enum:
            - org.sagebionetworks.repo.model.ManagedACTAccessRequirement
        isCertifiedUserRequired:
          type: boolean
          description: If true, then accessor needs to be a Synapse Certified User to gain access.
        isValidatedProfileRequired:
          type: boolean
          description: If true, then accessor needs to have their Synapse Profile validated to gain access.
        isDUCRequired:
          type: boolean
          description: If true, then accessor needs to fill, sign, and submit a Data Use Certificate (DUC) to gain access to the data.
        ducTemplateFileHandleId:
          type: string
          description: If the Data Use Certificate (DUC) is required, creator of this requirement needs to upload a Data Use Certificate (DUC) template. Users have to download this template, fill out, sign and submit it.
        isIRBApprovalRequired:
          type: boolean
          description: If true, then accessor needs to submit an Institutional Review Board (IRB) Approval document to gain access to the data.
        areOtherAttachmentsRequired:
          type: boolean
          description: If true, then accessor needs to upload attachment(s) other than Data Use Certificate (DUC) and Institutional Review Board (IRB) Approval document to gain access to the data.
        expirationPeriod:
          type: integer
          description: After an AccessApproval is granted for this AccessRequirement, it will be expired after expirationPeriod miliseconds. Set this value to 0 to indicate that AccessApproval will never be expired.
          format: int32
        isIDUPublic:
          type: boolean
          description: If true, the Intended Data Use Statements submitted to gain access to the data will be presented to public.
        isIDURequired:
          type: boolean
          description: If true (default), the Intended Data Use Statement for a research project is required.
        isTwoFaRequired:
          type: boolean
          description: If true, then accessor needs to enable two factor authentication before gaining access to the data.
      description: JSON schema for in-Synapse 'Access Control Team' controlled Access Requirement, a 'tier 3' Access Requirement. This access requirement allows the ACT managing the detail requirements, and submissions within Synapse.
      required:
        - concreteType
    org.sagebionetworks.repo.model.migration.AdminRequest:
      type: object
      properties:
        concreteType:
          type: string
      description: Abstraction for Admin request
      oneOf:
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.migration.AsyncMigrationTypeChecksumRequest'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.migration.AsyncMigrationTypeCountsRequest'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.migration.BackfillLastSeenOnRequest'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.migration.AsyncMigrationRangeChecksumRequest'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.migration.CalculateOptimalRangeRequest'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.migration.RestoreTypeRequest'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.migration.BatchChecksumRequest'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.migration.BackupTypeRangeRequest'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.migration.AsyncMigrationTypeCountRequest'
      required:
        - concreteType
      discriminator:
        propertyName: concreteType
    org.sagebionetworks.repo.model.grid.GridReplica:
      type: object
      properties:
        gridSessionId:
          type: string
          description: The ID of the grid seesion.
        replicaId:
          type: integer
          description: The unique identifier for the new replica.
          format: int32
        createdBy:
          type: string
          description: The user that created this replica.
        isAgentReplica:
          type: boolean
          description: When true, this replica belongs to the createdBy user's agent.
        createdOn:
          type: string
          description: The date-time when the user created this replica.
      description: Information about a replica.
    org.sagebionetworks.repo.model.dataaccess.SubmissionPageRequest:
      type: object
      properties:
        accessRequirementId:
          type: string
          description: The ID of an AccessRequirement.
        nextPageToken:
          type: string
          description: The token to get the next page result.
        filterBy:
          type: string
          description: The state of a Submission.
          enum:
            - SUBMITTED
            - APPROVED
            - REJECTED
            - CANCELLED
        accessorId:
          type: string
          description: Optional filter by the id of an accessor in the submission. Note that the submitter is an accessor.
        orderBy:
          type: string
          enum:
            - CREATED_ON
            - MODIFIED_ON
        isAscending:
          type: boolean
          description: If true, order the returned result in ascending order. Otherwise, order the returned result in descending order.
      description: A request to retrieve a page of a Submission.
    org.sagebionetworks.repo.model.doi.v2.DoiCreator:
      type: object
      properties:
        creatorName:
          type: string
          description: Required. May be a corporate/institutional or personal name ("Family, Given").
        nameIdentifiers:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.doi.v2.DoiNameIdentifier'
            description: Uniquely identifies an individual or legal entity, according to various schemas.
          description: Optional. Uniquely identifies an individual or legal entity, according to various schemas.
      description: JSON schema for DOI Metadata Creator.
    org.sagebionetworks.repo.model.file.FileEventRecord:
      type: object
      properties:
        userId:
          type: integer
          description: The Id of user who initiated the file event.
          format: int32
        projectId:
          type: integer
          description: The project Id of file.
          format: int32
        fileHandleId:
          type: string
          description: The filehandle Id of file.
        downloadedFileHandleId:
          type: string
          description: The zipped filehandle Id, If the file download is requested in zip file otherwise not applicable.
        associateType:
          type: string
          description: Enumeration of all possible objects types that can be associated with a file.
          enum:
            - FileEntity
            - TableEntity
            - WikiAttachment
            - WikiMarkdown
            - UserProfileAttachment
            - MessageAttachment
            - TeamAttachment
            - SubmissionAttachment
            - VerificationSubmission
            - AccessRequirementAttachment
            - DataAccessRequestAttachment
            - DataAccessSubmissionAttachment
            - FormData
        associateId:
          type: string
          description: The association Id of filehandle.
        sessionId:
          type: string
          description: The session ID from the access record associated with this event.  When present, can be used to join access records with download records.
      description: File record for file upload and download events
      required:
        - userId
        - fileHandleId
        - associateId
    org.sagebionetworks.repo.model.UserGroupHeaderResponsePage:
      type: object
      properties:
        children:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.UserGroupHeader'
            description: JSON schema for UserHeader POJO
          description: The list of children that match the requested concept.
        prefixFilter:
          type: string
          description: The prefix filter used to generate this result.
        totalNumberOfResults:
          type: integer
          description: This field is deprecated.
          format: int32
      description: A single page of a users/groups info query response.
    org.sagebionetworks.repo.model.oauth.JsonWebKeyRSA:
      type: object
      properties:
        kid:
          type: string
          description: The unique identifier for the JSON Web Token, described in <a href="https://tools.ietf.org/html/rfc7517#section-4.5">RFC 7517 Section 4.5</a>
        kty:
          type: string
          description: The key type, described in <a href="https://tools.ietf.org/html/rfc7517#section-4.1">RFC 7517 Section 4.1</a>
        use:
          type: string
          description: The public key use, described in <a href="https://tools.ietf.org/html/rfc7517#section-4.2">RFC 7517 Section 4.2</a>
        concreteType:
          type: string
          description: Indicates which kind of JSON Web Key the object is, following the Synapse standard.
          enum:
            - org.sagebionetworks.repo.model.oauth.JsonWebKeyRSA
        e:
          type: string
          description: Exponent of RSA Public Key
        'n':
          type: string
          description: Modulus of RSA Public Key
      description: JSON Web Key for the RSA algorithm
      required:
        - concreteType
    org.sagebionetworks.repo.model.project.S3StorageLocationSetting:
      type: object
      properties:
        concreteType:
          type: string
          description: Indicates which implementation this object represents.
          enum:
            - org.sagebionetworks.repo.model.project.S3StorageLocationSetting
        storageLocationId:
          type: integer
          description: The unique ID for this storage location
          format: int32
        uploadType:
          type: string
          description: The enumeration of possible upload types.
          enum:
            - S3
            - GOOGLECLOUDSTORAGE
            - SFTP
            - HTTPS
            - PROXYLOCAL
            - NONE
        banner:
          type: string
          description: The banner text to display to a user every time a file is uploaded. This field is optional.
        description:
          type: string
          description: A description of the storage location. This description is shown when a user has to choose which upload destination to use.
        etag:
          type: string
          description: Synapse employs an Optimistic Concurrency Control (OCC) scheme to handle concurrent updates. Since the E-Tag changes every time a Project Setting is updated it is used to detect when a client's current representation of a Project Setting is out-of-date.
        createdOn:
          type: string
          description: The date this storage location setting was created.
        createdBy:
          type: integer
          description: The ID of the user that created this storage location setting.
          format: int32
        baseKey:
          type: string
          description: the optional base key, which acts as a prefix or a base folder
        stsEnabled:
          type: boolean
          description: Enables STS on this Storage Location
      description: This class refers only to the default Synapse storage location(s) that exist on Amazon S3. To create a storage location that refers to a private S3 bucket, see <a href="${org.sagebionetworks.repo.model.project.ExternalS3StorageLocationSetting}">ExternalS3StorageLocationSetting</a>.
      required:
        - concreteType
    org.sagebionetworks.repo.model.status.StackStatus:
      type: object
      properties:
        status:
          type: string
          description: The status of this stack can be one of the following enumerations
          enum:
            - READ_WRITE
            - READ_ONLY
            - DOWN
        currentMessage:
          type: string
          description: This message applies to the current state of the stack.
        pendingMaintenanceMessage:
          type: string
          description: This message is used to notify users of pending maintenance
      description: The Status of the stack
    org.sagebionetworks.repo.model.discussion.ReplyCount:
      type: object
      properties:
        count:
          type: integer
          description: The total number of replies.
          format: int32
    org.sagebionetworks.repo.model.webhook.WebhookVerificationStatus:
      type: string
      enum:
        - PENDING
        - CODE_SENT
        - FAILED
        - REVOKED
        - VERIFIED
    org.sagebionetworks.repo.model.grid.DownloadFromGridResult:
      type: object
      properties:
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.grid.DownloadFromGridResult
        sessionId:
          type: string
          description: The session ID of the grid from which this CSV was derived.
        resultsFileHandleId:
          type: string
          description: The resulting file handle ID can be used to download the CSV file created by this job.  The file will contain all of the data in the grid session when the job was started.
      description: The response body of an asynchronous CSV grid download job.
      required:
        - concreteType
    org.sagebionetworks.repo.model.grid.CrdtId:
      type: object
      properties:
        rep:
          type: integer
          description: The replica ID.
          format: int32
        seq:
          type: integer
          description: The sequence number.
          format: int32
      description: Represents a single CRDT node's identifier.
    org.sagebionetworks.repo.model.annotation.v2.Keys:
      type: object
      properties:
        keys:
          type: array
          items:
            type: string
          description: Array of annotation keys
      description: Array of annotation keys
      required:
        - keys
    org.sagebionetworks.repo.model.portals.ListPortalsResponse:
      type: object
      properties:
        page:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.portals.Portal'
            description: JSON schema for a Synapse Portal.
          description: A page of portals that match the request filters.
        nextPageToken:
          type: string
          description: Forward this token to get the next page of results.
      description: JSON schema for a list of Portals
    org.sagebionetworks.repo.model.schema.ListJsonSchemaInfoRequest:
      type: object
      properties:
        organizationName:
          type: string
          description: The name of the Organization to list schemas for.
        nextPageToken:
          type: string
          description: Forward the returned 'nextPageToken' to get the next page of results.
      description: Request to list a single page of JsonSchemaInfo for the given organization name.
    org.sagebionetworks.repo.model.table.SparseChangeSetDto:
      type: object
      properties:
        tableId:
          type: string
          description: The ID of the table.
        etag:
          type: string
          description: Etag identifies the version of this change set.
        columnIds:
          type: array
          items:
            type: string
          description: The column IDs that define the schema of this change set.
        rows:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.SparseRowDto'
            description: Represents a single partial row of a TableEntity
          description: The partial rows of this set.
      description: Data Transfer Object (DTO) for a SparseChangeSet
    org.sagebionetworks.repo.model.table.ViewEntityType:
      type: string
      enum:
        - entityview
        - submissionview
        - dataset
        - datasetcollection
    org.sagebionetworks.repo.model.auth.AccessTokenRecord:
      type: object
      properties:
        id:
          type: string
          description: The unique ID of the access token
        userId:
          type: string
          description: The ID of the user that the token belongs to.
        scopes:
          type: array
          items:
            type: string
            description: The OAuth 2.0 scopes supported by Synapse
            enum:
              - openid
              - email
              - profile
              - ga4gh_passport_v1
              - view
              - download
              - modify
              - authorize
              - offline_access
          description: The scopes that have been granted to this token
        userInfoClaims:
          type: object
          description: The OIDC claims that can be accessed using this token.
          additionalProperties:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.oauth.OIDCClaimsRequestDetails'
            description: <a href="https://openid.net/specs/openid-connect-core-1_0.html#ClaimsParameter">OIDC Core 1.0 Claims Request</a> value
        name:
          type: string
          description: A unique, typically human-readable name for the token
        createdOn:
          type: string
          description: The date this personal access token was initially issued.
        lastUsed:
          type: string
          description: The date this personal access token was last used.
        state:
          type: string
          description: The enumeration of possible personal access token states.
          enum:
            - ACTIVE
            - EXPIRED
      description: Metadata related to an issued personal access token. After the token has been generated, it cannot be retrieved.
    org.sagebionetworks.repo.model.doi.v2.DoiTitle:
      type: object
      properties:
        title:
          type: string
          description: Required. A name or title by which a resource is known
      description: JSON schema for DOI Metadata Title.
    org.sagebionetworks.repo.model.ErrorResponseCode:
      type: string
      enum:
        - PASSWORD_RESET_VIA_EMAIL_REQUIRED
        - USER_CERTIFICATION_REQUIRED
        - INVALID_TABLE_QUERY_FACET_COLUMN_REQUEST
        - OAUTH_CLIENT_NOT_VERIFIED
        - TWO_FA_REQUIRED
        - UNSUPPORTED_WEBHOOK_DOMAIN
        - PROJECT_STORAGE_LIMIT_EXCEEDED
        - TWO_FA_ENABLED_REQUIRED
    org.sagebionetworks.repo.model.download.Action:
      type: object
      properties:
        concreteType:
          type: string
      description: An action that the user must take in order to download a file.
      oneOf:
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.download.RequestDownload'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.download.MeetAccessRequirement'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.download.EnableTwoFa'
      required:
        - concreteType
      discriminator:
        propertyName: concreteType
    org.sagebionetworks.repo.model.VersionableEntity:
      type: object
      properties:
        name:
          type: string
          description: 'The name of this entity.  Must be 256 characters or less. Names may only contain: letters, numbers, spaces, underscores, hyphens, periods, plus signs, apostrophes, and parentheses'
        description:
          type: string
          description: The description of this entity.  Must be 1000 characters or less.
        id:
          type: string
          description: The unique immutable ID for this entity.  A new ID will be generated for new Entities.  Once issued, this ID is guaranteed to never change or be re-issued
        etag:
          type: string
          description: Synapse employs an Optimistic Concurrency Control (OCC) scheme to handle concurrent updates. Since the E-Tag changes every time an entity is updated it is used to detect when a client's current representation of an entity is out-of-date.
        createdOn:
          type: string
          description: The date this entity was created.
        modifiedOn:
          type: string
          description: The date this entity was last modified.
        createdBy:
          type: string
          description: The ID of the user that created this entity.
        modifiedBy:
          type: string
          description: The ID of the user that last modified this entity.
        parentId:
          type: string
          description: The ID of the Entity that is the parent of this Entity.
        concreteType:
          type: string
          description: Indicates which implementation of Entity this object represents.  The value is the fully qualified class name, e.g. org.sagebionetworks.repo.model.FileEntity.
        versionNumber:
          type: integer
          description: The version number issued to this version on the object.
          format: int32
        versionLabel:
          type: string
          description: The version label for this entity
        versionComment:
          type: string
          description: The version comment for this entity
        isLatestVersion:
          type: boolean
          description: If this is the latest version of the object.
      description: JSON schema for Versionable interface
      oneOf:
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.SubmissionView'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.DatasetCollection'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.EntityView'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.VirtualTable'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.MaterializedView'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.RecordSet'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.FileEntity'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.Dataset'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.TableEntity'
      required:
        - concreteType
      discriminator:
        propertyName: concreteType
    org.sagebionetworks.repo.model.entity.SortBy:
      type: string
      enum:
        - NAME
        - CREATED_ON
        - MODIFIED_ON
    org.sagebionetworks.repo.model.migration.BackfillLastSeenOnRequest:
      type: object
      properties:
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.migration.BackfillLastSeenOnRequest
        maxUsersCount:
          type: integer
          description: The maximum number of users to process in the request, at least 500;
          format: int32
      description: Request to backfill the lastSeenOn status for existing users.
      required:
        - concreteType
    org.sagebionetworks.repo.model.table.TableSearchChangeResponse:
      type: object
      properties:
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.table.TableSearchChangeResponse
        searchEnabled:
          type: boolean
          description: The resulting status of the search after the change.
      description: A response to a table search change request.
      required:
        - concreteType
    org.sagebionetworks.repo.model.dataaccess.SubmissionInfo:
      type: object
      properties:
        institution:
          type: string
          description: The institution that the research project belongs to.
        projectLead:
          type: string
          description: The person who is leading the research project.
        intendedDataUseStatement:
          type: string
          description: A few short paragraph that explains how the controlled data will be used.
        modifiedOn:
          type: string
          description: The date the request submission was last modified.
        submittedBy:
          type: string
          description: The ID of the user that submitted this submission.
        accessorChanges:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.dataaccess.AccessorChange'
            description: Request for a single user change access to a resource.
          description: List of user changes. A user can gain access, renew access or have access revoked.
      description: Information about a request to access controlled data and its related Research Project
    org.sagebionetworks.repo.model.annotation.Annotations:
      type: object
      properties:
        objectId:
          type: string
          description: The Synapse ID of the object with which these Annotations are associated
        scopeId:
          type: string
          description: The Synapse ID of the umbrella object above the object with which these Annotations are associated
        version:
          type: integer
          description: The system controlled version of this collection of annotations
          format: int32
        stringAnnos:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.annotation.StringAnnotation'
            description: An Annotation containing a String value
          description: A list of StringAnnnotations
        longAnnos:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.annotation.LongAnnotation'
            description: An Annotation containing a Long value
          description: A list of LongAnnnotations
        doubleAnnos:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.annotation.DoubleAnnotation'
            description: An Annotation containing a Double value
          description: A list of DoubleAnnnotations
      description: Primary container object for Annotations on a Synapse object
    org.sagebionetworks.repo.model.table.HasDefiningSql:
      type: object
      properties:
        definingSQL:
          type: string
          description: The synapse SQL statement that defines the data in the table.
      description: The object that implements this interface contains an SQL query that defines its content.
      oneOf:
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.VirtualTable'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.MaterializedView'
      discriminator:
        propertyName: concreteType
    org.sagebionetworks.repo.model.schema.ListJsonSchemaInfoResponse:
      type: object
      properties:
        page:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.schema.JsonSchemaInfo'
            description: Information about a single JSON schema.
        nextPageToken:
          type: string
          description: Forward this token to get the next page of results.
      description: A single page of the currently registered Organizations
    org.sagebionetworks.repo.model.discussion.DiscussionFilter:
      type: string
      enum:
        - NO_FILTER
        - DELETED_ONLY
        - EXCLUDE_DELETED
    org.sagebionetworks.repo.model.provenance.UsedURL:
      type: object
      properties:
        wasExecuted:
          type: boolean
          description: The enclosed entity was used and also executed in the Activity
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.provenance.UsedURL
        name:
          type: string
          description: The external URL of the file that was used.
        url:
          type: string
          description: The external URL of the file that was used.
      description: Interface for JSON schema for UsedEntity POJO
      required:
        - concreteType
    org.sagebionetworks.repo.model.EntityType:
      type: string
      enum:
        - project
        - folder
        - file
        - table
        - link
        - entityview
        - dockerrepo
        - submissionview
        - dataset
        - datasetcollection
        - materializedview
        - virtualtable
        - recordset
    org.sagebionetworks.evaluation.model.MemberSubmissionEligibility:
      type: object
      properties:
        isEligible:
          type: boolean
          description: true if all criteria are met
        isRegistered:
          type: boolean
          description: true if team/individual is registered for challenge
        isQuotaFilled:
          type: boolean
          description: true if team/individual has reached the submission quota (for the given submission round)
        principalId:
          type: integer
          description: ''
          format: int32
        hasConflictingSubmission:
          type: boolean
          description: true if the individual has submitted alone or with another team
      description: Describes the eligibility of an indivdiual to submit to an Evaluation queue, reflecting the queue's submission quotas and current submissions.
    org.sagebionetworks.repo.model.oauth.OAuthUrlResponse:
      type: object
      properties:
        authorizationUrl:
          type: string
          description: The URL used to send the user the requested OAuth provider for authentication.
      description: Response for an OAuth2 authorization url.
    org.sagebionetworks.repo.model.file.BatchFileHandleCopyResult:
      type: object
      properties:
        copyResults:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.file.FileHandleCopyResult'
            description: Result of a FileHandleCopyRequest.
          description: The results of each individual requests.
      description: Batch Result for copying FileHandles.
    org.sagebionetworks.repo.model.table.RowReferenceSetResults:
      type: object
      properties:
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.table.RowReferenceSetResults
        rowReferenceSet:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.RowReferenceSet'
          description: Represents a set of RowReferences of a TableEntity
      description: Response of an asynchronous that returns RowReferenceSet.
      required:
        - concreteType
    org.sagebionetworks.repo.model.utils.github.Release:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        url:
          type: string
        tag_name:
          type: string
          description: The name of the tag.
      description: A Github repository release.
    PaginatedResultsOfEntityHeader:
      type: object
      properties:
        totalNumberOfResults:
          type: integer
          description: Calculating the actual totalNumberOfResults is not longer supported. Therefore, for each page, the totalNumberOfResults is estimated using the current page, limit, and offset. When the page size equals the limit, the totalNumberOfResults will be offset+pageSize+ 1. Otherwise, the totalNumberOfResults will be offset+pageSize.
          format: int32
        results:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.EntityHeader'
    PaginatedResultsOfTrashedEntity:
      type: object
      properties:
        totalNumberOfResults:
          type: integer
          description: Calculating the actual totalNumberOfResults is not longer supported. Therefore, for each page, the totalNumberOfResults is estimated using the current page, limit, and offset. When the page size equals the limit, the totalNumberOfResults will be offset+pageSize+ 1. Otherwise, the totalNumberOfResults will be offset+pageSize.
          format: int32
        results:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.TrashedEntity'
    org.sagebionetworks.repo.model.statistics.ProjectFilesStatisticsResponse:
      type: object
      properties:
        objectId:
          type: string
          description: The id of the object for which this statistics were computed
        concreteType:
          type: string
          description: The type of response mapped to the statistics request
          enum:
            - org.sagebionetworks.repo.model.statistics.ProjectFilesStatisticsResponse
        fileDownloads:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.statistics.MonthlyFilesStatistics'
          description: Container for the statistics relative to file downloads or uploads for the past 12 months (Excluding the current month).
        fileUploads:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.statistics.MonthlyFilesStatistics'
          description: Container for the statistics relative to file downloads or uploads for the past 12 months (Excluding the current month).
      description: Container for statistics related to project files. Exposes the monthly aggregates of files and (unique) users that downloaded/uploaded for the past 12 months (excluding the current month).
      required:
        - concreteType
    org.sagebionetworks.repo.model.migration.AsyncMigrationTypeChecksumRequest:
      type: object
      properties:
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.migration.AsyncMigrationTypeChecksumRequest
        migrationType:
          type: string
          description: 'JSON enum for the types of objects which can be migrated. NOTE: The order of this enumeration determines the migration order.'
          enum:
            - PRINCIPAL
            - GROUP_MEMBERS
            - CREDENTIAL
            - AUTHENTICATED_ON
            - PRINCIPAL_ALIAS
            - NOTIFICATION_EMAIL
            - USER_PROFILE
            - STORAGE_LOCATION
            - FILE_HANDLE
            - MULTIPART_UPLOAD
            - MULTIPART_UPLOAD_PART_STATE
            - MULTIPART_UPLOAD_COMPOSER_PART_STATE
            - MESSAGE_CONTENT
            - MESSAGE_TO_USER
            - MESSAGE_RECIPIENT
            - MESSAGE_STATUS
            - COMMENT
            - V2_WIKI_PAGE
            - V2_WIKI_ATTACHMENT_RESERVATION
            - V2_WIKI_MARKDOWN
            - V2_WIKI_OWNERS
            - ACTIVITY
            - NODE
            - NODE_REVISION
            - NODE_ACCESS_REQUIRMENT
            - DOCKER_REPOSITORY_NAME
            - DOCKER_COMMIT
            - TEAM
            - MEMBERSHIP_INVITATION_SUBMISSION
            - MEMBERSHIP_REQUEST_SUBMISSION
            - EVALUATION
            - EVALUATION_ROUND
            - EVALUATION_SUBMISSIONS
            - SUBMISSION
            - SUBMISSION_CONTRIBUTOR
            - SUBMISSION_FILE
            - SUBMISSION_STATUS
            - PROJECT_SETTINGS
            - PROJECT_STATS
            - ACCESS_REQUIREMENT
            - ACCESS_REQUIREMENT_REVISION
            - ACCESS_APPROVAL
            - ACL
            - ACL_ACCESS
            - ACL_ACCESS_TYPE
            - FAVORITE
            - TRASH_CAN
            - PORTAL
            - DOI
            - CHALLENGE
            - CHALLENGE_TEAM
            - COLUMN_MODEL
            - BOUND_COLUMN_OWNER
            - BOUND_COLUMN_ORDINAL
            - TABLE_TRANSACTION
            - TABLE_TRANSACTION_TO_VERSION
            - TABLE_SEQUENCE
            - TABLE_CHANGE
            - QUIZ_RESPONSE
            - VERIFICATION_SUBMISSION
            - VERIFICATION_STATE
            - VERIFICATION_FILE
            - FORUM
            - DISCUSSION_THREAD
            - DISCUSSION_THREAD_VIEW
            - DISCUSSION_THREAD_ENTITY_REFERENCE
            - DISCUSSION_REPLY
            - SUBSCRIPTION
            - BROADCAST_MESSAGE
            - VIEW_TYPE
            - VIEW_SCOPE
            - VIEW_SNAPSHOT
            - THROTTLE_RULE
            - RESEARCH_PROJECT
            - DATA_ACCESS_REQUEST
            - DATA_ACCESS_SUBMISSION
            - DATA_ACCESS_SUBMISSION_SUBMITTER
            - DATA_ACCESS_SUBMISSION_STATUS
            - DATA_ACCESS_SUBMISSION_ACCESSOR_CHANGE
            - DATA_ACCESS_NOTIFICATIONS
            - FORM_GROUP
            - FORM_DATA
            - ORGANIZATION
            - JSON_SCHEMA
            - JSON_SCHEMA_BLOB
            - JSON_SCHEMA_VERSION
            - JSON_SCHEMA_LATEST_VERSION
            - JSON_SCHEMA_DEPENDENCY
            - JSON_SCHEMA_OBJECT_BINDING
            - DOWNLOAD_LIST
            - DOWNLOAD_LIST_ITEM
            - DOWNLOAD_ORDER
            - DOWNLOAD_LIST_2
            - DOWNLOAD_LIST_ITEM_2
            - DATA_TYPE
            - OAUTH_SECTOR_IDENTIFIER
            - OAUTH_CLIENT
            - OAUTH_REFRESH_TOKEN
            - OAUTH_ACCESS_TOKEN
            - PERSONAL_ACCESS_TOKEN
            - AUTHORIZATION_GRANT
            - SES_NOTIFICATIONS
            - QUARANTINED_EMAILS
            - FEATURE_STATUS
            - MATERIALIZED_VIEW_ID
            - MATERIALIZED_VIEW_SOURCE_TABLE
            - PRINCIPAL_OIDC_BINDING
            - OTP_SECRET
            - OTP_RECOVERY_CODE
            - TWO_FA_STATUS
            - WEBHOOK
            - WEBHOOK_VERIFICATION
            - WEBHOOK_ALLOWED_DOMAIN
            - AGENT_REGISTRATION
            - AGENT_SESSION
            - TOS_REQUIREMENTS
            - TOS_AGREEMENT
            - PROJECT_STORAGE_DATA
            - PROJECT_STORAGE_LIMIT
            - GRID_SESSION
            - GRID_REPLICA
            - GRID_CONNECTION
            - GRID_PATCH
            - CURATION_TASK
            - USER_STATUS
            - RECORDSET_VALIDATION_STATS
            - CHANGE
        type:
          type: string
          description: 'Deprecated.  Use: ''migrationType'''
      description: Request checksum for given type.
      required:
        - concreteType
    org.sagebionetworks.repo.model.grid.query.Filter:
      type: object
      properties:
        concreteType:
          type: string
          description: 'Required. Must be a properly quoted JSON string matching one of: "org.sagebionetworks.repo.model.grid.query.RowValidationResultFilter", "org.sagebionetworks.repo.model.grid.query.RowSelectionFilter", "org.sagebionetworks.repo.model.grid.query.RowIsValidFilter", or "org.sagebionetworks.repo.model.grid.query.CellValueFilter"'
      description: 'All filter objects must use valid JSON syntax with double quotes around all strings. There are four different types of filters that can be applied to a grid query. For example, a filter to find all rows where column named: ''someInt'' has a value greater than 12, the following filter would be used:[{"concreteType":"org.sagebionetworks.repo.model.grid.query.CellValueFilter","columnName":"someInt","operator":"GREATER_THAN","value":[12]}]. In order to find all rows with a JSON schema validation error use the following filter: [{"concreteType":"org.sagebionetworks.repo.model.grid.query.RowIsValidFilter","value":false}].  In order to find all rows with JSON schema validation error message that indicates the wrong type was provided, you could use the filter: [{"concreteType":"org.sagebionetworks.repo.model.grid.query.RowValidationResultFilter","operator":"LIKE","validationResultValue":"%expected type%"}]. In order to find all rows that are currently selected by the user, you would use the following filter: [{"concreteType":"org.sagebionetworks.repo.model.grid.query.RowSelectionFilter","isSelected":true}].'
      oneOf:
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.grid.query.RowValidationResultFilter'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.grid.query.RowSelectionFilter'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.grid.query.RowIsValidFilter'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.grid.query.CellValueFilter'
      required:
        - concreteType
      discriminator:
        propertyName: concreteType
    org.sagebionetworks.repo.model.discussion.EntityThreadCounts:
      type: object
      properties:
        list:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.discussion.EntityThreadCount'
            description: The model object represents the number of threads that mentioned a particular entity.
      description: The model object represents a list of EntityThreadCounts
    org.sagebionetworks.repo.model.Node:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        parentId:
          type: string
        createdByPrincipalId:
          type: integer
          format: int32
        createdOn:
          type: string
        modifiedByPrincipalId:
          type: integer
          format: int32
        modifiedOn:
          type: string
        nodeType:
          type: string
          description: Type of the Entity
          enum:
            - project
            - folder
            - file
            - table
            - link
            - entityview
            - dockerrepo
            - submissionview
            - dataset
            - datasetcollection
            - materializedview
            - virtualtable
            - recordset
        eTag:
          type: string
        versionNumber:
          type: integer
          format: int32
        versionComment:
          type: string
        versionLabel:
          type: string
        isLatestVersion:
          type: boolean
        activityId:
          type: string
        fileHandleId:
          type: string
        columnModelIds:
          type: array
          items:
            type: string
        scopeIds:
          type: array
          items:
            type: string
          description: For FileVeiws, the list of IDs the define the scope of the view.
        items:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.EntityRef'
            description: Represents a reference to the id and version of an entity to be used in collections.
          description: For Datasets and Dataset Collections, the list of entity references the define the view.
        upsertKey:
          type: array
          items:
            type: string
          description: For RecordSet, one or more column names that define this upsert key.
        csvDescriptor:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.CsvTableDescriptor'
          description: The description of a csv for upload or download.
        reference:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.Reference'
          description: JSON schema for Reference POJO
        alias:
          type: string
        isSearchEnabled:
          type: boolean
          description: For table entities, specifies if the full text search index is enabled or not.
        definingSQL:
          type: string
          description: For materialized views and virtual tables, specifies the SQL defining the content of the table.
      description: This is the DTO of a node.
    org.sagebionetworks.repo.model.file.BatchFileRequest:
      type: object
      properties:
        requestedFiles:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.file.FileHandleAssociation'
            description: Describes an association of a FileHandle with another object.
          description: Defines the files to get.
        includePreSignedURLs:
          type: boolean
          description: Set to true to request a pre-signed URL for each file.
        includeFileHandles:
          type: boolean
          description: Set to true to request a FileHandle for each file.
        includePreviewPreSignedURLs:
          type: boolean
          description: Set to true to request a preview's pre-signed URL for each file.
      description: Batch Request for file pre-signed-URLs and/or FileHandles.
    org.sagebionetworks.repo.model.schema.ListValidationResultsResponse:
      type: object
      properties:
        page:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.schema.ValidationResults'
            description: Results of validating an object against a schema
        nextPageToken:
          type: string
          description: Forward this token to get the next page of results.
      description: A single page of the JSON schema validation results.
    org.sagebionetworks.repo.model.schema.BoundObjectType:
      type: string
      enum:
        - entity
    org.sagebionetworks.repo.model.file.FileHandleArchivalResponse:
      type: object
      properties:
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.file.FileHandleArchivalResponse
        count:
          type: integer
          description: The count of file handles that were queued for archival.
          format: int32
      description: Response for a request to tag file handles for archival.
      required:
        - concreteType
    org.sagebionetworks.repo.model.doi.v2.DoiNameIdentifier:
      type: object
      properties:
        identifier:
          type: string
          description: Required. The identifier belonging to the creator.
        nameIdentifierScheme:
          type: string
          description: Required. Describes the scheme of the nameIdentifier. Required if nameIdentifier is used.
          enum:
            - ORCID
            - ISNI
      description: Uniquely identifies an individual or legal entity, according to various schemas.
    org.sagebionetworks.repo.model.webhook.Webhook:
      type: object
      properties:
        id:
          type: string
          description: The ID associated with the Webhook. This field is issued by Synapse and cannot be changed by the user.
        createdBy:
          type: string
          description: The ID of the user that created this webhook.
        createdOn:
          type: string
          description: The date this webhook was created.
        modifiedOn:
          type: string
          description: The date this webhook was last modified.
        objectId:
          type: string
          description: The ID of the Synapse object to receive events of.
        objectType:
          type: string
          description: The supported synapse object types for a Webhook
          enum:
            - ENTITY
        eventTypes:
          type: array
          items:
            type: string
            description: The type of the WebhookEvent.
            enum:
              - CREATE
              - UPDATE
              - DELETE
          description: The set of event types to subscribe to.
          uniqueItems: true
        invokeEndpoint:
          type: string
          description: The endpoint the Synapse user would like the webhook events sent to on invocation. Must be 255 Characters or less.
        isEnabled:
          type: boolean
          description: True if the Synapse user has selected to receive events. If the user sets to false, events will be temporalily paused.
        verificationStatus:
          type: string
          description: JSON enum for the verification status of a Webhook.
          enum:
            - PENDING
            - CODE_SENT
            - FAILED
            - REVOKED
            - VERIFIED
        verificationMsg:
          type: string
          description: A message describing the reason of the verification status
      description: An object that serves as registration for a Synapse user to receive events for the specified event.
    org.sagebionetworks.repo.model.grid.query.QueryRequest:
      type: object
      properties:
        query:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.grid.query.Query'
          description: Defines a structured query using JSON SelectItems and Filters objects - NOT SQL syntax. Use the predefined SelectItems and Filters with specific concreteType values.
      description: Request to run a query.
    org.sagebionetworks.repo.model.dataaccess.SubmissionStatus:
      type: object
      properties:
        submissionId:
          type: string
          description: The ID of the Submission submitted for the given AccessRequirement.
        submittedBy:
          type: string
          description: The user who submitted the Submission for the given AccessRequirement.
        rejectedReason:
          type: string
          description: The reason the submission is rejected, if it's rejected.
        state:
          type: string
          description: The state of a Submission.
          enum:
            - SUBMITTED
            - APPROVED
            - REJECTED
            - CANCELLED
        modifiedOn:
          type: string
          description: The date the Submission' status was last modified.
      description: The status of a Submission.
    org.sagebionetworks.repo.model.search.SearchResults:
      type: object
      properties:
        found:
          type: integer
          description: The total number of hits found for this search.
          format: int32
        start:
          type: integer
          description: The zero-based number of the first hit returned in this page of search results.
          format: int32
        matchExpression:
          type: string
          description: 'DEPRECATED: The search match expression parsed from the search request parameters.  This is useful for debugging purposes.'
        hits:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.search.Hit'
            description: JSON schema for a Hit in the search results.  Each Hit contains a subset of entity data.
          description: The hits in this page of search results
        facets:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.search.Facet'
            description: JSON schema for a continuous or literal value Facet found in the search results.
          description: The facets found in all results of this search.
      description: JSON schema for a the result of a search.
    org.sagebionetworks.repo.model.download.DownloadListItemResult:
      type: object
      properties:
        fileName:
          type: string
          description: The name of the file.
        addedOn:
          type: string
          description: The date-time when this file was added to the user's download list.
        projectId:
          type: string
          description: The ID of the project that contains this file.
        projectName:
          type: string
          description: The name of the project that contains this file.
        createdBy:
          type: string
          description: The ID of the user that created this file.
        createdOn:
          type: string
          description: The date-time when this file was created.
        fileSizeBytes:
          type: integer
          description: The size of the file in bytes.
          format: int32
        isEligibleForPackaging:
          type: boolean
          description: Only files that are managed by Synapse storage are eligible for packaging into a zip file.  If true, then the file is eligible for packaging into a zip file.
        fileHandleId:
          type: string
          description: The ID of the file handle associated with this file.
        fileEntityId:
          type: string
          description: The 'syn' identifier of a file entity.
        versionNumber:
          type: integer
          description: When included, indicates that a specific version of a files was added to the user's download list.  When excluded, the current version was added.
          format: int32
      description: The results of a single item on a user's download list.
    org.sagebionetworks.repo.model.EntityChildrenRequest:
      type: object
      properties:
        parentId:
          type: string
          description: The ID of the parent.  Set to null to list projects.
        nextPageToken:
          type: string
          description: Optional parameter used to fetch the next page of results.  When NULL, the first page will be returned.  The nextPageToken is provided with the results if there is another page of results.
        includeTypes:
          type: array
          items:
            type: string
            description: Type of the Entity
            enum:
              - project
              - folder
              - file
              - table
              - link
              - entityview
              - dockerrepo
              - submissionview
              - dataset
              - datasetcollection
              - materializedview
              - virtualtable
              - recordset
          description: The types of children to be include. Must include at least one type.
        sortBy:
          type: string
          description: How results should be sorted.
          enum:
            - NAME
            - CREATED_ON
            - MODIFIED_ON
        sortDirection:
          type: string
          description: The direction of the result sort.
          enum:
            - ASC
            - DESC
        includeTotalChildCount:
          type: boolean
          description: When true, the total number of children with the given parentId and types will be included.  False by default
        includeSumFileSizes:
          type: boolean
          description: When true, the sum of the files sizes (bytes) with the given parentId and types will be included.  False by default
      description: Request for EntityHeaders of the children of a given parent Entity
    org.sagebionetworks.repo.model.download.AddToDownloadListRequest:
      type: object
      properties:
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.download.AddToDownloadListRequest
        query:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.Query'
        parentId:
          type: string
          description: 'The synID of a folder, project, dataset or dataset collection to add all of the children files to the user''s download list.  This parameter should be excluded when adding files from a query. Note: This is not recursive, unless the recursive property is set to true.'
        recursive:
          type: boolean
          description: 'When the parentId is specified and this property is set to true all the files in a folder or project will be added to the user''s download list, including files contained in sub-folders. When set to false (default) only the direct children of the provided parentId will be added to the download list. Note: the property cannot be true when a query is specified or when the parentId is a dataset.'
        useVersionNumber:
          type: boolean
          description: When true (default), the version number will be included for each file added to the user's download list.  When set to false, the version number will be excluded, indicating that the 'current' version should always be downloaded.
      description: Start an asynchronous job to add files from the given view query or folder to the user's download list,
      required:
        - concreteType
    org.sagebionetworks.repo.model.discussion.UpdateThreadTitle:
      type: object
      properties:
        title:
          type: string
          description: The new title
    org.sagebionetworks.repo.model.migration.MigrationTypeCount:
      type: object
      properties:
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.migration.MigrationTypeCount
        type:
          type: string
          description: 'JSON enum for the types of objects which can be migrated. NOTE: The order of this enumeration determines the migration order.'
          enum:
            - PRINCIPAL
            - GROUP_MEMBERS
            - CREDENTIAL
            - AUTHENTICATED_ON
            - PRINCIPAL_ALIAS
            - NOTIFICATION_EMAIL
            - USER_PROFILE
            - STORAGE_LOCATION
            - FILE_HANDLE
            - MULTIPART_UPLOAD
            - MULTIPART_UPLOAD_PART_STATE
            - MULTIPART_UPLOAD_COMPOSER_PART_STATE
            - MESSAGE_CONTENT
            - MESSAGE_TO_USER
            - MESSAGE_RECIPIENT
            - MESSAGE_STATUS
            - COMMENT
            - V2_WIKI_PAGE
            - V2_WIKI_ATTACHMENT_RESERVATION
            - V2_WIKI_MARKDOWN
            - V2_WIKI_OWNERS
            - ACTIVITY
            - NODE
            - NODE_REVISION
            - NODE_ACCESS_REQUIRMENT
            - DOCKER_REPOSITORY_NAME
            - DOCKER_COMMIT
            - TEAM
            - MEMBERSHIP_INVITATION_SUBMISSION
            - MEMBERSHIP_REQUEST_SUBMISSION
            - EVALUATION
            - EVALUATION_ROUND
            - EVALUATION_SUBMISSIONS
            - SUBMISSION
            - SUBMISSION_CONTRIBUTOR
            - SUBMISSION_FILE
            - SUBMISSION_STATUS
            - PROJECT_SETTINGS
            - PROJECT_STATS
            - ACCESS_REQUIREMENT
            - ACCESS_REQUIREMENT_REVISION
            - ACCESS_APPROVAL
            - ACL
            - ACL_ACCESS
            - ACL_ACCESS_TYPE
            - FAVORITE
            - TRASH_CAN
            - PORTAL
            - DOI
            - CHALLENGE
            - CHALLENGE_TEAM
            - COLUMN_MODEL
            - BOUND_COLUMN_OWNER
            - BOUND_COLUMN_ORDINAL
            - TABLE_TRANSACTION
            - TABLE_TRANSACTION_TO_VERSION
            - TABLE_SEQUENCE
            - TABLE_CHANGE
            - QUIZ_RESPONSE
            - VERIFICATION_SUBMISSION
            - VERIFICATION_STATE
            - VERIFICATION_FILE
            - FORUM
            - DISCUSSION_THREAD
            - DISCUSSION_THREAD_VIEW
            - DISCUSSION_THREAD_ENTITY_REFERENCE
            - DISCUSSION_REPLY
            - SUBSCRIPTION
            - BROADCAST_MESSAGE
            - VIEW_TYPE
            - VIEW_SCOPE
            - VIEW_SNAPSHOT
            - THROTTLE_RULE
            - RESEARCH_PROJECT
            - DATA_ACCESS_REQUEST
            - DATA_ACCESS_SUBMISSION
            - DATA_ACCESS_SUBMISSION_SUBMITTER
            - DATA_ACCESS_SUBMISSION_STATUS
            - DATA_ACCESS_SUBMISSION_ACCESSOR_CHANGE
            - DATA_ACCESS_NOTIFICATIONS
            - FORM_GROUP
            - FORM_DATA
            - ORGANIZATION
            - JSON_SCHEMA
            - JSON_SCHEMA_BLOB
            - JSON_SCHEMA_VERSION
            - JSON_SCHEMA_LATEST_VERSION
            - JSON_SCHEMA_DEPENDENCY
            - JSON_SCHEMA_OBJECT_BINDING
            - DOWNLOAD_LIST
            - DOWNLOAD_LIST_ITEM
            - DOWNLOAD_ORDER
            - DOWNLOAD_LIST_2
            - DOWNLOAD_LIST_ITEM_2
            - DATA_TYPE
            - OAUTH_SECTOR_IDENTIFIER
            - OAUTH_CLIENT
            - OAUTH_REFRESH_TOKEN
            - OAUTH_ACCESS_TOKEN
            - PERSONAL_ACCESS_TOKEN
            - AUTHORIZATION_GRANT
            - SES_NOTIFICATIONS
            - QUARANTINED_EMAILS
            - FEATURE_STATUS
            - MATERIALIZED_VIEW_ID
            - MATERIALIZED_VIEW_SOURCE_TABLE
            - PRINCIPAL_OIDC_BINDING
            - OTP_SECRET
            - OTP_RECOVERY_CODE
            - TWO_FA_STATUS
            - WEBHOOK
            - WEBHOOK_VERIFICATION
            - WEBHOOK_ALLOWED_DOMAIN
            - AGENT_REGISTRATION
            - AGENT_SESSION
            - TOS_REQUIREMENTS
            - TOS_AGREEMENT
            - PROJECT_STORAGE_DATA
            - PROJECT_STORAGE_LIMIT
            - GRID_SESSION
            - GRID_REPLICA
            - GRID_CONNECTION
            - GRID_PATCH
            - CURATION_TASK
            - USER_STATUS
            - RECORDSET_VALIDATION_STATS
            - CHANGE
        count:
          type: integer
          format: int32
        maxid:
          type: integer
          format: int32
        minid:
          type: integer
          format: int32
      description: A record containing count of instances, minimum id and maximum id for a migration type
      required:
        - concreteType
    org.sagebionetworks.repo.model.migration.HasMigrationType:
      type: object
      properties:
        migrationType:
          type: string
          description: 'JSON enum for the types of objects which can be migrated. NOTE: The order of this enumeration determines the migration order.'
          enum:
            - PRINCIPAL
            - GROUP_MEMBERS
            - CREDENTIAL
            - AUTHENTICATED_ON
            - PRINCIPAL_ALIAS
            - NOTIFICATION_EMAIL
            - USER_PROFILE
            - STORAGE_LOCATION
            - FILE_HANDLE
            - MULTIPART_UPLOAD
            - MULTIPART_UPLOAD_PART_STATE
            - MULTIPART_UPLOAD_COMPOSER_PART_STATE
            - MESSAGE_CONTENT
            - MESSAGE_TO_USER
            - MESSAGE_RECIPIENT
            - MESSAGE_STATUS
            - COMMENT
            - V2_WIKI_PAGE
            - V2_WIKI_ATTACHMENT_RESERVATION
            - V2_WIKI_MARKDOWN
            - V2_WIKI_OWNERS
            - ACTIVITY
            - NODE
            - NODE_REVISION
            - NODE_ACCESS_REQUIRMENT
            - DOCKER_REPOSITORY_NAME
            - DOCKER_COMMIT
            - TEAM
            - MEMBERSHIP_INVITATION_SUBMISSION
            - MEMBERSHIP_REQUEST_SUBMISSION
            - EVALUATION
            - EVALUATION_ROUND
            - EVALUATION_SUBMISSIONS
            - SUBMISSION
            - SUBMISSION_CONTRIBUTOR
            - SUBMISSION_FILE
            - SUBMISSION_STATUS
            - PROJECT_SETTINGS
            - PROJECT_STATS
            - ACCESS_REQUIREMENT
            - ACCESS_REQUIREMENT_REVISION
            - ACCESS_APPROVAL
            - ACL
            - ACL_ACCESS
            - ACL_ACCESS_TYPE
            - FAVORITE
            - TRASH_CAN
            - PORTAL
            - DOI
            - CHALLENGE
            - CHALLENGE_TEAM
            - COLUMN_MODEL
            - BOUND_COLUMN_OWNER
            - BOUND_COLUMN_ORDINAL
            - TABLE_TRANSACTION
            - TABLE_TRANSACTION_TO_VERSION
            - TABLE_SEQUENCE
            - TABLE_CHANGE
            - QUIZ_RESPONSE
            - VERIFICATION_SUBMISSION
            - VERIFICATION_STATE
            - VERIFICATION_FILE
            - FORUM
            - DISCUSSION_THREAD
            - DISCUSSION_THREAD_VIEW
            - DISCUSSION_THREAD_ENTITY_REFERENCE
            - DISCUSSION_REPLY
            - SUBSCRIPTION
            - BROADCAST_MESSAGE
            - VIEW_TYPE
            - VIEW_SCOPE
            - VIEW_SNAPSHOT
            - THROTTLE_RULE
            - RESEARCH_PROJECT
            - DATA_ACCESS_REQUEST
            - DATA_ACCESS_SUBMISSION
            - DATA_ACCESS_SUBMISSION_SUBMITTER
            - DATA_ACCESS_SUBMISSION_STATUS
            - DATA_ACCESS_SUBMISSION_ACCESSOR_CHANGE
            - DATA_ACCESS_NOTIFICATIONS
            - FORM_GROUP
            - FORM_DATA
            - ORGANIZATION
            - JSON_SCHEMA
            - JSON_SCHEMA_BLOB
            - JSON_SCHEMA_VERSION
            - JSON_SCHEMA_LATEST_VERSION
            - JSON_SCHEMA_DEPENDENCY
            - JSON_SCHEMA_OBJECT_BINDING
            - DOWNLOAD_LIST
            - DOWNLOAD_LIST_ITEM
            - DOWNLOAD_ORDER
            - DOWNLOAD_LIST_2
            - DOWNLOAD_LIST_ITEM_2
            - DATA_TYPE
            - OAUTH_SECTOR_IDENTIFIER
            - OAUTH_CLIENT
            - OAUTH_REFRESH_TOKEN
            - OAUTH_ACCESS_TOKEN
            - PERSONAL_ACCESS_TOKEN
            - AUTHORIZATION_GRANT
            - SES_NOTIFICATIONS
            - QUARANTINED_EMAILS
            - FEATURE_STATUS
            - MATERIALIZED_VIEW_ID
            - MATERIALIZED_VIEW_SOURCE_TABLE
            - PRINCIPAL_OIDC_BINDING
            - OTP_SECRET
            - OTP_RECOVERY_CODE
            - TWO_FA_STATUS
            - WEBHOOK
            - WEBHOOK_VERIFICATION
            - WEBHOOK_ALLOWED_DOMAIN
            - AGENT_REGISTRATION
            - AGENT_SESSION
            - TOS_REQUIREMENTS
            - TOS_AGREEMENT
            - PROJECT_STORAGE_DATA
            - PROJECT_STORAGE_LIMIT
            - GRID_SESSION
            - GRID_REPLICA
            - GRID_CONNECTION
            - GRID_PATCH
            - CURATION_TASK
            - USER_STATUS
            - RECORDSET_VALIDATION_STATS
            - CHANGE
      description: Abstraction for Admin request
      oneOf:
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.migration.AsyncMigrationTypeChecksumRequest'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.migration.MigrationTypeChecksum'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.migration.CalculateOptimalRangeResponse'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.migration.AsyncMigrationRangeChecksumRequest'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.migration.CalculateOptimalRangeRequest'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.migration.RestoreTypeRequest'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.migration.BatchChecksumRequest'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.migration.BackupTypeRangeRequest'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.migration.BatchChecksumResponse'
      discriminator:
        propertyName: concreteType
    org.sagebionetworks.repo.model.dataaccess.UserSubmissionSearchRequest:
      type: object
      properties:
        accessRequirementId:
          type: string
          description: Filter by the id of the access requirement of the submissions.
        submissionState:
          type: string
          description: The state of a Submission.
          enum:
            - SUBMITTED
            - APPROVED
            - REJECTED
            - CANCELLED
        sort:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.dataaccess.SubmissionSearchSort'
            description: Identifies both the field and direction for a single sort operation
        nextPageToken:
          type: string
          description: A token used to get the next page of a request.
      description: A request to search through the user data access submissions
    org.sagebionetworks.repo.model.annotation.StringAnnotation:
      type: object
      properties:
        key:
          type: string
          description: The key of this Annotation
        isPrivate:
          type: boolean
          description: Flag denoting whether this Annotation should be private.
        value:
          type: string
          description: The value of this Annotation
      description: An Annotation containing a String value
    org.sagebionetworks.repo.model.schema.JsonSchemaObjectBinding:
      type: object
      properties:
        jsonSchemaVersionInfo:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.schema.JsonSchemaVersionInfo'
          description: Information about a single version of a JSON schema.
        objectId:
          type: integer
          description: The numeric identifier of the object bound to a JSON schema
          format: int32
        objectType:
          type: string
          description: Object types that can be bound to a JSON schema.
          enum:
            - entity
        createdOn:
          type: string
          description: The date this binding was created.
        createdBy:
          type: string
          description: The ID of the user that bound this object to the schema.
        enableDerivedAnnotations:
          type: boolean
          description: When 'true', Synapse will automatically, calculate the derived annotations for the Entities bound to this schema
      description: Describes the binding of a JSON schema to an object
    org.sagebionetworks.repo.model.schema.ListOrganizationsResponse:
      type: object
      properties:
        page:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.schema.Organization'
            description: The first step in creating new type schema in Synapse is to setup and configure an organization. The name of the organization serves as the root for each schema's $id managed by that organization.  The organization name 'org.sagebionetworks' is reserved for the core Synapse model objects.   Each organization also has an Access Control List (ACL) that controls who can add schemas to an organization.  All schemas created under an Organization will be considered publicly readable and reference-able. Organizations are immutable
        nextPageToken:
          type: string
          description: Forward this token to get the next page of results.
      description: A single page of the currently registered Organizations
    org.sagebionetworks.repo.model.message.ChangeMessage:
      type: object
      properties:
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.message.ChangeMessage
        objectId:
          type: string
          description: The unique identifier of the object that changed.
        objectVersion:
          type: integer
          description: Identifier for a specific version of an object.
          format: int32
        objectType:
          type: string
          description: JSON enum for the types of objects in Synapse.
          enum:
            - ENTITY
            - ENTITY_CONTAINER
            - PRINCIPAL
            - ACTIVITY
            - EVALUATION
            - EVALUATION_ROUND
            - SUBMISSION
            - EVALUATION_SUBMISSIONS
            - FILE
            - MESSAGE
            - WIKI
            - FAVORITE
            - ACCESS_REQUIREMENT
            - ACCESS_APPROVAL
            - TEAM
            - TABLE
            - ACCESS_CONTROL_LIST
            - PROJECT_SETTING
            - VERIFICATION_SUBMISSION
            - CERTIFIED_USER_PASSING_RECORD
            - FORUM
            - THREAD
            - REPLY
            - FORM_GROUP
            - ORGANIZATION
            - FORM_DATA
            - ENTITY_VIEW
            - USER_PROFILE
            - DATA_ACCESS_REQUEST
            - DATA_ACCESS_SUBMISSION
            - DATA_ACCESS_SUBMISSION_STATUS
            - MEMBERSHIP_INVITATION
            - JSON_SCHEMA
            - JSON_SCHEMA_DEPENDANT
            - DATASET
            - DATASET_COLLECTION
            - THREAD_VIEW
            - MATERIALIZED_VIEW
            - VIRTUAL_TABLE
            - TABLE_STATUS_EVENT
            - DATA_ACCESS_SUBMISSION_EVENT
            - FILE_EVENT
            - QUERY_CACHE_HIT
            - PROJECT_STORAGE_EVENT
            - REPLICATED_EVENT
            - PORTAL
            - OAUTH_CLIENT
        timestamp:
          type: string
          description: The timestamp when this change was originally committed.
        changeNumber:
          type: integer
          description: The application change number created as a result of this change.
          format: int32
        changeType:
          type: string
          description: The type of change that occurred
          enum:
            - CREATE
            - UPDATE
            - DELETE
        userId:
          type: integer
          description: The ID of the user who created this change message
          format: int32
      description: JSON schema for a change message
      required:
        - concreteType
    org.sagebionetworks.repo.model.download.FilesStatisticsRequest:
      type: object
      properties:
        concreteType:
          type: string
          description: 'Required. For this type the value should be: ''org.sagebionetworks.repo.model.download.FilesStatisticsRequest'''
          enum:
            - org.sagebionetworks.repo.model.download.FilesStatisticsRequest
      description: Request to get statistics about the files currently on the user's download list.
      required:
        - concreteType
    org.sagebionetworks.repo.model.oauth.OAuthClientAuthorizationHistoryList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.oauth.OAuthClientAuthorizationHistory'
            description: An object representing an OAuth 2.0 client that has been authorized to request a user's resources and identity
        nextPageToken:
          type: string
          description: The token to get the next page of results.
      description: Metadata for a paginated list of OAuth 2.0 clients authorized to access a user's resources in Synapse.
    org.sagebionetworks.repo.model.curation.metadata.RecordBasedMetadataTaskProperties:
      type: object
      properties:
        concreteType:
          type: string
          description: 'Indicates which implementation of CurationTaskProperties this object represents. Possible values include: ''org.sagebionetworks.repo.model.curation.metadata.FileBasedMetadataTaskProperties'' and ''org.sagebionetworks.repo.model.curation.metadata.RecordBasedMetadataTaskProperties''.'
          enum:
            - org.sagebionetworks.repo.model.curation.metadata.RecordBasedMetadataTaskProperties
        recordSetId:
          type: string
          description: The synId of the RecordSet that will contain all record-based metadata for a specific type.  This RecordSet will be used to start new grid sessions for both 'upsert' and record-based curation for this type.
      description: A CurationTaskProperties for record-based metadata
      required:
        - concreteType
    org.sagebionetworks.repo.model.auth.NewIntegrationTestUser:
      type: object
      properties:
        username:
          type: string
          description: User's unique name
        email:
          type: string
          description: User's email
        password:
          type: string
          description: User's password
        tou:
          type: boolean
          description: True if user agrees to Synapse terms of use
        validatedUser:
          type: boolean
          description: True if a verification approved states should be added for the user
      description: Administrative object.  Used to create users for integration tests.  All fields besides username can be null
    org.sagebionetworks.repo.model.table.SnapshotRequest:
      type: object
      properties:
        snapshotComment:
          type: string
          description: 'Optional. If createNewSnapshot=true, the comment to be applied to the snapshot version.  Null by default '
        snapshotLabel:
          type: string
          description: 'Optional. If createNewSnapshot=true, the label to be applied to the snapshot version.  Null by default '
        snapshotActivityId:
          type: string
          description: 'Optional. If createNewSnapshot=true, the Activity ID to be applied to the snapshot version.  Null by default '
      description: Request to create a new snapshot of a table or view.  The provided comment, label, and activity ID will be applied to the current version thereby creating a snapshot and locking the current version.  After the snapshot is created a new version will be started with an 'in-progress' label.
    org.sagebionetworks.repo.model.file.MultipartUploadState:
      type: string
      enum:
        - UPLOADING
        - COMPLETED
    org.sagebionetworks.repo.model.AccessControlList:
      type: object
      properties:
        id:
          type: string
          description: The entity id
        createdBy:
          type: string
          description: UNUSED -- maintained only for backwards compatibility with archived objects
        creationDate:
          type: string
        modifiedBy:
          type: string
          description: UNUSED -- maintained only for backwards compatibility with archived objects
        modifiedOn:
          type: string
          description: UNUSED -- maintained only for backwards compatibility with archived objects
        etag:
          type: string
        resourceAccess:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.ResourceAccess'
            description: JSON schema for a ResourceAccess POJO
          description: The list of principals who can access the data with the allowed types of access for each.
          uniqueItems: true
      description: Contains list of principals who can access the data with the allowed types of access for each.
    org.sagebionetworks.repo.model.table.ColumnMultiValueFunctionQueryFilter:
      type: object
      properties:
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.table.ColumnMultiValueFunctionQueryFilter
        isDefiningCondition:
          type: boolean
          description: When null (default) or false, this condition will be applied to WHERE clause of table/view query.  When set to true, for a query against a VirtualTable, this condition will be applied to the WHERE clause of the VirtualTable's definingSQL.
        values:
          type: array
          items:
            type: string
          description: Values to be used with the filter.
        columnName:
          type: string
          description: name of the column to filter
        function:
          type: string
          description: Determines the filter operation to perform
          enum:
            - HAS
            - HAS_LIKE
      description: A filter that applies multi-value columns functions.
      required:
        - concreteType
    org.sagebionetworks.repo.model.RestrictionInformationResponse:
      type: object
      properties:
        objectId:
          type: integer
          description: The id of the restrictable object
          format: int32
        restrictionLevel:
          type: string
          enum:
            - OPEN
            - RESTRICTED_BY_TERMS_OF_USE
            - CONTROLLED_BY_ACT
        hasUnmetAccessRequirement:
          type: boolean
          description: True if user has at least one unmet access requirement on this restrict-able object; false otherwise.
        userEntityPermissions:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.auth.UserEntityPermissions'
          description: The permission a User has for a given Entity
        restrictionDetails:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.RestrictionFulfillment'
            description: Provides information about a restriction fulfillment for a user in the context of a restrictable object and access requirement
          description: The list of restriction fulfillment information for each access requirement that applies to the restrictable object.
      description: The information about restriction level on a restrict-able object.
    org.sagebionetworks.repo.model.ChallengePagedResults:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.Challenge'
            description: Settings for a Challenge Project.
          description: The list of results for this page
        totalNumberOfResults:
          type: integer
          description: The total number of results
          format: int32
      description: A paginated list of Challenge objects
    org.sagebionetworks.repo.model.oauth.OIDCAuthorizationRequestDescription:
      type: object
      properties:
        clientId:
          type: string
          description: ID of the client requesting authorization
        redirect_uri:
          type: string
          description: URL to which the user-agent is to be redirected after consent is given.
        scope:
          type: array
          items:
            type: string
          description: Scopes and claims requested by client
      description: Human readable description / details about an authorization request
    org.sagebionetworks.repo.model.webhook.WebhookVerificationMessage:
      type: object
      properties:
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.webhook.WebhookVerificationMessage
        messageId:
          type: string
          description: Unique message identifier.
        eventTimestamp:
          type: string
          description: The timestamp when the event occurred, in ISO 8601 format.
        verificationCode:
          type: string
          description: The verification code that shall be used to verify the webhook. Expires after 10 minutes.
      description: A special webhook message that is sent to verify a webhook
      required:
        - messageId
        - eventTimestamp
        - concreteType
    org.sagebionetworks.repo.model.download.DownloadListPageRequest:
      type: object
      properties:
        nextPageToken:
          type: string
          description: 'Forward the resulting nextPageToken from a previous request to get the next page of results. Note: Exclude the token if the previously fetch items where removed from the download list.'
        sort:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.download.Sort'
            description: Identifies both the field and direction for a single sort operation
          description: 'Optional: Defines how the results should be sorted. Up to three fields can be sorted at a time.  The order of this array determines the sort priority.'
        nameContains:
          type: string
          description: 'Optional: Case insensitive part of the name to filter by name.'
      description: Request to get a single page of files from the user's download list for files that are currently available for download.
    org.sagebionetworks.repo.model.agent.AgentRegistrationRequest:
      type: object
      properties:
        awsAgentId:
          type: string
          description: The AWS issued agent ID of the agent to be registered.
        awsAliasId:
          type: string
          description: The AWS issued agent alias ID of the agent alias to be used. Optional. If an alias is not provided then 'TSTALIASID' will be used.
      description: Request to register a custom AWS agent with Synapse.  Currently, only internal users are authorized to register custom agents.
    org.sagebionetworks.repo.model.dataaccess.SubmissionState:
      type: string
      enum:
        - SUBMITTED
        - APPROVED
        - REJECTED
        - CANCELLED
    org.sagebionetworks.repo.model.Folder:
      type: object
      properties:
        name:
          type: string
          description: 'The name of this entity.  Must be 256 characters or less. Names may only contain: letters, numbers, spaces, underscores, hyphens, periods, plus signs, apostrophes, and parentheses'
        description:
          type: string
          description: The description of this entity.  Must be 1000 characters or less.
        id:
          type: string
          description: The unique immutable ID for this entity.  A new ID will be generated for new Entities.  Once issued, this ID is guaranteed to never change or be re-issued
        etag:
          type: string
          description: Synapse employs an Optimistic Concurrency Control (OCC) scheme to handle concurrent updates. Since the E-Tag changes every time an entity is updated it is used to detect when a client's current representation of an entity is out-of-date.
        createdOn:
          type: string
          description: The date this entity was created.
        modifiedOn:
          type: string
          description: The date this entity was last modified.
        createdBy:
          type: string
          description: The ID of the user that created this entity.
        modifiedBy:
          type: string
          description: The ID of the user that last modified this entity.
        parentId:
          type: string
          description: The ID of the Entity that is the parent of this Entity.
        concreteType:
          type: string
          description: Indicates which implementation of Entity this object represents.  The value is the fully qualified class name, e.g. org.sagebionetworks.repo.model.FileEntity.
          enum:
            - org.sagebionetworks.repo.model.Folder
      description: Folder is a hierarchical container for organizing data in Synapse.
      required:
        - concreteType
    org.sagebionetworks.repo.model.migration.RestoreTypeResponse:
      type: object
      properties:
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.migration.RestoreTypeResponse
        restoredRowCount:
          type: integer
          description: The number of rows restored with this request.
          format: int32
      description: Results for a backup type job.
      required:
        - concreteType
    org.sagebionetworks.repo.model.message.MessageStatusType:
      type: string
      enum:
        - READ
        - UNREAD
        - ARCHIVED
    org.sagebionetworks.repo.model.discussion.UpdateReplyMessage:
      type: object
      properties:
        messageMarkdown:
          type: string
          description: The new message markdown
    ListWrapperOfUserProfile:
      type: object
      properties:
        list:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.UserProfile'
    org.sagebionetworks.repo.model.migration.RestoreTypeRequest:
      type: object
      properties:
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.migration.RestoreTypeRequest
        migrationType:
          type: string
          description: 'JSON enum for the types of objects which can be migrated. NOTE: The order of this enumeration determines the migration order.'
          enum:
            - PRINCIPAL
            - GROUP_MEMBERS
            - CREDENTIAL
            - AUTHENTICATED_ON
            - PRINCIPAL_ALIAS
            - NOTIFICATION_EMAIL
            - USER_PROFILE
            - STORAGE_LOCATION
            - FILE_HANDLE
            - MULTIPART_UPLOAD
            - MULTIPART_UPLOAD_PART_STATE
            - MULTIPART_UPLOAD_COMPOSER_PART_STATE
            - MESSAGE_CONTENT
            - MESSAGE_TO_USER
            - MESSAGE_RECIPIENT
            - MESSAGE_STATUS
            - COMMENT
            - V2_WIKI_PAGE
            - V2_WIKI_ATTACHMENT_RESERVATION
            - V2_WIKI_MARKDOWN
            - V2_WIKI_OWNERS
            - ACTIVITY
            - NODE
            - NODE_REVISION
            - NODE_ACCESS_REQUIRMENT
            - DOCKER_REPOSITORY_NAME
            - DOCKER_COMMIT
            - TEAM
            - MEMBERSHIP_INVITATION_SUBMISSION
            - MEMBERSHIP_REQUEST_SUBMISSION
            - EVALUATION
            - EVALUATION_ROUND
            - EVALUATION_SUBMISSIONS
            - SUBMISSION
            - SUBMISSION_CONTRIBUTOR
            - SUBMISSION_FILE
            - SUBMISSION_STATUS
            - PROJECT_SETTINGS
            - PROJECT_STATS
            - ACCESS_REQUIREMENT
            - ACCESS_REQUIREMENT_REVISION
            - ACCESS_APPROVAL
            - ACL
            - ACL_ACCESS
            - ACL_ACCESS_TYPE
            - FAVORITE
            - TRASH_CAN
            - PORTAL
            - DOI
            - CHALLENGE
            - CHALLENGE_TEAM
            - COLUMN_MODEL
            - BOUND_COLUMN_OWNER
            - BOUND_COLUMN_ORDINAL
            - TABLE_TRANSACTION
            - TABLE_TRANSACTION_TO_VERSION
            - TABLE_SEQUENCE
            - TABLE_CHANGE
            - QUIZ_RESPONSE
            - VERIFICATION_SUBMISSION
            - VERIFICATION_STATE
            - VERIFICATION_FILE
            - FORUM
            - DISCUSSION_THREAD
            - DISCUSSION_THREAD_VIEW
            - DISCUSSION_THREAD_ENTITY_REFERENCE
            - DISCUSSION_REPLY
            - SUBSCRIPTION
            - BROADCAST_MESSAGE
            - VIEW_TYPE
            - VIEW_SCOPE
            - VIEW_SNAPSHOT
            - THROTTLE_RULE
            - RESEARCH_PROJECT
            - DATA_ACCESS_REQUEST
            - DATA_ACCESS_SUBMISSION
            - DATA_ACCESS_SUBMISSION_SUBMITTER
            - DATA_ACCESS_SUBMISSION_STATUS
            - DATA_ACCESS_SUBMISSION_ACCESSOR_CHANGE
            - DATA_ACCESS_NOTIFICATIONS
            - FORM_GROUP
            - FORM_DATA
            - ORGANIZATION
            - JSON_SCHEMA
            - JSON_SCHEMA_BLOB
            - JSON_SCHEMA_VERSION
            - JSON_SCHEMA_LATEST_VERSION
            - JSON_SCHEMA_DEPENDENCY
            - JSON_SCHEMA_OBJECT_BINDING
            - DOWNLOAD_LIST
            - DOWNLOAD_LIST_ITEM
            - DOWNLOAD_ORDER
            - DOWNLOAD_LIST_2
            - DOWNLOAD_LIST_ITEM_2
            - DATA_TYPE
            - OAUTH_SECTOR_IDENTIFIER
            - OAUTH_CLIENT
            - OAUTH_REFRESH_TOKEN
            - OAUTH_ACCESS_TOKEN
            - PERSONAL_ACCESS_TOKEN
            - AUTHORIZATION_GRANT
            - SES_NOTIFICATIONS
            - QUARANTINED_EMAILS
            - FEATURE_STATUS
            - MATERIALIZED_VIEW_ID
            - MATERIALIZED_VIEW_SOURCE_TABLE
            - PRINCIPAL_OIDC_BINDING
            - OTP_SECRET
            - OTP_RECOVERY_CODE
            - TWO_FA_STATUS
            - WEBHOOK
            - WEBHOOK_VERIFICATION
            - WEBHOOK_ALLOWED_DOMAIN
            - AGENT_REGISTRATION
            - AGENT_SESSION
            - TOS_REQUIREMENTS
            - TOS_AGREEMENT
            - PROJECT_STORAGE_DATA
            - PROJECT_STORAGE_LIMIT
            - GRID_SESSION
            - GRID_REPLICA
            - GRID_CONNECTION
            - GRID_PATCH
            - CURATION_TASK
            - USER_STATUS
            - RECORDSET_VALIDATION_STATS
            - CHANGE
        aliasType:
          type: string
          description: The value to use as the alias in the XML migration backup file
          enum:
            - TABLE_NAME
            - MIGRATION_TYPE_NAME
        backupFileKey:
          type: string
          description: S3 key of the backup file to restore.
        batchSize:
          type: integer
          description: The batch size determines the maximum number of rows that will be loaded into memory at one time.
          format: int32
        minimumRowId:
          type: integer
          description: The minimum row ID (inclusive) for the rows contained in this backup.  All rows between the min and max will be deleted before restoring the rows in this request.
          format: int32
        maximumRowId:
          type: integer
          description: The maximum row ID (inclusive) for the rows contained in this backup.  All rows between the min and max will be deleted before restoring the rows in this request.
          format: int32
      description: Request to restore a migration backup file for a given MigrationType.
      required:
        - concreteType
    org.sagebionetworks.repo.model.download.AddBatchOfFilesToDownloadListResponse:
      type: object
      properties:
        numberOfFilesAdded:
          type: integer
          description: The number of files that were added.
          format: int32
      description: Response to add a single batch of files to a user's download list.
    org.sagebionetworks.repo.model.quiz.TextFieldResponse:
      type: object
      properties:
        questionIndex:
          type: integer
          description: an index unique in the Quiz, used to refer to the question being answered
          format: int32
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.quiz.TextFieldResponse
        response:
          type: string
          description: The response to the text-field question
      description: The text response to a TextFieldQuestion
      required:
        - concreteType
    org.sagebionetworks.repo.model.search.query.SearchFacetOption:
      type: object
      properties:
        name:
          type: string
          description: Names of search fields that can be faceted/returned
          enum:
            - Id
            - Name
            - Description
            - EntityType
            - ModifiedBy
            - ModifiedOn
            - CreatedBy
            - CreatedOn
            - Consortium
            - Diagnosis
            - Organ
            - Tissue
        maxResultCount:
          type: integer
          description: Specify the maximum number of results to be returned for this facet. Defaults to 10
          format: int32
        sortType:
          type: string
          description: Specify how results should be sorted. Defaults to COUNT
          enum:
            - ALPHA
            - COUNT
      description: Specify which field should be returned as facets and the format of the results for each field
    org.sagebionetworks.repo.model.agent.TraceEvent:
      type: object
      properties:
        timestamp:
          type: integer
          description: The timestamp identifies when the agent generated this trace event. A timestamp is number of millisecnods elapsed since January 1 1970 (UTC).
          format: int32
        message:
          type: string
          description: The trace text message generated by the agent while processing a chat request.
      description: Represents a single trace event generated during an agent chat asynchronous job request.
    org.sagebionetworks.repo.model.statistics.FilesCountStatistics:
      type: object
      properties:
        rangeStart:
          type: string
          description: The start timestamp of the time frame this bucket represents (inclusive)
        rangeEnd:
          type: string
          description: The end timestamp of the time frame this bucket represents (exclusive)
        filesCount:
          type: integer
          description: The number of files uploaded or downloaded in this time frame
          format: int32
        usersCount:
          type: integer
          description: The number of distinct users that performed a download or upload in this time frame
          format: int32
      description: Describes an aggregate of file actions (e.g. downloads/uploads) and (unique) users count for a specific time frame
    org.sagebionetworks.repo.model.portals.ListPortalsRequest:
      type: object
      properties:
        nextPageToken:
          type: string
          description: Forward this token to get the next page of results.
      description: JSON schema for a request to list a page of Portals, the list will be ordered by name.
    org.sagebionetworks.repo.model.oauth.OAuthAuthorizationResponse:
      type: object
      properties:
        access_code:
          type: string
          description: The authorization code returned to an OAuth client as part of the OAuth 2.0 'code flow'
      description: OAuth 2.0 Authorization Response
    org.sagebionetworks.repo.model.oauth.OAuthTokenRevocationRequest:
      type: object
      properties:
        token:
          type: string
          description: The token to revoke
        token_type_hint:
          type: string
          description: The type of the token to revoke.
          enum:
            - access_token
            - refresh_token
      description: Request body used by OAuth 2.0 clients to revoke an OAuth 2.0 token. Defined by <a href="https://tools.ietf.org/html/rfc7009#section-2.1">RFC 7009 Section 2.1</a>
    org.sagebionetworks.evaluation.model.CancelControl:
      type: object
      properties:
        submissionId:
          type: string
          description: The unique, immutable Synapse ID of the Submission.
        userId:
          type: string
          description: The ID of the user who submitted this Submission.
        canCancel:
          type: boolean
          description: Can this submission be cancelled? By default, this will be set to False. Users can read this value. Only the queue's scoring application can change this value.
        cancelRequested:
          type: boolean
          description: Has user requested to cancel this submission? By default, this will be set to False. Submission owner can read and request to change this value.
      description: This object contains information that is used to control if a submission could be cancelled.
    org.sagebionetworks.repo.model.migration.RangeChecksum:
      type: object
      properties:
        binNumber:
          type: integer
          description: The bin number for this batch.
          format: int32
        count:
          type: integer
          description: The total number of rows included in this range checksum.
          format: int32
        checksum:
          type: string
          description: The checksum result for this range.
        minimumId:
          type: integer
          description: The ID of the minimum row in this checksum range.
          format: int32
        maximumId:
          type: integer
          description: The ID of the maximum row in this checksum range.
          format: int32
      description: The calculated checksum for a single batch of rows.
    org.sagebionetworks.repo.model.registry.MigrationSpec:
      type: object
      properties:
        migrationMetadata:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.registry.EntityTypeMigrationSpec'
            description: Metadata to describe the migration of an entity type
      description: Metadata to describe the migration of nodes
    org.sagebionetworks.repo.model.CurationStatusNames:
      type: string
      enum:
        - loaded
        - processed
        - published
    org.sagebionetworks.repo.model.webhook.CreateOrUpdateWebhookRequest:
      type: object
      properties:
        objectId:
          type: string
          description: The id of the Synapse object to receive events of.
        objectType:
          type: string
          description: The supported synapse object types for a Webhook
          enum:
            - ENTITY
        eventTypes:
          type: array
          items:
            type: string
            description: The type of the WebhookEvent.
            enum:
              - CREATE
              - UPDATE
              - DELETE
          description: The list of event types to subscribe to.
          uniqueItems: true
        invokeEndpoint:
          type: string
          description: The webhook endpoint where the events will be sent to. Must be 255 Characters or less.
        isEnabled:
          type: boolean
          description: True if the webhook should be enabled. If false no events will be sent to the endpoint.
      description: Request used to create or update a webhook
    org.sagebionetworks.repo.model.table.HasViewTypeMask:
      type: object
      properties:
        viewTypeMask:
          type: integer
          description: 'Bit mask representing the types to include in the view. The following are the possible types (type=<mask_hex>): File=0x01, Project=0x02, Table=0x04, Folder=0x08, View=0x10, Docker=0x20, SubmissionView=0x40, Dataset=0x80, DatasetCollection=0x100, MaterializedView=0x200.'
          format: int32
      description: Common definition of the ViewTypeMask
      oneOf:
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.ViewScope'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.EntityView'
      discriminator:
        propertyName: concreteType
    org.sagebionetworks.repo.model.message.LocalStackChangeMesssage:
      type: object
      properties:
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.message.LocalStackChangeMesssage
        objectId:
          type: string
          description: The unique identifier of the object that changed.
        objectVersion:
          type: integer
          description: Identifier for a specific version of an object.
          format: int32
        objectType:
          type: string
          description: JSON enum for the types of objects in Synapse.
          enum:
            - ENTITY
            - ENTITY_CONTAINER
            - PRINCIPAL
            - ACTIVITY
            - EVALUATION
            - EVALUATION_ROUND
            - SUBMISSION
            - EVALUATION_SUBMISSIONS
            - FILE
            - MESSAGE
            - WIKI
            - FAVORITE
            - ACCESS_REQUIREMENT
            - ACCESS_APPROVAL
            - TEAM
            - TABLE
            - ACCESS_CONTROL_LIST
            - PROJECT_SETTING
            - VERIFICATION_SUBMISSION
            - CERTIFIED_USER_PASSING_RECORD
            - FORUM
            - THREAD
            - REPLY
            - FORM_GROUP
            - ORGANIZATION
            - FORM_DATA
            - ENTITY_VIEW
            - USER_PROFILE
            - DATA_ACCESS_REQUEST
            - DATA_ACCESS_SUBMISSION
            - DATA_ACCESS_SUBMISSION_STATUS
            - MEMBERSHIP_INVITATION
            - JSON_SCHEMA
            - JSON_SCHEMA_DEPENDANT
            - DATASET
            - DATASET_COLLECTION
            - THREAD_VIEW
            - MATERIALIZED_VIEW
            - VIRTUAL_TABLE
            - TABLE_STATUS_EVENT
            - DATA_ACCESS_SUBMISSION_EVENT
            - FILE_EVENT
            - QUERY_CACHE_HIT
            - PROJECT_STORAGE_EVENT
            - REPLICATED_EVENT
            - PORTAL
            - OAUTH_CLIENT
        timestamp:
          type: string
          description: The timestamp when this change was originally committed.
        changeNumber:
          type: integer
          description: The application change number created as a result of this change.
          format: int32
        changeType:
          type: string
          description: The type of change that occurred
          enum:
            - CREATE
            - UPDATE
            - DELETE
        userId:
          type: integer
          description: The ID of the user who created this change message
          format: int32
      description: Local stack object that can be used in place of a change message (e.g. this won't migrate through stacks)
      required:
        - concreteType
    org.sagebionetworks.repo.model.table.FacetType:
      type: string
      enum:
        - enumeration
        - range
    org.sagebionetworks.repo.model.grid.GridRecordSetExportResponse:
      type: object
      properties:
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.grid.GridRecordSetExportResponse
        sessionId:
          type: string
          description: The session ID of the exported grid.
        recordSetId:
          type: string
          description: The id of the record set entity where the grid data was exported to.
        recordSetVersionNumber:
          type: integer
          description: The version number of the record set entity where the grid data was exported to.
          format: int32
        validationSummaryStatistics:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.schema.ValidationSummaryStatistics'
          description: Summary statistics for the JSON schema validation results for the children of an Entity container (Project or Folder)
      description: The response for a grid record set export request.
      required:
        - concreteType
    org.sagebionetworks.repo.model.table.ViewColumnModelResponse:
      type: object
      properties:
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.table.ViewColumnModelResponse
        results:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.ColumnModel'
            description: A column model contains the metadata of a single column of a table or view.
          description: A page of <a href="${org.sagebionetworks.repo.model.table.ColumnModel}">ColumnModels</a>
        nextPageToken:
          type: string
          description: If there are more pages of results this token can be used to get the next page.  Null if this is the last page.
      description: Response for the <a href="${org.sagebionetworks.repo.model.table.ViewColumnModelRequest}">ViewColumnModelRequest</a> containing a page of suggested column models
      required:
        - concreteType
    org.sagebionetworks.repo.model.download.QueryResponseDetails:
      type: object
      properties:
        concreteType:
          type: string
          description: Will indicate the full package name of the response type.
      description: Base interface that all download lists query response types implement.
      oneOf:
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.download.ActionRequiredResponse'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.download.FilesStatisticsResponse'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.download.AvailableFilesResponse'
      required:
        - concreteType
      discriminator:
        propertyName: concreteType
    org.sagebionetworks.repo.model.agent.AgentAccessLevel:
      type: string
      enum:
        - PUBLICLY_ACCESSIBLE
        - READ_YOUR_PRIVATE_DATA
        - WRITE_YOUR_PRIVATE_DATA
    org.sagebionetworks.repo.model.oauth.OIDCTokenResponse:
      type: object
      properties:
        access_token:
          type: string
          description: The OAuth 2.0 access token
        refresh_token:
          type: string
          description: The Oauth 2.0 refresh token
        id_token:
          type: string
          description: The Open ID Connect ID token
        token_type:
          type: string
          description: The type of token returned
        expires_in:
          type: integer
          description: The lifetime in seconds of the access token. See RFC6749.
          format: int32
      description: Oauth 2.0 Token Response
    org.sagebionetworks.repo.model.schema.ListJsonSchemaVersionInfoResponse:
      type: object
      properties:
        page:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.schema.JsonSchemaVersionInfo'
            description: Information about a single version of a JSON schema.
        nextPageToken:
          type: string
          description: Forward this token to get the next page of results.
      description: A single page of schema version metadata for the provided organization and schema name
    org.sagebionetworks.repo.model.entitybundle.v2.EntityBundleRequest:
      type: object
      properties:
        includeEntity:
          type: boolean
          description: Include the Entity in the response.
        includeAnnotations:
          type: boolean
          description: Include Annotations associated with the Entity in the response.
        includePermissions:
          type: boolean
          description: Include permissions of the current user on the entity.
        includeEntityPath:
          type: boolean
          description: Include EntityHeaders for all Entities in this Entity's path
        includeHasChildren:
          type: boolean
          description: Include boolean indicating whether this Entity has children
        includeAccessControlList:
          type: boolean
          description: Include the AccessControlList for this Entity
        includeFileHandles:
          type: boolean
          description: Include all FileHandles associated with this Entity.
        includeTableBundle:
          type: boolean
          description: If the Entity is a TableEntity, include Table specific metadata.
        includeRootWikiId:
          type: boolean
          description: Include the id of the root Wiki associated with this Entity
        includeBenefactorACL:
          type: boolean
          description: Include the ACL of the Entity from which this Entity inherits its AccessControlList
        includeDOIAssociation:
          type: boolean
          description: Include DOIs associated with this Entity
        includeFileName:
          type: boolean
          description: If this Entity is a FileEntity, include its filename
        includeThreadCount:
          type: boolean
          description: Include the number of discussion threads that mention this Entity
        includeRestrictionInformation:
          type: boolean
          description: Include the RestrictionLevel of this Entity
        includeActivity:
          type: boolean
          description: Include the Activity of this Entity
      description: Specifies what fields to include in an EntityBundle
    org.sagebionetworks.repo.model.auth.UserEntityPermissions:
      type: object
      properties:
        canView:
          type: boolean
          description: Can the user view this entity?
        canEdit:
          type: boolean
          description: Can the user edit this entity?
        canMove:
          type: boolean
          description: Can the user move this entity by changing its parentId?
        canAddChild:
          type: boolean
          description: Can the user add a child entity to this entity?
        canCertifiedUserEdit:
          type: boolean
          description: Can the user edit this entity once they become a Certified User?
        canCertifiedUserAddChild:
          type: boolean
          description: Can the user add a child entity to this entity once they become a Certified User?
        isCertifiedUser:
          type: boolean
          description: True, if the user has passed the user certification quiz.
        canChangePermissions:
          type: boolean
          description: Can the user change the permissions of this entity?
        canChangeSettings:
          type: boolean
          description: Can the user change the settings of this entity?
        canDelete:
          type: boolean
          description: Can the user delete this entity?
        canDownload:
          type: boolean
          description: Are there any access requirements precluding the user from downloading this entity?
        canUpload:
          type: boolean
          description: Did the user sign the current terms of service?
        canEnableInheritance:
          type: boolean
          description: Can the user delete the entity's access control list (so it inherits settings from an ancestor)?
        ownerPrincipalId:
          type: integer
          description: The principal ID of the entity's owner (i.e. the entity's 'createdBy')
          format: int32
        canPublicRead:
          type: boolean
          description: Is this entity considered public?
        canModerate:
          type: boolean
          description: Can the user moderate the forum associated with this entity? Note that only project entity has forum.
        isCertificationRequired:
          type: boolean
          description: Is the certification requirement enabled for the project of the entity?
        isEntityOpenData:
          type: boolean
          description: 'Returns true if the Entity''s DateType equals ''OPEN_DATA'', indicating that the data is safe to be released to the public. '
        isDataContributor:
          type: boolean
          description: True if the user is considered a data contributor, e.g. has update and delete permissions on the data.
      description: The permission a User has for a given Entity
    org.sagebionetworks.repo.model.verification.VerificationState:
      type: object
      properties:
        createdOn:
          type: string
          description: The date and time this object was created
        createdBy:
          type: string
          description: The principal ID of the user who created this object
        state:
          type: string
          description: The enumeration of possible verification states.
          enum:
            - SUBMITTED
            - APPROVED
            - REJECTED
            - SUSPENDED
        reason:
          type: string
          description: The reason for putting the verification submission in this state.
        notes:
          type: string
          description: Additional notes that can be set by the ACT team and that is not exposed to the end user.
      description: The state of a verification submission
    org.sagebionetworks.repo.model.grid.query.OrderByDirection:
      type: string
      enum:
        - ASC
        - DESC
    org.sagebionetworks.repo.model.agent.ListAgentSessionsRequest:
      type: object
      properties:
        nextPageToken:
          type: string
          description: Forward the returned 'nextPageToken' to get the next page of results.
      description: Request a single page agent sessions for the current user.  The session are ordered by 'startedOn' descending.
    org.sagebionetworks.repo.model.principal.TypeFilter:
      type: string
      enum:
        - USERS_ONLY
        - TEAMS_ONLY
        - ALL
    org.sagebionetworks.repo.model.auth.TwoFactorAuthStatus:
      type: object
      properties:
        status:
          type: string
          enum:
            - ENABLED
            - DISABLED
      description: Status of 2FA for the user
    org.sagebionetworks.repo.model.schema.ValidationException:
      type: object
      properties:
        keyword:
          type: string
          description: The JSON schema keyword which was violated.
        pointerToViolation:
          type: string
          description: A JSON Pointer denoting the path from the input document root to its fragment which caused the validation failure.
        message:
          type: string
          description: The description of the validation failure.
        schemaLocation:
          type: string
          description: A JSON Pointer denoting the path from the schema JSON root to the violated keyword.
        causingExceptions:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.schema.ValidationException'
          description: An array of sub-exceptions.
      description: A recursive ValidationException that describes all schema violations for an entire schema tree.
    org.sagebionetworks.repo.model.auth.TwoFactorAuthRecoveryCodes:
      type: object
      properties:
        codes:
          type: array
          items:
            type: string
      description: A list of recovery codes that can be used as a backup in place of TOTPs when performing two factor authentication
    org.sagebionetworks.repo.model.quiz.PassingRecord:
      type: object
      properties:
        userId:
          type: string
          description: The principal id of the user
        quizId:
          type: integer
          description: The id of the quiz
          format: int32
        responseId:
          type: integer
          description: The id of the user's response
          format: int32
        score:
          type: integer
          description: The score the user received on the test
          format: int32
        passed:
          type: boolean
          description: Whether the user passed the given test
        passedOn:
          type: string
          description: 'DEPRECATED: Same as createdOn. Date/time when the user submitted the response for this passing record. Note that this DOES NOT indicate when the user passed the certification quiz.'
        createdOn:
          type: string
          description: Date/time when this record was generated on a response submission (this will match the createdOn of a QuizResponse).
        revokedOn:
          type: string
          description: Date/time when the passing record was revoked (omitted if the record was not revoked)
        revoked:
          type: boolean
          description: True if the record is revoked, false otherwise
        certified:
          type: boolean
          description: True if the record is not revoked and passed is true, false otherwise
        corrections:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.quiz.ResponseCorrectness'
            description: A user response and whether it is correct.
          description: For each response, whether it was correct
      description: A record of whether a given user passed a given test
    org.sagebionetworks.repo.model.provenance.WasExecuted:
      type: boolean
      description: The enclosed entity was used and also executed in the Activity
    org.sagebionetworks.repo.model.auth.LoginCredentials:
      type: object
      properties:
        email:
          type: string
          description: The user's email
        password:
          type: string
          description: The user's password
      description: Used to login via username and password
    org.sagebionetworks.repo.model.table.ColumnSingleValueQueryFilter:
      type: object
      properties:
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.table.ColumnSingleValueQueryFilter
        isDefiningCondition:
          type: boolean
          description: When null (default) or false, this condition will be applied to WHERE clause of table/view query.  When set to true, for a query against a VirtualTable, this condition will be applied to the WHERE clause of the VirtualTable's definingSQL.
        values:
          type: array
          items:
            type: string
          description: Values to be used with the filter.
        columnName:
          type: string
          description: name of the column to filter
        operator:
          type: string
          description: Determines the filter operation to perform
          enum:
            - LIKE
            - EQUAL
            - IN
      description: A filter using a single value against a column. Values within the values list have an OR relationship
      required:
        - concreteType
    org.sagebionetworks.repo.model.UserSessionData:
      type: object
      properties:
        session:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.auth.Session'
          description: Holds a session token used for short-term authentication with Synapse
        isSSO:
          type: boolean
          description: Is this a SSO session?
        profile:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.UserProfile'
          description: JSON schema for UserProfile POJO
      description: JSON schema for UserSessionData POJO
    org.sagebionetworks.repo.model.auth.TotpSecretActivationRequest:
      type: object
      properties:
        secretId:
          type: string
          description: The id of the secret
        totp:
          type: string
          description: The code generated by the authenticator application
      description: Activate the TOTP secret for the user to be used in two factor authentication
    org.sagebionetworks.repo.model.sts.StsCredentials:
      type: object
      properties:
        bucket:
          type: string
          description: The bucket that these credentials have access to.
        baseKey:
          type: string
          description: The S3 key prefix that these credentials have access to.
        accessKeyId:
          type: string
          description: AWS access key ID.
        secretAccessKey:
          type: string
          description: AWS secret access key.
        sessionToken:
          type: string
          description: AWS temporary session token.
        expiration:
          type: string
          description: The date-time that these credentials expire.
      description: Temporary AWS credentials vended by STS (Security Token Service).
    org.sagebionetworks.repo.model.ACCESS_TYPE:
      type: string
      enum:
        - CREATE
        - READ
        - UPDATE
        - DELETE
        - CHANGE_PERMISSIONS
        - DOWNLOAD
        - UPLOAD
        - PARTICIPATE
        - SUBMIT
        - READ_PRIVATE_SUBMISSION
        - UPDATE_SUBMISSION
        - DELETE_SUBMISSION
        - TEAM_MEMBERSHIP_UPDATE
        - SEND_MESSAGE
        - CHANGE_SETTINGS
        - MODERATE
        - REVIEW_SUBMISSIONS
        - EXEMPTION_ELIGIBLE
    org.sagebionetworks.repo.model.quiz.ResponseCorrectness:
      type: object
      properties:
        question:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.quiz.Question'
          description: a single question in a Quiz
        response:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.quiz.QuestionResponse'
          description: The response to a question
        isCorrect:
          type: boolean
          description: Is the response correct?
      description: A user response and whether it is correct.
    org.sagebionetworks.repo.model.grid.GridSession:
      type: object
      properties:
        sessionId:
          type: string
          description: The unique sessionId that identifies the grid session.
        startedBy:
          type: string
          description: The user that started this session.
        startedOn:
          type: string
          description: The date-time when the session was started.
        etag:
          type: string
          description: Changes when the session chagnes.
        modifiedOn:
          type: string
          description: The date-time when the session was last changed.
        lastReplicaIdClient:
          type: integer
          description: The last replica ID issued to a client. Client replica IDs are incremented.
          format: int32
        lastReplicaIdService:
          type: integer
          description: The last replica ID issued to a service. Service replica IDs are decremented.
          format: int32
        gridJsonSchema$Id:
          type: string
          description: The $id of the JSON schema that will be used for model validation in this grid session.
        sourceEntityId:
          type: string
          description: The synId of the table/view/csv that this grid was cloned from.
      description: Basic information about a grid session.
    org.sagebionetworks.repo.model.file.FileEvent:
      type: object
      properties:
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.file.FileEvent
        objectId:
          type: string
          description: The unique identifier of the object that changed.
        objectVersion:
          type: integer
          description: Identifier for a specific version of an object.
          format: int32
        objectType:
          type: string
          description: JSON enum for the types of objects in Synapse.
          enum:
            - ENTITY
            - ENTITY_CONTAINER
            - PRINCIPAL
            - ACTIVITY
            - EVALUATION
            - EVALUATION_ROUND
            - SUBMISSION
            - EVALUATION_SUBMISSIONS
            - FILE
            - MESSAGE
            - WIKI
            - FAVORITE
            - ACCESS_REQUIREMENT
            - ACCESS_APPROVAL
            - TEAM
            - TABLE
            - ACCESS_CONTROL_LIST
            - PROJECT_SETTING
            - VERIFICATION_SUBMISSION
            - CERTIFIED_USER_PASSING_RECORD
            - FORUM
            - THREAD
            - REPLY
            - FORM_GROUP
            - ORGANIZATION
            - FORM_DATA
            - ENTITY_VIEW
            - USER_PROFILE
            - DATA_ACCESS_REQUEST
            - DATA_ACCESS_SUBMISSION
            - DATA_ACCESS_SUBMISSION_STATUS
            - MEMBERSHIP_INVITATION
            - JSON_SCHEMA
            - JSON_SCHEMA_DEPENDANT
            - DATASET
            - DATASET_COLLECTION
            - THREAD_VIEW
            - MATERIALIZED_VIEW
            - VIRTUAL_TABLE
            - TABLE_STATUS_EVENT
            - DATA_ACCESS_SUBMISSION_EVENT
            - FILE_EVENT
            - QUERY_CACHE_HIT
            - PROJECT_STORAGE_EVENT
            - REPLICATED_EVENT
            - PORTAL
            - OAUTH_CLIENT
        timestamp:
          type: string
          description: The timestamp when this change was originally committed.
        fileEventType:
          type: string
          description: The file event can be one of the following enumerations
          enum:
            - FILE_DOWNLOAD
            - FILE_UPLOAD
        userId:
          type: integer
          description: The Id of user who initiated the file event.
          format: int32
        fileHandleId:
          type: string
          description: The filehandle Id of file.
        downloadedFileHandleId:
          type: string
          description: The zipped filehandle Id, If the file download is requested in zip file otherwise not applicable.
        associateType:
          type: string
          description: Enumeration of all possible objects types that can be associated with a file.
          enum:
            - FileEntity
            - TableEntity
            - WikiAttachment
            - WikiMarkdown
            - UserProfileAttachment
            - MessageAttachment
            - TeamAttachment
            - SubmissionAttachment
            - VerificationSubmission
            - AccessRequirementAttachment
            - DataAccessRequestAttachment
            - DataAccessSubmissionAttachment
            - FormData
        associateId:
          type: string
          description: The association Id of filehandle.
        stack:
          type: string
          description: The stack number.
        instance:
          type: string
          description: The instance number.
        sessionId:
          type: string
          description: The session ID from the access record associated with this event.  When present, can be used to join access records with download records.
      description: File event for file upload and download events
      required:
        - concreteType
    org.sagebionetworks.repo.model.table.TableSchemaChangeResponse:
      type: object
      properties:
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.table.TableSchemaChangeResponse
        schema:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.ColumnModel'
            description: A column model contains the metadata of a single column of a table or view.
          description: The resulting schema after the change.
      description: An response to a table schema change request.
      required:
        - concreteType
    org.sagebionetworks.repo.model.drs.AccessMethod:
      type: object
      properties:
        type:
          type: string
          description: Type of the access method e.g https,ftp,gs etc.Currently only https is supported.
          enum:
            - https
        access_id:
          type: string
          description: The string to be passed to the /access method to get an AccessURL. This string must be unique within the scope of a single object. Note that at least one of access_url and access_id must be provided. When using a Synapse ID to fetch a DrsObject, access_id is generated by FileHandleAssociationType, syn_id and filehandle_id and concatenating them by '-'. e.g  FileEntity_syn123.1_56789345. When using a file handle id to fetch a DrsObject, access_id is the file handle id. e.g 56789345
      description: The list of access methods that can be used to fetch the DrsObject. Required for single blobs and bundles have no access method.
    org.sagebionetworks.repo.model.download.AddToDownloadListResponse:
      type: object
      properties:
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.download.AddToDownloadListResponse
        numberOfFilesAdded:
          type: integer
          description: The number of files that were added to the user's download list.
          format: int32
      description: The results of a job to add the files from a query result or folder to the user's download list.
      required:
        - concreteType
    org.sagebionetworks.repo.model.drs.AccessUrl:
      type: object
      properties:
        url:
          type: string
          description: A fully resolvable URL that can be used to fetch the actual object bytes
      description: A fully resolvable presigned URL that can be used to download the object bytes without any authentication.As presigned url has tokens included, which expires with time
    org.sagebionetworks.repo.model.schema.ListOrganizationsRequest:
      type: object
      properties:
        nextPageToken:
          type: string
          description: Forward the returned 'nextPageToken' to get the next page of results.
      description: Request to list a single page of the currently registered Organizations
    org.sagebionetworks.repo.model.asynch.CacheableRequestBody:
      type: object
      properties:
        concreteType:
          type: string
      description: Jobs that are cacheable will implement this type of AsynchronousRequestBody
      oneOf:
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.QueryBundleRequest'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.DownloadPFBRequest'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.DownloadFromTableRequest'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.QueryNextPageToken'
      required:
        - concreteType
      discriminator:
        propertyName: concreteType
    org.sagebionetworks.repo.model.search.query.SearchQuery:
      type: object
      properties:
        queryTerm:
          type: array
          items:
            type: string
          description: The free text search terms. This will search the name of the Entity and its Wiki contents
        booleanQuery:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.search.query.KeyValue'
            description: JSON schema for a faceted key-value pair.
          description: One or more key-value pairs that define a boolean search. Multiple expressions are joined with a top-level AND. Key is the facet field name, value is the facet value.
        rangeQuery:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.search.query.KeyRange'
            description: JSON schema for a faceted key-value-range. This filter will match for values where min<=value<=max. At least one of either 'min' or 'max' must be set for this range to be valid
          description: One or more key-value-range filters that filter values of a key based on the specified range where min<=value<=max. Multiple expressions are joined with a top-level AND.
        facetOptions:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.search.query.SearchFacetOption'
            description: Specify which field should be returned as facets and the format of the results for each field
          description: Specify which fields should be returned as facets and the format of the results for each field
        returnFields:
          type: array
          items:
            type: string
          description: Specifies the document fields to include in the response. By default, only the document ids of the hits are returned.
        start:
          type: integer
          description: The zero-based number of the first hit returned in this page of search results.
          format: int32
        size:
          type: integer
          description: The maximum rumber of search hits to return. The default is 10
          format: int32
      description: JSON schema for a search query.
    org.sagebionetworks.repo.model.table.TableFileHandleResults:
      type: object
      properties:
        tableId:
          type: string
          description: The ID of the TableEntity than owns these rows
        headers:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.SelectColumn'
            description: A column model contains the metadata of a single column of a TableEntity
          description: The list of ColumnModels ID that describes the rows of this set.
        rows:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.file.FileHandleResults'
            description: JSON schema for FileHandleResults.
          description: For each row a list of file handles for each requested column
      description: JSON schema for TableFileHandleResults.
    org.sagebionetworks.repo.model.quiz.TextFieldQuestion:
      type: object
      properties:
        questionIndex:
          type: integer
          description: an index unique in the Quiz, used to refer to this question
          format: int32
        prompt:
          type: string
          description: An optional, user-readable prompt
        reference:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.dao.WikiPageKey'
          description: Reference to a WikiPage
        docLink:
          type: string
          description: Link to the document that contains information for background reading related to the question.
        helpText:
          type: string
          description: A short text that provides a snippet of help to answer the question.
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.quiz.TextFieldQuestion
        answer:
          type: string
          description: The correct answer for this question
      description: A question whose response is an (unconstrained) text string
      required:
        - concreteType
    org.sagebionetworks.repo.model.oauth.OIDCSigningAlgorithm:
      type: string
      enum:
        - RS256
    org.sagebionetworks.repo.model.auth.TwoFactorAuthToken:
      type: object
      properties:
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.auth.TwoFactorAuthToken
        hmac:
          type: string
          description: The hash message authentication code for the message.
        version:
          type: integer
          description: The version of the key used to generate the HMAC.
          format: int32
        expiresOn:
          type: string
          description: The date-time when this token expires.
        createdOn:
          type: string
          description: The date-time the token was generated.
        userId:
          type: integer
          description: The id of the user.
          format: int32
        context:
          type: string
          description: The context within which a twoFaToken for two factor authentication is generated.
          enum:
            - AUTHENTICATION
            - PASSWORD_CHANGE
      description: A token returned to the client when two factor authentication is required.
      required:
        - concreteType
    org.sagebionetworks.repo.model.form.StateEnum:
      type: string
      enum:
        - WAITING_FOR_SUBMISSION
        - SUBMITTED_WAITING_FOR_REVIEW
        - ACCEPTED
        - REJECTED
    org.sagebionetworks.repo.model.migration.BatchChecksumRequest:
      type: object
      properties:
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.migration.BatchChecksumRequest
        migrationType:
          type: string
          description: 'JSON enum for the types of objects which can be migrated. NOTE: The order of this enumeration determines the migration order.'
          enum:
            - PRINCIPAL
            - GROUP_MEMBERS
            - CREDENTIAL
            - AUTHENTICATED_ON
            - PRINCIPAL_ALIAS
            - NOTIFICATION_EMAIL
            - USER_PROFILE
            - STORAGE_LOCATION
            - FILE_HANDLE
            - MULTIPART_UPLOAD
            - MULTIPART_UPLOAD_PART_STATE
            - MULTIPART_UPLOAD_COMPOSER_PART_STATE
            - MESSAGE_CONTENT
            - MESSAGE_TO_USER
            - MESSAGE_RECIPIENT
            - MESSAGE_STATUS
            - COMMENT
            - V2_WIKI_PAGE
            - V2_WIKI_ATTACHMENT_RESERVATION
            - V2_WIKI_MARKDOWN
            - V2_WIKI_OWNERS
            - ACTIVITY
            - NODE
            - NODE_REVISION
            - NODE_ACCESS_REQUIRMENT
            - DOCKER_REPOSITORY_NAME
            - DOCKER_COMMIT
            - TEAM
            - MEMBERSHIP_INVITATION_SUBMISSION
            - MEMBERSHIP_REQUEST_SUBMISSION
            - EVALUATION
            - EVALUATION_ROUND
            - EVALUATION_SUBMISSIONS
            - SUBMISSION
            - SUBMISSION_CONTRIBUTOR
            - SUBMISSION_FILE
            - SUBMISSION_STATUS
            - PROJECT_SETTINGS
            - PROJECT_STATS
            - ACCESS_REQUIREMENT
            - ACCESS_REQUIREMENT_REVISION
            - ACCESS_APPROVAL
            - ACL
            - ACL_ACCESS
            - ACL_ACCESS_TYPE
            - FAVORITE
            - TRASH_CAN
            - PORTAL
            - DOI
            - CHALLENGE
            - CHALLENGE_TEAM
            - COLUMN_MODEL
            - BOUND_COLUMN_OWNER
            - BOUND_COLUMN_ORDINAL
            - TABLE_TRANSACTION
            - TABLE_TRANSACTION_TO_VERSION
            - TABLE_SEQUENCE
            - TABLE_CHANGE
            - QUIZ_RESPONSE
            - VERIFICATION_SUBMISSION
            - VERIFICATION_STATE
            - VERIFICATION_FILE
            - FORUM
            - DISCUSSION_THREAD
            - DISCUSSION_THREAD_VIEW
            - DISCUSSION_THREAD_ENTITY_REFERENCE
            - DISCUSSION_REPLY
            - SUBSCRIPTION
            - BROADCAST_MESSAGE
            - VIEW_TYPE
            - VIEW_SCOPE
            - VIEW_SNAPSHOT
            - THROTTLE_RULE
            - RESEARCH_PROJECT
            - DATA_ACCESS_REQUEST
            - DATA_ACCESS_SUBMISSION
            - DATA_ACCESS_SUBMISSION_SUBMITTER
            - DATA_ACCESS_SUBMISSION_STATUS
            - DATA_ACCESS_SUBMISSION_ACCESSOR_CHANGE
            - DATA_ACCESS_NOTIFICATIONS
            - FORM_GROUP
            - FORM_DATA
            - ORGANIZATION
            - JSON_SCHEMA
            - JSON_SCHEMA_BLOB
            - JSON_SCHEMA_VERSION
            - JSON_SCHEMA_LATEST_VERSION
            - JSON_SCHEMA_DEPENDENCY
            - JSON_SCHEMA_OBJECT_BINDING
            - DOWNLOAD_LIST
            - DOWNLOAD_LIST_ITEM
            - DOWNLOAD_ORDER
            - DOWNLOAD_LIST_2
            - DOWNLOAD_LIST_ITEM_2
            - DATA_TYPE
            - OAUTH_SECTOR_IDENTIFIER
            - OAUTH_CLIENT
            - OAUTH_REFRESH_TOKEN
            - OAUTH_ACCESS_TOKEN
            - PERSONAL_ACCESS_TOKEN
            - AUTHORIZATION_GRANT
            - SES_NOTIFICATIONS
            - QUARANTINED_EMAILS
            - FEATURE_STATUS
            - MATERIALIZED_VIEW_ID
            - MATERIALIZED_VIEW_SOURCE_TABLE
            - PRINCIPAL_OIDC_BINDING
            - OTP_SECRET
            - OTP_RECOVERY_CODE
            - TWO_FA_STATUS
            - WEBHOOK
            - WEBHOOK_VERIFICATION
            - WEBHOOK_ALLOWED_DOMAIN
            - AGENT_REGISTRATION
            - AGENT_SESSION
            - TOS_REQUIREMENTS
            - TOS_AGREEMENT
            - PROJECT_STORAGE_DATA
            - PROJECT_STORAGE_LIMIT
            - GRID_SESSION
            - GRID_REPLICA
            - GRID_CONNECTION
            - GRID_PATCH
            - CURATION_TASK
            - USER_STATUS
            - RECORDSET_VALIDATION_STATS
            - CHANGE
        salt:
          type: string
          description: Client generated salt to be added to each checksum
        minimumId:
          type: integer
          description: The minimum ID defining the full range of rows (inclusive).
          format: int32
        maximumId:
          type: integer
          description: The maximum ID defining the full range of rows (inclusive).
          format: int32
        batchSize:
          type: integer
          description: The size of each batch of IDs
          format: int32
      description: Get n number of checksums for the given ID range.  The given ID range will be batched into sub-ranges and the checksum for each batch will be calculated.
      required:
        - concreteType
    org.sagebionetworks.repo.model.table.ColumnModelPage:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.ColumnModel'
            description: A column model contains the metadata of a single column of a table or view.
          description: A single page of ColumnModels
        nextPageToken:
          type: string
          description: If there are more pages of results this token can be used to get the next page.  Null if this is the last page.
      description: A single page of ColumnModels
    org.sagebionetworks.repo.model.v2.wiki.V2WikiPage:
      type: object
      properties:
        id:
          type: string
          description: The ID of this wiki page.
        etag:
          type: string
          description: The etag of this object
        createdOn:
          type: string
          description: The timestamp when this page was created.
        createdBy:
          type: string
          description: The id of the user that created this page.
        modifiedOn:
          type: string
          description: The timestamp when this page was last modified.
        modifiedBy:
          type: string
          description: The id of the user that last modified this page.
        parentWikiId:
          type: string
          description: When set, the WikiPage is a sub-page of the indicated parent WikiPage.
        title:
          type: string
          description: The title of this page.
        markdownFileHandleId:
          type: string
          description: The file handle id for the file that contains the markdown.
        attachmentFileHandleIds:
          type: array
          items:
            type: string
          description: The list of attachment file handle ids of this page.
      description: The WikiPage model object represent a single user managed wiki page.
    org.sagebionetworks.repo.model.table.RowReferenceSet:
      type: object
      properties:
        tableId:
          type: string
          description: The ID of the TableEntity than owns these rows
        etag:
          type: string
          description: When a RowReferenceSet is returned from a table update, this will be set to the current etag of the table.
        headers:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.SelectColumn'
            description: A column model contains the metadata of a single column of a TableEntity
          description: The list of ColumnModels ID that describes the rows of this set.
        rows:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.RowReference'
            description: Reference for a single Row of a TableEntity
          description: Each RowReference of this list refers to a single version of a single row of a TableEntity.
      description: Represents a set of RowReferences of a TableEntity
    org.sagebionetworks.repo.model.oauth.OIDConnectConfiguration:
      type: object
      properties:
        issuer:
          type: string
          description: The issuer of OIDC tokens and claims.
        authorization_endpoint:
          type: string
          description: URL of the Synapse OAuth 2.0 Authorization Endpoint
        token_endpoint:
          type: string
          description: URL of the Synapse OAuth 2.0 Token Endpoint
        revocation_endpoint:
          type: string
          description: URL of the Synapse OAuth 2.0 Revocation Endpoint
        userinfo_endpoint:
          type: string
          description: URL of the Synapse UserInfo Endpoint
        jwks_uri:
          type: string
          description: URL of the Synapse JSON Web Key Set [JWK] document.
        registration_endpoint:
          type: string
          description: URL of the Synapse Dynamic Client Registration Endpoint
        scopes_supported:
          type: array
          items:
            type: string
            description: The OAuth 2.0 scopes supported by Synapse
            enum:
              - openid
              - email
              - profile
              - ga4gh_passport_v1
              - view
              - download
              - modify
              - authorize
              - offline_access
          description: List of the OAuth 2.0 scope values that Synapse supports.
        response_types_supported:
          type: array
          items:
            type: string
            description: The OAuth 2.0 response types supported by Synapse
            enum:
              - code
          description: List of the OAuth 2.0 response types that Synapse supports.
        grant_types_supported:
          type: array
          items:
            type: string
            description: The OAuth 2.0 grant types supported by Synapse
            enum:
              - authorization_code
              - refresh_token
          description: List of the OAuth 2.0 grant types that Synapse supports.
        subject_types_supported:
          type: array
          items:
            type: string
            description: The OIDC subject identifier types supported by Synapse
            enum:
              - pairwise
          description: List of the subject identified types that Synapse supports.
        id_token_signing_alg_values_supported:
          type: array
          items:
            type: string
            description: The JWT signing algorithms supported by Synapse
            enum:
              - RS256
          description: List of the JWS signing algorithms (alg values) supported by Synapse for the ID Token to encode the Claims in a JWT
        userinfo_signing_alg_values_supported:
          type: array
          items:
            type: string
            description: The JWT signing algorithms supported by Synapse
            enum:
              - RS256
          description: List of the JWS signing algorithms (alg values) supported by the UserInfo Endpoint to encode the Claims in a JWT
        request_object_signing_alg_values_supported:
          type: array
          items:
            type: string
          description: List of signing algorithms supported for signing request objects, or '["none"]' if passing by 'request' parameter is unsupported.  See <a href="https://openid.net/specs/openid-connect-core-1_0.html#RequestObject">OpenID Connect Core 1.0</a>
        claims_supported:
          type: array
          items:
            type: string
            description: The OIDC claims supported by Synapse some of which are standardized in <a href="https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims">OpenID Connect Core 1.0 Standard Claims</a>
            enum:
              - iss
              - sub
              - aud
              - iat
              - nbf
              - exp
              - auth_time
              - email
              - email_verified
              - given_name
              - family_name
              - company
              - team
              - userid
              - user_name
              - orcid
              - is_certified
              - is_validated
              - validated_given_name
              - validated_family_name
              - validated_location
              - validated_email
              - validated_company
              - validated_orcid
              - validated_at
              - refresh_token_id
              - token_type
              - ga4gh_passport_v1
          description: List of the Claim Names of the Claims that the Synapse MAY be able to supply values for.
        service_documentation:
          type: string
          description: URL of a page containing human-readable information that developers might want or need to know when using Synapse.
        claims_parameter_supported:
          type: boolean
          description: Boolean value specifying whether Synapse supports use of the claims parameter, with true indicating support.
        token_endpoint_auth_methods_supported:
          type: array
          items:
            type: string
          description: a list of Client Authentication methods supported by Synapse's Token Endpoint.  See <a href="https://openid.net/specs/openid-connect-core-1_0.html#ClientAuthentication">OpenID Connect Core 1.0 Client Authentication</a>
      description: OpenID Provider Configuration, described by <a href="https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderConfig">OpenID Connect Core 1.0</a>. Fields are defined by the <a href="https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata">OpenID Provider Metadata</a>.
    org.sagebionetworks.repo.model.project.StorageLocationSetting:
      type: object
      properties:
        concreteType:
          type: string
          description: Indicates which implementation this object represents.
        storageLocationId:
          type: integer
          description: The unique ID for this storage location
          format: int32
        uploadType:
          type: string
          description: The enumeration of possible upload types.
          enum:
            - S3
            - GOOGLECLOUDSTORAGE
            - SFTP
            - HTTPS
            - PROXYLOCAL
            - NONE
        banner:
          type: string
          description: The banner text to display to a user every time a file is uploaded. This field is optional.
        description:
          type: string
          description: A description of the storage location. This description is shown when a user has to choose which upload destination to use.
        etag:
          type: string
          description: Synapse employs an Optimistic Concurrency Control (OCC) scheme to handle concurrent updates. Since the E-Tag changes every time a Project Setting is updated it is used to detect when a client's current representation of a Project Setting is out-of-date.
        createdOn:
          type: string
          description: The date this storage location setting was created.
        createdBy:
          type: integer
          description: The ID of the user that created this storage location setting.
          format: int32
      description: A storage location setting describes a location where files are uploaded to and downloaded from via Synapse. Storage location settings may be created for external locations, such as user-owned Amazon S3 buckets
      oneOf:
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.project.ProxyStorageLocationSettings'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.project.ExternalObjectStorageLocationSetting'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.project.S3StorageLocationSetting'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.project.ExternalGoogleCloudStorageLocationSetting'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.project.ExternalStorageLocationSetting'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.project.ExternalS3StorageLocationSetting'
      required:
        - concreteType
      discriminator:
        propertyName: concreteType
    org.sagebionetworks.repo.model.oauth.OAuthClient:
      type: object
      properties:
        client_id:
          type: string
          description: The unique ID for the OAuth client, created by Synapse
        client_name:
          type: string
          description: Name of the Client to be presented to the End-User.
        redirect_uris:
          type: array
          items:
            type: string
          description: Array of Redirection URI values used by the Client. One of these registered Redirection URI values MUST exactly match the redirect_uri parameter value used in each Authorization Request. If the 'sector_identifier_uri' is provided then the URIs in this list must be in the list of URIs in the JSON document referenced by the sector_identifier_uri.
        verified:
          type: boolean
          description: Initially false, to verify your client please see the <a href="https://help.synapse.org/docs/Using-Synapse-as-an-OAuth-Server.2048327904.html">Synapse OAuth Server Documentation</a>
        client_uri:
          type: string
          description: URL of the home page of the Client. The value of this field MUST point to a valid Web page.
        policy_uri:
          type: string
          description: URL that the Relying Party Client provides to the End-User to read about the how the profile data will be used. The value of this field MUST point to a valid web page.
        tos_uri:
          type: string
          description: URL that the Relying Party Client provides to the End-User to read about the Relying Party's terms of service. The value of this field MUST point to a valid web page.
        sector_identifier_uri:
          type: string
          description: URL using the https scheme to be used in calculating Pseudonymous Identifiers by Synapse. The URL must reference a file with a single JSON array of redirect_uri values. Synapse will utilize the sector_identifier_uri value provided in the Subject Identifier calculation for pairwise identifiers.
        sector_identifier:
          type: string
          description: The sector identified, computed by the server from the redirect_uris and sector_identifier_uri fields as described in <a href="https://openid.net/specs/openid-connect-core-1_0.html#PairwiseAlg">OpenID Connect Core 1.0 Pairwise Identifier Algorithm</a>
        userinfo_signed_response_alg:
          type: string
          description: The JWT signing algorithms supported by Synapse
          enum:
            - RS256
        createdOn:
          type: string
          description: The date this client was created.
        modifiedOn:
          type: string
          description: The date this client was last modified.
        createdBy:
          type: string
          description: The ID of the user that created this client.
        etag:
          type: string
          description: Synapse employs an Optimistic Concurrency Control (OCC) scheme to handle concurrent updates. Since the E-Tag changes every time a client is updated it is used to detect when a client's current representation of an entity is out-of-date.
      description: OAuth 2.0 Client metadata described in <a href="https://openid.net/specs/openid-connect-registration-1_0.html#ClientMetadata">OpenID Connect Core 1.0 Client Metadata</a>
    org.sagebionetworks.repo.model.pets:
      type: string
      enum:
        - CAT
        - DOG
        - FISH
    org.sagebionetworks.repo.model.UserBundle:
      type: object
      properties:
        userId:
          type: string
          description: The ID of the user described by this bundle
        userProfile:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.UserProfile'
          description: JSON schema for UserProfile POJO
        ORCID:
          type: string
          description: The ORCID ID for the user, if any
        verificationSubmission:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.verification.VerificationSubmission'
          description: User info submitted for verification by Synapse ACT
        isCertified:
          type: boolean
          description: true iff the user is Certified
        isVerified:
          type: boolean
          description: true iff the user is Verified
        isACTMember:
          type: boolean
          description: true iff the user is an ACT member
        isARReviewer:
          type: boolean
          description: true iff the user has permissions to review data access submissions on at least one access requirement (This is always true for an ACT member)
      description: JSON schema for UserProfile POJO
    org.sagebionetworks.repo.model.BaseError:
      type: object
      properties:
        concreteType:
          type: string
          description: Indicates which implementation of BaseError this object represents.  The value is the fully qualified class name, e.g. org.sagebionetworks.repo.model.ErrorResponse.
      description: Base interface for API errors.
      oneOf:
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.ErrorResponse'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.drs.DrsErrorResponse'
      required:
        - concreteType
      discriminator:
        propertyName: concreteType
    org.sagebionetworks.repo.model.migration.BackupTypeRangeRequest:
      type: object
      properties:
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.migration.BackupTypeRangeRequest
        migrationType:
          type: string
          description: 'JSON enum for the types of objects which can be migrated. NOTE: The order of this enumeration determines the migration order.'
          enum:
            - PRINCIPAL
            - GROUP_MEMBERS
            - CREDENTIAL
            - AUTHENTICATED_ON
            - PRINCIPAL_ALIAS
            - NOTIFICATION_EMAIL
            - USER_PROFILE
            - STORAGE_LOCATION
            - FILE_HANDLE
            - MULTIPART_UPLOAD
            - MULTIPART_UPLOAD_PART_STATE
            - MULTIPART_UPLOAD_COMPOSER_PART_STATE
            - MESSAGE_CONTENT
            - MESSAGE_TO_USER
            - MESSAGE_RECIPIENT
            - MESSAGE_STATUS
            - COMMENT
            - V2_WIKI_PAGE
            - V2_WIKI_ATTACHMENT_RESERVATION
            - V2_WIKI_MARKDOWN
            - V2_WIKI_OWNERS
            - ACTIVITY
            - NODE
            - NODE_REVISION
            - NODE_ACCESS_REQUIRMENT
            - DOCKER_REPOSITORY_NAME
            - DOCKER_COMMIT
            - TEAM
            - MEMBERSHIP_INVITATION_SUBMISSION
            - MEMBERSHIP_REQUEST_SUBMISSION
            - EVALUATION
            - EVALUATION_ROUND
            - EVALUATION_SUBMISSIONS
            - SUBMISSION
            - SUBMISSION_CONTRIBUTOR
            - SUBMISSION_FILE
            - SUBMISSION_STATUS
            - PROJECT_SETTINGS
            - PROJECT_STATS
            - ACCESS_REQUIREMENT
            - ACCESS_REQUIREMENT_REVISION
            - ACCESS_APPROVAL
            - ACL
            - ACL_ACCESS
            - ACL_ACCESS_TYPE
            - FAVORITE
            - TRASH_CAN
            - PORTAL
            - DOI
            - CHALLENGE
            - CHALLENGE_TEAM
            - COLUMN_MODEL
            - BOUND_COLUMN_OWNER
            - BOUND_COLUMN_ORDINAL
            - TABLE_TRANSACTION
            - TABLE_TRANSACTION_TO_VERSION
            - TABLE_SEQUENCE
            - TABLE_CHANGE
            - QUIZ_RESPONSE
            - VERIFICATION_SUBMISSION
            - VERIFICATION_STATE
            - VERIFICATION_FILE
            - FORUM
            - DISCUSSION_THREAD
            - DISCUSSION_THREAD_VIEW
            - DISCUSSION_THREAD_ENTITY_REFERENCE
            - DISCUSSION_REPLY
            - SUBSCRIPTION
            - BROADCAST_MESSAGE
            - VIEW_TYPE
            - VIEW_SCOPE
            - VIEW_SNAPSHOT
            - THROTTLE_RULE
            - RESEARCH_PROJECT
            - DATA_ACCESS_REQUEST
            - DATA_ACCESS_SUBMISSION
            - DATA_ACCESS_SUBMISSION_SUBMITTER
            - DATA_ACCESS_SUBMISSION_STATUS
            - DATA_ACCESS_SUBMISSION_ACCESSOR_CHANGE
            - DATA_ACCESS_NOTIFICATIONS
            - FORM_GROUP
            - FORM_DATA
            - ORGANIZATION
            - JSON_SCHEMA
            - JSON_SCHEMA_BLOB
            - JSON_SCHEMA_VERSION
            - JSON_SCHEMA_LATEST_VERSION
            - JSON_SCHEMA_DEPENDENCY
            - JSON_SCHEMA_OBJECT_BINDING
            - DOWNLOAD_LIST
            - DOWNLOAD_LIST_ITEM
            - DOWNLOAD_ORDER
            - DOWNLOAD_LIST_2
            - DOWNLOAD_LIST_ITEM_2
            - DATA_TYPE
            - OAUTH_SECTOR_IDENTIFIER
            - OAUTH_CLIENT
            - OAUTH_REFRESH_TOKEN
            - OAUTH_ACCESS_TOKEN
            - PERSONAL_ACCESS_TOKEN
            - AUTHORIZATION_GRANT
            - SES_NOTIFICATIONS
            - QUARANTINED_EMAILS
            - FEATURE_STATUS
            - MATERIALIZED_VIEW_ID
            - MATERIALIZED_VIEW_SOURCE_TABLE
            - PRINCIPAL_OIDC_BINDING
            - OTP_SECRET
            - OTP_RECOVERY_CODE
            - TWO_FA_STATUS
            - WEBHOOK
            - WEBHOOK_VERIFICATION
            - WEBHOOK_ALLOWED_DOMAIN
            - AGENT_REGISTRATION
            - AGENT_SESSION
            - TOS_REQUIREMENTS
            - TOS_AGREEMENT
            - PROJECT_STORAGE_DATA
            - PROJECT_STORAGE_LIMIT
            - GRID_SESSION
            - GRID_REPLICA
            - GRID_CONNECTION
            - GRID_PATCH
            - CURATION_TASK
            - USER_STATUS
            - RECORDSET_VALIDATION_STATS
            - CHANGE
        aliasType:
          type: string
          description: The value to use as the alias in the XML migration backup file
          enum:
            - TABLE_NAME
            - MIGRATION_TYPE_NAME
        batchSize:
          type: integer
          description: The batch size determines the maxiumum number of rows that will be loaded into memory at one time.
          format: int32
        minimumId:
          type: integer
          description: The first ID in the range of IDs (inclusive)
          format: int32
        maximumId:
          type: integer
          description: The last ID in the range of IDs (inclusive)
          format: int32
      description: Request to create a migration backup for a given MigrationType using a range of Ids.
      required:
        - concreteType
    org.sagebionetworks.repo.model.table.DatasetCollection:
      type: object
      properties:
        name:
          type: string
          description: 'The name of this entity.  Must be 256 characters or less. Names may only contain: letters, numbers, spaces, underscores, hyphens, periods, plus signs, apostrophes, and parentheses'
        description:
          type: string
          description: The description of this entity.  Must be 1000 characters or less.
        id:
          type: string
          description: The unique immutable ID for this entity.  A new ID will be generated for new Entities.  Once issued, this ID is guaranteed to never change or be re-issued
        etag:
          type: string
          description: Synapse employs an Optimistic Concurrency Control (OCC) scheme to handle concurrent updates. Since the E-Tag changes every time an entity is updated it is used to detect when a client's current representation of an entity is out-of-date.
        createdOn:
          type: string
          description: The date this entity was created.
        modifiedOn:
          type: string
          description: The date this entity was last modified.
        createdBy:
          type: string
          description: The ID of the user that created this entity.
        modifiedBy:
          type: string
          description: The ID of the user that last modified this entity.
        parentId:
          type: string
          description: The ID of the Entity that is the parent of this Entity.
        concreteType:
          type: string
          description: Indicates which implementation of Entity this object represents.  The value is the fully qualified class name, e.g. org.sagebionetworks.repo.model.FileEntity.
          enum:
            - org.sagebionetworks.repo.model.table.DatasetCollection
        versionNumber:
          type: integer
          description: The version number issued to this version on the object.
          format: int32
        versionLabel:
          type: string
          description: The version label for this entity
        versionComment:
          type: string
          description: The version comment for this entity
        isLatestVersion:
          type: boolean
          description: If this is the latest version of the object.
        columnIds:
          type: array
          items:
            type: string
          description: The list of ColumnModel IDs that define the schema of the object.
        isSearchEnabled:
          type: boolean
          description: When creating or updating a table or view specifies if full text search should be enabled.  Note that enabling full text search might slow down the indexing of the table or view.
        items:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.EntityRef'
            description: Represents a reference to the id and version of an entity to be used in collections.
          description: 'The flat list of dataset entity references that define this collection.  Limit: 30K items.'
      description: A dataset collection is a type of view defined by a flat list of datasets.
      required:
        - concreteType
    org.sagebionetworks.repo.model.dataaccess.ResearchProject:
      type: object
      properties:
        id:
          type: string
          description: The unique immutable ID for this research project.
        accessRequirementId:
          type: string
          description: The ID of the Access Requirement which this research project needs to meet to gain access to the data.
        institution:
          type: string
          description: The institution that this research project belongs to.
        projectLead:
          type: string
          description: The person who is leading the project.
        intendedDataUseStatement:
          type: string
          description: A few short paragraph that explains how the controlled data will be used.
        createdOn:
          type: string
          description: The date this research project was created.
        modifiedOn:
          type: string
          description: The date this research project was last modified.
        createdBy:
          type: string
          description: The ID of the user that created this research project.
        modifiedBy:
          type: string
          description: The ID of the user that last modified this research project.
        etag:
          type: string
          description: Synapse employs an Optimistic Concurrency Control (OCC) scheme to handle concurrent updates. Since the E-Tag changes every time a research project is updated it is used to detect when a client's current representation of a research project is out-of-date.
      description: A research project describes a project at an institution that used a controlled data set for the purposes that are stated in the Intended Data Use Statement.
    org.sagebionetworks.repo.model.dataaccess.ManagedACTAccessRequirementStatus:
      type: object
      properties:
        accessRequirementId:
          type: string
          description: The ID of the requested AccessRequirement.
        concreteType:
          type: string
          description: Indicates which implementation of AccessRequirementStatus this object represents.
          enum:
            - org.sagebionetworks.repo.model.dataaccess.ManagedACTAccessRequirementStatus
        isApproved:
          type: boolean
          description: True if there is an AccessApproval for the user for the given AccessRequirement.
        expiredOn:
          type: string
          description: The date that the user no longer have access to the data.
        currentSubmissionStatus:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.dataaccess.SubmissionStatus'
          description: The status of a Submission.
      description: The status of a user meeting an ACTAccessRequirement.
      required:
        - concreteType
    org.sagebionetworks.repo.model.EntityHeader:
      type: object
      properties:
        name:
          type: string
          description: The  name of the entity
        id:
          type: string
          description: The id of the entity
        type:
          type: string
          description: The type of the entity
        versionNumber:
          type: integer
          description: The version number of the entity
          format: int32
        versionLabel:
          type: string
          description: The user defined version label of the entity
        isLatestVersion:
          type: boolean
          description: If this version is the latest version of the entity
        benefactorId:
          type: integer
          description: The ID of the entity that this Entity's ACL is inherited from.
          format: int32
        createdOn:
          type: string
          description: The date this entity was created.
        modifiedOn:
          type: string
          description: The date this entity was last modified.
        createdBy:
          type: string
          description: The ID of the user that created this entity.
        modifiedBy:
          type: string
          description: The ID of the user that last modified this entity.
      description: JSON schema for EntityHeader POJO
    org.sagebionetworks.repo.model.project.StsStorageLocationSetting:
      type: object
      properties:
        concreteType:
          type: string
          description: Indicates which implementation this object represents.
        storageLocationId:
          type: integer
          description: The unique ID for this storage location
          format: int32
        uploadType:
          type: string
          description: The enumeration of possible upload types.
          enum:
            - S3
            - GOOGLECLOUDSTORAGE
            - SFTP
            - HTTPS
            - PROXYLOCAL
            - NONE
        banner:
          type: string
          description: The banner text to display to a user every time a file is uploaded. This field is optional.
        description:
          type: string
          description: A description of the storage location. This description is shown when a user has to choose which upload destination to use.
        etag:
          type: string
          description: Synapse employs an Optimistic Concurrency Control (OCC) scheme to handle concurrent updates. Since the E-Tag changes every time a Project Setting is updated it is used to detect when a client's current representation of a Project Setting is out-of-date.
        createdOn:
          type: string
          description: The date this storage location setting was created.
        createdBy:
          type: integer
          description: The ID of the user that created this storage location setting.
          format: int32
        baseKey:
          type: string
          description: the optional base key, which acts as a prefix or a base folder
        stsEnabled:
          type: boolean
          description: Enables STS on this Storage Location
      description: An StsStorageLocation provides settings to enable Synapse to call AWS Security Token Service (STS) to get temporary AWS credentials
      oneOf:
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.project.S3StorageLocationSetting'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.project.ExternalS3StorageLocationSetting'
      required:
        - concreteType
      discriminator:
        propertyName: concreteType
    org.sagebionetworks.repo.model.table.FacetColumnResultRange:
      type: object
      properties:
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.table.FacetColumnResultRange
        columnName:
          type: string
          description: The name of the faceted column
        facetType:
          type: string
          description: Set to one of the enumerated values to indicate a column should be treated as a facet
          enum:
            - enumeration
            - range
        jsonPath:
          type: string
          description: 'When present, these results represent a sub-column identified by its jsonPath.  Note: The ColumnName will be the name of the root JSON column.'
        columnMin:
          type: string
          description: the smallest value in the column
        columnMax:
          type: string
          description: the largest value in the column
        selectedMin:
          type: string
          description: the lower bound of the selected range
        selectedMax:
          type: string
          description: the upper bound of the selected range
      description: Includes the minimum and maximum values of a range facet column and selected ranges applied to the filter.
      required:
        - concreteType
    org.sagebionetworks.repo.model.file.DownloadOrderSummary:
      type: object
      properties:
        orderId:
          type: string
          description: The ID of this order.
        createdBy:
          type: string
          description: The ID of the user that created this order.
        createdOn:
          type: string
          description: The date-time when the order was created.
        zipFileName:
          type: string
          description: The name of the file containing this order.
        totalSizeBytes:
          type: integer
          description: The total size of all files in this order in bytes (uncompressed).
          format: int32
        totalNumberOfFiles:
          type: integer
          description: The total number of files in this download order.
          format: int32
      description: Summary of files included in a download order.
    org.sagebionetworks.repo.model.ProjectHeaderList:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.ProjectHeader'
            description: JSON schema for ProjectHeader
        nextPageToken:
          type: string
          description: The token to get the next page of results.
      description: List of project headers
    org.sagebionetworks.repo.model.auth.TwoFactorAuthErrorResponse:
      type: object
      properties:
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.auth.TwoFactorAuthErrorResponse
        userId:
          type: integer
          description: The id of the user that attempted to authenticate.
          format: int32
        twoFaToken:
          type: string
          description: Token included when two factor authentication is required. If present the client will need to include this token as part of the TwoFactorAuthLoginRequest.
        reason:
          type: string
          description: The reason for the error
        errorCode:
          type: string
          description: A code to be used by clients to handle the error.
          enum:
            - PASSWORD_RESET_VIA_EMAIL_REQUIRED
            - USER_CERTIFICATION_REQUIRED
            - INVALID_TABLE_QUERY_FACET_COLUMN_REQUEST
            - OAUTH_CLIENT_NOT_VERIFIED
            - TWO_FA_REQUIRED
            - UNSUPPORTED_WEBHOOK_DOMAIN
            - PROJECT_STORAGE_LIMIT_EXCEEDED
            - TWO_FA_ENABLED_REQUIRED
      description: JSON schema for an errors related to two factor authentication
      required:
        - concreteType
    org.sagebionetworks.repo.model.dataaccess.CreateSubmissionRequest:
      type: object
      properties:
        requestId:
          type: string
          description: The ID of a Request to create the Submission from.
        requestEtag:
          type: string
          description: The current etag of the request.
        subjectId:
          type: string
          description: The ID of the subject user interested in. This information will be used to help user navigate back to where they were to continue their work.
        subjectType:
          type: string
          description: JSON enum for the types of objects which can be restricted by an AccessRequirement.
          enum:
            - ENTITY
            - EVALUATION
            - TEAM
      description: A request to create a Submission.
    org.sagebionetworks.repo.model.LockAccessRequirement:
      type: object
      properties:
        versionNumber:
          type: integer
          description: The version number issued to this version on the object.
          format: int32
        id:
          type: integer
          description: The unique immutable ID.  Provided by the system, the user may not set this field.
          format: int32
        description:
          type: string
          description: Depricated. Replaced by name.
        name:
          type: string
          description: Name of the AR. Limited to 50 characters and must be unique. Required.
        etag:
          type: string
          description: Synapse employs an Optimistic Concurrency Control (OCC) scheme to handle concurrent updates. Since the E-Tag changes every time an entity is updated it is used to detect when a client's current representation of an object is out-of-date.
        createdOn:
          type: string
          description: The date this object was created. Provided by the system, the user may not set this field.
        modifiedOn:
          type: string
          description: The date this object was last modified. Provided by the system, the user may not set this field.
        createdBy:
          type: string
          description: The user that created this object.  Provided by the system, the user may not set this field.
        modifiedBy:
          type: string
          description: The user that last modified this object.  Provided by the system, the user may not set this field.
        subjectsDefinedByAnnotations:
          type: boolean
          description: Defaults to 'false'.  When 'true', the subjects controlled by this AR are defined by the the'_accessRequirementIds' annotations on individual entities.  This property is mutually exclusive with 'subjectIds'.  If this is set to 'true' then 'subjectIds' must be excluded or empty.
        subjectIds:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.RestrictableObjectDescriptor'
          description: The IDs of the items controlled by this Access Requirement when 'subjectsDefinedByAnnotations=false'. This property is mutually exclusive with 'subjectsDefinedByAnnotations'.  When 'subjectsDefinedByAnnotations=true' then this property must be empty or excluded.  Required when creating or updating and 'subjectsDefinedByAnnotations=false' or 'subjectsDefinedByAnnotations' is excluded.
        accessType:
          type: string
          description: The enumeration of possible permission.
          enum:
            - CREATE
            - READ
            - UPDATE
            - DELETE
            - CHANGE_PERMISSIONS
            - DOWNLOAD
            - UPLOAD
            - PARTICIPATE
            - SUBMIT
            - READ_PRIVATE_SUBMISSION
            - UPDATE_SUBMISSION
            - DELETE_SUBMISSION
            - TEAM_MEMBERSHIP_UPDATE
            - SEND_MESSAGE
            - CHANGE_SETTINGS
            - MODERATE
            - REVIEW_SUBMISSIONS
            - EXEMPTION_ELIGIBLE
        concreteType:
          type: string
          description: Indicates which type of AccessRequirement this object represents.  Provided by the system, the user may not set this field.
          enum:
            - org.sagebionetworks.repo.model.LockAccessRequirement
        jiraKey:
          type: string
          description: The key of the jira issue created for this Access Requirement.
      description: JSON schema for Lock Access Requirement, used to lock down the entity while waiting for ACT to review.
      required:
        - concreteType
    org.sagebionetworks.repo.model.MembershipInvtnSignedToken:
      type: object
      properties:
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.MembershipInvtnSignedToken
        hmac:
          type: string
          description: The hash message authentication code for the message.
        version:
          type: integer
          description: The version of the key used to generate the HMAC.
          format: int32
        expiresOn:
          type: string
          description: The date-time when this token expires.
        createdOn:
          type: string
          description: The date-time the token was generated.
        membershipInvitationId:
          type: string
          description: The ID of the membership invitation.
      description: Signed token containing the information needed to retrieve a membership invitation.
      required:
        - concreteType
    org.sagebionetworks.repo.model.auth.TermsOfServiceStatus:
      type: object
      properties:
        userId:
          type: string
          description: The ID of the user.
        userCurrentTermsOfServiceState:
          type: string
          description: The user's current ToS state defines what action if any they will need to take to meet ToS requirements.
          enum:
            - MUST_AGREE_NOW
            - MUST_AGREE_SOON
            - UP_TO_DATE
        lastAgreementDate:
          type: string
          description: The date/time when the user last agreed to the ToS. Will be null if the user has never agreed to the ToS.
        lastAgreementVersion:
          type: string
          description: The version of ToS that the user last agreed to.  Will be null if the user has never agreed to the ToS.
      description: The status of a user's ToS agreement
    org.sagebionetworks.repo.model.agent.AgentSession:
      type: object
      properties:
        sessionId:
          type: string
          description: The unique identifier for a conversation with an agent.  The sessionId issued by Synapse when the session is started.  The caller must provided this sessionId with each chat request to identify a specific conversation with an agent.  A sessionId can only be used by the user that created it.
        agentAccessLevel:
          type: string
          description: Defines the level of data access that the agent will be given during a session.
          enum:
            - PUBLICLY_ACCESSIBLE
            - READ_YOUR_PRIVATE_DATA
            - WRITE_YOUR_PRIVATE_DATA
        startedOn:
          type: string
          description: The date this session was started.
        startedBy:
          type: integer
          description: The id of the user that started this session
          format: int32
        modifiedOn:
          type: string
          description: The date this session was last modified.
        agentRegistrationId:
          type: string
          description: Identifies that agent that will be used for this session.  The default value is null, which indicates that the default agent will be used.
        etag:
          type: string
          description: Will change whenever the session changes.
        sessionContext:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.agent.SessionContext'
          description: Provides additional context for agent sessions.
      description: Information about a specific session (conversation) with an agent.  Only the acess level can be changed on an existing session.  You will need to start a new session if you wish to use a different agentId.
    org.sagebionetworks.repo.model.quiz.MultichoiceAnswer:
      type: object
      properties:
        answerIndex:
          type: integer
          description: An index unique within the scope the multiple choice question
          format: int32
        prompt:
          type: string
          description: The user-readable prompt or label for this answer
        isCorrect:
          type: boolean
          description: True if and only if this is a correct response
      description: One of the multiple choices in a multiple choice question
    org.sagebionetworks.repo.model.quiz.QuizResponse:
      type: object
      properties:
        id:
          type: integer
          description: The unique ID for this response
          format: int32
        quizId:
          type: integer
          description: The ID of the Quiz to which this is a response
          format: int32
        createdBy:
          type: string
          description: The unique identifier of the one creating the response
        createdOn:
          type: string
          description: When this response was created
        questionResponses:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.quiz.QuestionResponse'
            description: The response to a question
          description: The list of responses to the questions in the Quiz
      description: The set of responses to a Quiz
    org.sagebionetworks.repo.model.entity.Direction:
      type: string
      enum:
        - ASC
        - DESC
    org.sagebionetworks.repo.model.EnvironmentDescriptor:
      type: object
      properties:
        type:
          type: string
          description: type the type to set
        name:
          type: string
          description: name the name to set
        quantifier:
          type: string
          description: quantifier the quantifier to set
      description: JSON schema for environment descriptor POJO
    org.sagebionetworks.repo.model.oauth.JsonWebKey:
      type: object
      properties:
        kid:
          type: string
          description: The unique identifier for the JSON Web Token, described in <a href="https://tools.ietf.org/html/rfc7517#section-4.5">RFC 7517 Section 4.5</a>
        kty:
          type: string
          description: The key type, described in <a href="https://tools.ietf.org/html/rfc7517#section-4.1">RFC 7517 Section 4.1</a>
        use:
          type: string
          description: The public key use, described in <a href="https://tools.ietf.org/html/rfc7517#section-4.2">RFC 7517 Section 4.2</a>
        concreteType:
          type: string
          description: Indicates which kind of JSON Web Key the object is, following the Synapse standard.
      description: Public key used to verify JSON Web Token signatures
      oneOf:
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.oauth.JsonWebKeyRSA'
      required:
        - concreteType
      discriminator:
        propertyName: concreteType
    org.sagebionetworks.repo.model.entity.query.SortDirection:
      type: string
      enum:
        - ASC
        - DESC
    ListWrapperOfTeam:
      type: object
      properties:
        list:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.Team'
    org.sagebionetworks.repo.model.Reference:
      type: object
      properties:
        targetId:
          type: string
          description: The the id of the entity to which this reference refers
        targetVersionNumber:
          type: integer
          description: The version number of the entity to which this reference refers
          format: int32
      description: JSON schema for Reference POJO
    org.sagebionetworks.repo.model.auth.AuthenticatedOn:
      type: object
      properties:
        authenticatedOn:
          type: string
          description: The date/time on which the user was authenticated
      description: The date/time on which the user was authenticated
    org.sagebionetworks.repo.model.dataaccess.RequestInterface:
      type: object
      properties:
        id:
          type: string
          description: The unique immutable ID for this request. A new ID will be generated for new Request. Once issued, this ID is guaranteed to never change or be re-issued.
        accessRequirementId:
          type: string
          description: The ID of the Access Requirement which requires a request to be submitted to gain access to a dataset. This request contains information that satisfies those requirements.
        researchProjectId:
          type: string
          description: The ID of the research project associated with this request.
        createdOn:
          type: string
          description: The date this request was created.
        modifiedOn:
          type: string
          description: The date this request was last modified.
        createdBy:
          type: string
          description: The ID of the user that created this request.
        modifiedBy:
          type: string
          description: The ID of the user that last modified this request.
        ducFileHandleId:
          type: string
          description: The Data Use Certificate uploaded by user.
        irbFileHandleId:
          type: string
          description: The Institutional Review Board Approval document uploaded by user.
        attachments:
          type: array
          items:
            type: string
          description: The set of file handle ID of attached files to this request.
        accessorChanges:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.dataaccess.AccessorChange'
            description: Request for a single user change access to a resource.
          description: List of user changes. A user can gain access, renew access or have access revoked.
        etag:
          type: string
          description: Synapse employs an Optimistic Concurrency Control (OCC) scheme to handle concurrent updates. Since the E-Tag changes every time a request is updated it is used to detect when a client's current representation of a request is out-of-date.
        concreteType:
          type: string
          description: Indicates which implementation of RequestInterface this object represents.
      description: This is the base interface that all Request implements.
      oneOf:
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.dataaccess.Request'
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.dataaccess.Renewal'
      required:
        - concreteType
      discriminator:
        propertyName: concreteType
    org.sagebionetworks.repo.model.OAuthErrorResponse:
      type: object
      properties:
        error:
          type: string
          description: A short code for the error encountered, typically defined by OAuth 2 specifications
        error_description:
          type: string
          description: A human-readable description of the error that occurred.
        errorCode:
          type: string
          description: A code to be used by clients to handle the error.
          enum:
            - PASSWORD_RESET_VIA_EMAIL_REQUIRED
            - USER_CERTIFICATION_REQUIRED
            - INVALID_TABLE_QUERY_FACET_COLUMN_REQUEST
            - OAUTH_CLIENT_NOT_VERIFIED
            - TWO_FA_REQUIRED
            - UNSUPPORTED_WEBHOOK_DOMAIN
            - PROJECT_STORAGE_LIMIT_EXCEEDED
            - TWO_FA_ENABLED_REQUIRED
        reason:
          type: string
          description: The reason for the error
      description: JSON schema for an error returned by Synapse OAuth 2.0 Services. Used to align error messages with <a href="https://tools.ietf.org/html/rfc6749#section-5.2">RFC 6749 Section 5.2</a>
    org.sagebionetworks.repo.model.file.ExternalS3UploadDestination:
      type: object
      properties:
        concreteType:
          type: string
          description: Indicates which implementation this object represents.
          enum:
            - org.sagebionetworks.repo.model.file.ExternalS3UploadDestination
        storageLocationId:
          type: integer
          description: the unique id for the storage location, that points to the <a href="${org.sagebionetworks.repo.model.project.StorageLocationSetting}">StorageLocationSetting</a>
          format: int32
        uploadType:
          type: string
          description: The enumeration of possible upload types.
          enum:
            - S3
            - GOOGLECLOUDSTORAGE
            - SFTP
            - HTTPS
            - PROXYLOCAL
            - NONE
        banner:
          type: string
          description: If set, the client should show this banner every time an upload is initiated
        destinationProjectId:
          type: string
          description: The ID of the project where this file will be uploaded.
        projectStorageLocationUsage:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.limits.ProjectStorageLocationUsage'
          description: Represent the current size and limits for a single project storage location.
        baseKey:
          type: string
          description: the optional base key, which acts as a prefix or a base folder
        stsEnabled:
          type: boolean
          description: Enables STS on this Storage Location
        endpointUrl:
          type: string
          description: 'the s3 endpoint url (default: https://s3.amazonaws.com)'
        bucket:
          type: string
          description: the bucket to use
      description: This upload destination contains information to start an upload to an external external S3 bucket connected with Synapse. The destination is mapped from an <a href="${org.sagebionetworks.repo.model.project.ExternalS3StorageLocationSetting}">ExternalS3StorageLocationSetting</a>.
      required:
        - concreteType
    org.sagebionetworks.repo.model.grid.query.SelectClause:
      type: object
      properties:
        selectAll:
          type: boolean
          description: When true, all columns will be selected (*). The selectList will be ignored.
        distinct:
          type: boolean
          description: Optional. When true, DISTINCT will be used.
        selectList:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.grid.query.SelectItem'
            description: A generic select item.
          description: One or more select items. This list is ignored if 'selectAll' is true.
      description: Defines the SELECT clause of the query. Use 'selectAll' for a 'SELECT *' query, otherwise provide a list of columns and functions in 'selectList'.
    org.sagebionetworks.evaluation.model.EvaluationRoundLimit:
      type: object
      properties:
        limitType:
          type: string
          enum:
            - TOTAL
            - DAILY
            - WEEKLY
            - MONTHLY
        maximumSubmissions:
          type: integer
          description: maximum number of submissions allowed within the time period defined by the the limitType
          format: int32
      description: Sets limits for maximum submissions in a SubmissionRound. Each limitType may only appear once in an EvaluationRound's list of limits
      required:
        - limitType
        - maximumSubmissions
    org.sagebionetworks.repo.model.auth.NewUserSignedToken:
      type: object
      properties:
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.auth.NewUserSignedToken
        hmac:
          type: string
          description: The hash message authentication code for the message.
        version:
          type: integer
          description: The version of the key used to generate the HMAC.
          format: int32
        expiresOn:
          type: string
          description: The date-time when this token expires.
        createdOn:
          type: string
          description: The date-time the token was generated.
        email:
          type: string
          description: User's email
        firstName:
          type: string
          description: User's first name
        lastName:
          type: string
          description: User's last name
      description: Signed token containing the information for a new user.
      required:
        - concreteType
    org.sagebionetworks.repo.model.grid.UpdateGridRequest:
      type: object
      properties:
        gridSessionId:
          type: string
          description: The grid session ID.
        replicaId:
          type: integer
          description: Identifies the replica that will be establishing the websocket connection.
          format: int32
      description: Request to update the grid by executing a SQL update command.
    org.sagebionetworks.repo.model.dataaccess.SubmissionSortField:
      type: string
      enum:
        - MODIFIED_ON
        - CREATED_ON
    org.sagebionetworks.repo.model.docker.RegistryEventAction:
      type: string
      enum:
        - push
        - pull
        - mount
    org.sagebionetworks.repo.model.UserProfile:
      type: object
      properties:
        ownerId:
          type: string
          description: A foreign key to the ID of the 'principal' object for the user.
        etag:
          type: string
          description: Synapse employs an Optimistic Concurrency Control (OCC) scheme to handle concurrent updates. Since the E-Tag changes every time an entity is updated it is used to detect when a client's current representation of an entity is out-of-date.
        firstName:
          type: string
          description: This person's given name (forename)
        lastName:
          type: string
          description: This person's family name (surname)
        email:
          type: string
          description: 'This is deprecated as users can have more than one email. See emails '
        emails:
          type: array
          items:
            type: string
          description: The list of user email addresses registered to this user.
        openIds:
          type: array
          items:
            type: string
          description: The list of OpenIds bound to this user's account.
        userName:
          type: string
          description: A name chosen by the user that uniquely identifies them.
        displayName:
          type: string
          description: This field is deprecated and will always be null.
        rStudioUrl:
          type: string
          description: URL for RStudio server assigned to the user
        summary:
          type: string
          description: A summary description about this person
        position:
          type: string
          description: This person's current position title
        location:
          type: string
          description: This person's location
        industry:
          type: string
          description: The industry/discipline that this person is associated with
        company:
          type: string
          description: This person's current affiliation
        profilePicureFileHandleId:
          type: string
          description: The File Handle id of the user's profile picture
        url:
          type: string
          description: A link to more information about this person
        teamName:
          type: string
          description: This person's default team name
        notificationSettings:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.message.Settings'
          description: Contains a user's notification settings
        preferences:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.UserPreference'
            description: User preferences
          uniqueItems: true
        createdOn:
          type: string
          description: The date this profile was created.
        twoFactorAuthEnabled:
          type: boolean
          description: Flag that indicates if the user has two factor authentication enabled.
        tosAgreements:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.auth.TermsOfServiceAgreement'
            description: Information about the user agreement for a specific version of the TOS
          description: The list of term of service versions that the user agreed to
      description: JSON schema for UserProfile POJO
    org.sagebionetworks.repo.model.migration.BatchChecksumResponse:
      type: object
      properties:
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.migration.BatchChecksumResponse
        migrationType:
          type: string
          description: 'JSON enum for the types of objects which can be migrated. NOTE: The order of this enumeration determines the migration order.'
          enum:
            - PRINCIPAL
            - GROUP_MEMBERS
            - CREDENTIAL
            - AUTHENTICATED_ON
            - PRINCIPAL_ALIAS
            - NOTIFICATION_EMAIL
            - USER_PROFILE
            - STORAGE_LOCATION
            - FILE_HANDLE
            - MULTIPART_UPLOAD
            - MULTIPART_UPLOAD_PART_STATE
            - MULTIPART_UPLOAD_COMPOSER_PART_STATE
            - MESSAGE_CONTENT
            - MESSAGE_TO_USER
            - MESSAGE_RECIPIENT
            - MESSAGE_STATUS
            - COMMENT
            - V2_WIKI_PAGE
            - V2_WIKI_ATTACHMENT_RESERVATION
            - V2_WIKI_MARKDOWN
            - V2_WIKI_OWNERS
            - ACTIVITY
            - NODE
            - NODE_REVISION
            - NODE_ACCESS_REQUIRMENT
            - DOCKER_REPOSITORY_NAME
            - DOCKER_COMMIT
            - TEAM
            - MEMBERSHIP_INVITATION_SUBMISSION
            - MEMBERSHIP_REQUEST_SUBMISSION
            - EVALUATION
            - EVALUATION_ROUND
            - EVALUATION_SUBMISSIONS
            - SUBMISSION
            - SUBMISSION_CONTRIBUTOR
            - SUBMISSION_FILE
            - SUBMISSION_STATUS
            - PROJECT_SETTINGS
            - PROJECT_STATS
            - ACCESS_REQUIREMENT
            - ACCESS_REQUIREMENT_REVISION
            - ACCESS_APPROVAL
            - ACL
            - ACL_ACCESS
            - ACL_ACCESS_TYPE
            - FAVORITE
            - TRASH_CAN
            - PORTAL
            - DOI
            - CHALLENGE
            - CHALLENGE_TEAM
            - COLUMN_MODEL
            - BOUND_COLUMN_OWNER
            - BOUND_COLUMN_ORDINAL
            - TABLE_TRANSACTION
            - TABLE_TRANSACTION_TO_VERSION
            - TABLE_SEQUENCE
            - TABLE_CHANGE
            - QUIZ_RESPONSE
            - VERIFICATION_SUBMISSION
            - VERIFICATION_STATE
            - VERIFICATION_FILE
            - FORUM
            - DISCUSSION_THREAD
            - DISCUSSION_THREAD_VIEW
            - DISCUSSION_THREAD_ENTITY_REFERENCE
            - DISCUSSION_REPLY
            - SUBSCRIPTION
            - BROADCAST_MESSAGE
            - VIEW_TYPE
            - VIEW_SCOPE
            - VIEW_SNAPSHOT
            - THROTTLE_RULE
            - RESEARCH_PROJECT
            - DATA_ACCESS_REQUEST
            - DATA_ACCESS_SUBMISSION
            - DATA_ACCESS_SUBMISSION_SUBMITTER
            - DATA_ACCESS_SUBMISSION_STATUS
            - DATA_ACCESS_SUBMISSION_ACCESSOR_CHANGE
            - DATA_ACCESS_NOTIFICATIONS
            - FORM_GROUP
            - FORM_DATA
            - ORGANIZATION
            - JSON_SCHEMA
            - JSON_SCHEMA_BLOB
            - JSON_SCHEMA_VERSION
            - JSON_SCHEMA_LATEST_VERSION
            - JSON_SCHEMA_DEPENDENCY
            - JSON_SCHEMA_OBJECT_BINDING
            - DOWNLOAD_LIST
            - DOWNLOAD_LIST_ITEM
            - DOWNLOAD_ORDER
            - DOWNLOAD_LIST_2
            - DOWNLOAD_LIST_ITEM_2
            - DATA_TYPE
            - OAUTH_SECTOR_IDENTIFIER
            - OAUTH_CLIENT
            - OAUTH_REFRESH_TOKEN
            - OAUTH_ACCESS_TOKEN
            - PERSONAL_ACCESS_TOKEN
            - AUTHORIZATION_GRANT
            - SES_NOTIFICATIONS
            - QUARANTINED_EMAILS
            - FEATURE_STATUS
            - MATERIALIZED_VIEW_ID
            - MATERIALIZED_VIEW_SOURCE_TABLE
            - PRINCIPAL_OIDC_BINDING
            - OTP_SECRET
            - OTP_RECOVERY_CODE
            - TWO_FA_STATUS
            - WEBHOOK
            - WEBHOOK_VERIFICATION
            - WEBHOOK_ALLOWED_DOMAIN
            - AGENT_REGISTRATION
            - AGENT_SESSION
            - TOS_REQUIREMENTS
            - TOS_AGREEMENT
            - PROJECT_STORAGE_DATA
            - PROJECT_STORAGE_LIMIT
            - GRID_SESSION
            - GRID_REPLICA
            - GRID_CONNECTION
            - GRID_PATCH
            - CURATION_TASK
            - USER_STATUS
            - RECORDSET_VALIDATION_STATS
            - CHANGE
        cheksums:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.migration.RangeChecksum'
            description: The calculated checksum for a single batch of rows.
      description: Response of a BatchChecksumRequest
      required:
        - concreteType
    org.sagebionetworks.repo.model.ApprovalState:
      type: string
      enum:
        - APPROVED
        - REVOKED
    org.sagebionetworks.repo.model.file.FileHandleAssociationList:
      type: object
      properties:
        list:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.file.FileHandleAssociation'
            description: Describes an association of a FileHandle with another object.
      description: List of FileHandleAssociation.
    org.sagebionetworks.repo.model.file.PartPresignedUrl:
      type: object
      properties:
        partNumber:
          type: integer
          description: The part number matching this pre-signed URL.
          format: int32
        uploadPresignedUrl:
          type: string
          description: A pre-signed URL to upload or copy a part of a multi-part request. The part should be uploaded or copied (using an empty request body) as an HTTP PUT using this URL. Each URL will expire after 15 minutes. Any header in the returned signedHeaders map must be included in the request.
        signedHeaders:
          type: object
          description: A key/value pair map of additional headers that must be included in the PUT request for the request to succeed.
          additionalProperties:
            type: string
      description: A single pre-signed URL for uploading or coping a part of a multi-part request. Note that the headers in the signedHeaders property must be included in the PUT request that is sent to the pre-signed URL. In the case of a multipart copy, when sending the PUT request to the pre-signed URL the body of the request needs to be empty.
    org.sagebionetworks.evaluation.model.Submission:
      type: object
      properties:
        id:
          type: string
          description: The unique, immutable Synapse ID of this Submission.
        userId:
          type: string
          description: The Synapse ID of the user who created this Submission.
        submitterAlias:
          type: string
          description: The alias for the user or team creating the submission.
        evaluationId:
          type: string
          description: The Synapse ID of the Evaluation this Submission is for.
        evaluationRoundId:
          type: string
          description: The Synapse ID of the EvaluationRound to which this was submitted. DO NOT specify a value for this. It will be filled in automatically upon creation of the Submission if the Evaluation is configured with an EvaluationRound.
        entityId:
          type: string
          description: The Synapse ID of the Entity in this Submission.
        entityBundleJSON:
          type: string
          description: The Bundled Entity and Annotations JSON at the time of submission.
        versionNumber:
          type: integer
          description: The submitted version number of the Entity.
          format: int32
        dockerRepositoryName:
          type: string
          description: For Docker repositories, the name of the submitted repository.  Null for other entity types.
        dockerDigest:
          type: string
          description: For Docker repositories, the digest from the commit.  Null for other entity types.
        name:
          type: string
          description: The title of this Submission.
        createdOn:
          type: string
          description: The date on which Submission was created.
        teamId:
          type: string
          description: optional Team which collaborated on the submission
        contributors:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.evaluation.model.SubmissionContributor'
            description: A contributor to an evaluation Submission
          description: User ids of the submitter and (if a team submission) the team members involved in creating the submission.
          uniqueItems: true
      description: A Submission to a Synapse Evaluation is a pointer to a versioned Entity. Submissions are immutable, so we archive a copy of the EntityBundle at the time of submission.
    org.sagebionetworks.repo.model.file.S3FileHandle:
      type: object
      properties:
        id:
          type: string
          description: The ID of this FileHandle.  All references to this FileHandle will use this ID.  Synapse will generate this ID when the FileHandle is created.
        etag:
          type: string
          description: FileHandles are immutable from the perspective of the API.  The only field that can be change is the previewId.  When a new previewId is set, the etag will change.
        createdBy:
          type: string
          description: The ID Of the user that created this file.
        createdOn:
          type: string
          description: The date when this file was uploaded.
        modifiedOn:
          type: string
          description: The date when the file was modified. This is handled by the backend and cannot be modified.
        concreteType:
          type: string
          description: 'This is used to indicate the implementation of this interface. For example, an S3FileHandle should be set to: org.sagebionetworks.repo.model.file.S3FileHandle'
          enum:
            - org.sagebionetworks.repo.model.file.S3FileHandle
        contentType:
          type: string
          description: 'Must be: http://en.wikipedia.org/wiki/Internet_media_type'
        contentMd5:
          type: string
          description: The file's content MD5.
        fileName:
          type: string
          description: The short, user visible name for this file.
        storageLocationId:
          type: integer
          description: The optional storage location descriptor
          format: int32
        contentSize:
          type: integer
          description: The size of the file in bytes.
          format: int32
        status:
          type: string
          description: The status of the file handle as computed by the backend. This value cannot be changed, any file handle that is not AVAILABLE should not be used.
          enum:
            - AVAILABLE
            - UNLINKED
            - ARCHIVED
        bucketName:
          type: string
          description: The name of the bucket where this file resides
        key:
          type: string
          description: The path or resource name for this object
        previewId:
          type: string
          description: If this file has a preview, then this will be the file ID of the preview.
        isPreview:
          type: boolean
          description: Whether or not this is a preview of another file
      description: An S3FileHandle represents a file stored in AWS S3.
      required:
        - concreteType
    org.sagebionetworks.repo.model.discussion.DiscussionSearchRequest:
      type: object
      properties:
        searchString:
          type: string
          description: The search query to match against thread and replies in a forum
        nextPageToken:
          type: string
          description: If a previous search result included a non-null nextPageToken, then there are more results available.  Forward the provided nextPageToken to get the next page of results.
      description: A request to perform a full text search in a discussion forum
    org.sagebionetworks.repo.model.file.FileResult:
      type: object
      properties:
        fileHandleId:
          type: string
          description: The ID of the requested FileHandle.
        fileHandle:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.file.FileHandle'
          description: The FileHandle interface defines all of the fields that are common to all implementations.
        preSignedURL:
          type: string
          description: A pre-signed URL to download the requested file. Null if the request.includePreSignedURLs=false.
        previewPreSignedURL:
          type: string
          description: A pre-signed URL to download the preview of requested file. Null if the request.includePreviewPreSignedURLs=false.
        failureCode:
          type: string
          description: Failure code for a files that cannot be downloaded.
          enum:
            - NOT_FOUND
            - UNAUTHORIZED
      description: Result of a single File request.
    org.sagebionetworks.repo.model.drs.OrganizationInformation:
      type: object
      properties:
        name:
          type: string
          description: The name of the organization.
        url:
          type: string
          description: The url of organization.
      description: The information of the organization, which provides DRS API implementation.
    org.sagebionetworks.repo.model.table.QueryNextPageToken:
      type: object
      properties:
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.table.QueryNextPageToken
        entityId:
          type: string
        token:
          type: string
          description: The token for the next page.
      required:
        - concreteType
    org.sagebionetworks.repo.model.statistics.ObjectStatisticsResponse:
      type: object
      properties:
        objectId:
          type: string
          description: The id of the object for which this statistics were computed
        concreteType:
          type: string
          description: The type of response mapped to the statistics request
      description: Common response type containing the statistics computed for a specific object
      oneOf:
        - $ref: '#/components/schemas/org.sagebionetworks.repo.model.statistics.ProjectFilesStatisticsResponse'
      required:
        - concreteType
      discriminator:
        propertyName: concreteType
    org.sagebionetworks.repo.model.table.PaginatedRowSet:
      type: object
      properties:
        results:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.table.RowSet'
          description: Represents a set of row of a TableEntity
        totalNumberOfResults:
          type: integer
          description: The total number of results
          format: int32
      description: Paginated results of a RowSet
    org.sagebionetworks.repo.model.Challenge:
      type: object
      properties:
        id:
          type: string
          description: The ID of this Challenge object
        etag:
          type: string
          description: Synapse employs an Optimistic Concurrency Control (OCC) scheme to handle concurrent updates. Since the E-Tag changes every time an entity is updated it is used to detect when a client's current representation of an entity is out-of-date.
        projectId:
          type: string
          description: The ID of the Project the challenge is used with.
        participantTeamId:
          type: string
          description: The ID of the Team which users join to participate in the Challenge
      description: Settings for a Challenge Project.
    org.sagebionetworks.repo.model.dataaccess.AccessRequirementSortField:
      type: string
      enum:
        - CREATED_ON
        - NAME
        - CONCRETE_TYPE
    org.sagebionetworks.repo.model.principal.NotificationEmail:
      type: object
      properties:
        email:
          type: string
          description: The user's email
        quarantineStatus:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.principal.EmailQuarantineStatus'
          description: Information about the quarantine status of a notification email
      description: Information about the notification email of the user, including its quarantined status if the email address is currently in quarantine
    org.sagebionetworks.repo.model.file.S3UploadDestination:
      type: object
      properties:
        concreteType:
          type: string
          description: Indicates which implementation this object represents.
          enum:
            - org.sagebionetworks.repo.model.file.S3UploadDestination
        storageLocationId:
          type: integer
          description: the unique id for the storage location, that points to the <a href="${org.sagebionetworks.repo.model.project.StorageLocationSetting}">StorageLocationSetting</a>
          format: int32
        uploadType:
          type: string
          description: The enumeration of possible upload types.
          enum:
            - S3
            - GOOGLECLOUDSTORAGE
            - SFTP
            - HTTPS
            - PROXYLOCAL
            - NONE
        banner:
          type: string
          description: If set, the client should show this banner every time an upload is initiated
        destinationProjectId:
          type: string
          description: The ID of the project where this file will be uploaded.
        projectStorageLocationUsage:
          $ref: '#/components/schemas/org.sagebionetworks.repo.model.limits.ProjectStorageLocationUsage'
          description: Represent the current size and limits for a single project storage location.
        baseKey:
          type: string
          description: the optional base key, which acts as a prefix or a base folder
        stsEnabled:
          type: boolean
          description: Enables STS on this Storage Location
      description: The upload destination contains information to start an upload to the default Synapse storage location that exists on Amazon S3. This destination is mapped from an <a href="${org.sagebionetworks.repo.model.project.S3StorageLocationSetting}">S3StorageLocationSetting</a>.
      required:
        - concreteType
    org.sagebionetworks.repo.model.table.UploadToTableResult:
      type: object
      properties:
        concreteType:
          type: string
          enum:
            - org.sagebionetworks.repo.model.table.UploadToTableResult
        rowsProcessed:
          type: integer
          description: The number of rows that were read from the provided file and applied to the table.
          format: int32
        etag:
          type: string
          description: The new etag of the version applied to the table.
      description: The result of a CSV table upload job.
      required:
        - concreteType
    org.sagebionetworks.repo.model.auth.ChangePasswordWithTwoFactorAuthToken:
      type: object
      properties:
        newPassword:
          type: string
          description: The new password
        concreteType:
          type: string
          description: 'Indicates which implementation of PasswordChangeInterface this object represents. Valid Values: org.sagebionetworks.repo.model.auth.ChangePasswordWithToken org.sagebionetworks.repo.model.auth.ChangePasswordWithCurrentPassword'
          enum:
            - org.sagebionetworks.repo.model.auth.ChangePasswordWithTwoFactorAuthToken
        userId:
          type: integer
          description: The id of the user that attempted to authenticate.
          format: int32
        twoFaToken:
          type: string
          description: The token that was included in the error response when authenticating.
        otpCode:
          type: string
          description: One time password (e.g. generated by the authenticator application, depending on the otpType value)
        otpType:
          type: string
          description: The type of one time password code that can be used to authenticate through two factor authentication.
          enum:
            - TOTP
            - RECOVERY_CODE
      description: Used to change the user password when two factor authentication is enabled. The twoFaToken is generated by the server and included in the 401 response the user tries to update the password with either the old password or a token. Only TOTP and RECOVERY_CODE otp codes can be used for this operation.
      required:
        - concreteType
    org.sagebionetworks.repo.model.download.AddBatchOfFilesToDownloadListRequest:
      type: object
      properties:
        batchToAdd:
          type: array
          items:
            $ref: '#/components/schemas/org.sagebionetworks.repo.model.download.DownloadListItem'
            description: A single item for a user's download list.
          description: 'The batch of files to add to the user''s download list. Note: There is a limit of 1000 files per batch.'
      description: Request to add a single batch of files to a user's download list.
    org.sagebionetworks.repo.model.table.IdRange:
      type: object
      properties:
        minimumId:
          type: integer
          description: The first ID of the range (inclusive).
          format: int32
        maximumId:
          type: integer
          description: The last ID of the range (inclusive).
          format: int32
        versionNumber:
          type: integer
          description: The versionNumber for this range
          format: int32
        maximumUpdateId:
          type: integer
          description: This the the current maximum ID issued to this table. All row updates must have IDs less than or equal to this number.
          format: int32
        etag:
          type: string
          description: The etag for this range
      description: Represents a range of IDs
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
