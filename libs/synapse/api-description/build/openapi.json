{
     "openapi": "3.0.1",
     "info": {
          "title": "Synapse REST API",
          "version": "v1"
     },
     "servers": [{"url": "https://repo-prod.prod.sagebase.org"}],
     "tags": [
          {
               "name": "Access Approval Services",
               "description": "The Access Approval services manage the fulfillment of Access Requirements, on a per-user basis.  \n (See <a href=\"#org.sagebionetworks.repo.web.controller.AccessRequirementController\">\n Access Requirement Services<\/a> for more information.)  Most of the Access Approval services\n are available only to members of the Synapse Access and Compliance Team (ACT)."
          },
          {
               "name": "Access Requirement Services",
               "description": "These services manage the Access Requirements/Restrictions (ARs) which may be placed on Entities,\n or Teams.  An Access Requirement specifies the type of access being restricted as well\n as how the requirement is fulfilled. \n <p>\n ARs complement Access Control Lists (ACLs) for managing access to Synapse objects.\n While ACLs are managed by entity owners, ARs are managed by the Synapse Access and Compliance Team (ACT), which is\n responsible for governance of sensitive data.  Before one may access data associated with an \n AR, there must be a corresponding Access Approval.  For certain ARs --\n of the \"self-sign\" variety -- one may grant ones own approval by agreeing to associated\n 'terms of use.'  For other Access Requirements -- of the 'ACT' variety -- approval may be granted\n only by the ACT.\n <\/p>\n <p>\n As stated above, an AR specifies the type of access being controlled.  Generally\n entities are restricted with DOWNLOAD access.  A Synapse user may be able to see that a Synapse\n File exists, but be unable to download the content due to such an AR.  Teams are\n restricted using the PARTICIPATE access type:  Prior to joining a Team a user must fulfill any\n associated ARs controlling this type of access.\n <\/p>\n <p>\n Entity ARs are inherited from ancestors.  E.g. an AR applied to a Folder will control all Files in the Folder, \n or within sub-folders of the Folder.  Access Requirements are cumulative:  A File will be controlled both\n by ARs applied to it directly and by ARs applied to any and all of its ancestors.\n <\/p>\n <p>\n Access Requirements are fulfilled on a per-user basis using the <a href=\"#org.sagebionetworks.repo.web.controller.AccessApprovalController\">\n Access Approval Services<\/a>.\n <\/p>"
          },
          {
               "name": "Activity Services",
               "description": "<p>\n The <a href=\"${org.sagebionetworks.repo.model.provenance.Activity}\">Activity<\/a>\n model represents the main record of Provenance in Synapse. It is analygous to\n the Activity defined in the <a href=\"http://www.w3.org/TR/prov-primer/\">W3C\n Specification on Provenance<\/a>.\n <\/p>\n <h6>Used & Generated By<\/h6>\n <p>\n Used links are stored directly in the Activity model object as an array of <a href=\"${org.sagebionetworks.repo.model.provenance.Used}\">Used<\/a> objects.\n There is a flag in <a href=\"${org.sagebionetworks.repo.model.provenance.Used}\">Used<\/a> that marks\n if it was \"executed\". <a href=\"${org.sagebionetworks.repo.model.provenance.Used}\">Used<\/a> is an\n interface that is implemented by two objects:\n <\/p>\n <ul>\n <li><a href=\"${org.sagebionetworks.repo.model.provenance.UsedEntity}\">UsedEntity<\/a>\n - For referencing <a href=\"${org.sagebionetworks.repo.model.Entity}\">Entities<\/a> already stored\n in Synapse<\/li>\n <li><a href=\"${org.sagebionetworks.repo.model.provenance.UsedURL}\">UsedURL<\/a> - For\n referencing URL-accessed resources stored outside of Synapse. In Provenance\n visualizations, some URLs are given a special icon, such as links to <a href=\"https://github.com/\">GitHub<\/a>. Note: it is also possible to wrap a\n URL with a <a href=\"${org.sagebionetworks.repo.model.FileEntity}\">FileEntity<\/a> if you\n want all the resources that come with Synapse entities.<\/li>\n <\/ul>\n <p>\n wasGeneratedBy links are stored for each version of each Entity. Thus you\n update the entity with the activity id that generated it. You can ask the\n entity service which activity generated it, and conversely you can ask the\n activity service what entity versions were generatedBy a given activity.\n <\/p>\n <h6>Access Control for Activities<\/h6>\n <p>\n Access to <a href=\"${org.sagebionetworks.repo.model.provenance.Activity}\">Activity<\/a>\n objects is dictated by the following rules:\n <ul>\n <li><b>READ<\/b> - Granted to those users who can see a single Entity that was\n generated by this Activity.<\/li>\n <li><b>UPDATE/DELETE<\/b> - You must be the creator of the Activity to modify\n or delete it.<\/li>\n <li><b>Setting generatedBy for an Entity<\/b> (see <a href=\"${POST.entity}\">POST\n /entity<\/a>) - You must be the creator of the activity to connect it to\n an Entity. (The Entity services allow you to specify an activityId that\n creates a generatedBy relationship between an Activity and an Entity.)<\/li>\n <\/ul>\n \n <\/p>"
          },
          {
               "name": "Agent Chat Services",
               "description": "The Synapse chat services allow the user to chat with a 'bot' (agent) that has\n access to Synapse data. By default, Synapse provides a 'baseline' agent that\n has basic access to all of the supported Synapse action group functions and\n knowledge bases. Sage authorized collaborators can create their own agents\n that can also utilize the same action groups and knowledge bases used by the\n baseline agent. The collaborator's agent can then be used to override the\n baseline agent for chat sessions.\n <\/p>\n To get started, the first step is to create a new session by calling:\n <a href=\"${POST.agent.session}\">POST /agent/session<\/a>. You will need the\n sessionId from the resulting <a href=\"${org.sagebionetworks.repo.model.agent.AgentSession}\">AgentSession<\/a>. The\n sessionId uniquely identifies a single conversation between the user and the\n agent. Specifically, the session contains user's chat requests, agent\n responses and all of the data gathered by the agent to meet user requests.\n The session data is the context provided to the Large Language Model (LLM)\n used by the agent. Only the user that create a session will have access to\n its data and be able to use it for an agent conversation.\n <\/p>\n The user's conversation with an agent is a series of asynchronous jobs under\n the provided sessionId, where each job is started by providing the user's\n prompt to the agent. The job's response will then include the agent's\n response to the user's prompt. Use:\n <a href=\"POST.agent.chat.async.start\">POST /agent/chat/async/start<a/> to\n start a chat job and <a href=\"GET.agent.chat.async.get.asyncToken\">GET\n /agent/chat/async/get/{asyncToken}<\/a> to get the job's results."
          },
          {
               "name": "Asynchronous Job Services",
               "description": "This is a generic set of services that provides support for both launching\n asynchronous jobs and monitoring the progress of jobs."
          },
          {
               "name": "Authentication Services",
               "description": "<p>\n Provides REST APIs for managing and obtaining the necessary credentials to access Synapse.\n <\/p>\n <p>\n Authentication to Synapse services requires an access token passed in the HTTP Authorization\n header, as per the <a href=\"https://tools.ietf.org/html/rfc6750#section-2.1\">HTTP bearer authorization<\/a> standard.\n The access token incorporates a set of 'scopes' and the documentation for each service requiring \n authorization lists the scopes which the access token must include in order to use that service.\n <p/>\n <p>\n Synapse currently supports four modes of obtaining an access token:\n <\/p>\n <ul>\n <li>Present username and password<\/li>\n <li>Authentication via a whitelisted OAuth 2.0 provider<\/li>\n <li>Authentication via a registered OAuth 2.0 client<\/li>\n <li>Exchange an access token for Personal Access Token<\/li>\n <\/ul>\n <p>\n The username and password are exchanged for an access token \n using <a href=\"${POST.login2}\">POST /login2<\/a> service.\n This method should only be used by Synapse itself.  No other \n application should prompt a user for their user name and password.\n <\/p>\n <p>\n Synapse allows authentication via a white listed OAuth 2.0 provider.  Currently only Google is supported.\n The final step is <a href=\"${POST.oauth2.session2}\">POST /oauth2/session2<\/a> which returns an access token\n which is included as a Bearer token in the Authorization header of \n subsequent requests as described above.  Only Synapse itself may use this service, as redirection back\n from the OAuth2 provider is only allowed to the Synapse web portal.\n <\/p>\n <p>\n A registered OAuth 2.0 client can use the <a href=\"#org.sagebionetworks.auth.controller.OpenIDConnectController\">OAuth 2.0 services<\/a>\n to authenticate, the final step of which is a request to the token endpoint:\n <a href=\"${POST.oauth2.token}\">POST /oauth2/token<\/a>\n The returned access token is included as a Bearer token in the Authorization header of \n subsequent requests as described above.\n <\/p>\n <p>\n A user may freely generate up to 100 Personal access tokens (PATs) with scoped access using \n <a href=\"${POST.personalAccessToken}\">POST /personalAccessToken<\/a>. Unlike OAuth access tokens,\n <ul>\n     <li>PATs can be freely generated by a user alone and are not linked to any third party OAuth client and<\/li>\n     <li>While ATs have a strict 24 hour lifetime, PATs are long lived, and will only expire if unused for 180 consecutive days<\/li>\n <\/ul>\n For these reasons, it is critical to treat PATs as sensitive credentials, like passwords. If a user creates more than 100 tokens, then\n the least-recently used token(s) will be deleted until the user has no more than 100 tokens.\n <\/p>\n <p>\n The returned personal access token is included as a Bearer token in the Authorization header of \n subsequent requests as described above.\n <\/p>"
          },
          {
               "name": "Authentication Services (2FA)",
               "description": "<p>\n APIs to manage two factor authentication (2FA) in Synapse.\n <\/p\n <p>\n Synapse currently supports using authenticator applications that can generate a <a href=\"https://en.wikipedia.org/wiki/Time-based_one-time_password\">TOTP<\/a> that is used as a second factor. \n <\/p>\n <p>\n To enable 2FA two requests are involved:\n \n <ol>\n <li><a href=\"${POST.2fa.enroll}\">POST /2fa/enroll<\/a>: Generates a shared secret that is added to the user authenticator application<\/li>\n <li><a href=\"${POST.2fa}\">POST /2fa<\/a>: Enables a specific secret generated by 1. to be used as second factor<\/li>\n <\/ol>\n <\/p>\n \n <p>\n In order to login through 2FA an additional request needs to be performed after the user attempts to authenticate (e.g. through the <a href=\"${POST.login2}\">POST /login2<\/a> API). \n If the user has 2FA enabled, they will receive a 401 and the body of the response will contain a twoFaToken that can be used in the <a href=\"${POST.2fa.token}\">POST /2fa/token<\/a> API to obtain an access token.\n <\/p>\n \n <p>\n The user can additionally generate a set of recovery codes using the <a href=\"${POST.2fa.recoveryCodes}\">POST /2fa/recoveryCodes<\/a> API. The codes are one time use and can be used in place of a TOTP code when\n performing 2FA authentication. The body of the <a href=\"${POST.2fa.token}\">POST /2fa/token<\/a> request should specify as otpType RECOVERY_CODE and the value of the otpCode should match one of the generated codes.\n <\/p>"
          },
          {
               "name": "Certified User Services",
               "description": "To become a Synapse Certified User you must pass a test.  The Synapse APIs include\n a service to provide the test and a service to submit a test result.  There are also\n administrative services to retrieve the history of test submissions."
          },
          {
               "name": "Challenge Services",
               "description": "A Challenge is a special object that supplements a project, providing additional features\n specific to challenges.  This set of services provides \"CRUD\" for Challenge objects and\n ChallengeTeam objects, which register a Team for a Challenge.  The services also provide\n a number of queries regarding Challenges, challenge participants and challenge Teams."
          },
          {
               "name": "DOI Services",
               "description": "Provides REST APIs for managing Synapse DOIs."
          },
          {
               "name": "Data Access Services",
               "description": "<p>Some data in Synapse are governed by an ACTAccessRequirement. To gain access\n to these data, a user must meet all requirements specified in the ACTAccessRequirement.<\/p>\n <br>\n <p>These services provide the APIs for users to create request to gain access to \n controlled data, and APIs for the ACT to review and grant access to users.<\/p>"
          },
          {
               "name": "Discussion Services",
               "description": "<p>Discussions in Synapse are captured in the Project's Forum. Each \n Project has a Forum. Each Forum has a set of Moderators. The Moderators manage \n the content of the Forum.<\/p>\n <br>\n <p>A Forum has multiple Threads. A Thread is created by an authorized user. \n Other authorized users can view and reply to an existing Thread.<\/p>\n <br>\n <p>These services provide the APIs for Moderators and authorized users to \n create, edit, and manage the conversations that happen in Synapse.<\/p>\n <br>"
          },
          {
               "name": "Docker Authorization Services",
               "description": "These services allow Synapse to act as an authorization service for a Docker Registry.\n For more details see: https://github.com/docker/distribution/blob/master/docs/spec/auth/token.md\n \n Authorization is either:\n <ul>\n <li>User name and password, included in the request as a Basic Authorization header<\/li>\n <li>An oauth access token, passed as a Bearer Authorization header.  To execute 'docker pull' the access token must include 'download'\n scope; to execute 'docker push' the access token must include 'modify' scope and should include 'download' scope.<\/li>\n <\/ul>"
          },
          {
               "name": "Docker Commit Services",
               "description": "These services relate to the 'commits' to Docker repositories.\n Note that create, update and delete of the Docker repositories themselves are done using\n the <a href=\"#org.sagebionetworks.repo.web.controller.EntityController\">Entity Services<\/a>,\n for external/unmanaged repositories, or by direct integration with the Docker registry, for managed\n Docker repositories.  Tagged commits for both managed and external/unmanaged repositories may be\n retrieved using the 'listDockerTags' API included in this service."
          },
          {
               "name": "Docker Registry Event Services",
               "description": "These services process events from the Docker Registry.\n They are separated from other Docker Controllers because the authorization \n is different, i.e. basic authorization using a key/value pair.\n \n These services are not intended to be used by Synapse clients, only by\n the Docker registry."
          },
          {
               "name": "Download List Services",
               "description": "Services for managing a user's download list.\n <\/p>\n Files can be added to the user's download list using\n <a href=\"${POST.download.list.add}\">POST /download/list/add<\/a>. Files can be\n removed from the user's download by calling either\n <a href=\"${POST.download.list.remove}\">POST /download/list/remove<\/a>, or the\n entire list can be cleared with: <a href=\"${DELETE.download.list}\">DELETE\n /download/list<\/a>.\n <\/p>\n In order to query the files on a user's download list, first start an\n asynchronous job using <a href=\"${POST.download.list.query.async.start}\">POST\n /download/list/query/async/start<\/a> to get an asynchToken. The job results\n can be monitored using\n <a href=\"${GET.download.list.query.async.get.asyncToken}\">GET\n /download/list/query/async/get/{asyncToken}<\/a>. While the job is still\n processing the GET call will return a status code of 202 (ACCEPTED). Once the\n job is complete the GET call will return a status code of 200 with the\n response body.\n <\/p>\n <b>Download List Service Limits<\/b>\n <table border=\"1\">\n <tr>\n <th>resource<\/th>\n <th>limit<\/th>\n <th>notes<\/th>\n <\/tr>\n <tr>\n <td>Maximum number of files on a user's download list<\/td>\n <td>100,000 files<\/td>\n <td><\/td>\n <\/tr>\n <tr>\n <td>Maximum batch size for adding/removing files<\/td>\n <td>1000 files<\/td>\n <td><\/td>\n <\/tr>\n <\/table>"
          },
          {
               "name": "Drs Services",
               "description": "<p>\n The <a href=\"https://ga4gh.github.io/data-repository-service-schemas/preview/release/drs-1.2.0/docs/\">\n Data Repository Service<\/a> API provides access to data objects in single, standard way regardless of\n where they are stored and how they are managed. The data objects for which information can be fetched are \n <a href=\"${org.sagebionetworks.repo.model.FileEntity}\">FileEntity<\/a> and\n <a href=\"${org.sagebionetworks.repo.model.table.Dataset}\">Dataset<\/a>.The data object that is downloaded is a file.\n <\/p>\n <p>\n The supported end points for DRS are:\n     <ul>\n         <li><a href=\"${GET.service-info}\"> GET /service-info<\/a><\/li>\n         <li><a href=\"${GET.objects.object_id}\"> GET /objects/{object_id}<\/a><\/li>\n     <\/ul>\n <\/p>\n <p>\n     Use the <a href=\"${GET.service-info}\"> GET /service-info <\/a> API to get information about GA4GH-compliant web services,\n     including DRS services, to be aggregated into registries and made available via a standard API.\n     <\/p>\n     Use the <a href=\"${GET.objects.object_id}\"> GET /objects/{object_id} <\/a> API to get information about individual DRS objects.\n     <\/p>"
          },
          {
               "name": "Entity Bundle Services V2",
               "description": "<p>\n The Entity Bundle Services provide bundled access to Entities and their related data components.\n An EntityBundle can be used to create, fetch, or update an Entity and associated objects with a\n single web service request.\n <\/p>"
          },
          {
               "name": "Entity Services",
               "description": "<p>\n All data in Synapse is organize into\n <a href=\"${org.sagebionetworks.repo.model.Project}\">Projects<\/a>. These\n Projects can be further organized into hierarchical\n <a href=\"${org.sagebionetworks.repo.model.Folder}\">Folders<\/a>. Finally, the\n data is then represented by\n <a href=\"${org.sagebionetworks.repo.model.FileEntity}\">FileEntities<\/a> that\n reside within Folders or directly within Projects. All these objects\n (Projects, Folders, FileEntities) are derived from a common object called\n <a href=\"${org.sagebionetworks.repo.model.Entity}\">Entity<\/a>. The Entity\n Services provide the means to create, read, update, and delete Synapse\n Entities. There are also services for navigating the Entity hierarchies ,\n setting Authorization rules, and Annotating Entities.\n <\/p>\n <p>\n In addition to the basic entity types (Project, Folder, & FileEntity),\n Synapse also supports the following Entity types:\n <ul>\n <li><a href=\"${org.sagebionetworks.repo.model.table.TableEntity}\">TableEntity<\/a><\/li>\n <li><a href=\"${org.sagebionetworks.repo.model.docker.DockerRepository}\">DockerRepository<\/a><\/li>\n <li><a href=\"${org.sagebionetworks.repo.model.table.EntityView}\">EntityView<\/a><\/li>\n <li><a href=\"${org.sagebionetworks.repo.model.table.SubmissionView}\">SubmissionView<\/a><\/li>\n <li><a href=\"${org.sagebionetworks.repo.model.table.Dataset}\">Dataset<\/a><\/li>\n <li><a href=\"${org.sagebionetworks.repo.model.table.DatasetCollection}\">DatasetCollection<\/a><\/li>\n <li><a href=\"${org.sagebionetworks.repo.model.table.MaterializedView}\">MaterializedView<\/a><\/li>\n <li><a href=\"${org.sagebionetworks.repo.model.table.VirtualTable}\">VirtualTable<\/a><\/li>\n <\/ul>\n <\/p>\n <p>\n The following methods provide the basic Create, Read, Update, Delete (CRUD)\n for Entities:\n <\/p>\n <ul>\n <li><a href=\"${POST.entity}\">POST /entity<\/a><\/li>\n <li><a href=\"${GET.entity.id}\">GET /entity/{id}<\/a><\/li>\n <li><a href=\"${PUT.entity.id}\">PUT /entity/{id}<\/a><\/li>\n <li><a href=\"${DELETE.entity.id}\">DELETE /entity/{id}<\/a><\/li>\n <\/ul>\n <h6>Annotations<\/h6>\n <p>\n An Entity can be annotated using the\n <a href=\"${PUT.entity.id.annotations2}\">PUT /entity/{id}/annotations2<\/a>\n method. Each annotation is a key-value pair. The\n <a href=\"${GET.entity.id.annotations2}\">GET /entity/{id}/annotations2<\/a>\n method can be used to get the current annotations of an entity.\n <\/p>\n <h6>Authorization<\/h6>\n <p>\n An Entity's authorization is controlled by the Entity's\n <a href=\"${org.sagebionetworks.repo.model.AccessControlList}\">Access Control\n List (ACL)<\/a>. When a new Project is created a new ACL is automatically\n created for the Project. New Folders and FileEnties start off inheriting the\n ACL of their containing Project. This means they do not have their own ACL\n and all authorization is controlled by their Project's ACL. The term\n 'benefactor' is used to indicate which Entity an Entity inherits its ACL\n from. For example, a newly created Project will be its own benefactor, while\n a new FileEntity's benefactor will start off as its containing Project. The\n current benefactor of any Entity can be determined using the\n <a href=\"${GET.entity.id.benefactor}\">GET /entity/{id}/benefactor<\/a> method.\n <\/p>\n <p>\n For the case where a Folder or FileEntity needs its own ACL (as opposed to\n inheriting it from its containing Project) a new ACL can be created for the\n Entity using the <a href=\"${POST.entity.id.acl}\">POST /entity/{id}/acl<\/a>\n method. When a new ACL is created for an Entity it will no longer inherit its\n permission from its containing Project and it will become its own benefactor.\n <\/p>\n <p>\n While creating or updating an ACL, only Certified Users can add DOWNLOAD\n permission for Authenticated Users group.\n <\/p>\n <p>\n For the case where a Folder or FileEntity no longer needs its own ACL, the\n ACL can deleted using the <a href=\"${DELETE.entity.id.acl}\">DELETE\n /entity/{id}/acl<\/a> method. When the ACL of an File or Folder is deleted, it\n will automatically be assigned the same benefactor as its parent Entity.\n Deleting the ACL of a Project is not allowed.\n <\/p>\n <p>\n The <a href=\"${GET.entity.id.acl}\">GET /entity/{id}/acl<\/a> can be used to\n get an Entity's ACL.\n <\/p>\n <p>\n To determine what permissions a User has on an Entity, the\n <a href=\"${GET.entity.id.permissions}\">GET /entity/{id}/permissions<\/a>\n method should be used.\n <\/p>\n <p>\n In addition to authorization via ACLs, entities may be restricted via\n AccessRequirements (ARs). For more information, see <a href=\"#org.sagebionetworks.repo.web.controller.AccessRequirementController\">\n Access Requirement Services<\/a> and\n <a href=\"#org.sagebionetworks.repo.web.controller.AccessApprovalController\">\n Access Approval Services<\/a>\n <\/p>\n <h6>Versions<\/h6>\n <p>\n Currently,\n <a href=\"${org.sagebionetworks.repo.model.FileEntity}\">FileEntities<\/a> are\n \"versionable\" meaning it is possible for it to have multiple versions of the\n file. Whenever, a FileEntity is updated with a new\n <a href=\"${org.sagebionetworks.repo.model.file.FileHandle}\">FileHandle<\/a>\n whose MD5 differs from the MD5 of the current file hanlde a new version of\n the FileEntity is automatically created. The history of a FileEntity can be\n retrieved using <a href=\"${GET.entity.id.version}\">GET\n /entity/{id}/version<\/a> method. A specific version of a FileEntity can be\n retrieved using <a href=\"${GET.entity.id.version.versionNumber}\">GET\n /entity/{id}/version/{versionNumber}<\/a> method. The Annotations of a\n specific version of an FileEntity can be retrieved using the\n <a href=\"${GET.entity.id.version.versionNumber.annotations2}\">GET\n /entity/{id}/version/{versionNumber}/annotations<\/a> method.\n <\/p>\n <p>\n Despite being <a href=\"${org.sagebionetworks.repo.model.VersionableEntity}\">versionable<\/a>,\n <a href=\"${org.sagebionetworks.repo.model.table.TableEntity}\">Tables<\/a>,\n <a href=\"${org.sagebionetworks.repo.model.table.View}\">Views<\/a> and <a href=\"${org.sagebionetworks.repo.model.table.MaterializedView}\">Materialized\n Views<\/a> are versioned using snapshots: see\n <a href=\"${POST.entity.id.table.snapshot}\">POST\n /entity/{id}/table/snapshot<\/a> and\n <a href=\"${POST.entity.id.table.transaction.async.start}\">POST\n /entity/{id}/table/transaction/async/start<\/a>.\n <\/p>\n <p>\n <b><i>Note: <\/b>Only the File and Annotations of an Entity are included in\n the version. All other components of an Entity such as description, name,\n parent, ACL, and WikiPage are <b>not<\/b> not part of the version, and will\n not vary from version to version.<\/i>\n <\/p>\n <h6>JSON Schemas<\/h6>\n <p>\n Each Entity type and Model object in Synapse is defined by a JSON schema. The\n <a href=\"${GET.REST.resources}\">GET /REST/resources<\/a> method will list the\n full name of all Resources used by Synapse. The schema for each Resource is\n accessible via <a href=\"${GET.REST.resources.schema}\">GET\n /REST/resources/schema<\/a>. Note: Many of these resources are composition\n objects and one must navigate various interfaces of an object to fully digest\n it. Therefore, a flattened (or effective) schema for each resource is\n available from the <a href=\"${GET.REST.resources.effectiveSchema}\">GET\n /REST/resources/effectiveSchema<\/a>\n <\/p>\n <b>Entity Service Limits<\/b>\n <table border=\"1\">\n <tr>\n <th>resource<\/th>\n <th>limit<\/th>\n <\/tr>\n <tr>\n <td>Maximum size of an Entity.name<\/td>\n <td>256 characters<\/td>\n <\/tr>\n <tr>\n <td>Maximum size of an Entity.desciption<\/td>\n <td>1000 characters<\/td>\n <\/tr>\n <\/tr>\n <tr>\n <td>Maximum number of versions for a single Entity<\/td>\n <td>15,000<\/td>\n <\/tr>\n <tr>\n <td>Maximum number of keys in Annotations<\/td>\n <td>100<\/td>\n <\/tr>\n <tr>\n <td>Maximum number of values associated with a single key in Annotations<\/td>\n <td>100<\/td>\n <\/tr>\n <tr>\n <td>Maximum total character count for all values associated with a single key\n in Annotations when the AnnotationValueType is STRING<\/td>\n <td>500<\/td>\n <\/tr>\n <tr>\n <td>Maximum hierarchical depth of an Entity<\/td>\n <td>50<\/td>\n <\/tr>\n <\/table>"
          },
          {
               "name": "Evaluation Services",
               "description": "<p>\n The Evaluation API is designed to support open-access data analysis and modeling challenges in\n Synapse. This framework provides tools for administrators to collect and analyze data models\n from Synapse users created for a specific goal or purpose.\n <\/p>\n  \n <p>\n The data model of the Evaluation API is built around around two primary objects:\n <ul>\n <li> <a href=\"${org.sagebionetworks.evaluation.model.Evaluation}\">Evaluation<\/a>: The primary\n object representing a Synapse Evaluation. Access to Evaluations is governed by an <a href=\"${org.sagebionetworks.repo.model.AccessControlList}\">Access Control\n List (ACL)<\/a>.\n <\/li> \n <li> <a href=\"${org.sagebionetworks.evaluation.model.Submission}\">Submission<\/a>: A user\n in a Synapse Evaluation can submit a Synapse Entity as Submission to that Evaluation. Submission\n data is owned by the parent Evaluation, and is immutable.\n <\/ul>\n <\/p>\n \n <p>\n The data model includes additional objects to support scoring of Submissions and convenient data \n access:\n <ul>\n <li> <a href=\"${org.sagebionetworks.evaluation.model.SubmissionStatus}\">SubmissionStatus<\/a>: An\n object used to track scoring information for a single Submission. This object is intended to be\n modified by the users (or test harnesses) managing the Evaluation.\n <\/li> \n <li> <a href=\"${org.sagebionetworks.evaluation.model.SubmissionBundle}\">SubmissionBundle<\/a>: \n A convenience object to transport a Submission and its accompanying SubmissionStatus in a single\n web service call.\n <\/li>\n <li> <a href=\"${org.sagebionetworks.repo.model.table.SubmissionView}\">SubmissionView<\/a>: \n A submission view can be created using the \n <a href=\"${org.sagebionetworks.repo.web.controller.EntityController}\">Entity Services<\/a> providing\n as scope a list of evaluation ids, in order to query the set of submissions through \n the <a href=\"${POST.entity.id.table.query.async.start}\">Table Query Services<\/a>.\n <a href=\"${org.sagebionetworks.repo.model.annotation.v2.Annotations}\">Annotations<\/a> set in \n the submissionAnnotations property of a <a href=\"${org.sagebionetworks.evaluation.model.SubmissionStatus}\">SubmissionStatus<\/a> \n can be exposed in the view.\n <\/li>\n <\/ul>\n <\/p>\n \n The Evaluation API supports data access mechanisms to monitor Evaluation activity for on-demand \n scoring and leaderboarding."
          },
          {
               "name": "File Services",
               "description": "<p>\n A FileHandle is an abstraction for a reference to a file in Synapse.  For details on the various types see: <a href=\"${org.sagebionetworks.repo.model.file.FileHandle}\">FileHandle<\/a>.\n <\/p>\n <p>\n <b>Multi-part File Upload API<\/b>\n <\/p>\n <p>\n In order to ensure file upload is robust, all files must be uploaded to\n Synapse in 'parts'. This means clients are expected to divide each file into\n 'parts' and upload each part separately. Since Synapse tracks the state of\n all multi-part uploads, upload failure can be recovered simply by uploading\n all parts that Synapse reports as missing.\n <\/p>\n <p>\n <i>Note: For multi-part upload 1 MB is defined as 1024*1024 bytes <\/i>\n <\/p>\n <p>\n The first task in multi-part upload is choosing a part size. The minimum part\n size is 5 MB (1024*1024*5) and the maximum part size is 5 GB (1024*1024*1024*5). \n Therefore, any file with a size less than or equal to 5 MB will have a single part and a partSize=5242880. \n The maximum number of parts for a single file 10,000 parts. The following should be used\n to choose a part size:\n <\/p>\n <p>\n partSize = max(5242880, (fileSize/10000))\n <\/p>\n <p>\n Once a partSize is chosen, a multi-part upload can be started using the\n following: <a href=\"${POST.file.multipart}\">POST /file/multipart<\/a> which\n will return an <a href=\"${org.sagebionetworks.repo.model.file.MultipartUploadStatus}\">MultipartUploadStatus<\/a>. The client is expected to use\n MultipartUploadStatus to drive the upload. The client will need to upload\n each missing part (parts with '0' in the partsState) as follows:\n <\/p>\n <p>\n <ol>\n <li>Get a pre-signed URL to upload the part to using: <a href=\"${POST.file.multipart.uploadId.presigned.url.batch}\">POST\n /file/multipart/{uploadId}/presigned/url/batch<\/a><\/li>\n <li>Upload the part to the pre-signed URL using HTTPs PUT<\/li>\n <li>Add the part to the multi-part upload using: <a href=\"${PUT.file.multipart.uploadId.add.partNumber}\">PUT\n /file/multipart/{uploadId}/add/{partNumber}<\/a><\/li>\n <\/ol>\n <\/p>\n <p>\n Once all parts have been successfully added to the multi-part upload, the\n upload can be completed using: <a href=\"${PUT.file.multipart.uploadId.complete}\">PUT\n /file/multipart/{uploadId}/complete<\/a> to produce a new <a href=\"${org.sagebionetworks.repo.model.file.FileHandle}\">FileHandle<\/a> If\n the upload fails for any reason, the client should start over ( <a href=\"${POST.file.multipart}\">POST /file/multipart<\/a>) and continue by\n uploading any parts that are reported as missing.\n <\/p>\n <p>\n <b>Multi-part File Copy API<\/b>\n <\/p>\n <p>\n The multipart API supports a robust copy of existing files to other locations (e.g. in case of a data migration)\n without the need to download and re-upload the file. This is currently supported only from and to S3 storage locations that reside in the same region.\n In order to initiate a multipart copy, a <a href=\"${POST.file.multipart}\">POST /file/multipart<\/a> request can be sent\n using as the body of the request a <a href=\"${org.sagebionetworks.repo.model.file.MultipartUploadCopyRequest}\">MultipartUploadCopyRequest<\/a>.\n <\/p>\n <p>\n The part size allows to parallelize the copy in multiple sub-parts, the same limits of the upload applies to the copy (e.g. it is possible to copy \n a file in a single part up to 5 GB). When initiating a copy we recommend to choose the part size as follows:\n <\/p>\n <p>\n partSize = max(104857600, (fileSize/10000))\n <\/p>\n <p>\n Once the multipart copy is initiated the process is the same as the multipart upload:\n <\/p>\n <p>\n <ol>\n <li>\n Get the part copy pre-signed URLs using: <a href=\"${POST.file.multipart.uploadId.presigned.url.batch}\">POST\n /file/multipart/{uploadId}/presigned/url/batch<\/a>\n <\/li>\n <li>\n For each pre-signed URL perform an HTTP PUT request with no body, the response of the previous endpoint contains a map of headers that are \n signed with the URL, all of the headers MUST be included in the PUT request.\n <\/li>\n <li>Once the copy request is performed, add the part to the multi-part copy using: <a href=\"${PUT.file.multipart.uploadId.add.partNumber}\">PUT\n /file/multipart/{uploadId}/add/{partNumber}<\/a>. \n The value of the partMD5Hex parameter will be MD5 checksum returned in the response of the request sent to the pre-signed URL.\n <\/li>\n <li>\n Once all parts have been successfully added to the multi-part copy, the\n copy can be completed using: <a href=\"${PUT.file.multipart.uploadId.complete}\">PUT\n /file/multipart/{uploadId}/complete<\/a> to produce a new <a href=\"${org.sagebionetworks.repo.model.file.FileHandle}\">FileHandle<\/a>\n <\/li>\n <\/ol>\n <\/p>\n <p>\n Note about the copy integrity: The resulting file handle will have the same content MD5 of the source file handle, but synapse\n does not try to re-compute or verify this value. Instead, the integrity check is performed by the cloud provider (currently only S3)\n during the copy request for the part (the request sent to the pre-signed URL). Each copy pre-signed URL is signed with a special\n header that makes sure that the source file didn't change during the copy, if this is the case the PUT request to the pre-signed URL\n will fail and a new copy should be re-started.\n <\/p>\n <p>\n <b>Associating FileHandles with Synapse objects<\/b>\n <\/p>\n <p>\n FileHandles can be associated with various type of objects such as a <a href=\"${org.sagebionetworks.repo.model.FileEntity}\">FileEntity<\/a> and  <a href=\"${org.sagebionetworks.repo.model.wiki.WikiPage}\">WikiPage<\/a>. The full list of association types can be found in the <a href=\"${org.sagebionetworks.repo.model.file.FileHandleAssociateType}\">FileHandleAssociateType<\/a> enumeration.\n <p>\n Note that a file handle MUST always be associated with an object, if a file handle is not associated with an objects for more than 30 days Synapse will mark it as <a href=\"${org.sagebionetworks.repo.model.file.FileHandleStatus}\">UNLINKED<\/a> and eventually archive or delete it from the system.\n <\/p>\n <p>\n For more information see the following:\n <\/p>\n <ul>\n <li><a href=\"${org.sagebionetworks.repo.model.FileEntity}\">FileEntity<\/a>\n <li><a href=\"${POST.entity}\">POST /entity<\/a>\n <li><a href=\"${PUT.entity.id}\">PUT /entity/{id}<\/a>\n <li><a href=\"${GET.entity.id.filepreview}\">GET /entity/{id}/filepreview<\/a>\n <li><a href=\"${GET.entity.id.version.versionNumber.filepreview}\">GET\n /entity/{id}/version/{versionNumber}/filepreview<\/a>\n <li><a href=\"${GET.entity.id.filehandles}\">GET /entity/{id}/filehandles<\/a>\n <li><a href=\"${GET.entity.id.version.versionNumber.filehandles}\">GET\n /entity/{id}/version/{versionNumber}/filehandles<\/a>\n <li><a href=\"${POST.fileHandle.batch}\">POST /fileHandle/batch<\/a>\n <\/ul>\n <b>Service Limits<\/b>\n <table border=\"1\">\n <tr>\n <th>resource<\/th>\n <th>limit<\/th>\n <th>notes<\/th>\n <\/tr>\n <tr>\n <td>Minimum file size<\/td>\n <td>0 bytes<\/td>\n <td><\/td>\n <\/tr>\n <tr>\n <td>Maximum file size<\/td>\n <td>5 TB (5,497,558,100,000 bytes)<\/td>\n <td><\/td>\n <\/tr>\n <tr>\n <tr>\n <td>Maximum number of parts<\/td>\n <td>10,000<\/td>\n <td><\/td>\n <\/tr>\n <td>Minimum file part size<\/td>\n <td>5 MB (5,242,880 bytes)<\/td>\n <td>The recommended part size for an upload is max(5242880, (fileSize/10000)). For a copy max(104857600, (fileSize/10000)).<\/td>\n <\/tr>\n <tr>\n <td>Maximum file part size<\/td>\n <td>5 GB (5,368,709,120 bytes)<\/td>\n <td><\/td>\n <\/tr>\n <\/table>"
          },
          {
               "name": "Form Services",
               "description": "Collection of APIs from managing and submitting form data. There are two\n basic objects:\n <ul>\n <li><a href=\"${org.sagebionetworks.repo.model.form.FormData}\">FormData<\/a> -\n Represent an end user's data gathered from a form template. All FormData\n belongs to a single FormGroup.<\/li>\n <li><a href=\"${org.sagebionetworks.repo.model.form.FormGroup}\">FormGroup<\/a>\n - Represents a grouping of FormData with an\n <a href=\"${org.sagebionetworks.repo.model.AccessControlList}\">Access Control\n List (ACL)<\/a> for administration. The ACL controls both who can submit data\n to the group and who has access to the submitted data.<\/li>\n <\/ul>\n <p>\n To download the data associated with a FormData object use:\n <a href=\"${POST.fileHandle.batch}\">POST /fileHandle/batch<\/a> providing the\n formData.dataFileHandleId with <a href=\"${org.sagebionetworks.repo.model.file.FileHandleAssociateType}\">FileHandleAssociateType.FormData<\/a>"
          },
          {
               "name": "JSON Schema Services",
               "description": "This set of services provide project designers with tools to define their own\n schemas to control and validate metadata applied to Projects, Folders, and\n Files. All schemas are defined using JSON schemas following\n <a href=\"https://json-schema.org/\">json-schema.org<\/a> specification.\n <p>\n To get started, you will need to either create a new <a href=\"${org.sagebionetworks.repo.model.schema.Organization}\">Organization<\/a> or\n join an existing Organization. Each Organization has an AccessControlList\n (ACL) that controls which users/teams are authorized to contribute schemas\n under that Organization's name-space. The Organization's name-space is\n referenced using the Organization's name, which is also the root of all\n schema $ids within the Organization."
          },
          {
               "name": "Log Service",
               "description": "https://sagebionetworks.jira.com/wiki/display/PLFM/Repository+Service+API#RepositoryServiceAPI-QueryAPI"
          },
          {
               "name": "Membership Invitation Services",
               "description": "The Membership Invitation Services create, retrieve and delete \n membership invitations.  A membership invitation is created by a Team administrator\n to invite a Synapse user to join the Team.  Without the invitation it is not possible\n for an outside user to join.  For more on Teams, see\n <a href=\"#org.sagebionetworks.repo.web.controller.TeamController\">Team Services<\/a>."
          },
          {
               "name": "Membership Request Services",
               "description": "The Membership Request Services create, retrieve and delete \n membership requests.  A membership request is created by a Synapse user\n to request admission to a Team.  Without the request it is not possible\n for a Team to admit the user.  For more on Teams, see\n <a href=\"#org.sagebionetworks.repo.web.controller.TeamController\">Team Services<\/a>."
          },
          {
               "name": "Message Services",
               "description": "<p>\n Provides REST APIs for sending messages to other Synapse users and for commenting on Synapse entities.\n <\/p>"
          },
          {
               "name": "OpenID Connect Services",
               "description": "The OpenID Connect (OIDC) services implement OAuth 2.0 with the OpenID identity extensions."
          },
          {
               "name": "Principal Services",
               "description": "A <a href=\"http://en.wikipedia.org/wiki/Principal_%28computer_security%29\">\n Principal<\/a> in Synapse can be a User, Group, or a Team. This is a set of\n services that provides the means to look-up principals by their various\n attributes and also to test unique names such as USER_NAME, USER_EMAIL, or\n TEAM_NAME are available for use."
          },
          {
               "name": "Project Settings Services",
               "description": "The project settings services provide configuration options that can be applied to projects. In particular through the <a href=\"${POST.projectSettings}\">POST /projectSettings<\/a> and <a href=\"${PUT.projectSettings}\">PUT /projectSettings<\/a> services\n a user can create or update the setting of a specific <a href=\"${org.sagebionetworks.repo.model.project.ProjectSettingsType}\">type<\/a> for a project.\n <\/p>\n Currently supported settings for a project are:\n \n <ul>\n <li><a href=\"${org.sagebionetworks.repo.model.project.UploadDestinationListSetting}\">UploadDestinationListSetting<\/a>: Used to customize the storage location for files in a project<\/li>\n <\/ul>\n\n <\/p>\n The <a href=\"${POST.storageLocation}\">POST /storageLocation<\/a> service is provided in order to create <a href=\"${org.sagebionetworks.repo.model.project.StorageLocationSetting}\">StorageLocationSetting<\/a>. The id of a\n <a href=\"${org.sagebionetworks.repo.model.project.StorageLocationSetting}\">StorageLocationSetting<\/a> can then be set in the <b>locations<\/b> property of \n the <a href=\"${org.sagebionetworks.repo.model.project.UploadDestinationListSetting}\">UploadDestinationListSetting<\/a>.\n <\/p>\n When uploading a file the id of the default <a href=\"${org.sagebionetworks.repo.model.project.StorageLocationSetting}\">StorageLocationSetting<\/a> to be used on a folder can be retrieved\n using the <a href=\"${GET.entity.id.uploadDestination}\">GET /entity/{id}/uploadDestination<\/a> service using the id of the parent entity (e.g. a folder or a project).\n <\/p>\n By setting a custom storage location, users can store the data in their own S3 or Google Cloud bucket. Note that when a folder or a project is configured to use a custom storage location,\n only future uploads through Synapse are affected (e.g. changing the storage location does not automatically change the location of existing files).\n For a guide on setting a custom storage location, see the <a href=\"https://help.synapse.org/docs/Custom-Storage-Locations.2048327803.html\">Custom Storage Location<\/a> documentation\n article.\n <\/p>"
          },
          {
               "name": "Recycle Bin Services",
               "description": "The recycle bin (or trash can) is the special folder that holds the deleted entities for users.\n <p>\n Services are provided for users to delete entities into the trash can, to view entities\n in the trash can, to purge entities from the trash can, and to restore entities out\n of the trash can."
          },
          {
               "name": "Search Services",
               "description": "Search for Entities on Synapse"
          },
          {
               "name": "Statistics Services",
               "description": "Services that expose statistics computed by the backend."
          },
          {
               "name": "Storage Report Services",
               "description": "Provides REST APIs for generating Storage Reports. These may only be used by the Synapse Report Team."
          },
          {
               "name": "Subscription Services",
               "description": "<p>While working in Synapse, users may want to subscribe to different topics\n to receive notifications about changes in those topics.<\/p>\n <br>\n <p>These services provide the APIs for Synapse users to manage their subscriptions.<\/p>\n <br>"
          },
          {
               "name": "Table Services",
               "description": "<p>\n A Synapse\n <a href=\"${org.sagebionetworks.repo.model.table.TableEntity}\">TableEntity<\/a>\n model object represents the metadata of a table. Each TableEntity is defined\n by a list of\n <a href=\"${org.sagebionetworks.repo.model.table.ColumnModel}\">ColumnModel<\/a>\n IDs. Use <a href=\"${POST.column}\">POST /column<\/a> to create new ColumnModel\n objects. Each ColumnModel object is immutable, so to change a column of a\n table a new column must be added and the old column must be removed.\n TableEntities can be created, updated, read and deleted like any other\n entity:\n <ul>\n <li><a href=\"${POST.entity}\">POST /entity<\/a><\/li>\n <li><a href=\"${GET.entity.id}\">GET /entity/{id}<\/a><\/li>\n <li><a href=\"${PUT.entity.id}\">PUT /entity/{id}<\/a><\/li>\n <li><a href=\"${DELETE.entity.id}\">DELETE /entity/{id}<\/a><\/li>\n <\/ul>\n <\/p>\n <p>\n <p>\n All ColumnModel objects are publicly viewable and usable. Since each\n ColumnModel is immutable it is safe to re-use ColumnModels created by other\n users. Use the <a href=\"${GET.column}\">GET /column<\/a> services to list all\n of the existing ColumnModels that are currently in use.\n <\/p>\n \n Once the columns for a TableEntity have been created and assigned to the\n TableEntity, rows can be added to the table using\n <a href=\"${POST.entity.id.table.transaction.async.start}\">POST\n /entity/{id}/table/transaction/async/start<\/a>. Each\n <a href=\"${org.sagebionetworks.repo.model.table.Row}\">Row<\/a> appended to the\n table will automatically be assigned a rowId and a versionNumber and can be\n found in the resulting\n <a href=\"${org.sagebionetworks.repo.model.table.RowReferenceSet}\">RowReferenceSet<\/a>. To update a row, simply include the row's rowId in the\n passed <a href=\"${org.sagebionetworks.repo.model.table.RowSet}\">RowSet<\/a>.\n Any row without a rowId will be treated as a new row. When a row is updated a\n new versionNumber will automatically be assigned the Row. While previous\n versions of any row are kept, only the current version of any row will appear\n in the table index used to support the query service:\n <a href=\"${POST.entity.id.table.query.async.start}\">POST\n /entity/{id}/table/query/async/start<\/a>\n <\/p>\n <p>\n Use the <a href=\"${POST.entity.id.table.query.async.start}\">POST\n /entity/{id}/table/query/async/start<\/a> services to query for the current\n rows of a table. The returned\n <a href=\"${org.sagebionetworks.repo.model.table.RowSet}\">RowSet<\/a> of the\n table query can be modified and returned to update the rows of a table using\n <a href=\"${POST.entity.id.table.transaction.async.start}\">POST\n /entity/{id}/table/transaction/async/start<\/a>.\n <\/p>\n <p>\n There is also an <a href=\"${org.sagebionetworks.repo.web.controller.AsynchronousJobController}\">asynchronous service<\/a> to\n <a href=\"${org.sagebionetworks.repo.model.table.UploadToTableRequest}\">upload<\/a> and\n <a href=\"${org.sagebionetworks.repo.model.table.DownloadFromTableRequest}\">download<\/a> csv files, suitable for large datasets.\n <\/p>\n <p>\n <b>Table Service Limits<\/b>\n <table border=\"1\">\n <tr>\n <th>resource<\/th>\n <th>limit<\/th>\n <th>notes<\/th>\n <\/tr>\n <tr>\n <td>Maximum size of column names<\/td>\n <td>256 characters<\/td>\n <td><\/td>\n <\/tr>\n <tr>\n <td>Maximum number of enumeration values for a single column<\/td>\n <td>100<\/td>\n <td><\/td>\n <\/tr>\n <tr>\n <td>Maximum number of columns per table/view<\/td>\n <td>152<\/td>\n <td><\/td>\n <\/tr>\n <tr>\n <td>The maximum possible width of a table/view<\/td>\n <td>64 KB<\/td>\n <td>Each\n <a href=\"${org.sagebionetworks.repo.model.table.ColumnType}\">ColumnType<\/a>\n has a maximum possible size. The total width of a table/view is the sum of\n the maximum size of each of its columns<\/td>\n <\/tr>\n <tr>\n <td>The maximum number of LARG_TEXT columns per table/view<\/td>\n <td>30<\/td>\n <td><\/td>\n <\/tr>\n <td>Maximum table size<\/td>\n <td>~146 GB<\/td>\n <td>All row changes applied to a table are automatically batched into changes\n sets with a maximum size of 5242880 bytes (5 MB). Currently, there is a limit\n of 30,000 change sets per table. Therefore, the theoretical maximum size of\n table is 5242880 bytes * 30,000 = ~ 146 GB.<\/td>\n <\/tr>\n <tr>\n <td>The maximum number of projects/folder per view scope<\/td>\n <td>30 K<\/td>\n <td>Recursive sub-folders count towards this limit. For example, if a project\n contains more than 30 K sub-folders then it cannot be included in a view's\n scope.<\/td>\n <\/tr>\n <tr>\n <td>The maximum number of rows per view<\/td>\n <td>200 M<\/td>\n <td>A single folder cannot contain more then 10 K files/folders. Since a\n view's scope is limited to 30 K project/folders, the maximum number of rows\n per view is 10 K * 30 K = 300 M.<\/td>\n <\/tr>\n <tr>\n <td>The maximum file size of a CSV that can be appended to a table<\/td>\n <td>1 GB<\/td>\n <td><\/td>\n <\/tr>\n <tr>\n <td>The maximum size of a single query result<\/td>\n <td>512000 bytes<\/td>\n <td><\/td>\n <\/tr>\n <tr>\n <td>Entity View only: The maximum total character length for a STRING or STRING_LIST <a href=\"${org.sagebionetworks.repo.model.table.ColumnType}\">ColumnType<\/a><\/td>\n <td>500 characters<\/td>\n <td>Entity Views ONLY! This follows limitations placed on Annotations. For the type STRING_LIST, the total character count is the cumulative length of all string contained in the list.<\/td>\n <\/tr>\n <tr>\n <td>Entity View only: The maximum list length for \"_LIST\" suffixed <a href=\"${org.sagebionetworks.repo.model.table.ColumnType}\">ColumnType<\/a><\/td>\n <td>100 values<\/td>\n <td>Entity Views ONLY! This follows limitations placed on Annotations.<\/td>\n <\/tr>\n <\/table>"
          },
          {
               "name": "Team Services",
               "description": "Teams are groups of users.  Teams can be granted access permissions to projects, \n folders and files, and share other resources by adding them to\n <a href=\"${org.sagebionetworks.repo.model.AccessControlList}\">Access Control\n Lists (ACLs)<\/a>.  Any authenticated Synapse user\n may create a Team, for which they become an administrator.  Team\n administrators may:\n <ul>\n <li> invite other users to join the Team, \n <li> accept membership requests from users wishing to join the Team, \n <li> grant or revoke administrative control to Team members,\n <li> remove a user from the Team.  \n <\/ul>\n <br>\n Other Synapse users may:\n <ul>\n <li> issue membership requests to a Team,\n <li> accept Team membership invitations (join the Team),\n <li> unilaterally choose to leave a Team once added.\n <\/ul>"
          },
          {
               "name": "User & Group Services",
               "description": "Auto-generated description"
          },
          {
               "name": "User Profile Services",
               "description": "Every Synapse user has an associated <a href=\"${org.sagebionetworks.repo.model.UserProfile}\">UserProfile<\/a>."
          },
          {
               "name": "Verification Services",
               "description": "Identity verification is a service offered by the Synapse Access and Compliance Team\n to add an additional layer of legitimacy to a user account, beyond the basic\n requirements for creating an account in Synapse.  After completing their user\n profile a user may submit a verification request, including supporting documentation.\n The ACT reviews the information then approves or rejects it.  After approval, the\n ACT retains the authority to suspend verification of an account previously verified.\n Once rejected or suspended a user may create a new verification request."
          },
          {
               "name": "Webhook Services",
               "description": "Provides APIs to manage webhooks that are triggered by synapse events.\n <p>\n A webhook can specify the id of a synapse entity to receive events for. For entities that represent a container (folder and project), \n matching events are published to the webhook endpoint for any entity in their hierarchy.\n <p>\n Before events are published to the endpoint, the webhook needs to be verified. A special request is sent to the webhook endpoint \n containing a verification code that can be submitted in the body of the <a href=\"${POST.webhook.webhookId.verify}\">POST /webhook/{webhookId}/verify<\/a> request.\n <h6>Request Format<\/h6>\n There are two types of requests that can be sent to an endpoint:\n <ul>\n <li><a href=\"${org.sagebionetworks.repo.model.webhook.WebhookVerificationMessage}\">WebhookVerificationMessage<\/a>: Sent when a webhook is created or when its endpoint is updated that contains the verification code used to verify the webhook.<\/li>\n <li><a href=\"${org.sagebionetworks.repo.model.webhook.WebhookSynapseEventMessage}\">WebhookSynapseEventMessage<\/a>: Sent when a synapse event that match the webhook entity is generated in the backend.<\/li>\n <\/ul>\n Each HTTP request will contain the following custom headers:\n <ul>\n <li><b>X-Syn-Webhook-Id<\/b>: The id of the webhook<\/li>\n <li><b>X-Syn-Webhook-Message-Type<\/b>: The type of message body, either Verification or SynapseEvent<\/li>\n <li><b>X-Syn-Webhook-Message-Id<\/b>: A unique id for the message<\/li>\n <li><b>X-Syn-Webhook-Owner-Id<\/b>: The id of the user that created the webhook<\/li>\n <\/ul>\n And the following standard headers:\n <ul>\n <li><b>Content-Type<\/b>: Always application&#47;json<\/li>\n <li><b>User-Agent<\/b>: Set with the prefix Synapse-Webhook&#47;, followed by the synapse stack version<\/li>\n <li><b>Authorization<\/b>: Set with the Bearer prefix, followed by an authentication token (See below)<\/li>\n <\/ul>\n <h6>Request Handling<\/h6>\n A request to an endpoint is sent at least once and retried for a maximum of 3 times. The endpoint needs to provide a response within 2 seconds in order for the request to be considered successful, \n otherwise the request is retried. Valid HTTP response codes are: \n <ul>\n <li>200 (OK)<\/li> \n <li>201 (CREATED)<\/li>\n <li>202 (ACCEPTED)<\/li>\n <li>204 (NO CONTENT)<\/li> \n <\/ul>\n The following response codes are considered for retrying: \n <ul>\n <li>429 (TOO MANY REQUESTS)<\/li>\n <li>500 (INTERNAL SERVER ERROR)<\/li>\n <li>502 (BAD GATEWAY)<\/li>\n <li>503 (SERVICE UNAVAILABLE)<\/li>\n <li>504 (GATEWAY TIMEOUT)<\/li> \n <\/ul>\n Any other response code is considered a failed delivery and won't be retried. If a webhook endpoint consistently fails to respond to requests, it will eventually be disabled \n and the <a href=\"${org.sagebionetworks.repo.model.webhook.WebhookVerificationStatus}\">verification status<\/a> of the webhook will be set to REVOKED and will need to be re-verified.\n <h6>Limits<\/h6>\n Each user is limited to a maximum of 25 webhooks. The webhook endpoint is checked against a white list of allowed domain patterns, currently only the AWS Api Gateway <a href=\"https://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-call-api.html\">execute-api<\/a> is allowed.\n For adding a new domain exception you can submit a request to the <a href=\"https://sagebionetworks.jira.com/servicedesk/customer/portal/9\">Synapse Service Desk<\/a>.\n <h6>Authentication<\/h6>\n By default each request includes a signed JSON Web Token (JWT) in the <b>Authorization<\/b> header as a bearer token. The token is signed with a JSON Web Key (JWK) and \n can be verified using the public JWK id specified in the header of the JWT. The public keys are published under the \"well-known\" discovery document of the issuer (See below).\n <p>\n The JWT will contain a set of <a href=\"https://www.iana.org/assignments/jwt/jwt.xhtml#claims\">standard claims<\/a> that can be used to validate the token:\n <ul>\n <li><b>iss<\/b>: The issuer of the token is set to <a href=\"https://repo-prod.prod.sagebase.org/auth/v1\">https://repo-prod.prod.sagebase.org/auth/v1<\/a>. The openid discovery document (<a href=\"https://repo-prod.prod.sagebase.org/auth/v1/.well-known/openid-configuration\">https://repo-prod.prod.sagebase.org/auth/v1/.well-known/openid-configuration<\/a>)\n can be used to get information about the JWKs<\/li>\n <li><b>aud<\/b>: The audience contains the id of the user that owns the webhook<\/li>\n <li><b>iat<\/b>: The timestamp when the token was generated<\/li>\n <li><b>exp<\/b>: The expiration time of the token, each token is valid for 30 seconds.<\/li>\n <\/ul>\n To verify the integrity of the message, the MD5 of the request body is included under the custom claim <b>message_md5<\/b> and can be verified against the md5 of the request body once the JWT is verified."
          },
          {
               "name": "WikiPage Services",
               "description": "<p>\n The Synapse <a href=\"${org.sagebionetworks.repo.model.wiki.WikiPage}\">WikiPage<\/a> model\n object contains the data needed to render an end-user crafted web page. The\n Synapse Web Client will dynamically render a WikiPage into a combination of\n HTML, CSS and Javascript which is then finally rendered as a web page in the\n client's web browser.\n <\/p>\n <p>\n These services provide support for creating, reading, updating, and\n deleting (CRUD) the WikiPage model objects.\n <\/p>\n <p>\n WikiPages are composed of two major parts; the raw markdown text and a list\n of file attachments. For example, to embed an image from an end-user's\n machine into a WikiPage, the image file must first be uploaded to Synapse as <a href=\"${org.sagebionetworks.repo.model.file.FileHandle}\">FileHandle<\/a> (see\n <a href=\"${org.sagebionetworks.file.controller.UploadController}\">File\n Services<\/a>). The FileHandle ID can then be added to a\n WikiPage.attachmentFileHandleIds list. See <a href=\"https://www.synapse.org\">www.synapse.org<\/a> for details on the\n supported markdown syntax.\n <\/p>\n \n <p>\n WikiPages are not stand-alone objects, instead they are a component of\n another object such as an Entity or Evaluation. For example, when a WikiPage\n is created for an Entity, the Entity becomes the \"owner\" of the WikiPage.\n Access to the WikiPage is always tied to its owner. For example, to GET a\n WikiPage of an Entity, the caller must have read permission on the Entity.\n <\/p>\n <p>\n To navigate the hierarchy of WikiPages associated with an owner use the <a href=\"${GET.entity.ownerId.wikiheadertree}\">GET\n /entity/{ownerId}/wikiheadertree<\/a> method. The returned list of <a href=\"${org.sagebionetworks.repo.model.wiki.WikiHeader}\">WikiHeaders<\/a> can\n be used to construct a full wiki hierarchy tree for that owner.\n <\/p>\n <p>\n Note: WikiPages can be nested to created a hierarchy of sub-pages. However,\n there can only be one root WikiPage per owner object, and all sub-pages are\n considered to be owned by the same object as the root page.\n <\/p>"
          },
          {
               "name": "WikiPage Services 2",
               "description": "<p>\n The Synapse <a href=\"${org.sagebionetworks.repo.model.v2.wiki.V2WikiPage}\">V2WikiPage<\/a> model\n object contains the data needed to render an end-user crafted web page. The\n Synapse Web Client will dynamically render a WikiPage into a combination of\n HTML, CSS and Javascript which is then finally rendered as a web page in the\n client's web browser.\n <\/p>\n <p>\n These services provide support for creating, reading, updating, and\n deleting (CRUD) the WikiPage model objects.\n <\/p>\n <p>\n WikiPages are composed of two major parts; a file that contains the markdown text \n and a list of file attachments. For example, to embed an image from an end-user's\n machine into a WikiPage, the image file must first be uploaded to Synapse as <a href=\"${org.sagebionetworks.repo.model.file.FileHandle}\">FileHandle<\/a> (see\n <a href=\"${org.sagebionetworks.file.controller.UploadController}\">File\n Services<\/a>). The FileHandle ID can then be added to a\n WikiPage.attachmentFileHandleIds list. See <a href=\"https://www.synapse.org\">www.synapse.org<\/a> for details on the\n supported markdown syntax. The markdown text is similarly uploaded as a\n FileHandle and its FileHandle ID is tracked by the WikiPage. \n <\/p>\n \n <p>\n WikiPages are not stand-alone objects, instead they are a component of\n another object such as an Entity or Evaluation. For example, when a WikiPage\n is created for an Entity, the Entity becomes the \"owner\" of the WikiPage.\n Access to the WikiPage is always tied to its owner. For example, to GET a\n WikiPage of an Entity, the caller must have read permission on the Entity.\n <\/p>\n <p>\n To navigate the hierarchy of WikiPages associated with an owner use the <a href=\"${GET.entity.ownerId.wikiheadertree2}\">GET\n /entity/{ownerId}/wikiheadertree2<\/a> method. The returned list of <a href=\"${org.sagebionetworks.repo.model.v2.wiki.V2WikiHeader}\">V2WikiHeaders<\/a> can\n be used to construct a full wiki hierarchy tree for that owner.\n <\/p>\n <p>\n To view a timeline of changes made to a WikiPage, use the \n <a href=\"${GET.entity.ownerId.wiki2.wikiId.wikihistory}\">GET/entity/{ownerId}\n /wiki2/{wikiId}/wikihistory<\/a> method. The returned list of <a href=\"${org.sagebionetworks.repo.model.v2.wiki.V2WikiHistorySnapshot}\">V2WikiHistorySnapshots\n <\/a> contain information about who modified the WikiPage and when the changes were made. \n <\/p>\n <p>\n Note: WikiPages can be nested to created a hierarchy of sub-pages. However,\n there can only be one root WikiPage per owner object, and all sub-pages are\n considered to be owned by the same object as the root page.\n <\/p>"
          }
     ],
     "paths": {
          "/auth/v1/.well-known/openid-configuration": {"get": {
               "tags": ["OpenID Connect Services"],
               "operationId": "get-/auth/v1/.well-known/openid-configuration",
               "parameters": [],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.oauth.OIDConnectConfiguration"}}}
               }}
          }},
          "/auth/v1/oauth2/jwks": {"get": {
               "tags": ["OpenID Connect Services"],
               "operationId": "get-/auth/v1/oauth2/jwks",
               "parameters": [],
               "responses": {"200": {
                    "description": "the JSON Web Key Set",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.oauth.JsonWebKeySet"}}}
               }}
          }},
          "/auth/v1/oauth2/client": {
               "post": {
                    "tags": ["OpenID Connect Services"],
                    "operationId": "post-/auth/v1/oauth2/client",
                    "parameters": [],
                    "requestBody": {
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.oauth.OAuthClient"}}},
                         "required": true
                    },
                    "security": [{"bearerAuth": []}],
                    "responses": {"201": {
                         "description": "Auto-generated description",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.oauth.OAuthClient"}}}
                    }}
               },
               "get": {
                    "tags": ["OpenID Connect Services"],
                    "operationId": "get-/auth/v1/oauth2/client",
                    "parameters": [{
                         "name": "nextPageToken",
                         "in": "query",
                         "required": false,
                         "description": "returned along with a page of results, this is passed to \n the server to retrieve the next page.",
                         "schema": {"type": "string"}
                    }],
                    "security": [{"bearerAuth": []}],
                    "responses": {"200": {
                         "description": "Auto-generated description",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.oauth.OAuthClientList"}}}
                    }}
               }
          },
          "/auth/v1/oauth2/client/secret/{id}": {"post": {
               "tags": ["OpenID Connect Services"],
               "operationId": "post-/auth/v1/oauth2/client/secret/{id}",
               "parameters": [{
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {"type": "string"}
               }],
               "security": [{"bearerAuth": []}],
               "responses": {"201": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.oauth.OAuthClientIdAndSecret"}}}
               }}
          }},
          "/auth/v1/oauth2/client/{id}": {
               "get": {
                    "tags": ["OpenID Connect Services"],
                    "operationId": "get-/auth/v1/oauth2/client/{id}",
                    "parameters": [{
                         "name": "id",
                         "in": "path",
                         "required": true,
                         "description": "the ID of the client to retrieve",
                         "schema": {"type": "string"}
                    }],
                    "security": [{"bearerAuth": []}],
                    "responses": {"200": {
                         "description": "Auto-generated description",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.oauth.OAuthClient"}}}
                    }}
               },
               "put": {
                    "tags": ["OpenID Connect Services"],
                    "operationId": "put-/auth/v1/oauth2/client/{id}",
                    "parameters": [{
                         "name": "id",
                         "in": "path",
                         "required": true,
                         "schema": {"type": "string"}
                    }],
                    "requestBody": {
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.oauth.OAuthClient"}}},
                         "required": true
                    },
                    "security": [{"bearerAuth": []}],
                    "responses": {"200": {
                         "description": "Auto-generated description",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.oauth.OAuthClient"}}}
                    }}
               },
               "delete": {
                    "tags": ["OpenID Connect Services"],
                    "operationId": "delete-/auth/v1/oauth2/client/{id}",
                    "parameters": [{
                         "name": "id",
                         "in": "path",
                         "required": true,
                         "description": "the ID of the client to delete",
                         "schema": {"type": "string"}
                    }],
                    "security": [{"bearerAuth": []}],
                    "responses": {"200": {"description": "Void"}}
               }
          },
          "/auth/v1/oauth2/client/{id}/verificationPrecheck": {"put": {
               "tags": ["OpenID Connect Services"],
               "operationId": "put-/auth/v1/oauth2/client/{id}/verificationPrecheck",
               "parameters": [{
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {"type": "string"}
               }],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.oauth.OAuthClient"}}},
                    "required": true
               },
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.oauth.OAuthClientVerificationPrecheckResult"}}}
               }}
          }},
          "/auth/v1/oauth2/description": {"post": {
               "tags": ["OpenID Connect Services"],
               "operationId": "post-/auth/v1/oauth2/description",
               "parameters": [],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.oauth.OIDCAuthorizationRequest"}}},
                    "required": true
               },
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.oauth.OIDCAuthorizationRequestDescription"}}}
               }}
          }},
          "/auth/v1/oauth2/consentcheck": {"post": {
               "tags": ["OpenID Connect Services"],
               "operationId": "post-/auth/v1/oauth2/consentcheck",
               "parameters": [],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.oauth.OIDCAuthorizationRequest"}}},
                    "required": true
               },
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.oauth.OAuthConsentGrantedResponse"}}}
               }}
          }},
          "/auth/v1/oauth2/consent": {"post": {
               "tags": ["OpenID Connect Services"],
               "operationId": "post-/auth/v1/oauth2/consent",
               "parameters": [],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.oauth.OIDCAuthorizationRequest"}}},
                    "required": true
               },
               "security": [{"bearerAuth": []}],
               "responses": {"201": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.oauth.OAuthAuthorizationResponse"}}}
               }}
          }},
          "/auth/v1/oauth2/token": {"post": {
               "tags": ["OpenID Connect Services"],
               "operationId": "post-/auth/v1/oauth2/token",
               "parameters": [
                    {
                         "name": "verifiedOauthClientId",
                         "in": "header",
                         "required": true,
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "grant_type",
                         "in": "query",
                         "required": true,
                         "description": "authorization_code or refresh_token",
                         "schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.oauth.OAuthGrantType"}
                    },
                    {
                         "name": "code",
                         "in": "query",
                         "required": false,
                         "description": "required if grant_type is authorization_code",
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "redirect_uri",
                         "in": "query",
                         "required": false,
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "refresh_token",
                         "in": "query",
                         "required": false,
                         "description": "required if grant_type is refresh_token",
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "scope",
                         "in": "query",
                         "required": false,
                         "description": "only provided if grant_type is refresh_token",
                         "schema": {"type": "string"}
                    }
               ],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.oauth.OIDCTokenResponse"}}}
               }}
          }},
          "/auth/v1/oauth2/userinfo": {
               "get": {
                    "tags": ["OpenID Connect Services"],
                    "operationId": "get-/auth/v1/oauth2/userinfo",
                    "parameters": [{
                         "name": "Synapse-Authorization",
                         "in": "header",
                         "required": false,
                         "schema": {"type": "string"}
                    }],
                    "responses": {"200": {
                         "description": "Auto-generated description",
                         "content": {"application/json": {"schema": {"type": "object"}}}
                    }}
               },
               "post": {
                    "tags": ["OpenID Connect Services"],
                    "operationId": "post-/auth/v1/oauth2/userinfo",
                    "parameters": [{
                         "name": "Synapse-Authorization",
                         "in": "header",
                         "required": false,
                         "schema": {"type": "string"}
                    }],
                    "responses": {"200": {
                         "description": "Auto-generated description",
                         "content": {"application/json": {"schema": {"type": "object"}}}
                    }}
               }
          },
          "/auth/v1/oauth2/audit/grantedClients": {"get": {
               "tags": ["OpenID Connect Services"],
               "operationId": "get-/auth/v1/oauth2/audit/grantedClients",
               "parameters": [{
                    "name": "nextPageToken",
                    "in": "query",
                    "required": false,
                    "schema": {"type": "string"}
               }],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.oauth.OAuthClientAuthorizationHistoryList"}}}
               }}
          }},
          "/auth/v1/oauth2/audit/grantedClients/{clientId}/tokens": {"get": {
               "tags": ["OpenID Connect Services"],
               "operationId": "get-/auth/v1/oauth2/audit/grantedClients/{clientId}/tokens",
               "parameters": [
                    {
                         "name": "clientId",
                         "in": "path",
                         "required": true,
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "nextPageToken",
                         "in": "query",
                         "required": false,
                         "schema": {"type": "string"}
                    }
               ],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.oauth.OAuthRefreshTokenInformationList"}}}
               }}
          }},
          "/auth/v1/oauth2/audit/tokens/{tokenId}/metadata": {
               "get": {
                    "tags": ["OpenID Connect Services"],
                    "operationId": "get-/auth/v1/oauth2/audit/tokens/{tokenId}/metadata",
                    "parameters": [{
                         "name": "tokenId",
                         "in": "path",
                         "required": true,
                         "schema": {"type": "string"}
                    }],
                    "security": [{"bearerAuth": []}],
                    "responses": {"200": {
                         "description": "Auto-generated description",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.oauth.OAuthRefreshTokenInformation"}}}
                    }}
               },
               "put": {
                    "tags": ["OpenID Connect Services"],
                    "operationId": "put-/auth/v1/oauth2/audit/tokens/{tokenId}/metadata",
                    "parameters": [{
                         "name": "tokenId",
                         "in": "path",
                         "required": true,
                         "schema": {"type": "string"}
                    }],
                    "requestBody": {
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.oauth.OAuthRefreshTokenInformation"}}},
                         "required": true
                    },
                    "security": [{"bearerAuth": []}],
                    "responses": {"200": {
                         "description": "Auto-generated description",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.oauth.OAuthRefreshTokenInformation"}}}
                    }}
               }
          },
          "/auth/v1/oauth2/token/{tokenId}/metadata": {"get": {
               "tags": ["OpenID Connect Services"],
               "operationId": "get-/auth/v1/oauth2/token/{tokenId}/metadata",
               "parameters": [
                    {
                         "name": "verifiedOauthClientId",
                         "in": "header",
                         "required": true,
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "tokenId",
                         "in": "path",
                         "required": true,
                         "schema": {"type": "string"}
                    }
               ],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.oauth.OAuthRefreshTokenInformation"}}}
               }}
          }},
          "/auth/v1/oauth2/audit/grantedClients/{clientId}/revoke": {"post": {
               "tags": ["OpenID Connect Services"],
               "operationId": "post-/auth/v1/oauth2/audit/grantedClients/{clientId}/revoke",
               "parameters": [{
                    "name": "clientId",
                    "in": "path",
                    "required": true,
                    "schema": {"type": "string"}
               }],
               "security": [{"bearerAuth": []}],
               "responses": {"204": {"description": "Void"}}
          }},
          "/auth/v1/oauth2/audit/tokens/{tokenId}/revoke": {"post": {
               "tags": ["OpenID Connect Services"],
               "operationId": "post-/auth/v1/oauth2/audit/tokens/{tokenId}/revoke",
               "parameters": [{
                    "name": "tokenId",
                    "in": "path",
                    "required": true,
                    "schema": {"type": "string"}
               }],
               "security": [{"bearerAuth": []}],
               "responses": {"204": {"description": "Void"}}
          }},
          "/auth/v1/oauth2/revoke": {"post": {
               "tags": ["OpenID Connect Services"],
               "operationId": "post-/auth/v1/oauth2/revoke",
               "parameters": [{
                    "name": "verifiedOauthClientId",
                    "in": "header",
                    "required": true,
                    "schema": {"type": "string"}
               }],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.oauth.OAuthTokenRevocationRequest"}}},
                    "required": true
               },
               "responses": {"204": {"description": "Void"}}
          }},
          "/auth/v1/login2": {"post": {
               "tags": ["Authentication Services"],
               "operationId": "post-/auth/v1/login2",
               "parameters": [],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.auth.LoginRequest"}}},
                    "required": true
               },
               "responses": {"201": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.auth.LoginResponse"}}}
               }}
          }},
          "/auth/v1/authenticatedOn": {"get": {
               "tags": ["Authentication Services"],
               "operationId": "get-/auth/v1/authenticatedOn",
               "parameters": [],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.auth.AuthenticatedOn"}}}
               }}
          }},
          "/auth/v1/user/password/reset": {"post": {
               "tags": ["Authentication Services"],
               "operationId": "post-/auth/v1/user/password/reset",
               "parameters": [{
                    "name": "passwordResetEndpoint",
                    "in": "query",
                    "required": true,
                    "description": "the Portal's url prefix for handling password resets.",
                    "schema": {"type": "string"}
               }],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.auth.Username"}}},
                    "required": true
               },
               "responses": {"204": {"description": "Void"}}
          }},
          "/auth/v1/user/changePassword": {"post": {
               "tags": ["Authentication Services"],
               "operationId": "post-/auth/v1/user/changePassword",
               "parameters": [],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.auth.ChangePasswordInterface"}}},
                    "required": true
               },
               "responses": {"204": {"description": "Void"}}
          }},
          "/auth/v1/termsOfUse2": {"post": {
               "tags": ["Authentication Services"],
               "operationId": "post-/auth/v1/termsOfUse2",
               "parameters": [],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.auth.AccessToken"}}},
                    "required": true
               },
               "responses": {"204": {"description": "Void"}}
          }},
          "/auth/v1/secretKey": {
               "get": {
                    "tags": ["Authentication Services"],
                    "operationId": "get-/auth/v1/secretKey",
                    "parameters": [],
                    "security": [{"bearerAuth": []}],
                    "responses": {"200": {
                         "description": "Auto-generated description",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.auth.SecretKey"}}}
                    }}
               },
               "delete": {
                    "tags": ["Authentication Services"],
                    "operationId": "delete-/auth/v1/secretKey",
                    "parameters": [],
                    "security": [{"bearerAuth": []}],
                    "responses": {"204": {"description": "Void"}}
               }
          },
          "/auth/v1/oauth2/authurl": {"post": {
               "tags": ["Authentication Services"],
               "operationId": "post-/auth/v1/oauth2/authurl",
               "parameters": [],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.oauth.OAuthUrlRequest"}}},
                    "required": true
               },
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.oauth.OAuthUrlResponse"}}}
               }}
          }},
          "/auth/v1/oauth2/session2": {"post": {
               "tags": ["Authentication Services"],
               "operationId": "post-/auth/v1/oauth2/session2",
               "parameters": [],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.oauth.OAuthValidationRequest"}}},
                    "required": true
               },
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.auth.LoginResponse"}}}
               }}
          }},
          "/auth/v1/oauth2/alias": {
               "post": {
                    "tags": ["Authentication Services"],
                    "operationId": "post-/auth/v1/oauth2/alias",
                    "parameters": [],
                    "requestBody": {
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.oauth.OAuthValidationRequest"}}},
                         "required": true
                    },
                    "security": [{"bearerAuth": []}],
                    "responses": {"201": {
                         "description": "Auto-generated description",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.principal.PrincipalAlias"}}}
                    }}
               },
               "delete": {
                    "tags": ["Authentication Services"],
                    "operationId": "delete-/auth/v1/oauth2/alias",
                    "parameters": [
                         {
                              "name": "provider",
                              "in": "query",
                              "required": true,
                              "description": "the OAuth provider through which the alias was associated",
                              "schema": {"type": "string"}
                         },
                         {
                              "name": "alias",
                              "in": "query",
                              "required": true,
                              "description": "the alias for the user given by the provider",
                              "schema": {"type": "string"}
                         }
                    ],
                    "security": [{"bearerAuth": []}],
                    "responses": {"200": {"description": "Void"}}
               }
          },
          "/auth/v1/oauth2/account2": {"post": {
               "tags": ["Authentication Services"],
               "operationId": "post-/auth/v1/oauth2/account2",
               "parameters": [],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.oauth.OAuthAccountCreationRequest"}}},
                    "required": true
               },
               "responses": {"201": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.auth.LoginResponse"}}}
               }}
          }},
          "/auth/v1/personalAccessToken": {
               "post": {
                    "tags": ["Authentication Services"],
                    "operationId": "post-/auth/v1/personalAccessToken",
                    "parameters": [{
                         "name": "Synapse-Authorization",
                         "in": "header",
                         "required": false,
                         "schema": {"type": "string"}
                    }],
                    "requestBody": {
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.auth.AccessTokenGenerationRequest"}}},
                         "required": true
                    },
                    "security": [{"bearerAuth": []}],
                    "responses": {"200": {
                         "description": "Auto-generated description",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.auth.AccessTokenGenerationResponse"}}}
                    }}
               },
               "get": {
                    "tags": ["Authentication Services"],
                    "operationId": "get-/auth/v1/personalAccessToken",
                    "parameters": [{
                         "name": "nextPageToken",
                         "in": "query",
                         "required": false,
                         "schema": {"type": "string"}
                    }],
                    "security": [{"bearerAuth": []}],
                    "responses": {"200": {
                         "description": "Auto-generated description",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.auth.AccessTokenRecordList"}}}
                    }}
               }
          },
          "/auth/v1/personalAccessToken/{id}": {
               "get": {
                    "tags": ["Authentication Services"],
                    "operationId": "get-/auth/v1/personalAccessToken/{id}",
                    "parameters": [{
                         "name": "id",
                         "in": "path",
                         "required": true,
                         "description": "The unique ID of the token, which is the unique ID (the \"jti\" claim) contained in the JWT",
                         "schema": {"type": "number"}
                    }],
                    "security": [{"bearerAuth": []}],
                    "responses": {"200": {
                         "description": "Auto-generated description",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.auth.AccessTokenRecord"}}}
                    }}
               },
               "delete": {
                    "tags": ["Authentication Services"],
                    "operationId": "delete-/auth/v1/personalAccessToken/{id}",
                    "parameters": [{
                         "name": "id",
                         "in": "path",
                         "required": true,
                         "description": "The unique ID of the token, which is the unique ID (the \"jti\" claim) contained in the JWT",
                         "schema": {"type": "number"}
                    }],
                    "security": [{"bearerAuth": []}],
                    "responses": {"200": {"description": "Void"}}
               }
          },
          "/auth/v1/sessionAccessToken": {"delete": {
               "tags": ["Authentication Services"],
               "operationId": "delete-/auth/v1/sessionAccessToken",
               "parameters": [{
                    "name": "Synapse-Authorization",
                    "in": "header",
                    "required": false,
                    "schema": {"type": "string"}
               }],
               "responses": {"200": {"description": "Void"}}
          }},
          "/auth/v1/user/{targetUserId}/sessionAccessToken/all": {"delete": {
               "tags": ["Authentication Services"],
               "operationId": "delete-/auth/v1/user/{targetUserId}/sessionAccessToken/all",
               "parameters": [{
                    "name": "targetUserId",
                    "in": "path",
                    "required": true,
                    "description": "The user",
                    "schema": {"type": "number"}
               }],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {"description": "Void"}}
          }},
          "/auth/v1/2fa/enroll": {"post": {
               "tags": ["Authentication Services (2FA)"],
               "operationId": "post-/auth/v1/2fa/enroll",
               "parameters": [],
               "security": [{"bearerAuth": []}],
               "responses": {"201": {
                    "description": "The generated TOTP secret that can be used in the user authenticator application, the secret is not active. \n To use this secret for 2FA a ,<a href=\"${POST.2fa}\">,POST /2fa,<\/a>, must be performed that includes the secret id and a totp code.",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.auth.TotpSecret"}}}
               }}
          }},
          "/auth/v1/2fa": {
               "post": {
                    "tags": ["Authentication Services (2FA)"],
                    "operationId": "post-/auth/v1/2fa",
                    "parameters": [],
                    "requestBody": {
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.auth.TotpSecretActivationRequest"}}},
                         "required": true
                    },
                    "security": [{"bearerAuth": []}],
                    "responses": {"200": {
                         "description": "The status of 2FA for the user",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.auth.TwoFactorAuthStatus"}}}
                    }}
               },
               "get": {
                    "tags": ["Authentication Services (2FA)"],
                    "operationId": "get-/auth/v1/2fa",
                    "parameters": [],
                    "security": [{"bearerAuth": []}],
                    "responses": {"200": {
                         "description": "The status of 2FA for the user",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.auth.TwoFactorAuthStatus"}}}
                    }}
               },
               "delete": {
                    "tags": ["Authentication Services (2FA)"],
                    "operationId": "delete-/auth/v1/2fa",
                    "parameters": [],
                    "security": [{"bearerAuth": []}],
                    "responses": {"200": {"description": "Void"}}
               }
          },
          "/auth/v1/2fa/token": {"post": {
               "tags": ["Authentication Services (2FA)"],
               "operationId": "post-/auth/v1/2fa/token",
               "parameters": [],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.auth.TwoFactorAuthLoginRequest"}}},
                    "required": true
               },
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.auth.LoginResponse"}}}
               }}
          }},
          "/auth/v1/2fa/recoveryCodes": {"post": {
               "tags": ["Authentication Services (2FA)"],
               "operationId": "post-/auth/v1/2fa/recoveryCodes",
               "parameters": [],
               "security": [{"bearerAuth": []}],
               "responses": {"201": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.auth.TwoFactorAuthRecoveryCodes"}}}
               }}
          }},
          "/auth/v1/2fa/reset": {"post": {
               "tags": ["Authentication Services (2FA)"],
               "operationId": "post-/auth/v1/2fa/reset",
               "parameters": [],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.auth.TwoFactorAuthResetRequest"}}},
                    "required": true
               },
               "responses": {"204": {"description": "Void"}}
          }},
          "/auth/v1/2fa/disable": {"post": {
               "tags": ["Authentication Services (2FA)"],
               "operationId": "post-/auth/v1/2fa/disable",
               "parameters": [],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.auth.TwoFactorAuthDisableRequest"}}},
                    "required": true
               },
               "responses": {"204": {"description": "Void"}}
          }},
          "/ga4gh/drs/v1/service-info": {"get": {
               "tags": ["Drs Services"],
               "operationId": "get-/ga4gh/drs/v1/service-info",
               "parameters": [],
               "responses": {"200": {
                    "description": "the drs service information",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.drs.ServiceInformation"}}}
               }}
          }},
          "/ga4gh/drs/v1/objects/{object_id}": {"get": {
               "tags": ["Drs Services"],
               "operationId": "get-/ga4gh/drs/v1/objects/{object_id}",
               "parameters": [
                    {
                         "name": "object_id",
                         "in": "path",
                         "required": true,
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "expand",
                         "in": "query",
                         "required": true,
                         "schema": {"type": "boolean"}
                    }
               ],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "the DRS object",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.drs.DrsObject"}}}
               }}
          }},
          "/ga4gh/drs/v1/objects/{object_id}/access/{access_id}": {"get": {
               "tags": ["Drs Services"],
               "operationId": "get-/ga4gh/drs/v1/objects/{object_id}/access/{access_id}",
               "parameters": [
                    {
                         "name": "object_id",
                         "in": "path",
                         "required": true,
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "access_id",
                         "in": "path",
                         "required": true,
                         "schema": {"type": "string"}
                    }
               ],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "the presigned url to download a file",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.drs.AccessUrl"}}}
               }}
          }},
          "/file/v1/fileHandle/batch": {"post": {
               "tags": ["File Services"],
               "operationId": "post-/file/v1/fileHandle/batch",
               "parameters": [],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.file.BatchFileRequest"}}},
                    "required": true
               },
               "security": [{"bearerAuth": []}],
               "responses": {"201": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.file.BatchFileResult"}}}
               }}
          }},
          "/file/v1/fileHandle/{handleIdToCopyFrom}/copy": {"post": {
               "tags": ["File Services"],
               "operationId": "post-/file/v1/fileHandle/{handleIdToCopyFrom}/copy",
               "parameters": [{
                    "name": "handleIdToCopyFrom",
                    "in": "path",
                    "required": true,
                    "description": "the file handle it from which to duplicate the data",
                    "schema": {"type": "string"}
               }],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.file.S3FileHandle"}}},
                    "required": true
               },
               "security": [{"bearerAuth": []}],
               "responses": {"201": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.file.S3FileHandle"}}}
               }}
          }},
          "/file/v1/fileHandle/{handleId}": {
               "get": {
                    "tags": ["File Services"],
                    "operationId": "get-/file/v1/fileHandle/{handleId}",
                    "parameters": [{
                         "name": "handleId",
                         "in": "path",
                         "required": true,
                         "description": "The ID of the FileHandle to fetch.",
                         "schema": {"type": "string"}
                    }],
                    "security": [{"bearerAuth": []}],
                    "responses": {"200": {
                         "description": "Auto-generated description",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.file.FileHandle"}}}
                    }}
               },
               "delete": {
                    "tags": ["File Services"],
                    "operationId": "delete-/file/v1/fileHandle/{handleId}",
                    "parameters": [{
                         "name": "handleId",
                         "in": "path",
                         "required": true,
                         "schema": {"type": "string"}
                    }],
                    "security": [{"bearerAuth": []}],
                    "responses": {"200": {"description": "Void"}}
               }
          },
          "/file/v1/fileHandle/{handleId}/filepreview": {"delete": {
               "tags": ["File Services"],
               "operationId": "delete-/file/v1/fileHandle/{handleId}/filepreview",
               "parameters": [{
                    "name": "handleId",
                    "in": "path",
                    "required": true,
                    "description": "The ID of the FileHandle whose preview should be cleared.",
                    "schema": {"type": "string"}
               }],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {"description": "Void"}}
          }},
          "/file/v1/externalFileHandle": {"post": {
               "tags": ["File Services"],
               "operationId": "post-/file/v1/externalFileHandle",
               "parameters": [],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.file.ExternalFileHandleInterface"}}},
                    "required": true
               },
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.file.ExternalFileHandleInterface"}}}
               }}
          }},
          "/file/v1/externalFileHandle/s3": {"post": {
               "tags": ["File Services"],
               "operationId": "post-/file/v1/externalFileHandle/s3",
               "parameters": [],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.file.S3FileHandle"}}},
                    "required": true
               },
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.file.S3FileHandle"}}}
               }}
          }},
          "/file/v1/externalFileHandle/googleCloud": {"post": {
               "tags": ["File Services"],
               "operationId": "post-/file/v1/externalFileHandle/googleCloud",
               "parameters": [],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.file.GoogleCloudFileHandle"}}},
                    "required": true
               },
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.file.GoogleCloudFileHandle"}}}
               }}
          }},
          "/file/v1/entity/{id}/uploadDestinationLocations": {"get": {
               "tags": ["File Services"],
               "operationId": "get-/file/v1/entity/{id}/uploadDestinationLocations",
               "parameters": [{
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {"type": "string"}
               }],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ListWrapperOfUploadDestinationLocation"}}}
               }}
          }},
          "/file/v1/entity/{id}/uploadDestination/{storageLocationId}": {"get": {
               "tags": ["File Services"],
               "operationId": "get-/file/v1/entity/{id}/uploadDestination/{storageLocationId}",
               "parameters": [
                    {
                         "name": "id",
                         "in": "path",
                         "required": true,
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "storageLocationId",
                         "in": "path",
                         "required": true,
                         "schema": {"type": "number"}
                    }
               ],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.file.UploadDestination"}}}
               }}
          }},
          "/file/v1/entity/{id}/uploadDestination": {"get": {
               "tags": ["File Services"],
               "operationId": "get-/file/v1/entity/{id}/uploadDestination",
               "parameters": [{
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {"type": "string"}
               }],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.file.UploadDestination"}}}
               }}
          }},
          "/file/v1/fileHandle/{handleId}/url": {"get": {
               "tags": ["File Services"],
               "operationId": "get-/file/v1/fileHandle/{handleId}/url",
               "parameters": [
                    {
                         "name": "handleId",
                         "in": "path",
                         "required": true,
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "redirect",
                         "in": "query",
                         "required": false,
                         "description": "When set to false, the URL will be returned as text/plain\n            instead of redirecting.",
                         "schema": {"type": "boolean"}
                    }
               ],
               "security": [{"bearerAuth": []}],
               "responses": {
                    "200": {
                         "description": "Status 200 will be returned if the 'redirect' boolean param is false",
                         "content": {"text/plain": {"schema": {}}}
                    },
                    "307": {"description": "Status 307 will be returned if the 'redirect' boolean param is true or null"}
               }
          }},
          "/file/v1/file/bulk/async/start": {"post": {
               "tags": ["File Services"],
               "operationId": "post-/file/v1/file/bulk/async/start",
               "parameters": [],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.file.BulkFileDownloadRequest"}}},
                    "required": true
               },
               "security": [{"bearerAuth": []}],
               "responses": {"201": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.asynch.AsyncJobId"}}}
               }}
          }},
          "/file/v1/file/bulk/async/get/{asyncToken}": {"get": {
               "tags": ["File Services"],
               "operationId": "get-/file/v1/file/bulk/async/get/{asyncToken}",
               "parameters": [{
                    "name": "asyncToken",
                    "in": "path",
                    "required": true,
                    "schema": {"type": "string"}
               }],
               "security": [{"bearerAuth": []}],
               "responses": {"201": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.file.BulkFileDownloadResponse"}}}
               }}
          }},
          "/file/v1/file/{id}": {"get": {
               "tags": ["File Services"],
               "operationId": "get-/file/v1/file/{id}",
               "parameters": [
                    {
                         "name": "id",
                         "in": "path",
                         "required": true,
                         "description": "the ID of the file handle to be downloaded",
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "redirect",
                         "in": "query",
                         "required": false,
                         "description": "When set to false, the URL will be returned as text/plain\n            instead of redirecting.",
                         "schema": {"type": "boolean"}
                    },
                    {
                         "name": "fileAssociateType",
                         "in": "query",
                         "required": true,
                         "description": "the type of object with which the file is associated",
                         "schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.file.FileHandleAssociateType"}
                    },
                    {
                         "name": "fileAssociateId",
                         "in": "query",
                         "required": true,
                         "description": "the ID fo the object with which the file is associated",
                         "schema": {"type": "string"}
                    }
               ],
               "security": [{"bearerAuth": []}],
               "responses": {
                    "200": {
                         "description": "Status 200 will be returned if the 'redirect' boolean param is false",
                         "content": {"text/plain": {"schema": {}}}
                    },
                    "307": {"description": "Status 307 will be returned if the 'redirect' boolean param is true or null"}
               }
          }},
          "/file/v1/file/multipart": {"post": {
               "tags": ["File Services"],
               "operationId": "post-/file/v1/file/multipart",
               "parameters": [{
                    "name": "forceRestart",
                    "in": "query",
                    "required": false,
                    "description": "Optional parameter. When 'forceRestart=true' is included, any\n            upload state for the given file will be cleared and a new\n            upload will be started.",
                    "schema": {"type": "boolean"}
               }],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.file.MultipartRequest"}}},
                    "required": true
               },
               "security": [{"bearerAuth": []}],
               "responses": {"201": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.file.MultipartUploadStatus"}}}
               }}
          }},
          "/file/v1/file/multipart/{uploadId}/presigned/url/batch": {"post": {
               "tags": ["File Services"],
               "operationId": "post-/file/v1/file/multipart/{uploadId}/presigned/url/batch",
               "parameters": [{
                    "name": "uploadId",
                    "in": "path",
                    "required": true,
                    "description": "The unique identifier of the file upload.",
                    "schema": {"type": "string"}
               }],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.file.BatchPresignedUploadUrlRequest"}}},
                    "required": true
               },
               "security": [{"bearerAuth": []}],
               "responses": {"201": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.file.BatchPresignedUploadUrlResponse"}}}
               }}
          }},
          "/file/v1/file/multipart/{uploadId}/add/{partNumber}": {"put": {
               "tags": ["File Services"],
               "operationId": "put-/file/v1/file/multipart/{uploadId}/add/{partNumber}",
               "parameters": [
                    {
                         "name": "uploadId",
                         "in": "path",
                         "required": true,
                         "description": "The unique identifier of the file upload.",
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "partNumber",
                         "in": "path",
                         "required": true,
                         "description": "The part number to add. Must be a number between 1 and 10,000.",
                         "schema": {"type": "integer"}
                    },
                    {
                         "name": "partMD5Hex",
                         "in": "query",
                         "required": true,
                         "description": "The MD5 of the uploaded part represented as a hexadecimal\n            string. If the provided MD5 does not match the MD5 of the\n            uploaded part, the add will fail.",
                         "schema": {"type": "string"}
                    }
               ],
               "security": [{"bearerAuth": []}],
               "responses": {"201": {
                    "description": "The response will indicate if add succeeded or failed. When an\n         add fails, the response will include an error message.",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.file.AddPartResponse"}}}
               }}
          }},
          "/file/v1/file/multipart/{uploadId}/complete": {"put": {
               "tags": ["File Services"],
               "operationId": "put-/file/v1/file/multipart/{uploadId}/complete",
               "parameters": [{
                    "name": "uploadId",
                    "in": "path",
                    "required": true,
                    "description": "The unique identifier of the file upload.",
                    "schema": {"type": "string"}
               }],
               "security": [{"bearerAuth": []}],
               "responses": {"201": {
                    "description": "If successful, the response will include the ID of the new file\n         handle.",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.file.MultipartUploadStatus"}}}
               }}
          }},
          "/file/v1/filehandles/copy": {"post": {
               "tags": ["File Services"],
               "operationId": "post-/file/v1/filehandles/copy",
               "parameters": [],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.file.BatchFileHandleCopyRequest"}}},
                    "required": true
               },
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.file.BatchFileHandleCopyResult"}}}
               }}
          }},
          "/file/v1/download/list/add/async/start": {"post": {
               "tags": ["File Services"],
               "operationId": "post-/file/v1/download/list/add/async/start",
               "parameters": [],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.file.AddFileToDownloadListRequest"}}},
                    "required": true
               },
               "security": [{"bearerAuth": []}],
               "responses": {"201": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.asynch.AsyncJobId"}}}
               }}
          }},
          "/file/v1/download/list/add/async/get/{asyncToken}": {"get": {
               "tags": ["File Services"],
               "operationId": "get-/file/v1/download/list/add/async/get/{asyncToken}",
               "parameters": [{
                    "name": "asyncToken",
                    "in": "path",
                    "required": true,
                    "schema": {"type": "string"}
               }],
               "security": [{"bearerAuth": []}],
               "responses": {"201": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.file.AddFileToDownloadListResponse"}}}
               }}
          }},
          "/file/v1/download/list/add": {"post": {
               "tags": ["File Services"],
               "operationId": "post-/file/v1/download/list/add",
               "parameters": [],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.file.FileHandleAssociationList"}}},
                    "required": true
               },
               "security": [{"bearerAuth": []}],
               "responses": {"201": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.file.DownloadList"}}}
               }}
          }},
          "/file/v1/download/list/remove": {"post": {
               "tags": ["File Services"],
               "operationId": "post-/file/v1/download/list/remove",
               "parameters": [],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.file.FileHandleAssociationList"}}},
                    "required": true
               },
               "security": [{"bearerAuth": []}],
               "responses": {"201": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.file.DownloadList"}}}
               }}
          }},
          "/file/v1/download/list": {
               "delete": {
                    "tags": ["File Services"],
                    "operationId": "delete-/file/v1/download/list",
                    "parameters": [],
                    "security": [{"bearerAuth": []}],
                    "responses": {"200": {"description": "Void"}}
               },
               "get": {
                    "tags": ["File Services"],
                    "operationId": "get-/file/v1/download/list",
                    "parameters": [],
                    "security": [{"bearerAuth": []}],
                    "responses": {"200": {
                         "description": "Auto-generated description",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.file.DownloadList"}}}
                    }}
               }
          },
          "/file/v1/download/order": {"post": {
               "tags": ["File Services"],
               "operationId": "post-/file/v1/download/order",
               "parameters": [{
                    "name": "zipFileName",
                    "in": "query",
                    "required": true,
                    "description": "The name to given to the resulting zip file.",
                    "schema": {"type": "string"}
               }],
               "security": [{"bearerAuth": []}],
               "responses": {"201": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.file.DownloadOrder"}}}
               }}
          }},
          "/file/v1/download/order/{orderId}": {"get": {
               "tags": ["File Services"],
               "operationId": "get-/file/v1/download/order/{orderId}",
               "parameters": [{
                    "name": "orderId",
                    "in": "path",
                    "required": true,
                    "description": "The ID of the download order to fetch.",
                    "schema": {"type": "string"}
               }],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.file.DownloadOrder"}}}
               }}
          }},
          "/file/v1/download/order/history": {"post": {
               "tags": ["File Services"],
               "operationId": "post-/file/v1/download/order/history",
               "parameters": [],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.file.DownloadOrderSummaryRequest"}}},
                    "required": true
               },
               "security": [{"bearerAuth": []}],
               "responses": {"201": {
                    "description": "A single page of download order summaries.",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.file.DownloadOrderSummaryResponse"}}}
               }}
          }},
          "/file/v1/fileHandle/restore/async/start": {"post": {
               "tags": ["File Services"],
               "operationId": "post-/file/v1/fileHandle/restore/async/start",
               "parameters": [],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.file.FileHandleRestoreRequest"}}},
                    "required": true
               },
               "security": [{"bearerAuth": []}],
               "responses": {"201": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.asynch.AsyncJobId"}}}
               }}
          }},
          "/file/v1/fileHandle/restore/async/get/{asyncToken}": {"get": {
               "tags": ["File Services"],
               "operationId": "get-/file/v1/fileHandle/restore/async/get/{asyncToken}",
               "parameters": [{
                    "name": "asyncToken",
                    "in": "path",
                    "required": true,
                    "schema": {"type": "string"}
               }],
               "security": [{"bearerAuth": []}],
               "responses": {"201": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.file.FileHandleRestoreResponse"}}}
               }}
          }},
          "/repo/v1/project/{projectId}/forum": {"get": {
               "tags": ["Discussion Services"],
               "operationId": "get-/repo/v1/project/{projectId}/forum",
               "parameters": [{
                    "name": "projectId",
                    "in": "path",
                    "required": true,
                    "description": "- The ID of the project to which the forum belongs.",
                    "schema": {"type": "string"}
               }],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.discussion.Forum"}}}
               }}
          }},
          "/repo/v1/forum/{forumId}": {"get": {
               "tags": ["Discussion Services"],
               "operationId": "get-/repo/v1/forum/{forumId}",
               "parameters": [{
                    "name": "forumId",
                    "in": "path",
                    "required": true,
                    "description": "- The ID of the forum.",
                    "schema": {"type": "string"}
               }],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.discussion.Forum"}}}
               }}
          }},
          "/repo/v1/forum/{forumId}/threads": {"get": {
               "tags": ["Discussion Services"],
               "operationId": "get-/repo/v1/forum/{forumId}/threads",
               "parameters": [
                    {
                         "name": "limit",
                         "in": "query",
                         "required": true,
                         "description": "- Limits the size of the page returned. For example, a page size of 10 require limit = 10. The maximum Limit for this call is 20.",
                         "schema": {"type": "number"}
                    },
                    {
                         "name": "offset",
                         "in": "query",
                         "required": true,
                         "description": "- The index of the pagination offset. For a page size of 10, the first page would be at offset = 0, and the second page would be at offset = 10.",
                         "schema": {"type": "number"}
                    },
                    {
                         "name": "sort",
                         "in": "query",
                         "required": false,
                         "description": "- The field to sort the resulting threads on. Available options: ,<a href=\"${org.sagebionetworks.repo.model.discussion.DiscussionThreadOrder}\">,DiscussionThreadOrder,<\/a>,.",
                         "schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.discussion.DiscussionThreadOrder"}
                    },
                    {
                         "name": "ascending",
                         "in": "query",
                         "required": false,
                         "description": "- The direction of sort: true for ascending, and false for descending",
                         "schema": {"type": "boolean"}
                    },
                    {
                         "name": "filter",
                         "in": "query",
                         "required": true,
                         "description": "- Filter deleted/ not deleted threads. Available options: ,<a href=\"${org.sagebionetworks.repo.model.discussion.DiscussionFilter}\">,DiscussionFilter,<\/a>,.",
                         "schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.discussion.DiscussionFilter"}
                    },
                    {
                         "name": "forumId",
                         "in": "path",
                         "required": true,
                         "description": "- The forum ID to which the returning threads belong",
                         "schema": {"type": "string"}
                    }
               ],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/PaginatedResultsOfDiscussionThreadBundle"}}}
               }}
          }},
          "/repo/v1/thread": {"post": {
               "tags": ["Discussion Services"],
               "operationId": "post-/repo/v1/thread",
               "parameters": [],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.discussion.CreateDiscussionThread"}}},
                    "required": true
               },
               "security": [{"bearerAuth": []}],
               "responses": {"201": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.discussion.DiscussionThreadBundle"}}}
               }}
          }},
          "/repo/v1/thread/{threadId}": {
               "get": {
                    "tags": ["Discussion Services"],
                    "operationId": "get-/repo/v1/thread/{threadId}",
                    "parameters": [{
                         "name": "threadId",
                         "in": "path",
                         "required": true,
                         "description": "- The ID of the thread being requested",
                         "schema": {"type": "string"}
                    }],
                    "security": [{"bearerAuth": []}],
                    "responses": {"200": {
                         "description": "Auto-generated description",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.discussion.DiscussionThreadBundle"}}}
                    }}
               },
               "delete": {
                    "tags": ["Discussion Services"],
                    "operationId": "delete-/repo/v1/thread/{threadId}",
                    "parameters": [{
                         "name": "threadId",
                         "in": "path",
                         "required": true,
                         "description": "- the ID of the thread being marked as deleted",
                         "schema": {"type": "string"}
                    }],
                    "security": [{"bearerAuth": []}],
                    "responses": {"204": {"description": "Void"}}
               }
          },
          "/repo/v1/thread/{threadId}/title": {"put": {
               "tags": ["Discussion Services"],
               "operationId": "put-/repo/v1/thread/{threadId}/title",
               "parameters": [{
                    "name": "threadId",
                    "in": "path",
                    "required": true,
                    "description": "- The ID of the thread being updated",
                    "schema": {"type": "string"}
               }],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.discussion.UpdateThreadTitle"}}},
                    "required": true
               },
               "security": [{"bearerAuth": []}],
               "responses": {"201": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.discussion.DiscussionThreadBundle"}}}
               }}
          }},
          "/repo/v1/thread/{threadId}/message": {"put": {
               "tags": ["Discussion Services"],
               "operationId": "put-/repo/v1/thread/{threadId}/message",
               "parameters": [{
                    "name": "threadId",
                    "in": "path",
                    "required": true,
                    "description": "- The ID of the thread being updated",
                    "schema": {"type": "string"}
               }],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.discussion.UpdateThreadMessage"}}},
                    "required": true
               },
               "security": [{"bearerAuth": []}],
               "responses": {"201": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.discussion.DiscussionThreadBundle"}}}
               }}
          }},
          "/repo/v1/thread/{threadId}/restore": {"put": {
               "tags": ["Discussion Services"],
               "operationId": "put-/repo/v1/thread/{threadId}/restore",
               "parameters": [{
                    "name": "threadId",
                    "in": "path",
                    "required": true,
                    "description": "- the ID of the thread that was marked as deleted",
                    "schema": {"type": "string"}
               }],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {"description": "Void"}}
          }},
          "/repo/v1/thread/{threadId}/pin": {"put": {
               "tags": ["Discussion Services"],
               "operationId": "put-/repo/v1/thread/{threadId}/pin",
               "parameters": [{
                    "name": "threadId",
                    "in": "path",
                    "required": true,
                    "description": "- the ID of the thread being marked as pinned",
                    "schema": {"type": "string"}
               }],
               "security": [{"bearerAuth": []}],
               "responses": {"204": {"description": "Void"}}
          }},
          "/repo/v1/thread/{threadId}/unpin": {"put": {
               "tags": ["Discussion Services"],
               "operationId": "put-/repo/v1/thread/{threadId}/unpin",
               "parameters": [{
                    "name": "threadId",
                    "in": "path",
                    "required": true,
                    "description": "- the ID of the thread being unpinned",
                    "schema": {"type": "string"}
               }],
               "security": [{"bearerAuth": []}],
               "responses": {"204": {"description": "Void"}}
          }},
          "/repo/v1/thread/messageUrl": {"get": {
               "tags": ["Discussion Services"],
               "operationId": "get-/repo/v1/thread/messageUrl",
               "parameters": [{
                    "name": "messageKey",
                    "in": "query",
                    "required": true,
                    "schema": {"type": "string"}
               }],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.discussion.MessageURL"}}}
               }}
          }},
          "/repo/v1/reply": {"post": {
               "tags": ["Discussion Services"],
               "operationId": "post-/repo/v1/reply",
               "parameters": [],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.discussion.CreateDiscussionReply"}}},
                    "required": true
               },
               "security": [{"bearerAuth": []}],
               "responses": {"201": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.discussion.DiscussionReplyBundle"}}}
               }}
          }},
          "/repo/v1/reply/{replyId}": {
               "get": {
                    "tags": ["Discussion Services"],
                    "operationId": "get-/repo/v1/reply/{replyId}",
                    "parameters": [{
                         "name": "replyId",
                         "in": "path",
                         "required": true,
                         "description": "- The ID of the reply being requested",
                         "schema": {"type": "string"}
                    }],
                    "security": [{"bearerAuth": []}],
                    "responses": {"200": {
                         "description": "Auto-generated description",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.discussion.DiscussionReplyBundle"}}}
                    }}
               },
               "delete": {
                    "tags": ["Discussion Services"],
                    "operationId": "delete-/repo/v1/reply/{replyId}",
                    "parameters": [{
                         "name": "replyId",
                         "in": "path",
                         "required": true,
                         "description": "- the ID of the reply being marked as deleted",
                         "schema": {"type": "string"}
                    }],
                    "security": [{"bearerAuth": []}],
                    "responses": {"204": {"description": "Void"}}
               }
          },
          "/repo/v1/reply/{replyId}/message": {"put": {
               "tags": ["Discussion Services"],
               "operationId": "put-/repo/v1/reply/{replyId}/message",
               "parameters": [{
                    "name": "replyId",
                    "in": "path",
                    "required": true,
                    "description": "- The ID of the reply being updated",
                    "schema": {"type": "string"}
               }],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.discussion.UpdateReplyMessage"}}},
                    "required": true
               },
               "security": [{"bearerAuth": []}],
               "responses": {"201": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.discussion.DiscussionReplyBundle"}}}
               }}
          }},
          "/repo/v1/thread/{threadId}/replies": {"get": {
               "tags": ["Discussion Services"],
               "operationId": "get-/repo/v1/thread/{threadId}/replies",
               "parameters": [
                    {
                         "name": "limit",
                         "in": "query",
                         "required": true,
                         "description": "- Limits the size of the page returned. For example, a page size of 10 require limit = 10. The maximum Limit for this call is 100.",
                         "schema": {"type": "number"}
                    },
                    {
                         "name": "offset",
                         "in": "query",
                         "required": true,
                         "description": "- The index of the pagination offset. For a page size of 10, the first page would be at offset = 0, and the second page would be at offset = 10.",
                         "schema": {"type": "number"}
                    },
                    {
                         "name": "sort",
                         "in": "query",
                         "required": false,
                         "description": "- The field to sort the resulting replies on. Available options: ,<a href=\"${org.sagebionetworks.repo.model.discussion.DiscussionReplyOrder}\">,DiscussionReplyOrder,<\/a>,.",
                         "schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.discussion.DiscussionReplyOrder"}
                    },
                    {
                         "name": "ascending",
                         "in": "query",
                         "required": false,
                         "description": "- The direction of sort: true for ascending, and false for descending",
                         "schema": {"type": "boolean"}
                    },
                    {
                         "name": "filter",
                         "in": "query",
                         "required": true,
                         "description": "- Filter deleted/ not deleted replies. Available options: ,<a href=\"${org.sagebionetworks.repo.model.discussion.DiscussionFilter}\">,DiscussionFilter,<\/a>,.",
                         "schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.discussion.DiscussionFilter"}
                    },
                    {
                         "name": "threadId",
                         "in": "path",
                         "required": true,
                         "description": "- The thread ID to which the returning replies belong",
                         "schema": {"type": "string"}
                    }
               ],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/PaginatedResultsOfDiscussionReplyBundle"}}}
               }}
          }},
          "/repo/v1/reply/messageUrl": {"get": {
               "tags": ["Discussion Services"],
               "operationId": "get-/repo/v1/reply/messageUrl",
               "parameters": [{
                    "name": "messageKey",
                    "in": "query",
                    "required": true,
                    "description": "- DiscussionReplyBundle.messageKey",
                    "schema": {"type": "string"}
               }],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.discussion.MessageURL"}}}
               }}
          }},
          "/repo/v1/forum/{forumId}/threadcount": {"get": {
               "tags": ["Discussion Services"],
               "operationId": "get-/repo/v1/forum/{forumId}/threadcount",
               "parameters": [
                    {
                         "name": "filter",
                         "in": "query",
                         "required": true,
                         "description": "- Filter deleted/ not deleted threads. Available options: ,<a href=\"${org.sagebionetworks.repo.model.discussion.DiscussionFilter}\">,DiscussionFilter,<\/a>,.",
                         "schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.discussion.DiscussionFilter"}
                    },
                    {
                         "name": "forumId",
                         "in": "path",
                         "required": true,
                         "description": "- The forum ID to which the returning threads belong",
                         "schema": {"type": "string"}
                    }
               ],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.discussion.ThreadCount"}}}
               }}
          }},
          "/repo/v1/thread/{threadId}/replycount": {"get": {
               "tags": ["Discussion Services"],
               "operationId": "get-/repo/v1/thread/{threadId}/replycount",
               "parameters": [
                    {
                         "name": "filter",
                         "in": "query",
                         "required": true,
                         "description": "- Filter deleted/ not deleted replies. Available options: ,<a href=\"${org.sagebionetworks.repo.model.discussion.DiscussionFilter}\">,DiscussionFilter,<\/a>,.",
                         "schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.discussion.DiscussionFilter"}
                    },
                    {
                         "name": "threadId",
                         "in": "path",
                         "required": true,
                         "description": "- The thread ID to which the returning replies belong",
                         "schema": {"type": "string"}
                    }
               ],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.discussion.ReplyCount"}}}
               }}
          }},
          "/repo/v1/entity/{id}/threads": {"get": {
               "tags": ["Discussion Services"],
               "operationId": "get-/repo/v1/entity/{id}/threads",
               "parameters": [
                    {
                         "name": "limit",
                         "in": "query",
                         "required": true,
                         "description": "- Limits the size of the page returned. For example, a page size of 10 require limit = 10. The maximum Limit for this call is 20.",
                         "schema": {"type": "number"}
                    },
                    {
                         "name": "offset",
                         "in": "query",
                         "required": true,
                         "description": "- The index of the pagination offset. For a page size of 10, the first page would be at offset = 0, and the second page would be at offset = 10.",
                         "schema": {"type": "number"}
                    },
                    {
                         "name": "sort",
                         "in": "query",
                         "required": false,
                         "description": "- The field to sort the resulting threads on. Available options: ,<a href=\"${org.sagebionetworks.repo.model.discussion.DiscussionThreadOrder}\">,DiscussionThreadOrder,<\/a>,.",
                         "schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.discussion.DiscussionThreadOrder"}
                    },
                    {
                         "name": "ascending",
                         "in": "query",
                         "required": false,
                         "description": "- The direction of sort: true for ascending, and false for descending",
                         "schema": {"type": "boolean"}
                    },
                    {
                         "name": "id",
                         "in": "path",
                         "required": true,
                         "description": "- The request entityId",
                         "schema": {"type": "string"}
                    }
               ],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "the threads that user has read permission to.",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/PaginatedResultsOfDiscussionThreadBundle"}}}
               }}
          }},
          "/repo/v1/entity/threadcounts": {"post": {
               "tags": ["Discussion Services"],
               "operationId": "post-/repo/v1/entity/threadcounts",
               "parameters": [],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.EntityIdList"}}},
                    "required": true
               },
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.discussion.EntityThreadCounts"}}}
               }}
          }},
          "/repo/v1/forum/{forumId}/moderators": {"get": {
               "tags": ["Discussion Services"],
               "operationId": "get-/repo/v1/forum/{forumId}/moderators",
               "parameters": [
                    {
                         "name": "limit",
                         "in": "query",
                         "required": true,
                         "description": "- Limits the size of the page returned. For example, a page size of 10 require limit = 10. The maximum Limit for this call is 100.",
                         "schema": {"type": "number"}
                    },
                    {
                         "name": "offset",
                         "in": "query",
                         "required": true,
                         "description": "- The index of the pagination offset. For a page size of 10, the first page would be at offset = 0, and the second page would be at offset = 10.",
                         "schema": {"type": "number"}
                    },
                    {
                         "name": "forumId",
                         "in": "path",
                         "required": true,
                         "description": "- The forum ID to which the returning mederators belong",
                         "schema": {"type": "string"}
                    }
               ],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.PaginatedIds"}}}
               }}
          }},
          "/repo/v1/forum/{forumId}/search": {"post": {
               "tags": ["Discussion Services"],
               "operationId": "post-/repo/v1/forum/{forumId}/search",
               "parameters": [{
                    "name": "forumId",
                    "in": "path",
                    "required": true,
                    "description": "The ID of the forum where the search is performed",
                    "schema": {"type": "string"}
               }],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.discussion.DiscussionSearchRequest"}}},
                    "required": true
               },
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "The response containing a page of results ordered by relevance and a potential token to fetch the results for a subsequent page",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.discussion.DiscussionSearchResponse"}}}
               }}
          }},
          "/repo/v1/download/list/add": {"post": {
               "tags": ["Download List Services"],
               "operationId": "post-/repo/v1/download/list/add",
               "parameters": [],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.download.AddBatchOfFilesToDownloadListRequest"}}},
                    "required": true
               },
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.download.AddBatchOfFilesToDownloadListResponse"}}}
               }}
          }},
          "/repo/v1/download/list/remove": {"post": {
               "tags": ["Download List Services"],
               "operationId": "post-/repo/v1/download/list/remove",
               "parameters": [],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.download.RemoveBatchOfFilesFromDownloadListRequest"}}},
                    "required": true
               },
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.download.RemoveBatchOfFilesFromDownloadListResponse"}}}
               }}
          }},
          "/repo/v1/download/list": {"delete": {
               "tags": ["Download List Services"],
               "operationId": "delete-/repo/v1/download/list",
               "parameters": [],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {"description": "Void"}}
          }},
          "/repo/v1/download/list/query/async/start": {"post": {
               "tags": ["Download List Services"],
               "operationId": "post-/repo/v1/download/list/query/async/start",
               "parameters": [],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.download.DownloadListQueryRequest"}}},
                    "required": true
               },
               "security": [{"bearerAuth": []}],
               "responses": {"201": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.asynch.AsyncJobId"}}}
               }}
          }},
          "/repo/v1/download/list/query/async/get/{asyncToken}": {"get": {
               "tags": ["Download List Services"],
               "operationId": "get-/repo/v1/download/list/query/async/get/{asyncToken}",
               "parameters": [{
                    "name": "asyncToken",
                    "in": "path",
                    "required": true,
                    "schema": {"type": "string"}
               }],
               "security": [{"bearerAuth": []}],
               "responses": {"201": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.download.DownloadListQueryResponse"}}}
               }}
          }},
          "/repo/v1/download/list/add/async/start": {"post": {
               "tags": ["Download List Services"],
               "operationId": "post-/repo/v1/download/list/add/async/start",
               "parameters": [],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.download.AddToDownloadListRequest"}}},
                    "required": true
               },
               "security": [{"bearerAuth": []}],
               "responses": {"201": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.asynch.AsyncJobId"}}}
               }}
          }},
          "/repo/v1/download/list/add/async/get/{asyncToken}": {"get": {
               "tags": ["Download List Services"],
               "operationId": "get-/repo/v1/download/list/add/async/get/{asyncToken}",
               "parameters": [{
                    "name": "asyncToken",
                    "in": "path",
                    "required": true,
                    "schema": {"type": "string"}
               }],
               "security": [{"bearerAuth": []}],
               "responses": {"201": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.download.AddToDownloadListResponse"}}}
               }}
          }},
          "/repo/v1/download/list/package/async/start": {"post": {
               "tags": ["Download List Services"],
               "operationId": "post-/repo/v1/download/list/package/async/start",
               "parameters": [],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.download.DownloadListPackageRequest"}}},
                    "required": true
               },
               "security": [{"bearerAuth": []}],
               "responses": {"201": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.asynch.AsyncJobId"}}}
               }}
          }},
          "/repo/v1/download/list/package/async/get/{asyncToken}": {"get": {
               "tags": ["Download List Services"],
               "operationId": "get-/repo/v1/download/list/package/async/get/{asyncToken}",
               "parameters": [{
                    "name": "asyncToken",
                    "in": "path",
                    "required": true,
                    "schema": {"type": "string"}
               }],
               "security": [{"bearerAuth": []}],
               "responses": {"201": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.download.DownloadListPackageResponse"}}}
               }}
          }},
          "/repo/v1/download/list/manifest/async/start": {"post": {
               "tags": ["Download List Services"],
               "operationId": "post-/repo/v1/download/list/manifest/async/start",
               "parameters": [],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.download.DownloadListManifestRequest"}}},
                    "required": true
               },
               "security": [{"bearerAuth": []}],
               "responses": {"201": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.asynch.AsyncJobId"}}}
               }}
          }},
          "/repo/v1/download/list/manifest/async/get/{asyncToken}": {"get": {
               "tags": ["Download List Services"],
               "operationId": "get-/repo/v1/download/list/manifest/async/get/{asyncToken}",
               "parameters": [{
                    "name": "asyncToken",
                    "in": "path",
                    "required": true,
                    "schema": {"type": "string"}
               }],
               "security": [{"bearerAuth": []}],
               "responses": {"201": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.download.DownloadListManifestResponse"}}}
               }}
          }},
          "/repo/v1/team": {
               "post": {
                    "tags": ["Team Services"],
                    "operationId": "post-/repo/v1/team",
                    "parameters": [],
                    "requestBody": {
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.Team"}}},
                         "required": true
                    },
                    "security": [{"bearerAuth": []}],
                    "responses": {"201": {
                         "description": "Auto-generated description",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.Team"}}}
                    }}
               },
               "put": {
                    "tags": ["Team Services"],
                    "operationId": "put-/repo/v1/team",
                    "parameters": [],
                    "requestBody": {
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.Team"}}},
                         "required": true
                    },
                    "security": [{"bearerAuth": []}],
                    "responses": {"200": {
                         "description": "Auto-generated description",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.Team"}}}
                    }}
               }
          },
          "/repo/v1/teams": {"get": {
               "tags": ["Team Services"],
               "operationId": "get-/repo/v1/teams",
               "parameters": [
                    {
                         "name": "fragment",
                         "in": "query",
                         "required": false,
                         "description": "a prefix of the Team name, or a prefix of any sub-string in the name preceded by a space.  \n If omitted, all Teams are returned.",
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "limit",
                         "in": "query",
                         "required": false,
                         "description": "the maximum number of Teams to return (default 10, max limit 50)",
                         "schema": {"type": "integer"}
                    },
                    {
                         "name": "offset",
                         "in": "query",
                         "required": false,
                         "description": "the starting index of the returned results (default 0)",
                         "schema": {"type": "integer"}
                    }
               ],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/PaginatedResultsOfTeam"}}}
               }}
          }},
          "/repo/v1/user/{id}/team": {"get": {
               "tags": ["Team Services"],
               "operationId": "get-/repo/v1/user/{id}/team",
               "parameters": [
                    {
                         "name": "id",
                         "in": "path",
                         "required": true,
                         "description": "the principal ID of the user of interest.",
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "limit",
                         "in": "query",
                         "required": false,
                         "description": "the maximum number of Teams to return (default 10)",
                         "schema": {"type": "integer"}
                    },
                    {
                         "name": "offset",
                         "in": "query",
                         "required": false,
                         "description": "the starting index of the returned results (default 0)",
                         "schema": {"type": "integer"}
                    }
               ],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/PaginatedResultsOfTeam"}}}
               }}
          }},
          "/repo/v1/user/{id}/team/id": {"get": {
               "tags": ["Team Services"],
               "operationId": "get-/repo/v1/user/{id}/team/id",
               "parameters": [
                    {
                         "name": "id",
                         "in": "path",
                         "required": true,
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "nextPageToken",
                         "in": "query",
                         "required": false,
                         "description": "controls pagination",
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "sort",
                         "in": "query",
                         "required": false,
                         "description": "the field to sort the team IDs on. Available options ,<a href=\"${org.sagebionetworks.repo.model.TeamSortOrder}\">,TeamSortOrder,<\/a>",
                         "schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.TeamSortOrder"}
                    },
                    {
                         "name": "ascending",
                         "in": "query",
                         "required": false,
                         "description": "the direction of sort: true for ascending, and false for descending",
                         "schema": {"type": "boolean"}
                    }
               ],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.PaginatedTeamIds"}}}
               }}
          }},
          "/repo/v1/teamList": {"post": {
               "tags": ["Team Services"],
               "operationId": "post-/repo/v1/teamList",
               "parameters": [],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.IdList"}}},
                    "required": true
               },
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ListWrapperOfTeam"}}}
               }}
          }},
          "/repo/v1/team/{id}/member/{principalId}": {
               "get": {
                    "tags": ["Team Services"],
                    "operationId": "get-/repo/v1/team/{id}/member/{principalId}",
                    "parameters": [
                         {
                              "name": "id",
                              "in": "path",
                              "required": true,
                              "schema": {"type": "string"}
                         },
                         {
                              "name": "principalId",
                              "in": "path",
                              "required": true,
                              "schema": {"type": "string"}
                         }
                    ],
                    "responses": {"200": {
                         "description": "Auto-generated description",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.TeamMember"}}}
                    }}
               },
               "put": {
                    "tags": ["Team Services"],
                    "operationId": "put-/repo/v1/team/{id}/member/{principalId}",
                    "parameters": [
                         {
                              "name": "id",
                              "in": "path",
                              "required": true,
                              "description": "the ID of the Team to which the user is to be added.",
                              "schema": {"type": "string"}
                         },
                         {
                              "name": "principalId",
                              "in": "path",
                              "required": true,
                              "description": "the ID of the user to be added to the Team.",
                              "schema": {"type": "string"}
                         },
                         {
                              "name": "teamEndpoint",
                              "in": "query",
                              "required": false,
                              "description": "the portal prefix for the Team URL. The team ID is appended to create the complete URL.",
                              "schema": {"type": "string"}
                         },
                         {
                              "name": "notificationUnsubscribeEndpoint",
                              "in": "query",
                              "required": false,
                              "description": "the portal prefix for one-click email unsubscription.  \n A signed, serialized token is appended to create the complete URL: \n ,<,ahref=\"${org.sagebionetworks.repo.model.message.NotificationSettingsSignedToken}\",>,NotificationSettingsSignedToken,<\/a>",
                              "schema": {"type": "string"}
                         }
                    ],
                    "security": [{"bearerAuth": []}],
                    "responses": {"204": {"description": "Void"}}
               },
               "delete": {
                    "tags": ["Team Services"],
                    "operationId": "delete-/repo/v1/team/{id}/member/{principalId}",
                    "parameters": [
                         {
                              "name": "id",
                              "in": "path",
                              "required": true,
                              "description": "the Team ID",
                              "schema": {"type": "string"}
                         },
                         {
                              "name": "principalId",
                              "in": "path",
                              "required": true,
                              "description": "the member's principal ID",
                              "schema": {"type": "string"}
                         }
                    ],
                    "security": [{"bearerAuth": []}],
                    "responses": {"204": {"description": "Void"}}
               }
          },
          "/repo/v1/team/{id}": {
               "get": {
                    "tags": ["Team Services"],
                    "operationId": "get-/repo/v1/team/{id}",
                    "parameters": [{
                         "name": "id",
                         "in": "path",
                         "required": true,
                         "description": "the ID of the Team of interest",
                         "schema": {"type": "string"}
                    }],
                    "responses": {"200": {
                         "description": "Auto-generated description",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.Team"}}}
                    }}
               },
               "delete": {
                    "tags": ["Team Services"],
                    "operationId": "delete-/repo/v1/team/{id}",
                    "parameters": [{
                         "name": "id",
                         "in": "path",
                         "required": true,
                         "description": "the ID of the Team to delete.",
                         "schema": {"type": "string"}
                    }],
                    "security": [{"bearerAuth": []}],
                    "responses": {"204": {"description": "Void"}}
               }
          },
          "/repo/v1/team/{id}/icon": {"get": {
               "tags": ["Team Services"],
               "operationId": "get-/repo/v1/team/{id}/icon",
               "parameters": [
                    {
                         "name": "id",
                         "in": "path",
                         "required": true,
                         "description": "the ID of the Team",
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "redirect",
                         "in": "query",
                         "required": false,
                         "description": "if true or omitted, then redirect to the URL.  If false then simply return the URL.",
                         "schema": {"type": "boolean"}
                    }
               ],
               "security": [{"bearerAuth": []}],
               "responses": {
                    "200": {
                         "description": "Status 200 will be returned if the 'redirect' boolean param is false",
                         "content": {"text/plain": {"schema": {}}}
                    },
                    "307": {"description": "Status 307 will be returned if the 'redirect' boolean param is true or null"}
               }
          }},
          "/repo/v1/team/{id}/icon/preview": {"get": {
               "tags": ["Team Services"],
               "operationId": "get-/repo/v1/team/{id}/icon/preview",
               "parameters": [
                    {
                         "name": "id",
                         "in": "path",
                         "required": true,
                         "description": "the ID of the Team",
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "redirect",
                         "in": "query",
                         "required": false,
                         "description": "if true or omitted, then redirect to the URL.  If false then simply return the URL.",
                         "schema": {"type": "boolean"}
                    }
               ],
               "security": [{"bearerAuth": []}],
               "responses": {
                    "200": {
                         "description": "Status 200 will be returned if the 'redirect' boolean param is false",
                         "content": {"text/plain": {"schema": {}}}
                    },
                    "307": {"description": "Status 307 will be returned if the 'redirect' boolean param is true or null"}
               }
          }},
          "/repo/v1/teamMember": {"put": {
               "tags": ["Team Services"],
               "operationId": "put-/repo/v1/teamMember",
               "parameters": [
                    {
                         "name": "teamEndpoint",
                         "in": "query",
                         "required": false,
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "notificationUnsubscribeEndpoint",
                         "in": "query",
                         "required": false,
                         "schema": {"type": "string"}
                    }
               ],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.JoinTeamSignedToken"}}},
                    "required": true
               },
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.ResponseMessage"}}}
               }}
          }},
          "/repo/v1/team/{id}/member/{principalId}/membershipStatus": {"get": {
               "tags": ["Team Services"],
               "operationId": "get-/repo/v1/team/{id}/member/{principalId}/membershipStatus",
               "parameters": [
                    {
                         "name": "id",
                         "in": "path",
                         "required": true,
                         "description": "the Team ID",
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "principalId",
                         "in": "path",
                         "required": true,
                         "description": "the user ID",
                         "schema": {"type": "string"}
                    }
               ],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.TeamMembershipStatus"}}}
               }}
          }},
          "/repo/v1/teamMembers/{id}": {"get": {
               "tags": ["Team Services"],
               "operationId": "get-/repo/v1/teamMembers/{id}",
               "parameters": [
                    {
                         "name": "id",
                         "in": "path",
                         "required": true,
                         "description": "the id of the Team of interest",
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "fragment",
                         "in": "query",
                         "required": false,
                         "description": "a prefix of the user's first or last name or email address (optional)",
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "memberType",
                         "in": "query",
                         "required": false,
                         "description": "the type of team user to retrieve (optional; default \"ALL\")",
                         "schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.TeamMemberTypeFilterOptions"}
                    },
                    {
                         "name": "limit",
                         "in": "query",
                         "required": false,
                         "description": "the maximum number of members to return (default 10, max limit 50)",
                         "schema": {"type": "integer"}
                    },
                    {
                         "name": "offset",
                         "in": "query",
                         "required": false,
                         "description": "the starting index of the returned results (default 0)",
                         "schema": {"type": "integer"}
                    }
               ],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/PaginatedResultsOfTeamMember"}}}
               }}
          }},
          "/repo/v1/teamMembers/count/{id}": {"get": {
               "tags": ["Team Services"],
               "operationId": "get-/repo/v1/teamMembers/count/{id}",
               "parameters": [
                    {
                         "name": "id",
                         "in": "path",
                         "required": true,
                         "description": "the id of the Team of interest",
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "fragment",
                         "in": "query",
                         "required": false,
                         "description": "a prefix of the user's first or last name or email address (optional)",
                         "schema": {"type": "string"}
                    }
               ],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.Count"}}}
               }}
          }},
          "/repo/v1/team/{id}/memberList": {"post": {
               "tags": ["Team Services"],
               "operationId": "post-/repo/v1/team/{id}/memberList",
               "parameters": [{
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {"type": "number"}
               }],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.IdList"}}},
                    "required": true
               },
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ListWrapperOfTeamMember"}}}
               }}
          }},
          "/repo/v1/user/{id}/memberList": {"post": {
               "tags": ["Team Services"],
               "operationId": "post-/repo/v1/user/{id}/memberList",
               "parameters": [{
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "description": "user's ID",
                    "schema": {"type": "number"}
               }],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.IdList"}}},
                    "required": true
               },
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ListWrapperOfTeamMember"}}}
               }}
          }},
          "/repo/v1/team/{id}/acl": {"get": {
               "tags": ["Team Services"],
               "operationId": "get-/repo/v1/team/{id}/acl",
               "parameters": [{
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "description": "the ID of the Team of interest",
                    "schema": {"type": "string"}
               }],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.AccessControlList"}}}
               }}
          }},
          "/repo/v1/team/acl": {"put": {
               "tags": ["Team Services"],
               "operationId": "put-/repo/v1/team/acl",
               "parameters": [],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.AccessControlList"}}},
                    "required": true
               },
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.AccessControlList"}}}
               }}
          }},
          "/repo/v1/search": {"post": {
               "tags": ["Search Services"],
               "operationId": "post-/repo/v1/search",
               "parameters": [],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.search.query.SearchQuery"}}},
                    "required": true
               },
               "security": [{"bearerAuth": []}],
               "responses": {"201": {
                    "description": "search results from CloudSearch",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.search.SearchResults"}}}
               }}
          }},
          "/repo/v1/userGroup": {"get": {
               "tags": ["User & Group Services"],
               "operationId": "get-/repo/v1/userGroup",
               "parameters": [
                    {
                         "name": "offset",
                         "in": "query",
                         "required": false,
                         "schema": {"type": "integer"}
                    },
                    {
                         "name": "limit",
                         "in": "query",
                         "required": false,
                         "schema": {"type": "integer"}
                    },
                    {
                         "name": "sort",
                         "in": "query",
                         "required": false,
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "ascending",
                         "in": "query",
                         "required": false,
                         "schema": {"type": "boolean"}
                    }
               ],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "The UserGroups for individuals",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/PaginatedResultsOfUserGroup"}}}
               }}
          }},
          "/repo/v1/schema/organization": {
               "post": {
                    "tags": ["JSON Schema Services"],
                    "operationId": "post-/repo/v1/schema/organization",
                    "parameters": [],
                    "requestBody": {
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.schema.CreateOrganizationRequest"}}},
                         "required": true
                    },
                    "security": [{"bearerAuth": []}],
                    "responses": {"201": {
                         "description": "Auto-generated description",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.schema.Organization"}}}
                    }}
               },
               "get": {
                    "tags": ["JSON Schema Services"],
                    "operationId": "get-/repo/v1/schema/organization",
                    "parameters": [{
                         "name": "name",
                         "in": "query",
                         "required": true,
                         "description": "The name of the Organization to lookup.",
                         "schema": {"type": "string"}
                    }],
                    "security": [{"bearerAuth": []}],
                    "responses": {"200": {
                         "description": "Auto-generated description",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.schema.Organization"}}}
                    }}
               }
          },
          "/repo/v1/schema/organization/list": {"post": {
               "tags": ["JSON Schema Services"],
               "operationId": "post-/repo/v1/schema/organization/list",
               "parameters": [],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.schema.ListOrganizationsRequest"}}},
                    "required": true
               },
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.schema.ListOrganizationsResponse"}}}
               }}
          }},
          "/repo/v1/schema/organization/{id}": {"delete": {
               "tags": ["JSON Schema Services"],
               "operationId": "delete-/repo/v1/schema/organization/{id}",
               "parameters": [{
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "description": "The numeric identifier of the organization.",
                    "schema": {"type": "string"}
               }],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {"description": "Void"}}
          }},
          "/repo/v1/schema/organization/{id}/acl": {
               "get": {
                    "tags": ["JSON Schema Services"],
                    "operationId": "get-/repo/v1/schema/organization/{id}/acl",
                    "parameters": [{
                         "name": "id",
                         "in": "path",
                         "required": true,
                         "description": "The numeric identifier of the organization.",
                         "schema": {"type": "string"}
                    }],
                    "security": [{"bearerAuth": []}],
                    "responses": {"200": {
                         "description": "Auto-generated description",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.AccessControlList"}}}
                    }}
               },
               "put": {
                    "tags": ["JSON Schema Services"],
                    "operationId": "put-/repo/v1/schema/organization/{id}/acl",
                    "parameters": [{
                         "name": "id",
                         "in": "path",
                         "required": true,
                         "description": "The numeric identifier of the organization.",
                         "schema": {"type": "string"}
                    }],
                    "requestBody": {
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.AccessControlList"}}},
                         "required": true
                    },
                    "security": [{"bearerAuth": []}],
                    "responses": {"200": {
                         "description": "Auto-generated description",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.AccessControlList"}}}
                    }}
               }
          },
          "/repo/v1/schema/type/create/async/start": {"post": {
               "tags": ["JSON Schema Services"],
               "operationId": "post-/repo/v1/schema/type/create/async/start",
               "parameters": [],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.schema.CreateSchemaRequest"}}},
                    "required": true
               },
               "security": [{"bearerAuth": []}],
               "responses": {"201": {
                    "description": "Use the resulting token to monitor the job's progress and to get the\n         final results.",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.asynch.AsyncJobId"}}}
               }}
          }},
          "/repo/v1/schema/type/create/async/get/{asyncToken}": {"get": {
               "tags": ["JSON Schema Services"],
               "operationId": "get-/repo/v1/schema/type/create/async/get/{asyncToken}",
               "parameters": [{
                    "name": "asyncToken",
                    "in": "path",
                    "required": true,
                    "description": "Forward the token returned when the job was started.",
                    "schema": {"type": "string"}
               }],
               "security": [{"bearerAuth": []}],
               "responses": {"201": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.schema.CreateSchemaResponse"}}}
               }}
          }},
          "/repo/v1/schema/type/registered/{id}": {
               "get": {
                    "tags": ["JSON Schema Services"],
                    "operationId": "get-/repo/v1/schema/type/registered/{id}",
                    "parameters": [{
                         "name": "id",
                         "in": "path",
                         "required": true,
                         "description": "The relative $id of the JSON schema to get.",
                         "schema": {"type": "string"}
                    }],
                    "responses": {"200": {
                         "description": "Auto-generated description",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.schema.JsonSchema"}}}
                    }}
               },
               "delete": {
                    "tags": ["JSON Schema Services"],
                    "operationId": "delete-/repo/v1/schema/type/registered/{id}",
                    "parameters": [{
                         "name": "id",
                         "in": "path",
                         "required": true,
                         "description": "The relative $id of the schema to delete.",
                         "schema": {"type": "string"}
                    }],
                    "security": [{"bearerAuth": []}],
                    "responses": {"204": {"description": "Void"}}
               }
          },
          "/repo/v1/schema/list": {"post": {
               "tags": ["JSON Schema Services"],
               "operationId": "post-/repo/v1/schema/list",
               "parameters": [],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.schema.ListJsonSchemaInfoRequest"}}},
                    "required": true
               },
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.schema.ListJsonSchemaInfoResponse"}}}
               }}
          }},
          "/repo/v1/schema/version/list": {"post": {
               "tags": ["JSON Schema Services"],
               "operationId": "post-/repo/v1/schema/version/list",
               "parameters": [],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.schema.ListJsonSchemaVersionInfoRequest"}}},
                    "required": true
               },
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.schema.ListJsonSchemaVersionInfoResponse"}}}
               }}
          }},
          "/repo/v1/schema/type/validation/async/start": {"post": {
               "tags": ["JSON Schema Services"],
               "operationId": "post-/repo/v1/schema/type/validation/async/start",
               "parameters": [],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.schema.GetValidationSchemaRequest"}}},
                    "required": true
               },
               "security": [{"bearerAuth": []}],
               "responses": {"201": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.asynch.AsyncJobId"}}}
               }}
          }},
          "/repo/v1/schema/type/validation/async/get/{asyncToken}": {"get": {
               "tags": ["JSON Schema Services"],
               "operationId": "get-/repo/v1/schema/type/validation/async/get/{asyncToken}",
               "parameters": [{
                    "name": "asyncToken",
                    "in": "path",
                    "required": true,
                    "description": "Forward the token returned when the job was started.",
                    "schema": {"type": "string"}
               }],
               "security": [{"bearerAuth": []}],
               "responses": {"201": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.schema.GetValidationSchemaResponse"}}}
               }}
          }},
          "/repo/v1/statistics": {"post": {
               "tags": ["Statistics Services"],
               "operationId": "post-/repo/v1/statistics",
               "parameters": [],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.statistics.ObjectStatisticsRequest"}}},
                    "required": true
               },
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "An ,<a href=\"${org.sagebionetworks.repo.model.statistics.ObjectStatisticsResponse}\">,ObjectStatisticsResponse,<\/a>,\n         containing the statistics according to the original ,<a href=\"${org.sagebionetworks.repo.model.statistics.ObjectStatisticsRequest}\">,request,<\/a>",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.statistics.ObjectStatisticsResponse"}}}
               }}
          }},
          "/repo/v1/webhook": {"post": {
               "tags": ["Webhook Services"],
               "operationId": "post-/repo/v1/webhook",
               "parameters": [],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.webhook.CreateOrUpdateWebhookRequest"}}},
                    "required": true
               },
               "security": [{"bearerAuth": []}],
               "responses": {"201": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.webhook.Webhook"}}}
               }}
          }},
          "/repo/v1/webhook/{webhookId}": {
               "get": {
                    "tags": ["Webhook Services"],
                    "operationId": "get-/repo/v1/webhook/{webhookId}",
                    "parameters": [{
                         "name": "webhookId",
                         "in": "path",
                         "required": true,
                         "schema": {"type": "string"}
                    }],
                    "security": [{"bearerAuth": []}],
                    "responses": {"200": {
                         "description": "Auto-generated description",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.webhook.Webhook"}}}
                    }}
               },
               "put": {
                    "tags": ["Webhook Services"],
                    "operationId": "put-/repo/v1/webhook/{webhookId}",
                    "parameters": [{
                         "name": "webhookId",
                         "in": "path",
                         "required": true,
                         "schema": {"type": "string"}
                    }],
                    "requestBody": {
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.webhook.CreateOrUpdateWebhookRequest"}}},
                         "required": true
                    },
                    "security": [{"bearerAuth": []}],
                    "responses": {"200": {
                         "description": "Auto-generated description",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.webhook.Webhook"}}}
                    }}
               },
               "delete": {
                    "tags": ["Webhook Services"],
                    "operationId": "delete-/repo/v1/webhook/{webhookId}",
                    "parameters": [{
                         "name": "webhookId",
                         "in": "path",
                         "required": true,
                         "schema": {"type": "string"}
                    }],
                    "security": [{"bearerAuth": []}],
                    "responses": {"204": {"description": "Void"}}
               }
          },
          "/repo/v1/webhook/list": {"post": {
               "tags": ["Webhook Services"],
               "operationId": "post-/repo/v1/webhook/list",
               "parameters": [],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.webhook.ListUserWebhooksRequest"}}},
                    "required": true
               },
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.webhook.ListUserWebhooksResponse"}}}
               }}
          }},
          "/repo/v1/webhook/{webhookId}/verify": {"post": {
               "tags": ["Webhook Services"],
               "operationId": "post-/repo/v1/webhook/{webhookId}/verify",
               "parameters": [{
                    "name": "webhookId",
                    "in": "path",
                    "required": true,
                    "schema": {"type": "string"}
               }],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.webhook.VerifyWebhookRequest"}}},
                    "required": true
               },
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.webhook.VerifyWebhookResponse"}}}
               }}
          }},
          "/repo/v1/webhook/{webhookId}/verificationCode": {"put": {
               "tags": ["Webhook Services"],
               "operationId": "put-/repo/v1/webhook/{webhookId}/verificationCode",
               "parameters": [{
                    "name": "webhookId",
                    "in": "path",
                    "required": true,
                    "schema": {"type": "string"}
               }],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.webhook.Webhook"}}}
               }}
          }},
          "/repo/v1/storageReport/async/start": {"post": {
               "tags": ["Storage Report Services"],
               "operationId": "post-/repo/v1/storageReport/async/start",
               "parameters": [],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.report.DownloadStorageReportRequest"}}},
                    "required": true
               },
               "security": [{"bearerAuth": []}],
               "responses": {"202": {
                    "description": "The asynchronous job ID",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.asynch.AsyncJobId"}}}
               }}
          }},
          "/repo/v1/storageReport/async/get/{asyncToken}": {"get": {
               "tags": ["Storage Report Services"],
               "operationId": "get-/repo/v1/storageReport/async/get/{asyncToken}",
               "parameters": [{
                    "name": "asyncToken",
                    "in": "path",
                    "required": true,
                    "description": "The async job token from the create/update call",
                    "schema": {"type": "string"}
               }],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "The results of the call, including a pre-signed URL to download the report.",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.report.DownloadStorageReportResponse"}}}
               }}
          }},
          "/repo/v1/entity/{ownerId}/wiki": {
               "post": {
                    "tags": ["WikiPage Services"],
                    "operationId": "post-/repo/v1/entity/{ownerId}/wiki",
                    "parameters": [{
                         "name": "ownerId",
                         "in": "path",
                         "required": true,
                         "description": "The ID of the owner Entity.",
                         "schema": {"type": "string"}
                    }],
                    "requestBody": {
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.wiki.WikiPage"}}},
                         "required": true
                    },
                    "security": [{"bearerAuth": []}],
                    "responses": {"201": {
                         "description": "-",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.wiki.WikiPage"}}}
                    }}
               },
               "get": {
                    "tags": ["WikiPage Services"],
                    "operationId": "get-/repo/v1/entity/{ownerId}/wiki",
                    "parameters": [{
                         "name": "ownerId",
                         "in": "path",
                         "required": true,
                         "description": "The ID of the owning Entity.",
                         "schema": {"type": "string"}
                    }],
                    "security": [{"bearerAuth": []}],
                    "responses": {"200": {
                         "description": "Auto-generated description",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.wiki.WikiPage"}}}
                    }}
               }
          },
          "/repo/v1/access_requirement/{ownerId}/wiki": {"post": {
               "tags": ["WikiPage Services"],
               "operationId": "post-/repo/v1/access_requirement/{ownerId}/wiki",
               "parameters": [{
                    "name": "ownerId",
                    "in": "path",
                    "required": true,
                    "description": "The ID of the owner Entity.",
                    "schema": {"type": "string"}
               }],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.wiki.WikiPage"}}},
                    "required": true
               },
               "security": [{"bearerAuth": []}],
               "responses": {"201": {
                    "description": "-",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.wiki.WikiPage"}}}
               }}
          }},
          "/repo/v1/evaluation/{ownerId}/wiki": {
               "post": {
                    "tags": ["WikiPage Services"],
                    "operationId": "post-/repo/v1/evaluation/{ownerId}/wiki",
                    "parameters": [{
                         "name": "ownerId",
                         "in": "path",
                         "required": true,
                         "description": "The ID of the owner Evaluation.",
                         "schema": {"type": "string"}
                    }],
                    "requestBody": {
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.wiki.WikiPage"}}},
                         "required": true
                    },
                    "security": [{"bearerAuth": []}],
                    "responses": {"201": {
                         "description": "Auto-generated description",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.wiki.WikiPage"}}}
                    }}
               },
               "get": {
                    "tags": ["WikiPage Services"],
                    "operationId": "get-/repo/v1/evaluation/{ownerId}/wiki",
                    "parameters": [{
                         "name": "ownerId",
                         "in": "path",
                         "required": true,
                         "description": "The ID of the owning Evaluation.",
                         "schema": {"type": "string"}
                    }],
                    "security": [{"bearerAuth": []}],
                    "responses": {"200": {
                         "description": "Auto-generated description",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.wiki.WikiPage"}}}
                    }}
               }
          },
          "/repo/v1/entity/{ownerId}/wikikey": {"get": {
               "tags": ["WikiPage Services"],
               "operationId": "get-/repo/v1/entity/{ownerId}/wikikey",
               "parameters": [{
                    "name": "ownerId",
                    "in": "path",
                    "required": true,
                    "description": "The ID of the owning Entity.",
                    "schema": {"type": "string"}
               }],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.dao.WikiPageKey"}}}
               }}
          }},
          "/repo/v1/evaluation/{ownerId}/wikikey": {"get": {
               "tags": ["WikiPage Services"],
               "operationId": "get-/repo/v1/evaluation/{ownerId}/wikikey",
               "parameters": [{
                    "name": "ownerId",
                    "in": "path",
                    "required": true,
                    "description": "The ID of the owning Evaluation.",
                    "schema": {"type": "string"}
               }],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.dao.WikiPageKey"}}}
               }}
          }},
          "/repo/v1/access_requirement/{ownerId}/wikikey": {"get": {
               "tags": ["WikiPage Services"],
               "operationId": "get-/repo/v1/access_requirement/{ownerId}/wikikey",
               "parameters": [{
                    "name": "ownerId",
                    "in": "path",
                    "required": true,
                    "description": "The ID of the owning Access Requirement.",
                    "schema": {"type": "string"}
               }],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.dao.WikiPageKey"}}}
               }}
          }},
          "/repo/v1/entity/{ownerId}/wiki/{wikiId}": {
               "get": {
                    "tags": ["WikiPage Services"],
                    "operationId": "get-/repo/v1/entity/{ownerId}/wiki/{wikiId}",
                    "parameters": [
                         {
                              "name": "ownerId",
                              "in": "path",
                              "required": true,
                              "description": "The ID of the owning Entity.",
                              "schema": {"type": "string"}
                         },
                         {
                              "name": "wikiId",
                              "in": "path",
                              "required": true,
                              "description": "The ID of the WikiPage to get.",
                              "schema": {"type": "string"}
                         },
                         {
                              "name": "wikiVersion",
                              "in": "query",
                              "required": false,
                              "description": "When included returns a specific version of a wiki.",
                              "schema": {"type": "number"}
                         }
                    ],
                    "security": [{"bearerAuth": []}],
                    "responses": {"200": {
                         "description": "Auto-generated description",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.wiki.WikiPage"}}}
                    }}
               },
               "put": {
                    "tags": ["WikiPage Services"],
                    "operationId": "put-/repo/v1/entity/{ownerId}/wiki/{wikiId}",
                    "parameters": [
                         {
                              "name": "ownerId",
                              "in": "path",
                              "required": true,
                              "description": "The ID of the owning Entity.",
                              "schema": {"type": "string"}
                         },
                         {
                              "name": "wikiId",
                              "in": "path",
                              "required": true,
                              "description": "The ID of the WikiPage to update.",
                              "schema": {"type": "string"}
                         }
                    ],
                    "requestBody": {
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.wiki.WikiPage"}}},
                         "required": true
                    },
                    "security": [{"bearerAuth": []}],
                    "responses": {"200": {
                         "description": "Auto-generated description",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.wiki.WikiPage"}}}
                    }}
               },
               "delete": {
                    "tags": ["WikiPage Services"],
                    "operationId": "delete-/repo/v1/entity/{ownerId}/wiki/{wikiId}",
                    "parameters": [
                         {
                              "name": "ownerId",
                              "in": "path",
                              "required": true,
                              "description": "The ID of the owning Entity.",
                              "schema": {"type": "string"}
                         },
                         {
                              "name": "wikiId",
                              "in": "path",
                              "required": true,
                              "description": "The ID of the WikiPage to delete.",
                              "schema": {"type": "string"}
                         }
                    ],
                    "security": [{"bearerAuth": []}],
                    "responses": {"200": {"description": "Void"}}
               }
          },
          "/repo/v1/access_requirement/{ownerId}/wiki/{wikiId}": {
               "get": {
                    "tags": ["WikiPage Services"],
                    "operationId": "get-/repo/v1/access_requirement/{ownerId}/wiki/{wikiId}",
                    "parameters": [
                         {
                              "name": "ownerId",
                              "in": "path",
                              "required": true,
                              "description": "The ID of the owning Entity.",
                              "schema": {"type": "string"}
                         },
                         {
                              "name": "wikiId",
                              "in": "path",
                              "required": true,
                              "description": "The ID of the WikiPage to get.",
                              "schema": {"type": "string"}
                         },
                         {
                              "name": "wikiVersion",
                              "in": "query",
                              "required": false,
                              "description": "When included returns a specific version of a wiki.",
                              "schema": {"type": "number"}
                         }
                    ],
                    "security": [{"bearerAuth": []}],
                    "responses": {"200": {
                         "description": "Auto-generated description",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.wiki.WikiPage"}}}
                    }}
               },
               "put": {
                    "tags": ["WikiPage Services"],
                    "operationId": "put-/repo/v1/access_requirement/{ownerId}/wiki/{wikiId}",
                    "parameters": [
                         {
                              "name": "ownerId",
                              "in": "path",
                              "required": true,
                              "description": "The ID of the owning Entity.",
                              "schema": {"type": "string"}
                         },
                         {
                              "name": "wikiId",
                              "in": "path",
                              "required": true,
                              "description": "The ID of the WikiPage to update.",
                              "schema": {"type": "string"}
                         }
                    ],
                    "requestBody": {
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.wiki.WikiPage"}}},
                         "required": true
                    },
                    "security": [{"bearerAuth": []}],
                    "responses": {"200": {
                         "description": "Auto-generated description",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.wiki.WikiPage"}}}
                    }}
               }
          },
          "/repo/v1/evaluation/{ownerId}/wiki/{wikiId}": {
               "get": {
                    "tags": ["WikiPage Services"],
                    "operationId": "get-/repo/v1/evaluation/{ownerId}/wiki/{wikiId}",
                    "parameters": [
                         {
                              "name": "ownerId",
                              "in": "path",
                              "required": true,
                              "description": "The ID of the owning Evaluation.",
                              "schema": {"type": "string"}
                         },
                         {
                              "name": "wikiId",
                              "in": "path",
                              "required": true,
                              "description": "The ID of the WikiPage to get.",
                              "schema": {"type": "string"}
                         },
                         {
                              "name": "wikiVersion",
                              "in": "query",
                              "required": false,
                              "schema": {"type": "number"}
                         }
                    ],
                    "security": [{"bearerAuth": []}],
                    "responses": {"200": {
                         "description": "Auto-generated description",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.wiki.WikiPage"}}}
                    }}
               },
               "put": {
                    "tags": ["WikiPage Services"],
                    "operationId": "put-/repo/v1/evaluation/{ownerId}/wiki/{wikiId}",
                    "parameters": [
                         {
                              "name": "ownerId",
                              "in": "path",
                              "required": true,
                              "description": "The ID of the owning Evaluation.",
                              "schema": {"type": "string"}
                         },
                         {
                              "name": "wikiId",
                              "in": "path",
                              "required": true,
                              "description": "The ID of the WikiPage to update.",
                              "schema": {"type": "string"}
                         }
                    ],
                    "requestBody": {
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.wiki.WikiPage"}}},
                         "required": true
                    },
                    "security": [{"bearerAuth": []}],
                    "responses": {"200": {
                         "description": "Auto-generated description",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.wiki.WikiPage"}}}
                    }}
               },
               "delete": {
                    "tags": ["WikiPage Services"],
                    "operationId": "delete-/repo/v1/evaluation/{ownerId}/wiki/{wikiId}",
                    "parameters": [
                         {
                              "name": "ownerId",
                              "in": "path",
                              "required": true,
                              "description": "The ID of the owning Evaluations.",
                              "schema": {"type": "string"}
                         },
                         {
                              "name": "wikiId",
                              "in": "path",
                              "required": true,
                              "description": "The ID of the WikiPage to delete.",
                              "schema": {"type": "string"}
                         }
                    ],
                    "security": [{"bearerAuth": []}],
                    "responses": {"200": {"description": "Void"}}
               }
          },
          "/repo/v1/entity/{ownerId}/wikiheadertree": {"get": {
               "tags": ["WikiPage Services"],
               "operationId": "get-/repo/v1/entity/{ownerId}/wikiheadertree",
               "parameters": [
                    {
                         "name": "offset",
                         "in": "query",
                         "required": false,
                         "description": "The index of the pagination offset. For a page size of 10, the\n            first page would be at offset = 0, and the second page would\n            be at offset = 10.",
                         "schema": {"type": "number"}
                    },
                    {
                         "name": "limit",
                         "in": "query",
                         "required": false,
                         "description": "Limits the size of the page returned. For example, a page size\n            of 10 require limit = 10.",
                         "schema": {"type": "number"}
                    },
                    {
                         "name": "ownerId",
                         "in": "path",
                         "required": true,
                         "description": "The ID of the owning Entity.",
                         "schema": {"type": "string"}
                    }
               ],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/PaginatedResultsOfWikiHeader"}}}
               }}
          }},
          "/repo/v1/evaluation/{ownerId}/wikiheadertree": {"get": {
               "tags": ["WikiPage Services"],
               "operationId": "get-/repo/v1/evaluation/{ownerId}/wikiheadertree",
               "parameters": [
                    {
                         "name": "offset",
                         "in": "query",
                         "required": false,
                         "description": "The index of the pagination offset. For a page size of 10, the\n            first page would be at offset = 0, and the second page would\n            be at offset = 10.",
                         "schema": {"type": "number"}
                    },
                    {
                         "name": "limit",
                         "in": "query",
                         "required": false,
                         "description": "Limits the size of the page returned. For example, a page size\n            of 10 require limit = 10.",
                         "schema": {"type": "number"}
                    },
                    {
                         "name": "ownerId",
                         "in": "path",
                         "required": true,
                         "description": "The ID of the owning Evaluation.",
                         "schema": {"type": "string"}
                    }
               ],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/PaginatedResultsOfWikiHeader"}}}
               }}
          }},
          "/repo/v1/entity/{ownerId}/wiki/{wikiId}/attachmenthandles": {"get": {
               "tags": ["WikiPage Services"],
               "operationId": "get-/repo/v1/entity/{ownerId}/wiki/{wikiId}/attachmenthandles",
               "parameters": [
                    {
                         "name": "ownerId",
                         "in": "path",
                         "required": true,
                         "description": "The ID of the owning Entity.",
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "wikiId",
                         "in": "path",
                         "required": true,
                         "description": "The ID of the WikiPage.",
                         "schema": {"type": "string"}
                    }
               ],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.file.FileHandleResults"}}}
               }}
          }},
          "/repo/v1/evaluation/{ownerId}/wiki/{wikiId}/attachmenthandles": {"get": {
               "tags": ["WikiPage Services"],
               "operationId": "get-/repo/v1/evaluation/{ownerId}/wiki/{wikiId}/attachmenthandles",
               "parameters": [
                    {
                         "name": "ownerId",
                         "in": "path",
                         "required": true,
                         "description": "The ID of the owning Evaluation.",
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "wikiId",
                         "in": "path",
                         "required": true,
                         "description": "The ID of the WikiPage.",
                         "schema": {"type": "string"}
                    }
               ],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.file.FileHandleResults"}}}
               }}
          }},
          "/repo/v1/entity/{ownerId}/wiki/{wikiId}/attachment": {"get": {
               "tags": ["WikiPage Services"],
               "operationId": "get-/repo/v1/entity/{ownerId}/wiki/{wikiId}/attachment",
               "parameters": [
                    {
                         "name": "ownerId",
                         "in": "path",
                         "required": true,
                         "description": "The ID of the owning Entity",
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "wikiId",
                         "in": "path",
                         "required": true,
                         "description": "The ID of the WikiPage",
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "fileName",
                         "in": "query",
                         "required": true,
                         "description": "The name of the file to get. The file names can be found in\n            the FileHandles from the ,<a href=\"${GET.entity.ownerId.wiki.wikiId.attachmenthandles}\">,GET\n            /entity/{ownerId}/wiki/{wikiId}/attachmenthandles,<\/a>, method.",
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "redirect",
                         "in": "query",
                         "required": false,
                         "description": "When set to false, the URL will be returned as text/plain\n            instead of redirecting.",
                         "schema": {"type": "boolean"}
                    }
               ],
               "security": [{"bearerAuth": []}],
               "responses": {
                    "200": {
                         "description": "Status 200 will be returned if the 'redirect' boolean param is false",
                         "content": {"text/plain": {"schema": {}}}
                    },
                    "307": {"description": "Status 307 will be returned if the 'redirect' boolean param is true or null"}
               }
          }},
          "/repo/v1/evaluation/{ownerId}/wiki/{wikiId}/attachment": {"get": {
               "tags": ["WikiPage Services"],
               "operationId": "get-/repo/v1/evaluation/{ownerId}/wiki/{wikiId}/attachment",
               "parameters": [
                    {
                         "name": "ownerId",
                         "in": "path",
                         "required": true,
                         "description": "The ID of the owning Evaluation",
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "wikiId",
                         "in": "path",
                         "required": true,
                         "description": "The ID of the WikiPage",
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "fileName",
                         "in": "query",
                         "required": true,
                         "description": "The name of the file to get. The file names can be found in\n            the FileHandles from the ,<a href=\"${GET.evaluation.ownerId.wiki.wikiId.attachmenthandles}\">,GET /evaluation/{ownerId}/wiki/{wikiId}/attachmenthandles,<\/a>,\n            method.",
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "redirect",
                         "in": "query",
                         "required": false,
                         "description": "When set to false, the URL will be returned as text/plain\n            instead of redirecting.",
                         "schema": {"type": "boolean"}
                    }
               ],
               "security": [{"bearerAuth": []}],
               "responses": {
                    "200": {
                         "description": "Status 200 will be returned if the 'redirect' boolean param is false",
                         "content": {"text/plain": {"schema": {}}}
                    },
                    "307": {"description": "Status 307 will be returned if the 'redirect' boolean param is true or null"}
               }
          }},
          "/repo/v1/entity/{ownerId}/wiki/{wikiId}/attachmentpreview": {"get": {
               "tags": ["WikiPage Services"],
               "operationId": "get-/repo/v1/entity/{ownerId}/wiki/{wikiId}/attachmentpreview",
               "parameters": [
                    {
                         "name": "ownerId",
                         "in": "path",
                         "required": true,
                         "description": "The ID of the owning Entity",
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "wikiId",
                         "in": "path",
                         "required": true,
                         "description": "The ID of the WikiPage",
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "fileName",
                         "in": "query",
                         "required": true,
                         "description": "The name of the file to get. The file names can be found in\n            the FileHandles from the ,<a href=\"${GET.entity.ownerId.wiki.wikiId.attachmenthandles}\">,GET\n            /entity/{ownerId}/wiki/{wikiId}/attachmenthandles,<\/a>, method.",
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "redirect",
                         "in": "query",
                         "required": false,
                         "description": "When set to false, the URL will be returned as text/plain\n            instead of redirecting.",
                         "schema": {"type": "boolean"}
                    }
               ],
               "security": [{"bearerAuth": []}],
               "responses": {
                    "200": {
                         "description": "Status 200 will be returned if the 'redirect' boolean param is false",
                         "content": {"text/plain": {"schema": {}}}
                    },
                    "307": {"description": "Status 307 will be returned if the 'redirect' boolean param is true or null"}
               }
          }},
          "/repo/v1/evaluation/{ownerId}/wiki/{wikiId}/attachmentpreview": {"get": {
               "tags": ["WikiPage Services"],
               "operationId": "get-/repo/v1/evaluation/{ownerId}/wiki/{wikiId}/attachmentpreview",
               "parameters": [
                    {
                         "name": "ownerId",
                         "in": "path",
                         "required": true,
                         "description": "The ID of the owning Evaluation",
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "wikiId",
                         "in": "path",
                         "required": true,
                         "description": "The ID of the WikiPage",
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "fileName",
                         "in": "query",
                         "required": true,
                         "description": "The name of the file to get. The file names can be found in\n            the FileHandles from the ,<a href=\"${GET.evaluation.ownerId.wiki.wikiId.attachmenthandles}\">,GET /evaluation/{ownerId}/wiki/{wikiId}/attachmenthandles,<\/a>,\n            method.",
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "redirect",
                         "in": "query",
                         "required": false,
                         "description": "When set to false, the URL will be returned as text/plain\n            instead of redirecting.",
                         "schema": {"type": "boolean"}
                    }
               ],
               "security": [{"bearerAuth": []}],
               "responses": {
                    "200": {
                         "description": "Status 200 will be returned if the 'redirect' boolean param is false",
                         "content": {"text/plain": {"schema": {}}}
                    },
                    "307": {"description": "Status 307 will be returned if the 'redirect' boolean param is true or null"}
               }
          }},
          "/repo/v1/entity/{id}/bundle2": {
               "post": {
                    "tags": ["Entity Bundle Services V2"],
                    "operationId": "post-/repo/v1/entity/{id}/bundle2",
                    "parameters": [{
                         "name": "id",
                         "in": "path",
                         "required": true,
                         "description": "- The ID of the entity to fetch.",
                         "schema": {"type": "string"}
                    }],
                    "requestBody": {
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.entitybundle.v2.EntityBundleRequest"}}},
                         "required": true
                    },
                    "security": [{"bearerAuth": []}],
                    "responses": {"200": {
                         "description": "The requested Entity if it exists.",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.entitybundle.v2.EntityBundle"}}}
                    }}
               },
               "put": {
                    "tags": ["Entity Bundle Services V2"],
                    "operationId": "put-/repo/v1/entity/{id}/bundle2",
                    "parameters": [
                         {
                              "name": "generatedBy",
                              "in": "query",
                              "required": false,
                              "schema": {"type": "string"}
                         },
                         {
                              "name": "id",
                              "in": "path",
                              "required": true,
                              "schema": {"type": "string"}
                         }
                    ],
                    "requestBody": {
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.entitybundle.v2.EntityBundleCreate"}}},
                         "required": true
                    },
                    "security": [{"bearerAuth": []}],
                    "responses": {"200": {
                         "description": "Auto-generated description",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.entitybundle.v2.EntityBundle"}}}
                    }}
               }
          },
          "/repo/v1/entity/{id}/version/{versionNumber}/bundle2": {"post": {
               "tags": ["Entity Bundle Services V2"],
               "operationId": "post-/repo/v1/entity/{id}/version/{versionNumber}/bundle2",
               "parameters": [
                    {
                         "name": "id",
                         "in": "path",
                         "required": true,
                         "description": "- The ID of the entity to fetch.",
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "versionNumber",
                         "in": "path",
                         "required": true,
                         "description": "- The version of the entity to fetch",
                         "schema": {"type": "number"}
                    }
               ],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.entitybundle.v2.EntityBundleRequest"}}},
                    "required": true
               },
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "The requested Entity if it exists.",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.entitybundle.v2.EntityBundle"}}}
               }}
          }},
          "/repo/v1/entity/bundle2/create": {"post": {
               "tags": ["Entity Bundle Services V2"],
               "operationId": "post-/repo/v1/entity/bundle2/create",
               "parameters": [{
                    "name": "generatedBy",
                    "in": "query",
                    "required": false,
                    "schema": {"type": "string"}
               }],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.entitybundle.v2.EntityBundleCreate"}}},
                    "required": true
               },
               "security": [{"bearerAuth": []}],
               "responses": {"201": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.entitybundle.v2.EntityBundle"}}}
               }}
          }},
          "/repo/v1/entity/{id}/dockerCommit": {"post": {
               "tags": ["Docker Commit Services"],
               "operationId": "post-/repo/v1/entity/{id}/dockerCommit",
               "parameters": [{
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {"type": "string"}
               }],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.docker.DockerCommit"}}},
                    "required": true
               },
               "security": [{"bearerAuth": []}],
               "responses": {"204": {"description": "Void"}}
          }},
          "/repo/v1/entity/{id}/dockerTag": {"get": {
               "tags": ["Docker Commit Services"],
               "operationId": "get-/repo/v1/entity/{id}/dockerTag",
               "parameters": [
                    {
                         "name": "id",
                         "in": "path",
                         "required": true,
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "sort",
                         "in": "query",
                         "required": false,
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "ascending",
                         "in": "query",
                         "required": false,
                         "description": ", optional (default is false)",
                         "schema": {"type": "boolean"}
                    },
                    {
                         "name": "limit",
                         "in": "query",
                         "required": false,
                         "description": "pagination parameter, optional (default is 20)",
                         "schema": {"type": "number"}
                    },
                    {
                         "name": "offset",
                         "in": "query",
                         "required": false,
                         "description": "pagination parameter, optional (default is 0)",
                         "schema": {"type": "number"}
                    }
               ],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/PaginatedResultsOfDockerCommit"}}}
               }}
          }},
          "/repo/v1/certifiedUserTest": {"get": {
               "tags": ["Certified User Services"],
               "operationId": "get-/repo/v1/certifiedUserTest",
               "parameters": [],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.quiz.Quiz"}}}
               }}
          }},
          "/repo/v1/certifiedUserTestResponse": {"post": {
               "tags": ["Certified User Services"],
               "operationId": "post-/repo/v1/certifiedUserTestResponse",
               "parameters": [],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.quiz.QuizResponse"}}},
                    "required": true
               },
               "security": [{"bearerAuth": []}],
               "responses": {"201": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.quiz.PassingRecord"}}}
               }}
          }},
          "/repo/v1/admin/certifiedUserTestResponse": {"get": {
               "tags": ["Certified User Services"],
               "operationId": "get-/repo/v1/admin/certifiedUserTestResponse",
               "parameters": [
                    {
                         "name": "principalId",
                         "in": "query",
                         "required": false,
                         "description": "If specified, only retrieve the quiz for this user, if it exists.",
                         "schema": {"type": "number"}
                    },
                    {
                         "name": "limit",
                         "in": "query",
                         "required": false,
                         "description": "Limits the size of the page returned. For example, a page size of 10 requires limit = 10.",
                         "schema": {"type": "integer"}
                    },
                    {
                         "name": "offset",
                         "in": "query",
                         "required": false,
                         "description": "The index of the pagination offset. For a page size of 10, the first page would be at offset = 0, and the second page would be at offset = 10.",
                         "schema": {"type": "integer"}
                    }
               ],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/PaginatedResultsOfQuizResponse"}}}
               }}
          }},
          "/repo/v1/admin/certifiedUserTestResponse/{id}": {"delete": {
               "tags": ["Certified User Services"],
               "operationId": "delete-/repo/v1/admin/certifiedUserTestResponse/{id}",
               "parameters": [{
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {"type": "number"}
               }],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {"description": "Void"}}
          }},
          "/repo/v1/user/{id}/certifiedUserPassingRecord": {"get": {
               "tags": ["Certified User Services"],
               "operationId": "get-/repo/v1/user/{id}/certifiedUserPassingRecord",
               "parameters": [{
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {"type": "number"}
               }],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.quiz.PassingRecord"}}}
               }}
          }},
          "/repo/v1/user/{id}/certifiedUserPassingRecords": {"get": {
               "tags": ["Certified User Services"],
               "operationId": "get-/repo/v1/user/{id}/certifiedUserPassingRecords",
               "parameters": [
                    {
                         "name": "id",
                         "in": "path",
                         "required": true,
                         "schema": {"type": "number"}
                    },
                    {
                         "name": "limit",
                         "in": "query",
                         "required": false,
                         "schema": {"type": "integer"}
                    },
                    {
                         "name": "offset",
                         "in": "query",
                         "required": false,
                         "schema": {"type": "integer"}
                    }
               ],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/PaginatedResultsOfPassingRecord"}}}
               }}
          }},
          "/repo/v1/admin/user/{id}/certificationStatus": {"put": {
               "tags": ["Certified User Services"],
               "operationId": "put-/repo/v1/admin/user/{id}/certificationStatus",
               "parameters": [
                    {
                         "name": "id",
                         "in": "path",
                         "required": true,
                         "schema": {"type": "number"}
                    },
                    {
                         "name": "isCertified",
                         "in": "query",
                         "required": true,
                         "description": "true to set as certified or false to 'de-certify'",
                         "schema": {"type": "boolean"}
                    }
               ],
               "security": [{"bearerAuth": []}],
               "responses": {"204": {"description": "Void"}}
          }},
          "/repo/v1/user/{id}/revokeCertification": {"put": {
               "tags": ["Certified User Services"],
               "operationId": "put-/repo/v1/user/{id}/revokeCertification",
               "parameters": [{
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {"type": "number"}
               }],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.quiz.PassingRecord"}}}
               }}
          }},
          "/repo/v1/researchProject": {"post": {
               "tags": ["Data Access Services"],
               "operationId": "post-/repo/v1/researchProject",
               "parameters": [],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.dataaccess.ResearchProject"}}},
                    "required": true
               },
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.dataaccess.ResearchProject"}}}
               }}
          }},
          "/repo/v1/accessRequirement/{requirementId}/researchProjectForUpdate": {"get": {
               "tags": ["Data Access Services"],
               "operationId": "get-/repo/v1/accessRequirement/{requirementId}/researchProjectForUpdate",
               "parameters": [{
                    "name": "requirementId",
                    "in": "path",
                    "required": true,
                    "schema": {"type": "string"}
               }],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.dataaccess.ResearchProject"}}}
               }}
          }},
          "/repo/v1/dataAccessRequest": {"post": {
               "tags": ["Data Access Services"],
               "operationId": "post-/repo/v1/dataAccessRequest",
               "parameters": [],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.dataaccess.RequestInterface"}}},
                    "required": true
               },
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.dataaccess.RequestInterface"}}}
               }}
          }},
          "/repo/v1/accessRequirement/{requirementId}/dataAccessRequestForUpdate": {"get": {
               "tags": ["Data Access Services"],
               "operationId": "get-/repo/v1/accessRequirement/{requirementId}/dataAccessRequestForUpdate",
               "parameters": [{
                    "name": "requirementId",
                    "in": "path",
                    "required": true,
                    "schema": {"type": "string"}
               }],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.dataaccess.RequestInterface"}}}
               }}
          }},
          "/repo/v1/dataAccessRequest/{requestId}/submission": {"post": {
               "tags": ["Data Access Services"],
               "operationId": "post-/repo/v1/dataAccessRequest/{requestId}/submission",
               "parameters": [{
                    "name": "requestId",
                    "in": "path",
                    "required": true,
                    "description": "- The ID of the request object.",
                    "schema": {"type": "string"}
               }],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.dataaccess.CreateSubmissionRequest"}}},
                    "required": true
               },
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.dataaccess.SubmissionStatus"}}}
               }}
          }},
          "/repo/v1/dataAccessSubmission/{submissionId}/cancellation": {"put": {
               "tags": ["Data Access Services"],
               "operationId": "put-/repo/v1/dataAccessSubmission/{submissionId}/cancellation",
               "parameters": [{
                    "name": "submissionId",
                    "in": "path",
                    "required": true,
                    "description": "- The ID of the submission to cancel.",
                    "schema": {"type": "string"}
               }],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.dataaccess.SubmissionStatus"}}}
               }}
          }},
          "/repo/v1/dataAccessSubmission/{submissionId}": {
               "put": {
                    "tags": ["Data Access Services"],
                    "operationId": "put-/repo/v1/dataAccessSubmission/{submissionId}",
                    "parameters": [{
                         "name": "submissionId",
                         "in": "path",
                         "required": true,
                         "schema": {"type": "string"}
                    }],
                    "requestBody": {
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.dataaccess.SubmissionStateChangeRequest"}}},
                         "required": true
                    },
                    "security": [{"bearerAuth": []}],
                    "responses": {"200": {
                         "description": "Auto-generated description",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.dataaccess.Submission"}}}
                    }}
               },
               "delete": {
                    "tags": ["Data Access Services"],
                    "operationId": "delete-/repo/v1/dataAccessSubmission/{submissionId}",
                    "parameters": [{
                         "name": "submissionId",
                         "in": "path",
                         "required": true,
                         "schema": {"type": "string"}
                    }],
                    "security": [{"bearerAuth": []}],
                    "responses": {"200": {"description": "Void"}}
               },
               "get": {
                    "tags": ["Data Access Services"],
                    "operationId": "get-/repo/v1/dataAccessSubmission/{submissionId}",
                    "parameters": [{
                         "name": "submissionId",
                         "in": "path",
                         "required": true,
                         "schema": {"type": "string"}
                    }],
                    "security": [{"bearerAuth": []}],
                    "responses": {"200": {
                         "description": "Auto-generated description",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.dataaccess.Submission"}}}
                    }}
               }
          },
          "/repo/v1/accessRequirement/{requirementId}/submissions": {"post": {
               "tags": ["Data Access Services"],
               "operationId": "post-/repo/v1/accessRequirement/{requirementId}/submissions",
               "parameters": [{
                    "name": "requirementId",
                    "in": "path",
                    "required": true,
                    "schema": {"type": "string"}
               }],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.dataaccess.SubmissionPageRequest"}}},
                    "required": true
               },
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.dataaccess.SubmissionPage"}}}
               }}
          }},
          "/repo/v1/accessRequirement/{requirementId}/approvedSubmissionInfo": {"post": {
               "tags": ["Data Access Services"],
               "operationId": "post-/repo/v1/accessRequirement/{requirementId}/approvedSubmissionInfo",
               "parameters": [{
                    "name": "requirementId",
                    "in": "path",
                    "required": true,
                    "schema": {"type": "string"}
               }],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.dataaccess.SubmissionInfoPageRequest"}}},
                    "required": true
               },
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "in order of modifiedOn, ascending",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.dataaccess.SubmissionInfoPage"}}}
               }}
          }},
          "/repo/v1/accessRequirement/{requirementId}/status": {"get": {
               "tags": ["Data Access Services"],
               "operationId": "get-/repo/v1/accessRequirement/{requirementId}/status",
               "parameters": [{
                    "name": "requirementId",
                    "in": "path",
                    "required": true,
                    "schema": {"type": "string"}
               }],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.dataaccess.AccessRequirementStatus"}}}
               }}
          }},
          "/repo/v1/restrictionInformation": {"post": {
               "tags": ["Data Access Services"],
               "operationId": "post-/repo/v1/restrictionInformation",
               "parameters": [],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.RestrictionInformationRequest"}}},
                    "required": true
               },
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.RestrictionInformationResponse"}}}
               }}
          }},
          "/repo/v1/restrictionInformation/batch": {"post": {
               "tags": ["Data Access Services"],
               "operationId": "post-/repo/v1/restrictionInformation/batch",
               "parameters": [],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.RestrictionInformationBatchRequest"}}},
                    "required": true
               },
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.RestrictionInformationBatchResponse"}}}
               }}
          }},
          "/repo/v1/dataAccessSubmission/openSubmissions": {"get": {
               "tags": ["Data Access Services"],
               "operationId": "get-/repo/v1/dataAccessSubmission/openSubmissions",
               "parameters": [{
                    "name": "nextPageToken",
                    "in": "query",
                    "required": false,
                    "schema": {"type": "string"}
               }],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.dataaccess.OpenSubmissionPage"}}}
               }}
          }},
          "/repo/v1/dataAccessSubmission/search": {"post": {
               "tags": ["Data Access Services"],
               "operationId": "post-/repo/v1/dataAccessSubmission/search",
               "parameters": [],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.dataaccess.SubmissionSearchRequest"}}},
                    "required": true
               },
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.dataaccess.SubmissionSearchResponse"}}}
               }}
          }},
          "/dockerRegistryListener/v1/events": {"post": {
               "tags": ["Docker Registry Event Services"],
               "operationId": "post-/dockerRegistryListener/v1/events",
               "parameters": [],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.docker.DockerRegistryEventList"}}},
                    "required": true
               },
               "responses": {"204": {"description": "Void"}}
          }},
          "/repo/v1/entity": {"post": {
               "tags": ["Entity Services"],
               "operationId": "post-/repo/v1/entity",
               "parameters": [{
                    "name": "generatedBy",
                    "in": "query",
                    "required": false,
                    "description": "To track the Provenance of an Entity create, include the\n                    ID of the ,<a href=\"${org.sagebionetworks.repo.model.provenance.Activity}\">,Activity,<\/a>, that was created to track the change. For\n                    more information see: ,<a href=\"${POST.activity}\">,POST\n                    /activity,<\/a>,. You must be the creator of the ,<a href=\"${org.sagebionetworks.repo.model.provenance.Activity}\">,Activity,<\/a>, used here.",
                    "schema": {"type": "string"}
               }],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.Entity"}}},
                    "required": true
               },
               "security": [{"bearerAuth": []}],
               "responses": {"201": {
                    "description": "The new entity with an etag, id, and type specific metadata.",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.Entity"}}}
               }}
          }},
          "/repo/v1/entity/{id}": {
               "get": {
                    "tags": ["Entity Services"],
                    "operationId": "get-/repo/v1/entity/{id}",
                    "parameters": [{
                         "name": "id",
                         "in": "path",
                         "required": true,
                         "description": "The ID of the entity to fetch.",
                         "schema": {"type": "string"}
                    }],
                    "security": [{"bearerAuth": []}],
                    "responses": {"200": {
                         "description": "The requested Entity if it exists.",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.Entity"}}}
                    }}
               },
               "put": {
                    "tags": ["Entity Services"],
                    "operationId": "put-/repo/v1/entity/{id}",
                    "parameters": [
                         {
                              "name": "id",
                              "in": "path",
                              "required": true,
                              "description": "The ID of the entity to update. This ID must match the ID\n                    of the passed Entity in the request body.",
                              "schema": {"type": "string"}
                         },
                         {
                              "name": "generatedBy",
                              "in": "query",
                              "required": false,
                              "description": "To track the Provenance of an Entity update, include the\n                    ID of the ,<a href=\"${org.sagebionetworks.repo.model.provenance.Activity}\">,Activity,<\/a>, that was created to track the change. For\n                    more information see: ,<a href=\"${POST.activity}\">,POST\n                    /activity,<\/a>,. You must be the creator of the ,<a href=\"${org.sagebionetworks.repo.model.provenance.Activity}\">,Activity,<\/a>, used here.",
                              "schema": {"type": "string"}
                         },
                         {
                              "name": "newVersion",
                              "in": "query",
                              "required": false,
                              "description": "To force the creation of a new version for a ,<a href=\"${org.sagebionetworks.repo.model.VersionableEntity}\">,versionable,<\/a>,\n                    entity such as a ,<a href=\"${org.sagebionetworks.repo.model.FileEntity}\">,FileEntity,<\/a>,,\n                    include this optional parameter with a value set to true\n                    (i.e. newVersion=true). This parameter is ignored for\n                    entities of type ,<a href=\"${org.sagebionetworks.repo.model.table.Table}\">,Table,<\/a>,\n                    (See ,<a href=\"${POST.entity.id.table.snapshot}\">,POST\n                    /entity/{id}/table/snapshot,<\/a>, instead)",
                              "schema": {"type": "string"}
                         }
                    ],
                    "requestBody": {
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.Entity"}}},
                         "required": true
                    },
                    "security": [{"bearerAuth": []}],
                    "responses": {"200": {
                         "description": "Auto-generated description",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.Entity"}}}
                    }}
               },
               "delete": {
                    "tags": ["Entity Services"],
                    "operationId": "delete-/repo/v1/entity/{id}",
                    "parameters": [
                         {
                              "name": "id",
                              "in": "path",
                              "required": true,
                              "description": "The ID of the Entity to delete.",
                              "schema": {"type": "string"}
                         },
                         {
                              "name": "skipTrashCan",
                              "in": "query",
                              "required": false,
                              "description": "If true the entity will be flag for priority purge and\n                     deleted as soon as possible",
                              "schema": {"type": "boolean"}
                         }
                    ],
                    "security": [{"bearerAuth": []}],
                    "responses": {"204": {"description": "Void"}}
               }
          },
          "/repo/v1/entity/{id}/version/{versionNumber}/filehandle": {"put": {
               "tags": ["Entity Services"],
               "operationId": "put-/repo/v1/entity/{id}/version/{versionNumber}/filehandle",
               "parameters": [
                    {
                         "name": "id",
                         "in": "path",
                         "required": true,
                         "description": "The id of the file entity",
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "versionNumber",
                         "in": "path",
                         "required": true,
                         "description": "The entity version",
                         "schema": {"type": "number"}
                    }
               ],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.entity.FileHandleUpdateRequest"}}},
                    "required": true
               },
               "security": [{"bearerAuth": []}],
               "responses": {"200": {"description": "Void"}}
          }},
          "/repo/v1/entity/{id}/annotations2": {
               "get": {
                    "tags": ["Entity Services"],
                    "operationId": "get-/repo/v1/entity/{id}/annotations2",
                    "parameters": [
                         {
                              "name": "id",
                              "in": "path",
                              "required": true,
                              "description": "- The id of the entity to update.",
                              "schema": {"type": "string"}
                         },
                         {
                              "name": "includeDerived",
                              "in": "query",
                              "required": true,
                              "description": "- When set to 'true', the derived annotations will be\n                       included in the results. Default value 'false'.",
                              "schema": {"type": "boolean"}
                         }
                    ],
                    "security": [{"bearerAuth": []}],
                    "responses": {"200": {
                         "description": "The annotations for the given entity.",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.annotation.v2.Annotations"}}}
                    }}
               },
               "put": {
                    "tags": ["Entity Services"],
                    "operationId": "put-/repo/v1/entity/{id}/annotations2",
                    "parameters": [{
                         "name": "id",
                         "in": "path",
                         "required": true,
                         "description": "- The id of the entity to update.",
                         "schema": {"type": "string"}
                    }],
                    "requestBody": {
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.annotation.v2.Annotations"}}},
                         "required": true
                    },
                    "security": [{"bearerAuth": []}],
                    "responses": {"200": {
                         "description": "the updated annotations",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.annotation.v2.Annotations"}}}
                    }}
               }
          },
          "/repo/v1/entity/{id}/version/{versionNumber}/annotations2": {"get": {
               "tags": ["Entity Services"],
               "operationId": "get-/repo/v1/entity/{id}/version/{versionNumber}/annotations2",
               "parameters": [
                    {
                         "name": "id",
                         "in": "path",
                         "required": true,
                         "description": "The ID of the Entity.",
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "versionNumber",
                         "in": "path",
                         "required": true,
                         "description": "The version number of the Entity.",
                         "schema": {"type": "number"}
                    }
               ],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.annotation.v2.Annotations"}}}
               }}
          }},
          "/repo/v1/entity/{id}/version/{versionNumber}": {
               "delete": {
                    "tags": ["Entity Services"],
                    "operationId": "delete-/repo/v1/entity/{id}/version/{versionNumber}",
                    "parameters": [
                         {
                              "name": "id",
                              "in": "path",
                              "required": true,
                              "description": "The ID of the Entity",
                              "schema": {"type": "string"}
                         },
                         {
                              "name": "versionNumber",
                              "in": "path",
                              "required": true,
                              "description": "The version number of the Entity to delete.",
                              "schema": {"type": "number"}
                         }
                    ],
                    "security": [{"bearerAuth": []}],
                    "responses": {"204": {"description": "Void"}}
               },
               "get": {
                    "tags": ["Entity Services"],
                    "operationId": "get-/repo/v1/entity/{id}/version/{versionNumber}",
                    "parameters": [
                         {
                              "name": "id",
                              "in": "path",
                              "required": true,
                              "description": "The ID of the Entity.",
                              "schema": {"type": "string"}
                         },
                         {
                              "name": "versionNumber",
                              "in": "path",
                              "required": true,
                              "description": "The version number of the Entity to get.",
                              "schema": {"type": "number"}
                         }
                    ],
                    "security": [{"bearerAuth": []}],
                    "responses": {"200": {
                         "description": "Auto-generated description",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.Entity"}}}
                    }}
               }
          },
          "/repo/v1/entity/{id}/type": {"get": {
               "tags": ["Entity Services"],
               "operationId": "get-/repo/v1/entity/{id}/type",
               "parameters": [{
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "description": "The ID of the Entity to get the EntityHeader for.",
                    "schema": {"type": "string"}
               }],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.EntityHeader"}}}
               }}
          }},
          "/repo/v1/entity/type": {"get": {
               "tags": ["Entity Services"],
               "operationId": "get-/repo/v1/entity/type",
               "parameters": [{
                    "name": "batch",
                    "in": "query",
                    "required": true,
                    "description": "A comma separated list of Entity IDs to get EntityHeaders\n                     for.",
                    "schema": {"type": "string"}
               }],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/PaginatedResultsOfEntityHeader"}}}
               }}
          }},
          "/repo/v1/entity/header": {"post": {
               "tags": ["Entity Services"],
               "operationId": "post-/repo/v1/entity/header",
               "parameters": [],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.request.ReferenceList"}}},
                    "required": true
               },
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/PaginatedResultsOfEntityHeader"}}}
               }}
          }},
          "/repo/v1/entity/{id}/permissions": {"get": {
               "tags": ["Entity Services"],
               "operationId": "get-/repo/v1/entity/{id}/permissions",
               "parameters": [{
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "description": "The ID of the Entity to get permissions for.",
                    "schema": {"type": "string"}
               }],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.auth.UserEntityPermissions"}}}
               }}
          }},
          "/repo/v1/entity/{id}/access": {"get": {
               "tags": ["Entity Services"],
               "operationId": "get-/repo/v1/entity/{id}/access",
               "parameters": [
                    {
                         "name": "id",
                         "in": "path",
                         "required": true,
                         "description": "The ID of the Entity to check the permission on.",
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "accessType",
                         "in": "query",
                         "required": true,
                         "description": "The permission to check. Must be from:\n                   ,<a href=\"${org.sagebionetworks.repo.model.ACCESS_TYPE}\">,ACCESS_TYPE,<\/a>",
                         "schema": {"type": "string"}
                    }
               ],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"type": "boolean"}}}
               }}
          }},
          "/repo/v1/entity/{id}/actions/download": {"get": {
               "tags": ["Entity Services"],
               "operationId": "get-/repo/v1/entity/{id}/actions/download",
               "parameters": [{
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {"type": "string"}
               }],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.download.ActionRequiredList"}}}
               }}
          }},
          "/repo/v1/entity/{id}/path": {"get": {
               "tags": ["Entity Services"],
               "operationId": "get-/repo/v1/entity/{id}/path",
               "parameters": [{
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "description": "The ID of the Entity to get the full path for.",
                    "schema": {"type": "string"}
               }],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.EntityPath"}}}
               }}
          }},
          "/repo/v1/entity/{id}/acl": {
               "post": {
                    "tags": ["Entity Services"],
                    "operationId": "post-/repo/v1/entity/{id}/acl",
                    "parameters": [{
                         "name": "id",
                         "in": "path",
                         "required": true,
                         "description": "The ID of the Entity to create an ACL for.",
                         "schema": {"type": "string"}
                    }],
                    "requestBody": {
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.AccessControlList"}}},
                         "required": true
                    },
                    "security": [{"bearerAuth": []}],
                    "responses": {"201": {
                         "description": "The new ACL, which includes the id of the affected entity",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.AccessControlList"}}}
                    }}
               },
               "get": {
                    "tags": ["Entity Services"],
                    "operationId": "get-/repo/v1/entity/{id}/acl",
                    "parameters": [{
                         "name": "id",
                         "in": "path",
                         "required": true,
                         "description": "The ID of the Entity to get the ACL for.",
                         "schema": {"type": "string"}
                    }],
                    "security": [{"bearerAuth": []}],
                    "responses": {"200": {
                         "description": "The entity ACL.",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.AccessControlList"}}}
                    }}
               },
               "put": {
                    "tags": ["Entity Services"],
                    "operationId": "put-/repo/v1/entity/{id}/acl",
                    "parameters": [{
                         "name": "id",
                         "in": "path",
                         "required": true,
                         "description": "The ID of the Entity to create an ACL for.",
                         "schema": {"type": "string"}
                    }],
                    "requestBody": {
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.AccessControlList"}}},
                         "required": true
                    },
                    "security": [{"bearerAuth": []}],
                    "responses": {"200": {
                         "description": "the accessControlList",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.AccessControlList"}}}
                    }}
               },
               "delete": {
                    "tags": ["Entity Services"],
                    "operationId": "delete-/repo/v1/entity/{id}/acl",
                    "parameters": [{
                         "name": "id",
                         "in": "path",
                         "required": true,
                         "description": "The ID of the Entity that should have its ACL deleted.",
                         "schema": {"type": "string"}
                    }],
                    "security": [{"bearerAuth": []}],
                    "responses": {"204": {"description": "Void"}}
               }
          },
          "/repo/v1/entity/{id}/benefactor": {"get": {
               "tags": ["Entity Services"],
               "operationId": "get-/repo/v1/entity/{id}/benefactor",
               "parameters": [{
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "description": "The ID of the entity to get the benefactor for.",
                    "schema": {"type": "string"}
               }],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "The entity ACL.",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.EntityHeader"}}}
               }}
          }},
          "/repo/v1/entity/{id}/version": {"get": {
               "tags": ["Entity Services"],
               "operationId": "get-/repo/v1/entity/{id}/version",
               "parameters": [
                    {
                         "name": "id",
                         "in": "path",
                         "required": true,
                         "description": "The ID of the Entity to get all versions for.",
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "offset",
                         "in": "query",
                         "required": false,
                         "description": "The offset index determines where this page will start\n                     from. When null it will default to 0.",
                         "schema": {"type": "integer"}
                    },
                    {
                         "name": "limit",
                         "in": "query",
                         "required": false,
                         "description": "Limits the number of entities that will be fetched for\n                     this page. When null it will default to 10.",
                         "schema": {"type": "integer"}
                    }
               ],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "A paginated list of results.",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/PaginatedResultsOfVersionInfo"}}}
               }}
          }},
          "/repo/v1/REST/resources": {"get": {
               "tags": ["Entity Services"],
               "operationId": "get-/repo/v1/REST/resources",
               "parameters": [],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.RestResourceList"}}}
               }}
          }},
          "/repo/v1/REST/resources/effectiveSchema": {"get": {
               "tags": ["Entity Services"],
               "operationId": "get-/repo/v1/REST/resources/effectiveSchema",
               "parameters": [{
                    "name": "resourceId",
                    "in": "query",
                    "required": true,
                    "description": "The full name of the resource (see\n                   ,<a href=\"${GET.REST.resources}\">,GET /REST/resources,<\/a>, for\n                   the full list of names).",
                    "schema": {"type": "string"}
               }],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"type": "object"}}}
               }}
          }},
          "/repo/v1/REST/resources/schema": {"get": {
               "tags": ["Entity Services"],
               "operationId": "get-/repo/v1/REST/resources/schema",
               "parameters": [{
                    "name": "resourceId",
                    "in": "query",
                    "required": true,
                    "description": "The full name of the resource (see\n                   ,<a href=\"${GET.REST.resources}\">,GET /REST/resources,<\/a>, for\n                   the full list of names).",
                    "schema": {"type": "string"}
               }],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"type": "object"}}}
               }}
          }},
          "/repo/v1/entity/{id}/generatedBy": {
               "get": {
                    "tags": ["Entity Services"],
                    "operationId": "get-/repo/v1/entity/{id}/generatedBy",
                    "parameters": [{
                         "name": "id",
                         "in": "path",
                         "required": true,
                         "description": "The ID of the activity to fetch.",
                         "schema": {"type": "string"}
                    }],
                    "security": [{"bearerAuth": []}],
                    "responses": {"200": {
                         "description": "The requested Activity if it exists.",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.provenance.Activity"}}}
                    }}
               },
               "put": {
                    "tags": ["Entity Services"],
                    "operationId": "put-/repo/v1/entity/{id}/generatedBy",
                    "parameters": [
                         {
                              "name": "id",
                              "in": "path",
                              "required": true,
                              "description": "The ID of the entity to update.",
                              "schema": {"type": "string"}
                         },
                         {
                              "name": "generatedBy",
                              "in": "query",
                              "required": true,
                              "description": "The id of the activity to connect to the entity. You must\n                    be the creator of the ,<a href=\"${org.sagebionetworks.repo.model.provenance.Activity}\">,Activity,<\/a>, used here.",
                              "schema": {"type": "string"}
                         }
                    ],
                    "security": [{"bearerAuth": []}],
                    "responses": {"200": {
                         "description": "The requested Activity if it exists.",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.provenance.Activity"}}}
                    }}
               },
               "delete": {
                    "tags": ["Entity Services"],
                    "operationId": "delete-/repo/v1/entity/{id}/generatedBy",
                    "parameters": [{
                         "name": "id",
                         "in": "path",
                         "required": true,
                         "description": "- The ID of the activity to fetch.",
                         "schema": {"type": "string"}
                    }],
                    "security": [{"bearerAuth": []}],
                    "responses": {"204": {"description": "The requested Activity if it exists."}}
               }
          },
          "/repo/v1/entity/{id}/version/{versionNumber}/generatedBy": {"get": {
               "tags": ["Entity Services"],
               "operationId": "get-/repo/v1/entity/{id}/version/{versionNumber}/generatedBy",
               "parameters": [
                    {
                         "name": "id",
                         "in": "path",
                         "required": true,
                         "description": "The ID of the entity to fetch.",
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "versionNumber",
                         "in": "path",
                         "required": true,
                         "description": "the version of the entity",
                         "schema": {"type": "number"}
                    }
               ],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "The requested Activity if it exists.",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.provenance.Activity"}}}
               }}
          }},
          "/repo/v1/entity/{id}/filepreview": {"get": {
               "tags": ["Entity Services"],
               "operationId": "get-/repo/v1/entity/{id}/filepreview",
               "parameters": [
                    {
                         "name": "id",
                         "in": "path",
                         "required": true,
                         "description": "The ID of the FileEntity to get.",
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "redirect",
                         "in": "query",
                         "required": false,
                         "description": "When set to false, the URL will be returned as text/plain\n                 instead of redirecting.",
                         "schema": {"type": "boolean"}
                    }
               ],
               "security": [{"bearerAuth": []}],
               "responses": {
                    "200": {
                         "description": "Status 200 will be returned if the 'redirect' boolean param is false",
                         "content": {"text/plain": {"schema": {}}}
                    },
                    "307": {"description": "Status 307 will be returned if the 'redirect' boolean param is true or null"}
               }
          }},
          "/repo/v1/entity/{id}/version/{versionNumber}/filepreview": {"get": {
               "tags": ["Entity Services"],
               "operationId": "get-/repo/v1/entity/{id}/version/{versionNumber}/filepreview",
               "parameters": [
                    {
                         "name": "id",
                         "in": "path",
                         "required": true,
                         "description": "The ID of the FileEntity to get.",
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "versionNumber",
                         "in": "path",
                         "required": true,
                         "description": "The version number of the FileEntity to get.",
                         "schema": {"type": "number"}
                    },
                    {
                         "name": "redirect",
                         "in": "query",
                         "required": false,
                         "description": "When set to false, the URL will be returned as\n                      text/plain instead of redirecting.",
                         "schema": {"type": "boolean"}
                    }
               ],
               "security": [{"bearerAuth": []}],
               "responses": {
                    "200": {
                         "description": "Status 200 will be returned if the 'redirect' boolean param is false",
                         "content": {"text/plain": {"schema": {}}}
                    },
                    "307": {"description": "Status 307 will be returned if the 'redirect' boolean param is true or null"}
               }
          }},
          "/repo/v1/entity/{id}/filehandles": {"get": {
               "tags": ["Entity Services"],
               "operationId": "get-/repo/v1/entity/{id}/filehandles",
               "parameters": [{
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "description": "The ID of the FileEntity to get.",
                    "schema": {"type": "string"}
               }],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.file.FileHandleResults"}}}
               }}
          }},
          "/repo/v1/entity/{id}/version/{versionNumber}/filehandles": {"get": {
               "tags": ["Entity Services"],
               "operationId": "get-/repo/v1/entity/{id}/version/{versionNumber}/filehandles",
               "parameters": [
                    {
                         "name": "id",
                         "in": "path",
                         "required": true,
                         "description": "The ID of the FileEntity to get.",
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "versionNumber",
                         "in": "path",
                         "required": true,
                         "description": "The version number of the FileEntity to get",
                         "schema": {"type": "number"}
                    }
               ],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.file.FileHandleResults"}}}
               }}
          }},
          "/repo/v1/entity/md5/{md5}": {"get": {
               "tags": ["Entity Services"],
               "operationId": "get-/repo/v1/entity/md5/{md5}",
               "parameters": [{
                    "name": "md5",
                    "in": "path",
                    "required": true,
                    "schema": {"type": "string"}
               }],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/PaginatedResultsOfEntityHeader"}}}
               }}
          }},
          "/repo/v1/entity/alias/{alias}": {"get": {
               "tags": ["Entity Services"],
               "operationId": "get-/repo/v1/entity/alias/{alias}",
               "parameters": [{
                    "name": "alias",
                    "in": "path",
                    "required": true,
                    "schema": {"type": "string"}
               }],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.EntityId"}}}
               }}
          }},
          "/repo/v1/entity/dockerRepo/id": {"get": {
               "tags": ["Entity Services"],
               "operationId": "get-/repo/v1/entity/dockerRepo/id",
               "parameters": [{
                    "name": "repositoryName",
                    "in": "query",
                    "required": true,
                    "description": "The name of a managed docker repository",
                    "schema": {"type": "string"}
               }],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.EntityId"}}}
               }}
          }},
          "/repo/v1/entity/children": {"post": {
               "tags": ["Entity Services"],
               "operationId": "post-/repo/v1/entity/children",
               "parameters": [],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.EntityChildrenRequest"}}},
                    "required": true
               },
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.EntityChildrenResponse"}}}
               }}
          }},
          "/repo/v1/entity/child": {"post": {
               "tags": ["Entity Services"],
               "operationId": "post-/repo/v1/entity/child",
               "parameters": [],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.entity.EntityLookupRequest"}}},
                    "required": true
               },
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.EntityId"}}}
               }}
          }},
          "/repo/v1/entity/{id}/datatype": {"put": {
               "tags": ["Entity Services"],
               "operationId": "put-/repo/v1/entity/{id}/datatype",
               "parameters": [
                    {
                         "name": "id",
                         "in": "path",
                         "required": true,
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "type",
                         "in": "query",
                         "required": true,
                         "schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.DataType"}
                    }
               ],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.DataTypeResponse"}}}
               }}
          }},
          "/repo/v1/entity/{id}/sts": {"get": {
               "tags": ["Entity Services"],
               "operationId": "get-/repo/v1/entity/{id}/sts",
               "parameters": [
                    {
                         "name": "id",
                         "in": "path",
                         "required": true,
                         "description": "The ID of the entity to get credentials. This must be a\n                   folder with an STS-enabled storage location.",
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "permission",
                         "in": "query",
                         "required": true,
                         "description": "Read-only or read-write permissions. See ,<a href=\"${org.sagebionetworks.repo.model.sts.StsPermission}\">,StsPermission,<\/a>,.",
                         "schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.sts.StsPermission"}
                    }
               ],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.sts.StsCredentials"}}}
               }}
          }},
          "/repo/v1/entity/{id}/schema/binding": {
               "put": {
                    "tags": ["Entity Services"],
                    "operationId": "put-/repo/v1/entity/{id}/schema/binding",
                    "parameters": [{
                         "name": "id",
                         "in": "path",
                         "required": true,
                         "description": "The syn ID of the entity to bind.",
                         "schema": {"type": "string"}
                    }],
                    "requestBody": {
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.entity.BindSchemaToEntityRequest"}}},
                         "required": true
                    },
                    "security": [{"bearerAuth": []}],
                    "responses": {"200": {
                         "description": "Auto-generated description",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.schema.JsonSchemaObjectBinding"}}}
                    }}
               },
               "get": {
                    "tags": ["Entity Services"],
                    "operationId": "get-/repo/v1/entity/{id}/schema/binding",
                    "parameters": [{
                         "name": "id",
                         "in": "path",
                         "required": true,
                         "description": "The ID of the entity.",
                         "schema": {"type": "string"}
                    }],
                    "security": [{"bearerAuth": []}],
                    "responses": {"200": {
                         "description": "Auto-generated description",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.schema.JsonSchemaObjectBinding"}}}
                    }}
               },
               "delete": {
                    "tags": ["Entity Services"],
                    "operationId": "delete-/repo/v1/entity/{id}/schema/binding",
                    "parameters": [{
                         "name": "id",
                         "in": "path",
                         "required": true,
                         "schema": {"type": "string"}
                    }],
                    "security": [{"bearerAuth": []}],
                    "responses": {"204": {"description": "Void"}}
               }
          },
          "/repo/v1/entity/{id}/json": {
               "get": {
                    "tags": ["Entity Services"],
                    "operationId": "get-/repo/v1/entity/{id}/json",
                    "parameters": [
                         {
                              "name": "id",
                              "in": "path",
                              "required": true,
                              "schema": {"type": "string"}
                         },
                         {
                              "name": "includeDerivedAnnotations",
                              "in": "query",
                              "required": true,
                              "description": "true if annotations that are derived from a\n                                  bound schema should be included in the\n                                  response, false otherwise (default false)",
                              "schema": {"type": "boolean"}
                         }
                    ],
                    "security": [{"bearerAuth": []}],
                    "responses": {"200": {
                         "description": "Auto-generated description",
                         "content": {"application/json": {"schema": {"type": "object"}}}
                    }}
               },
               "put": {
                    "tags": ["Entity Services"],
                    "operationId": "put-/repo/v1/entity/{id}/json",
                    "parameters": [{
                         "name": "id",
                         "in": "path",
                         "required": true,
                         "schema": {"type": "string"}
                    }],
                    "requestBody": {
                         "content": {"application/json": {"schema": {"type": "object"}}},
                         "required": true
                    },
                    "security": [{"bearerAuth": []}],
                    "responses": {"200": {
                         "description": "Auto-generated description",
                         "content": {"application/json": {"schema": {"type": "object"}}}
                    }}
               }
          },
          "/repo/v1/entity/{id}/version/{versionNumber}/json": {"get": {
               "tags": ["Entity Services"],
               "operationId": "get-/repo/v1/entity/{id}/version/{versionNumber}/json",
               "parameters": [
                    {
                         "name": "id",
                         "in": "path",
                         "required": true,
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "versionNumber",
                         "in": "path",
                         "required": true,
                         "schema": {"type": "number"}
                    }
               ],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"type": "object"}}}
               }}
          }},
          "/repo/v1/entity/{id}/schema/validation": {"get": {
               "tags": ["Entity Services"],
               "operationId": "get-/repo/v1/entity/{id}/schema/validation",
               "parameters": [{
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "description": "The ID of the Entity.",
                    "schema": {"type": "string"}
               }],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.schema.ValidationResults"}}}
               }}
          }},
          "/repo/v1/entity/{id}/schema/validation/statistics": {"get": {
               "tags": ["Entity Services"],
               "operationId": "get-/repo/v1/entity/{id}/schema/validation/statistics",
               "parameters": [{
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "description": "The ID of the container Entity.",
                    "schema": {"type": "string"}
               }],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.schema.ValidationSummaryStatistics"}}}
               }}
          }},
          "/repo/v1/entity/{id}/schema/validation/invalid": {"post": {
               "tags": ["Entity Services"],
               "operationId": "post-/repo/v1/entity/{id}/schema/validation/invalid",
               "parameters": [{
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "description": "The ID of the container Entity.",
                    "schema": {"type": "string"}
               }],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.schema.ListValidationResultsRequest"}}},
                    "required": true
               },
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.schema.ListValidationResultsResponse"}}}
               }}
          }},
          "/repo/v1/entity/{id}/derivedKeys": {"get": {
               "tags": ["Entity Services"],
               "operationId": "get-/repo/v1/entity/{id}/derivedKeys",
               "parameters": [{
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {"type": "string"}
               }],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.annotation.v2.Keys"}}}
               }}
          }},
          "/repo/v1/userProfile": {
               "get": {
                    "tags": ["User Profile Services"],
                    "operationId": "get-/repo/v1/userProfile",
                    "parameters": [],
                    "security": [{"bearerAuth": []}],
                    "responses": {"200": {
                         "description": "Auto-generated description",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.UserProfile"}}}
                    }}
               },
               "put": {
                    "tags": ["User Profile Services"],
                    "operationId": "put-/repo/v1/userProfile",
                    "parameters": [],
                    "requestBody": {
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.UserProfile"}}},
                         "required": true
                    },
                    "security": [{"bearerAuth": []}],
                    "responses": {"200": {
                         "description": "The updated ,<a href=\"${org.sagebionetworks.repo.model.UserProfile}\">,UserProfile,<\/a>",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.UserProfile"}}}
                    }}
               },
               "post": {
                    "tags": ["User Profile Services"],
                    "operationId": "post-/repo/v1/userProfile",
                    "parameters": [],
                    "requestBody": {
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.IdList"}}},
                         "required": true
                    },
                    "security": [{"bearerAuth": []}],
                    "responses": {"200": {
                         "description": "Auto-generated description",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ListWrapperOfUserProfile"}}}
                    }}
               }
          },
          "/repo/v1/user/bundle": {"get": {
               "tags": ["User Profile Services"],
               "operationId": "get-/repo/v1/user/bundle",
               "parameters": [{
                    "name": "mask",
                    "in": "query",
                    "required": true,
                    "description": "integer flag defining which components to include in the bundle\n \n ,<p>, This integer is used as a bit-string of flags to specify which parts to include \n  in the UserBundle. The mask is defined as follows:\n ,<ul>,\n ,<li>,\tUserProfile  = 0x1 ,<\/li>,\n ,<li>, ORCID  = 0x2 ,<\/li>,\n ,<li>, VerificationSubmission  = 0x4 ,<\/li>,\n ,<li>, IsCertified = 0x8 ,<\/li>,\n ,<li>, Is Verified  = 0x10 ,<\/li>,\n ,<li>, Is ACT Member = 0x20 ,<\/li>,\n ,<li>, Is AR Reviewer = 0x40 ,<\/li>,\n ,<\/ul>,\n ,<\/p>",
                    "schema": {"type": "integer"}
               }],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.UserBundle"}}}
               }}
          }},
          "/repo/v1/userProfile/{profileId}": {"get": {
               "tags": ["User Profile Services"],
               "operationId": "get-/repo/v1/userProfile/{profileId}",
               "parameters": [{
                    "name": "profileId",
                    "in": "path",
                    "required": true,
                    "description": "The target profile owner ID (the \"id\" field returned in the \"/user\" request).",
                    "schema": {"type": "string"}
               }],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.UserProfile"}}}
               }}
          }},
          "/repo/v1/user/{id}/bundle": {"get": {
               "tags": ["User Profile Services"],
               "operationId": "get-/repo/v1/user/{id}/bundle",
               "parameters": [
                    {
                         "name": "mask",
                         "in": "query",
                         "required": true,
                         "description": "integer flag defining which components to include in the bundle\n \n ,<p>, This integer is used as a bit-string of flags to specify which parts to include \n  in the UserBundle. The mask is defined as follows:\n ,<ul>,\n ,<li>,\tUserProfile  = 0x1 ,<\/li>,\n ,<li>, ORCID  = 0x2 ,<\/li>,\n ,<li>, VerificationSubmission  = 0x4 ,<\/li>,\n ,<li>, IsCertified = 0x8 ,<\/li>,\n ,<li>, Is Verified  = 0x10 ,<\/li>,\n ,<li>, Is ACT Member = 0x20 ,<\/li>,\n ,<li>, Is AR Reviewer = 0x40 ,<\/li>,\n ,<\/ul>,\n ,<\/p>",
                         "schema": {"type": "integer"}
                    },
                    {
                         "name": "id",
                         "in": "path",
                         "required": true,
                         "schema": {"type": "string"}
                    }
               ],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.UserBundle"}}}
               }}
          }},
          "/repo/v1/user": {"get": {
               "tags": ["User Profile Services"],
               "operationId": "get-/repo/v1/user",
               "parameters": [
                    {
                         "name": "offset",
                         "in": "query",
                         "required": false,
                         "description": "The offset index determines where this page will start from. An index of 0 is the first item. ,<p>,<i>,Default is 0,<\/i>,<\/p>",
                         "schema": {"type": "integer"}
                    },
                    {
                         "name": "limit",
                         "in": "query",
                         "required": false,
                         "description": "Limits the number of items that will be fetched for this page. ,<p>,<i>,Default is 100,<\/i>,<\/p>",
                         "schema": {"type": "integer"}
                    },
                    {
                         "name": "sort",
                         "in": "query",
                         "required": false,
                         "description": "Used to indicate upon which field(s) to sort. ,<p>,<i>,Default is NONE,<\/i>,<\/p>",
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "ascending",
                         "in": "query",
                         "required": false,
                         "description": "Used to indicate whether the sort direction is ascending or not.  ,<p>,<i>,Default is true,<\/i>,<\/p>",
                         "schema": {"type": "boolean"}
                    }
               ],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/PaginatedResultsOfUserProfile"}}}
               }}
          }},
          "/repo/v1/notificationSettings": {"put": {
               "tags": ["User Profile Services"],
               "operationId": "put-/repo/v1/notificationSettings",
               "parameters": [],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.message.NotificationSettingsSignedToken"}}},
                    "required": true
               },
               "responses": {"200": {
                    "description": "A success message, if successful.",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.ResponseMessage"}}}
               }}
          }},
          "/repo/v1/userGroupHeaders/batch": {"get": {
               "tags": ["User Profile Services"],
               "operationId": "get-/repo/v1/userGroupHeaders/batch",
               "parameters": [{
                    "name": "ids",
                    "in": "query",
                    "required": true,
                    "description": "IDs are specified as request parameters at the end of the URL, separated by commas.  ,<p>,For example: ,<pre class=\"prettyprint\">,ids=1001,819,<\/pre>,<\/p>",
                    "schema": {"type": "string"}
               }],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.UserGroupHeaderResponsePage"}}}
               }}
          }},
          "/repo/v1/userGroupHeaders": {"get": {
               "tags": ["User Profile Services"],
               "operationId": "get-/repo/v1/userGroupHeaders",
               "parameters": [
                    {
                         "name": "prefix",
                         "in": "query",
                         "required": false,
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "typeFilter",
                         "in": "query",
                         "required": false,
                         "description": "Restrict the results to a type of principal. \n            Available options: ,<a href=\"${org.sagebionetworks.repo.model.principal.TypeFilter}\">,TypeFilter,<\/a>,.",
                         "schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.principal.TypeFilter"}
                    },
                    {
                         "name": "offset",
                         "in": "query",
                         "required": false,
                         "description": "The offset index determines where this page will start from.\n            An index of 0 is the first item.\n            ,<p>,\n            ,<i>,Default is 0,<\/i>,\n            ,<\/p>",
                         "schema": {"type": "integer"}
                    },
                    {
                         "name": "limit",
                         "in": "query",
                         "required": false,
                         "description": "Limits the number of items that will be fetched for this page.\n            ,<p>,\n            ,<i>,Default is 10,<\/i>,\n            ,<\/p>",
                         "schema": {"type": "integer"}
                    }
               ],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.UserGroupHeaderResponsePage"}}}
               }}
          }},
          "/repo/v1/userGroupHeaders/aliases": {"post": {
               "tags": ["User Profile Services"],
               "operationId": "post-/repo/v1/userGroupHeaders/aliases",
               "parameters": [],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.principal.AliasList"}}},
                    "required": true
               },
               "responses": {"200": {
                    "description": "The list UserGroupHeaders that match the requested Aliases. The order\n         of the request is preserved in the response. If a requested alias\n         does not match an existing user name or team name then no header\n         will be returned.",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.principal.UserGroupHeaderResponse"}}}
               }}
          }},
          "/repo/v1/userProfile/{profileId}/image": {"get": {
               "tags": ["User Profile Services"],
               "operationId": "get-/repo/v1/userProfile/{profileId}/image",
               "parameters": [
                    {
                         "name": "profileId",
                         "in": "path",
                         "required": true,
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "redirect",
                         "in": "query",
                         "required": false,
                         "description": "When set to false, the URL will be returned as text/plain\n            instead of redirecting.",
                         "schema": {"type": "boolean"}
                    }
               ],
               "security": [{"bearerAuth": []}],
               "responses": {
                    "200": {
                         "description": "Status 200 will be returned if the 'redirect' boolean param is false",
                         "content": {"text/plain": {"schema": {}}}
                    },
                    "307": {"description": "Status 307 will be returned if the 'redirect' boolean param is true or null"}
               }
          }},
          "/repo/v1/userProfile/{profileId}/image/preview": {"get": {
               "tags": ["User Profile Services"],
               "operationId": "get-/repo/v1/userProfile/{profileId}/image/preview",
               "parameters": [
                    {
                         "name": "profileId",
                         "in": "path",
                         "required": true,
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "redirect",
                         "in": "query",
                         "required": false,
                         "description": "When set to false, the URL will be returned as text/plain\n            instead of redirecting.",
                         "schema": {"type": "boolean"}
                    }
               ],
               "security": [{"bearerAuth": []}],
               "responses": {
                    "200": {
                         "description": "Status 200 will be returned if the 'redirect' boolean param is false",
                         "content": {"text/plain": {"schema": {}}}
                    },
                    "307": {"description": "Status 307 will be returned if the 'redirect' boolean param is true or null"}
               }
          }},
          "/repo/v1/favorite/{id}": {
               "post": {
                    "tags": ["User Profile Services"],
                    "operationId": "post-/repo/v1/favorite/{id}",
                    "parameters": [{
                         "name": "id",
                         "in": "path",
                         "required": true,
                         "description": "Entity ID of the favorite ,<a href=\"${org.sagebionetworks.repo.model.Entity}\">,Entity,<\/a>",
                         "schema": {"type": "string"}
                    }],
                    "security": [{"bearerAuth": []}],
                    "responses": {"201": {
                         "description": "Auto-generated description",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.EntityHeader"}}}
                    }}
               },
               "delete": {
                    "tags": ["User Profile Services"],
                    "operationId": "delete-/repo/v1/favorite/{id}",
                    "parameters": [{
                         "name": "id",
                         "in": "path",
                         "required": true,
                         "description": "Entity ID of the ,<a href=\"${org.sagebionetworks.repo.model.Entity}\">,Entity,<\/a>, that should be removed as a favorite",
                         "schema": {"type": "string"}
                    }],
                    "security": [{"bearerAuth": []}],
                    "responses": {"204": {"description": "Void"}}
               }
          },
          "/repo/v1/favorite": {"get": {
               "tags": ["User Profile Services"],
               "operationId": "get-/repo/v1/favorite",
               "parameters": [
                    {
                         "name": "offset",
                         "in": "query",
                         "required": false,
                         "description": "The offset index determines where this page will start from. An index of 0 is the first item. ,<p>,<i>,Default is 0,<\/i>,<\/p>",
                         "schema": {"type": "integer"}
                    },
                    {
                         "name": "limit",
                         "in": "query",
                         "required": false,
                         "description": "Limits the number of items that will be fetched for this page. ,<p>,<i>,Default is 10,<\/i>,<\/p>",
                         "schema": {"type": "integer"}
                    },
                    {
                         "name": "sort",
                         "in": "query",
                         "required": false,
                         "description": "Determines which field to use to sort the retrieved favorites. See ,<a href=\"${org.sagebionetworks.repo.model.favorite.SortBy}\">,SortBy,<\/a>,. ,<p>,<i>,Default is \"FAVORITED_ON\",<\/i>,<\/p>,.",
                         "schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.favorite.SortBy"}
                    },
                    {
                         "name": "sortDirection",
                         "in": "query",
                         "required": false,
                         "description": "The direction for sorting the retrieved favorites. See ,<a href=\"${org.sagebionetworks.repo.model.favorite.SortDirection}\">,SortDirection,<\/a>,. ,<p>,<i>,Default is \"DESC\",<\/i>,<\/p>,.",
                         "schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.favorite.SortDirection"}
                    }
               ],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/PaginatedResultsOfEntityHeader"}}}
               }}
          }},
          "/repo/v1/projects": {"get": {
               "tags": ["User Profile Services"],
               "operationId": "get-/repo/v1/projects",
               "parameters": [
                    {
                         "name": "teamId",
                         "in": "query",
                         "required": false,
                         "description": "If the projectFilter is 'TEAM' then this is the ID of the team through which the returned projects are shared with the user.",
                         "schema": {"type": "number"}
                    },
                    {
                         "name": "filter",
                         "in": "query",
                         "required": false,
                         "description": "see above",
                         "schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.ProjectListType"}
                    },
                    {
                         "name": "sort",
                         "in": "query",
                         "required": false,
                         "schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.ProjectListSortColumn"}
                    },
                    {
                         "name": "sortDirection",
                         "in": "query",
                         "required": false,
                         "description": "The optional ,<a href=\"${org.sagebionetworks.repo.model.entity.query.SortDirection}\">,sort direction,<\/a>,. \n \t\t\t,<i>,Default sort descending,<\/i>",
                         "schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.entity.query.SortDirection"}
                    },
                    {
                         "name": "nextPageToken",
                         "in": "query",
                         "required": false,
                         "description": "a token returned with the previous page of results",
                         "schema": {"type": "string"}
                    }
               ],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.ProjectHeaderList"}}}
               }}
          }},
          "/repo/v1/projects/user/{principalId}": {"get": {
               "tags": ["User Profile Services"],
               "operationId": "get-/repo/v1/projects/user/{principalId}",
               "parameters": [
                    {
                         "name": "principalId",
                         "in": "path",
                         "required": true,
                         "description": "The ID of the user to list projects for",
                         "schema": {"type": "number"}
                    },
                    {
                         "name": "teamId",
                         "in": "query",
                         "required": false,
                         "description": "If the projectFilter is 'TEAM' then this is the ID of the team through which the returned projects are shared with 'principalId'.",
                         "schema": {"type": "number"}
                    },
                    {
                         "name": "filter",
                         "in": "query",
                         "required": false,
                         "description": "see above",
                         "schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.ProjectListType"}
                    },
                    {
                         "name": "sort",
                         "in": "query",
                         "required": false,
                         "schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.ProjectListSortColumn"}
                    },
                    {
                         "name": "sortDirection",
                         "in": "query",
                         "required": false,
                         "description": "The optional ,<a href=\"${org.sagebionetworks.repo.model.entity.query.SortDirection}\">,sort direction,<\/a>,. \n \t\t\t,<i>,Default sort descending,<\/i>",
                         "schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.entity.query.SortDirection"}
                    },
                    {
                         "name": "nextPageToken",
                         "in": "query",
                         "required": false,
                         "description": "a token returned with the previous page of results",
                         "schema": {"type": "string"}
                    }
               ],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.ProjectHeaderList"}}}
               }}
          }},
          "/repo/v1/accessApproval": {
               "post": {
                    "tags": ["Access Approval Services"],
                    "operationId": "post-/repo/v1/accessApproval",
                    "parameters": [],
                    "requestBody": {
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.AccessApproval"}}},
                         "required": true
                    },
                    "security": [{"bearerAuth": []}],
                    "responses": {"201": {
                         "description": "Auto-generated description",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.AccessApproval"}}}
                    }}
               },
               "delete": {
                    "tags": ["Access Approval Services"],
                    "operationId": "delete-/repo/v1/accessApproval",
                    "parameters": [
                         {
                              "name": "requirementId",
                              "in": "query",
                              "required": true,
                              "schema": {"type": "string"}
                         },
                         {
                              "name": "accessorId",
                              "in": "query",
                              "required": true,
                              "description": "- The user whose access is being revoked",
                              "schema": {"type": "string"}
                         }
                    ],
                    "security": [{"bearerAuth": []}],
                    "responses": {"200": {"description": "Void"}}
               }
          },
          "/repo/v1/accessApproval/{approvalId}": {"get": {
               "tags": ["Access Approval Services"],
               "operationId": "get-/repo/v1/accessApproval/{approvalId}",
               "parameters": [{
                    "name": "approvalId",
                    "in": "path",
                    "required": true,
                    "schema": {"type": "string"}
               }],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.AccessApproval"}}}
               }}
          }},
          "/repo/v1/accessApproval/group": {"post": {
               "tags": ["Access Approval Services"],
               "operationId": "post-/repo/v1/accessApproval/group",
               "parameters": [],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.dataaccess.AccessorGroupRequest"}}},
                    "required": true
               },
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.dataaccess.AccessorGroupResponse"}}}
               }}
          }},
          "/repo/v1/accessApproval/notifications": {"post": {
               "tags": ["Access Approval Services"],
               "operationId": "post-/repo/v1/accessApproval/notifications",
               "parameters": [],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.dataaccess.AccessApprovalNotificationRequest"}}},
                    "required": true
               },
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.dataaccess.AccessApprovalNotificationResponse"}}}
               }}
          }},
          "/repo/v1/accessApproval/group/revoke": {"put": {
               "tags": ["Access Approval Services"],
               "operationId": "put-/repo/v1/accessApproval/group/revoke",
               "parameters": [],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.dataaccess.AccessorGroupRevokeRequest"}}},
                    "required": true
               },
               "security": [{"bearerAuth": []}],
               "responses": {"204": {"description": "Void"}}
          }},
          "/repo/v1/accessApproval/information": {"post": {
               "tags": ["Access Approval Services"],
               "operationId": "post-/repo/v1/accessApproval/information",
               "parameters": [],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.BatchAccessApprovalInfoRequest"}}},
                    "required": true
               },
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.BatchAccessApprovalInfoResponse"}}}
               }}
          }},
          "/repo/v1/accessApproval/search": {"post": {
               "tags": ["Access Approval Services"],
               "operationId": "post-/repo/v1/accessApproval/search",
               "parameters": [],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.dataaccess.AccessApprovalSearchRequest"}}},
                    "required": true
               },
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.dataaccess.AccessApprovalSearchResponse"}}}
               }}
          }},
          "/repo/v1/subscription": {"post": {
               "tags": ["Subscription Services"],
               "operationId": "post-/repo/v1/subscription",
               "parameters": [],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.subscription.Topic"}}},
                    "required": true
               },
               "security": [{"bearerAuth": []}],
               "responses": {"201": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.subscription.Subscription"}}}
               }}
          }},
          "/repo/v1/subscription/all": {
               "post": {
                    "tags": ["Subscription Services"],
                    "operationId": "post-/repo/v1/subscription/all",
                    "parameters": [{
                         "name": "objectType",
                         "in": "query",
                         "required": true,
                         "description": "- SubscriptionObjectType to subscribe to",
                         "schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.subscription.SubscriptionObjectType"}
                    }],
                    "security": [{"bearerAuth": []}],
                    "responses": {"201": {
                         "description": "Auto-generated description",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.subscription.Subscription"}}}
                    }}
               },
               "get": {
                    "tags": ["Subscription Services"],
                    "operationId": "get-/repo/v1/subscription/all",
                    "parameters": [
                         {
                              "name": "limit",
                              "in": "query",
                              "required": true,
                              "description": "- Limits the size of the page returned. For example, a page size of 10 require limit = 10. The maximum Limit for this call is 100.",
                              "schema": {"type": "number"}
                         },
                         {
                              "name": "offset",
                              "in": "query",
                              "required": true,
                              "description": "- The index of the pagination offset. For a page size of 10, the first page would be at offset = 0, and the second page would be at offset = 10.",
                              "schema": {"type": "number"}
                         },
                         {
                              "name": "objectType",
                              "in": "query",
                              "required": true,
                              "description": "- User can use this param to filter the results by the type of object they subscribed to.",
                              "schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.subscription.SubscriptionObjectType"}
                         },
                         {
                              "name": "sortBy",
                              "in": "query",
                              "required": false,
                              "schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.subscription.SortByType"}
                         },
                         {
                              "name": "sortDirection",
                              "in": "query",
                              "required": false,
                              "description": "- When provided, the results will be sorted in this direction.",
                              "schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.subscription.SortDirection"}
                         }
                    ],
                    "security": [{"bearerAuth": []}],
                    "responses": {"200": {
                         "description": "Auto-generated description",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.subscription.SubscriptionPagedResults"}}}
                    }}
               },
               "delete": {
                    "tags": ["Subscription Services"],
                    "operationId": "delete-/repo/v1/subscription/all",
                    "parameters": [],
                    "security": [{"bearerAuth": []}],
                    "responses": {"204": {"description": "Void"}}
               }
          },
          "/repo/v1/subscription/list": {"post": {
               "tags": ["Subscription Services"],
               "operationId": "post-/repo/v1/subscription/list",
               "parameters": [],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.subscription.SubscriptionRequest"}}},
                    "required": true
               },
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.subscription.SubscriptionPagedResults"}}}
               }}
          }},
          "/repo/v1/subscription/{id}": {
               "get": {
                    "tags": ["Subscription Services"],
                    "operationId": "get-/repo/v1/subscription/{id}",
                    "parameters": [{
                         "name": "id",
                         "in": "path",
                         "required": true,
                         "description": "- the ID of the subscription that is created when the user subscribed to the topic",
                         "schema": {"type": "string"}
                    }],
                    "security": [{"bearerAuth": []}],
                    "responses": {"200": {
                         "description": "Auto-generated description",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.subscription.Subscription"}}}
                    }}
               },
               "delete": {
                    "tags": ["Subscription Services"],
                    "operationId": "delete-/repo/v1/subscription/{id}",
                    "parameters": [{
                         "name": "id",
                         "in": "path",
                         "required": true,
                         "description": "- the ID of the subscription that is created when the user subscribed to the topic",
                         "schema": {"type": "string"}
                    }],
                    "security": [{"bearerAuth": []}],
                    "responses": {"204": {"description": "Void"}}
               }
          },
          "/repo/v1/subscription/subscribers": {"post": {
               "tags": ["Subscription Services"],
               "operationId": "post-/repo/v1/subscription/subscribers",
               "parameters": [{
                    "name": "nextPageToken",
                    "in": "query",
                    "required": false,
                    "schema": {"type": "string"}
               }],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.subscription.Topic"}}},
                    "required": true
               },
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.subscription.SubscriberPagedResults"}}}
               }}
          }},
          "/repo/v1/subscription/subscribers/count": {"post": {
               "tags": ["Subscription Services"],
               "operationId": "post-/repo/v1/subscription/subscribers/count",
               "parameters": [],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.subscription.Topic"}}},
                    "required": true
               },
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.subscription.SubscriberCount"}}}
               }}
          }},
          "/repo/v1/log": {"post": {
               "tags": ["Log Service"],
               "operationId": "post-/repo/v1/log",
               "parameters": [{
                    "name": "User-Agent",
                    "in": "header",
                    "required": true,
                    "schema": {"type": "string"}
               }],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.LogEntry"}}},
                    "required": true
               },
               "security": [{"bearerAuth": []}],
               "responses": {"200": {"description": "Void"}}
          }},
          "/repo/v1/membershipRequest": {"post": {
               "tags": ["Membership Request Services"],
               "operationId": "post-/repo/v1/membershipRequest",
               "parameters": [
                    {
                         "name": "acceptRequestEndpoint",
                         "in": "query",
                         "required": true,
                         "description": "The portal end-point for one-click acceptance of the membership\n request.  A signed, serialized token is appended to create the complete:\n ,<a href=\"${org.sagebionetworks.repo.model.JoinTeamSignedToken}\">,JoinTeamSignedToken,<\/a>,\n In normal operation, this parameter should be omitted.",
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "notificationUnsubscribeEndpoint",
                         "in": "query",
                         "required": true,
                         "description": "The portal prefix for one-click email unsubscription.\n A signed, serialized token is appended to create the complete:\n ,<a href=\"${org.sagebionetworks.repo.model.message.NotificationSettingsSignedToken}\">,NotificationSettingsSignedToken,<\/a>,.\n In normal operation, this parameter should be omitted.",
                         "schema": {"type": "string"}
                    }
               ],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.MembershipRequest"}}},
                    "required": true
               },
               "security": [{"bearerAuth": []}],
               "responses": {"201": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.MembershipRequest"}}}
               }}
          }},
          "/repo/v1/team/{id}/openRequest": {"get": {
               "tags": ["Membership Request Services"],
               "operationId": "get-/repo/v1/team/{id}/openRequest",
               "parameters": [
                    {
                         "name": "id",
                         "in": "path",
                         "required": true,
                         "description": "Team ID",
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "requestorId",
                         "in": "query",
                         "required": false,
                         "description": "the ID of the user requesting admission to the Team",
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "limit",
                         "in": "query",
                         "required": false,
                         "description": "the maximum number of requests to return (default 10)",
                         "schema": {"type": "integer"}
                    },
                    {
                         "name": "offset",
                         "in": "query",
                         "required": false,
                         "description": "the starting index of the returned results (default 0)",
                         "schema": {"type": "integer"}
                    }
               ],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/PaginatedResultsOfMembershipRequest"}}}
               }}
          }},
          "/repo/v1/user/{id}/openRequest": {"get": {
               "tags": ["Membership Request Services"],
               "operationId": "get-/repo/v1/user/{id}/openRequest",
               "parameters": [
                    {
                         "name": "id",
                         "in": "path",
                         "required": true,
                         "description": "User ID",
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "teamId",
                         "in": "query",
                         "required": false,
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "limit",
                         "in": "query",
                         "required": false,
                         "description": "the maximum number of requests to return (default 10)",
                         "schema": {"type": "integer"}
                    },
                    {
                         "name": "offset",
                         "in": "query",
                         "required": false,
                         "description": "the starting index of the returned results (default 0)",
                         "schema": {"type": "integer"}
                    }
               ],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/PaginatedResultsOfMembershipRequest"}}}
               }}
          }},
          "/repo/v1/membershipRequest/{id}": {
               "get": {
                    "tags": ["Membership Request Services"],
                    "operationId": "get-/repo/v1/membershipRequest/{id}",
                    "parameters": [{
                         "name": "id",
                         "in": "path",
                         "required": true,
                         "description": "the Team ID",
                         "schema": {"type": "string"}
                    }],
                    "security": [{"bearerAuth": []}],
                    "responses": {"200": {
                         "description": "Auto-generated description",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.MembershipRequest"}}}
                    }}
               },
               "delete": {
                    "tags": ["Membership Request Services"],
                    "operationId": "delete-/repo/v1/membershipRequest/{id}",
                    "parameters": [{
                         "name": "id",
                         "in": "path",
                         "required": true,
                         "schema": {"type": "string"}
                    }],
                    "security": [{"bearerAuth": []}],
                    "responses": {"204": {"description": "Void"}}
               }
          },
          "/repo/v1/membershipRequest/openRequestCount": {"get": {
               "tags": ["Membership Request Services"],
               "operationId": "get-/repo/v1/membershipRequest/openRequestCount",
               "parameters": [],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.Count"}}}
               }}
          }},
          "/repo/v1/trashcan/trash/{id}": {"put": {
               "tags": ["Recycle Bin Services"],
               "operationId": "put-/repo/v1/trashcan/trash/{id}",
               "parameters": [{
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "description": "The ID of the entity being moved to the trash can.",
                    "schema": {"type": "string"}
               }],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {"description": "Void"}}
          }},
          "/repo/v1/trashcan/restore/{id}": {"put": {
               "tags": ["Recycle Bin Services"],
               "operationId": "put-/repo/v1/trashcan/restore/{id}",
               "parameters": [{
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "description": "The ID of the entity being restored out of the trash can.",
                    "schema": {"type": "string"}
               }],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {"description": "Void"}}
          }},
          "/repo/v1/trashcan/restore/{id}/{parentId}": {"put": {
               "tags": ["Recycle Bin Services"],
               "operationId": "put-/repo/v1/trashcan/restore/{id}/{parentId}",
               "parameters": [
                    {
                         "name": "id",
                         "in": "path",
                         "required": true,
                         "description": "The ID of the entity being restored out of the trash can.",
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "parentId",
                         "in": "path",
                         "required": true,
                         "description": "The ID of the new parent entity.",
                         "schema": {"type": "string"}
                    }
               ],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {"description": "Void"}}
          }},
          "/repo/v1/trashcan/view": {"get": {
               "tags": ["Recycle Bin Services"],
               "operationId": "get-/repo/v1/trashcan/view",
               "parameters": [
                    {
                         "name": "offset",
                         "in": "query",
                         "required": false,
                         "description": "Paginated results. Offset to the current page.",
                         "schema": {"type": "number"}
                    },
                    {
                         "name": "limit",
                         "in": "query",
                         "required": false,
                         "description": "The maximum number of entities to retrieve per page.",
                         "schema": {"type": "number"}
                    }
               ],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "The paginated list of trash entities.",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/PaginatedResultsOfTrashedEntity"}}}
               }}
          }},
          "/repo/v1/trashcan/purge/{id}": {"put": {
               "tags": ["Recycle Bin Services"],
               "operationId": "put-/repo/v1/trashcan/purge/{id}",
               "parameters": [{
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "description": "The ID of the entity to be purged.",
                    "schema": {"type": "string"}
               }],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {"description": "Void"}}
          }},
          "/repo/v1/activity": {"post": {
               "tags": ["Activity Services"],
               "operationId": "post-/repo/v1/activity",
               "parameters": [],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.provenance.Activity"}}},
                    "required": true
               },
               "security": [{"bearerAuth": []}],
               "responses": {"201": {
                    "description": "The new ,<a href=\"${org.sagebionetworks.repo.model.provenance.Activity}\">,Activity,<\/a>",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.provenance.Activity"}}}
               }}
          }},
          "/repo/v1/activity/{id}": {
               "get": {
                    "tags": ["Activity Services"],
                    "operationId": "get-/repo/v1/activity/{id}",
                    "parameters": [{
                         "name": "id",
                         "in": "path",
                         "required": true,
                         "description": "The ID of the activity to fetch.",
                         "schema": {"type": "string"}
                    }],
                    "security": [{"bearerAuth": []}],
                    "responses": {"200": {
                         "description": "The requested Activity if it exists.",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.provenance.Activity"}}}
                    }}
               },
               "put": {
                    "tags": ["Activity Services"],
                    "operationId": "put-/repo/v1/activity/{id}",
                    "parameters": [{
                         "name": "id",
                         "in": "path",
                         "required": true,
                         "description": "The id of the activity to update.",
                         "schema": {"type": "string"}
                    }],
                    "requestBody": {
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.provenance.Activity"}}},
                         "required": true
                    },
                    "security": [{"bearerAuth": []}],
                    "responses": {"200": {
                         "description": "the updated activity",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.provenance.Activity"}}}
                    }}
               },
               "delete": {
                    "tags": ["Activity Services"],
                    "operationId": "delete-/repo/v1/activity/{id}",
                    "parameters": [{
                         "name": "id",
                         "in": "path",
                         "required": true,
                         "description": "The id of activity to delete.",
                         "schema": {"type": "string"}
                    }],
                    "security": [{"bearerAuth": []}],
                    "responses": {"204": {"description": "Void"}}
               }
          },
          "/repo/v1/activity/{id}/generated": {"get": {
               "tags": ["Activity Services"],
               "operationId": "get-/repo/v1/activity/{id}/generated",
               "parameters": [
                    {
                         "name": "id",
                         "in": "path",
                         "required": true,
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "offset",
                         "in": "query",
                         "required": false,
                         "schema": {"type": "integer"}
                    },
                    {
                         "name": "limit",
                         "in": "query",
                         "required": false,
                         "schema": {"type": "integer"}
                    }
               ],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/PaginatedResultsOfReference"}}}
               }}
          }},
          "/repo/v1/accessRequirement": {"post": {
               "tags": ["Access Requirement Services"],
               "operationId": "post-/repo/v1/accessRequirement",
               "parameters": [],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.AccessRequirement"}}},
                    "required": true
               },
               "security": [{"bearerAuth": []}],
               "responses": {"201": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.AccessRequirement"}}}
               }}
          }},
          "/repo/v1/accessRequirement/{requirementId}": {
               "get": {
                    "tags": ["Access Requirement Services"],
                    "operationId": "get-/repo/v1/accessRequirement/{requirementId}",
                    "parameters": [{
                         "name": "requirementId",
                         "in": "path",
                         "required": true,
                         "schema": {"type": "string"}
                    }],
                    "responses": {"200": {
                         "description": "Auto-generated description",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.AccessRequirement"}}}
                    }}
               },
               "put": {
                    "tags": ["Access Requirement Services"],
                    "operationId": "put-/repo/v1/accessRequirement/{requirementId}",
                    "parameters": [{
                         "name": "requirementId",
                         "in": "path",
                         "required": true,
                         "description": "the ID of the Access Requirement to be modified.",
                         "schema": {"type": "string"}
                    }],
                    "requestBody": {
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.AccessRequirement"}}},
                         "required": true
                    },
                    "security": [{"bearerAuth": []}],
                    "responses": {"200": {
                         "description": "Auto-generated description",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.AccessRequirement"}}}
                    }}
               },
               "delete": {
                    "tags": ["Access Requirement Services"],
                    "operationId": "delete-/repo/v1/accessRequirement/{requirementId}",
                    "parameters": [{
                         "name": "requirementId",
                         "in": "path",
                         "required": true,
                         "description": "the ID of the requirement to delete",
                         "schema": {"type": "string"}
                    }],
                    "security": [{"bearerAuth": []}],
                    "responses": {"200": {"description": "Void"}}
               }
          },
          "/repo/v1/entity/{id}/lockAccessRequirement": {"post": {
               "tags": ["Access Requirement Services"],
               "operationId": "post-/repo/v1/entity/{id}/lockAccessRequirement",
               "parameters": [{
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "description": "the ID of the entity to which an Access Requirement will be applied",
                    "schema": {"type": "string"}
               }],
               "security": [{"bearerAuth": []}],
               "responses": {"201": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.AccessRequirement"}}}
               }}
          }},
          "/repo/v1/entity/{id}/accessRequirement": {"get": {
               "tags": ["Access Requirement Services"],
               "operationId": "get-/repo/v1/entity/{id}/accessRequirement",
               "parameters": [
                    {
                         "name": "id",
                         "in": "path",
                         "required": true,
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "limit",
                         "in": "query",
                         "required": false,
                         "description": "- Limits the size of the page returned. For example, a page size of 10 require limit = 10. The maximum limit for this call is 50.",
                         "schema": {"type": "number"}
                    },
                    {
                         "name": "offset",
                         "in": "query",
                         "required": false,
                         "description": "- The index of the pagination offset. For a page size of 10, the first page would be at offset = 0, and the second page would be at offset = 10.",
                         "schema": {"type": "number"}
                    }
               ],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/PaginatedResultsOfAccessRequirement"}}}
               }}
          }},
          "/repo/v1/team/{id}/accessRequirement": {"get": {
               "tags": ["Access Requirement Services"],
               "operationId": "get-/repo/v1/team/{id}/accessRequirement",
               "parameters": [
                    {
                         "name": "id",
                         "in": "path",
                         "required": true,
                         "description": "the ID of the Team whose Access Requirements are retrieved.",
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "limit",
                         "in": "query",
                         "required": false,
                         "description": "- Limits the size of the page returned. For example, a page size of 10 require limit = 10. The maximum limit for this call is 50.",
                         "schema": {"type": "number"}
                    },
                    {
                         "name": "offset",
                         "in": "query",
                         "required": false,
                         "description": "- The index of the pagination offset. For a page size of 10, the first page would be at offset = 0, and the second page would be at offset = 10.",
                         "schema": {"type": "number"}
                    }
               ],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/PaginatedResultsOfAccessRequirement"}}}
               }}
          }},
          "/repo/v1/accessRequirement/conversion": {"put": {
               "tags": ["Access Requirement Services"],
               "operationId": "put-/repo/v1/accessRequirement/conversion",
               "parameters": [],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.dataaccess.AccessRequirementConversionRequest"}}},
                    "required": true
               },
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.AccessRequirement"}}}
               }}
          }},
          "/repo/v1/accessRequirement/{requirementId}/subjects": {"get": {
               "tags": ["Access Requirement Services"],
               "operationId": "get-/repo/v1/accessRequirement/{requirementId}/subjects",
               "parameters": [
                    {
                         "name": "requirementId",
                         "in": "path",
                         "required": true,
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "nextPageToken",
                         "in": "query",
                         "required": false,
                         "schema": {"type": "string"}
                    }
               ],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.RestrictableObjectDescriptorResponse"}}}
               }}
          }},
          "/repo/v1/accessRequirement/{requirementId}/acl": {
               "get": {
                    "tags": ["Access Requirement Services"],
                    "operationId": "get-/repo/v1/accessRequirement/{requirementId}/acl",
                    "parameters": [{
                         "name": "requirementId",
                         "in": "path",
                         "required": true,
                         "schema": {"type": "string"}
                    }],
                    "security": [{"bearerAuth": []}],
                    "responses": {"200": {
                         "description": "Auto-generated description",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.AccessControlList"}}}
                    }}
               },
               "post": {
                    "tags": ["Access Requirement Services"],
                    "operationId": "post-/repo/v1/accessRequirement/{requirementId}/acl",
                    "parameters": [{
                         "name": "requirementId",
                         "in": "path",
                         "required": true,
                         "schema": {"type": "string"}
                    }],
                    "requestBody": {
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.AccessControlList"}}},
                         "required": true
                    },
                    "security": [{"bearerAuth": []}],
                    "responses": {"201": {
                         "description": "Auto-generated description",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.AccessControlList"}}}
                    }}
               },
               "put": {
                    "tags": ["Access Requirement Services"],
                    "operationId": "put-/repo/v1/accessRequirement/{requirementId}/acl",
                    "parameters": [{
                         "name": "requirementId",
                         "in": "path",
                         "required": true,
                         "schema": {"type": "string"}
                    }],
                    "requestBody": {
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.AccessControlList"}}},
                         "required": true
                    },
                    "security": [{"bearerAuth": []}],
                    "responses": {"200": {
                         "description": "Auto-generated description",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.AccessControlList"}}}
                    }}
               },
               "delete": {
                    "tags": ["Access Requirement Services"],
                    "operationId": "delete-/repo/v1/accessRequirement/{requirementId}/acl",
                    "parameters": [{
                         "name": "requirementId",
                         "in": "path",
                         "required": true,
                         "schema": {"type": "string"}
                    }],
                    "security": [{"bearerAuth": []}],
                    "responses": {"200": {"description": "Void"}}
               }
          },
          "/repo/v1/accessRequirement/search": {"post": {
               "tags": ["Access Requirement Services"],
               "operationId": "post-/repo/v1/accessRequirement/search",
               "parameters": [],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.dataaccess.AccessRequirementSearchRequest"}}},
                    "required": true
               },
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.dataaccess.AccessRequirementSearchResponse"}}}
               }}
          }},
          "/repo/v1/evaluation": {
               "post": {
                    "tags": ["Evaluation Services"],
                    "operationId": "post-/repo/v1/evaluation",
                    "parameters": [],
                    "requestBody": {
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.evaluation.model.Evaluation"}}},
                         "required": true
                    },
                    "security": [{"bearerAuth": []}],
                    "responses": {"201": {
                         "description": "Auto-generated description",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.evaluation.model.Evaluation"}}}
                    }}
               },
               "get": {
                    "tags": ["Evaluation Services"],
                    "operationId": "get-/repo/v1/evaluation",
                    "parameters": [
                         {
                              "name": "accessType",
                              "in": "query",
                              "required": false,
                              "description": "The type of access for the user to filter for, optional and defaults to ,<a href=\"${org.sagebionetworks.repo.model.ACCESS_TYPE}\">,ACCESS_TYPE.READ,<\/a>",
                              "schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.ACCESS_TYPE"}
                         },
                         {
                              "name": "activeOnly",
                              "in": "query",
                              "required": false,
                              "description": "If 'true' then return only those evaluations with rounds defined and for which the current time is in one of the rounds.",
                              "schema": {"type": "boolean"}
                         },
                         {
                              "name": "evaluationIds",
                              "in": "query",
                              "required": false,
                              "description": "an optional, comma-delimited list of evaluation IDs to which the response is limited",
                              "schema": {"type": "string"}
                         },
                         {
                              "name": "offset",
                              "in": "query",
                              "required": false,
                              "description": "The offset index determines where this page will start from.\n            An index of 0 is the first entity. When null it will default\n            to 0.",
                              "schema": {"type": "number"}
                         },
                         {
                              "name": "limit",
                              "in": "query",
                              "required": false,
                              "description": "Limits the number of entities that will be fetched for this\n            page. When null it will default to 10.",
                              "schema": {"type": "number"}
                         }
                    ],
                    "security": [{"bearerAuth": []}],
                    "responses": {"200": {
                         "description": "Auto-generated description",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/PaginatedResultsOfEvaluation"}}}
                    }}
               }
          },
          "/repo/v1/evaluation/{evalId}": {
               "get": {
                    "tags": ["Evaluation Services"],
                    "operationId": "get-/repo/v1/evaluation/{evalId}",
                    "parameters": [{
                         "name": "evalId",
                         "in": "path",
                         "required": true,
                         "description": "- the ID of the desired Evaluation",
                         "schema": {"type": "string"}
                    }],
                    "security": [{"bearerAuth": []}],
                    "responses": {"200": {
                         "description": "Auto-generated description",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.evaluation.model.Evaluation"}}}
                    }}
               },
               "put": {
                    "tags": ["Evaluation Services"],
                    "operationId": "put-/repo/v1/evaluation/{evalId}",
                    "parameters": [{
                         "name": "evalId",
                         "in": "path",
                         "required": true,
                         "description": "- the ID of the Evaluation being updated",
                         "schema": {"type": "string"}
                    }],
                    "requestBody": {
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.evaluation.model.Evaluation"}}},
                         "required": true
                    },
                    "security": [{"bearerAuth": []}],
                    "responses": {"200": {
                         "description": "Auto-generated description",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.evaluation.model.Evaluation"}}}
                    }}
               },
               "delete": {
                    "tags": ["Evaluation Services"],
                    "operationId": "delete-/repo/v1/evaluation/{evalId}",
                    "parameters": [{
                         "name": "evalId",
                         "in": "path",
                         "required": true,
                         "description": "- the ID of the requested Evaluation",
                         "schema": {"type": "string"}
                    }],
                    "security": [{"bearerAuth": []}],
                    "responses": {"204": {"description": "Void"}}
               }
          },
          "/repo/v1/entity/{id}/evaluation": {"get": {
               "tags": ["Evaluation Services"],
               "operationId": "get-/repo/v1/entity/{id}/evaluation",
               "parameters": [
                    {
                         "name": "id",
                         "in": "path",
                         "required": true,
                         "description": "the ID of the project",
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "accessType",
                         "in": "query",
                         "required": false,
                         "description": "The type of access for the user to filter for, optional and defaults to ,<a href=\"${org.sagebionetworks.repo.model.ACCESS_TYPE}\">,ACCESS_TYPE.READ,<\/a>",
                         "schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.ACCESS_TYPE"}
                    },
                    {
                         "name": "activeOnly",
                         "in": "query",
                         "required": false,
                         "description": "If 'true' then return only those evaluations with rounds defined and for which the current time is in one of the rounds.",
                         "schema": {"type": "boolean"}
                    },
                    {
                         "name": "evaluationIds",
                         "in": "query",
                         "required": false,
                         "description": "an optional, comma-delimited list of evaluation IDs to which the response is limited",
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "offset",
                         "in": "query",
                         "required": false,
                         "description": "The offset index determines where this page will start from.\n            An index of 0 is the first entity. When null it will default\n            to 0.",
                         "schema": {"type": "number"}
                    },
                    {
                         "name": "limit",
                         "in": "query",
                         "required": false,
                         "description": "Limits the number of entities that will be fetched for this\n            page. When null it will default to 10.",
                         "schema": {"type": "number"}
                    }
               ],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/PaginatedResultsOfEvaluation"}}}
               }}
          }},
          "/repo/v1/evaluation/available": {"get": {
               "tags": ["Evaluation Services"],
               "operationId": "get-/repo/v1/evaluation/available",
               "parameters": [
                    {
                         "name": "activeOnly",
                         "in": "query",
                         "required": false,
                         "schema": {"type": "boolean"}
                    },
                    {
                         "name": "evaluationIds",
                         "in": "query",
                         "required": false,
                         "description": "an optional, comma-delimited list of evaluation IDs to which the response is limited",
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "offset",
                         "in": "query",
                         "required": false,
                         "description": "The offset index determines where this page will start from.\n            An index of 0 is the first evaluation. When null it will default\n            to 0.",
                         "schema": {"type": "number"}
                    },
                    {
                         "name": "limit",
                         "in": "query",
                         "required": false,
                         "description": "Limits the number of entities that will be fetched for this\n            page. When null it will default to 10.",
                         "schema": {"type": "number"}
                    }
               ],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/PaginatedResultsOfEvaluation"}}}
               }}
          }},
          "/repo/v1/evaluation/name/{name}": {"get": {
               "tags": ["Evaluation Services"],
               "operationId": "get-/repo/v1/evaluation/name/{name}",
               "parameters": [{
                    "name": "name",
                    "in": "path",
                    "required": true,
                    "description": "- the name of the desired Evaluation.",
                    "schema": {"type": "string"}
               }],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.evaluation.model.Evaluation"}}}
               }}
          }},
          "/repo/v1/evaluation/{evalId}/team/{id}/submissionEligibility": {"get": {
               "tags": ["Evaluation Services"],
               "operationId": "get-/repo/v1/evaluation/{evalId}/team/{id}/submissionEligibility",
               "parameters": [
                    {
                         "name": "evalId",
                         "in": "path",
                         "required": true,
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "id",
                         "in": "path",
                         "required": true,
                         "schema": {"type": "string"}
                    }
               ],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.evaluation.model.TeamSubmissionEligibility"}}}
               }}
          }},
          "/repo/v1/evaluation/submission": {"post": {
               "tags": ["Evaluation Services"],
               "operationId": "post-/repo/v1/evaluation/submission",
               "parameters": [
                    {
                         "name": "etag",
                         "in": "query",
                         "required": false,
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "submissionEligibilityHash",
                         "in": "query",
                         "required": false,
                         "description": "The hash provided by the\n ,<a href=\"${org.sagebionetworks.evaluation.model.TeamSubmissionEligibility}\">,TeamSubmissionEligibility,<\/a>,\n object.",
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "challengeEndpoint",
                         "in": "query",
                         "required": true,
                         "description": "The portal endpoint prefix to the an entity/challenge page. The entity ID of the\n challenge project is appended to create the complete URL. In normal operation, this parameter should be omitted.",
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "notificationUnsubscribeEndpoint",
                         "in": "query",
                         "required": true,
                         "description": "The portal endpoint prefix for one-click email unsubscription.\n A signed, serialized token is appended to create the complete URL:\n ,<a href=\"${org.sagebionetworks.repo.model.message.NotificationSettingsSignedToken}\">,NotificationSettingsSignedToken,<\/a>,.\n In normal operation, this parameter should be omitted.",
                         "schema": {"type": "string"}
                    }
               ],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.evaluation.model.Submission"}}},
                    "required": true
               },
               "security": [{"bearerAuth": []}],
               "responses": {"201": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.evaluation.model.Submission"}}}
               }}
          }},
          "/repo/v1/admin/evaluation/submission/{subId}/contributor": {"post": {
               "tags": ["Evaluation Services"],
               "operationId": "post-/repo/v1/admin/evaluation/submission/{subId}/contributor",
               "parameters": [{
                    "name": "subId",
                    "in": "path",
                    "required": true,
                    "schema": {"type": "string"}
               }],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.evaluation.model.SubmissionContributor"}}},
                    "required": true
               },
               "security": [{"bearerAuth": []}],
               "responses": {"201": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.evaluation.model.SubmissionContributor"}}}
               }}
          }},
          "/repo/v1/evaluation/submission/{subId}": {
               "get": {
                    "tags": ["Evaluation Services"],
                    "operationId": "get-/repo/v1/evaluation/submission/{subId}",
                    "parameters": [{
                         "name": "subId",
                         "in": "path",
                         "required": true,
                         "schema": {"type": "string"}
                    }],
                    "security": [{"bearerAuth": []}],
                    "responses": {"200": {
                         "description": "Auto-generated description",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.evaluation.model.Submission"}}}
                    }}
               },
               "delete": {
                    "tags": ["Evaluation Services"],
                    "operationId": "delete-/repo/v1/evaluation/submission/{subId}",
                    "parameters": [{
                         "name": "subId",
                         "in": "path",
                         "required": true,
                         "description": "- the ID of the Submission to be deleted.",
                         "schema": {"type": "string"}
                    }],
                    "security": [{"bearerAuth": []}],
                    "responses": {"204": {"description": "Void"}}
               }
          },
          "/repo/v1/evaluation/submission/{subId}/status": {
               "get": {
                    "tags": ["Evaluation Services"],
                    "operationId": "get-/repo/v1/evaluation/submission/{subId}/status",
                    "parameters": [{
                         "name": "subId",
                         "in": "path",
                         "required": true,
                         "description": "- the ID of the requested SubmissionStatus.",
                         "schema": {"type": "string"}
                    }],
                    "security": [{"bearerAuth": []}],
                    "responses": {"200": {
                         "description": "Auto-generated description",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.evaluation.model.SubmissionStatus"}}}
                    }}
               },
               "put": {
                    "tags": ["Evaluation Services"],
                    "operationId": "put-/repo/v1/evaluation/submission/{subId}/status",
                    "parameters": [{
                         "name": "subId",
                         "in": "path",
                         "required": true,
                         "description": "- the ID of the SubmissionStatus being updated.",
                         "schema": {"type": "string"}
                    }],
                    "requestBody": {
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.evaluation.model.SubmissionStatus"}}},
                         "required": true
                    },
                    "security": [{"bearerAuth": []}],
                    "responses": {"200": {
                         "description": "Auto-generated description",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.evaluation.model.SubmissionStatus"}}}
                    }}
               }
          },
          "/repo/v1/evaluation/{evalId}/statusBatch": {"put": {
               "tags": ["Evaluation Services"],
               "operationId": "put-/repo/v1/evaluation/{evalId}/statusBatch",
               "parameters": [{
                    "name": "evalId",
                    "in": "path",
                    "required": true,
                    "description": "the ID of the Evaluation to which the SubmissionSatus objects belong.",
                    "schema": {"type": "string"}
               }],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.evaluation.model.SubmissionStatusBatch"}}},
                    "required": true
               },
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.evaluation.model.BatchUploadResponse"}}}
               }}
          }},
          "/repo/v1/evaluation/{evalId}/submission/all": {"get": {
               "tags": ["Evaluation Services"],
               "operationId": "get-/repo/v1/evaluation/{evalId}/submission/all",
               "parameters": [
                    {
                         "name": "evalId",
                         "in": "path",
                         "required": true,
                         "description": "- the ID of the specified Evaluation.",
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "offset",
                         "in": "query",
                         "required": false,
                         "description": "The offset index determines where this page will start from.\n            An index of 0 is the first entity. When null it will default\n            to 0.",
                         "schema": {"type": "number"}
                    },
                    {
                         "name": "limit",
                         "in": "query",
                         "required": false,
                         "description": "Limits the number of entities that will be fetched for this\n            page. When null it will default to 10, max value 100.",
                         "schema": {"type": "number"}
                    },
                    {
                         "name": "status",
                         "in": "query",
                         "required": true,
                         "schema": {"type": "string"}
                    }
               ],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/PaginatedResultsOfSubmission"}}}
               }}
          }},
          "/repo/v1/evaluation/{evalId}/submission/status/all": {"get": {
               "tags": ["Evaluation Services"],
               "operationId": "get-/repo/v1/evaluation/{evalId}/submission/status/all",
               "parameters": [
                    {
                         "name": "evalId",
                         "in": "path",
                         "required": true,
                         "description": "- the ID of the specified Evaluation.",
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "offset",
                         "in": "query",
                         "required": false,
                         "description": "The offset index determines where this page will start from.\n            An index of 0 is the first entity. When null it will default\n            to 0.",
                         "schema": {"type": "number"}
                    },
                    {
                         "name": "limit",
                         "in": "query",
                         "required": false,
                         "description": "Limits the number of entities that will be fetched for this\n            page. When null it will default to 10, max value 100.",
                         "schema": {"type": "number"}
                    },
                    {
                         "name": "status",
                         "in": "query",
                         "required": true,
                         "schema": {"type": "string"}
                    }
               ],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/PaginatedResultsOfSubmissionStatus"}}}
               }}
          }},
          "/repo/v1/evaluation/{evalId}/submission/bundle/all": {"get": {
               "tags": ["Evaluation Services"],
               "operationId": "get-/repo/v1/evaluation/{evalId}/submission/bundle/all",
               "parameters": [
                    {
                         "name": "evalId",
                         "in": "path",
                         "required": true,
                         "description": "- the ID of the specified Evaluation.",
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "offset",
                         "in": "query",
                         "required": false,
                         "description": "The offset index determines where this page will start from.\n            An index of 0 is the first entity. When null it will default\n            to 0.",
                         "schema": {"type": "number"}
                    },
                    {
                         "name": "limit",
                         "in": "query",
                         "required": false,
                         "description": "Limits the number of entities that will be fetched for this\n            page. When null it will default to 10, max value 100.",
                         "schema": {"type": "number"}
                    },
                    {
                         "name": "status",
                         "in": "query",
                         "required": true,
                         "schema": {"type": "string"}
                    }
               ],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/PaginatedResultsOfSubmissionBundle"}}}
               }}
          }},
          "/repo/v1/evaluation/{evalId}/submission": {"get": {
               "tags": ["Evaluation Services"],
               "operationId": "get-/repo/v1/evaluation/{evalId}/submission",
               "parameters": [
                    {
                         "name": "evalId",
                         "in": "path",
                         "required": true,
                         "description": "- the ID of the specified Evaluation.",
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "offset",
                         "in": "query",
                         "required": false,
                         "description": "The offset index determines where this page will start from.\n            An index of 0 is the first entity. When null it will default\n            to 0.",
                         "schema": {"type": "number"}
                    },
                    {
                         "name": "limit",
                         "in": "query",
                         "required": false,
                         "description": "Limits the number of entities that will be fetched for this\n            page. When null it will default to 10.",
                         "schema": {"type": "number"}
                    }
               ],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/PaginatedResultsOfSubmission"}}}
               }}
          }},
          "/repo/v1/evaluation/{evalId}/submission/bundle": {"get": {
               "tags": ["Evaluation Services"],
               "operationId": "get-/repo/v1/evaluation/{evalId}/submission/bundle",
               "parameters": [
                    {
                         "name": "evalId",
                         "in": "path",
                         "required": true,
                         "description": "- the ID of the specified Evaluation.",
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "offset",
                         "in": "query",
                         "required": false,
                         "description": "The offset index determines where this page will start from.\n            An index of 0 is the first entity. When null it will default\n            to 0.",
                         "schema": {"type": "number"}
                    },
                    {
                         "name": "limit",
                         "in": "query",
                         "required": false,
                         "description": "Limits the number of entities that will be fetched for this\n            page. When null it will default to 10.",
                         "schema": {"type": "number"}
                    }
               ],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/PaginatedResultsOfSubmissionBundle"}}}
               }}
          }},
          "/repo/v1/evaluation/submission/{subId}/file/{fileHandleId}": {"get": {
               "tags": ["Evaluation Services"],
               "operationId": "get-/repo/v1/evaluation/submission/{subId}/file/{fileHandleId}",
               "parameters": [
                    {
                         "name": "subId",
                         "in": "path",
                         "required": true,
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "fileHandleId",
                         "in": "path",
                         "required": true,
                         "description": "- the ID of the requested FileHandle contained in the Submission.",
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "redirect",
                         "in": "query",
                         "required": false,
                         "schema": {"type": "boolean"}
                    }
               ],
               "security": [{"bearerAuth": []}],
               "responses": {
                    "200": {
                         "description": "Status 200 will be returned if the 'redirect' boolean param is false",
                         "content": {"text/plain": {"schema": {}}}
                    },
                    "307": {"description": "Status 307 will be returned if the 'redirect' boolean param is true or null"}
               }
          }},
          "/repo/v1/evaluation/{evalId}/submission/count": {"get": {
               "tags": ["Evaluation Services"],
               "operationId": "get-/repo/v1/evaluation/{evalId}/submission/count",
               "parameters": [{
                    "name": "evalId",
                    "in": "path",
                    "required": true,
                    "description": "- the ID of the specified Evaluation.",
                    "schema": {"type": "string"}
               }],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"type": "number"}}}
               }}
          }},
          "/repo/v1/evaluation/{evalId}/access": {"get": {
               "tags": ["Evaluation Services"],
               "operationId": "get-/repo/v1/evaluation/{evalId}/access",
               "parameters": [
                    {
                         "name": "evalId",
                         "in": "path",
                         "required": true,
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "accessType",
                         "in": "query",
                         "required": true,
                         "schema": {"type": "string"}
                    }
               ],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "the access types that the given user has to the given resource",
                    "content": {"application/json": {"schema": {"type": "boolean"}}}
               }}
          }},
          "/repo/v1/evaluation/acl": {"put": {
               "tags": ["Evaluation Services"],
               "operationId": "put-/repo/v1/evaluation/acl",
               "parameters": [],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.AccessControlList"}}},
                    "required": true
               },
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "The updated ACL.",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.AccessControlList"}}}
               }}
          }},
          "/repo/v1/evaluation/{evalId}/acl": {"get": {
               "tags": ["Evaluation Services"],
               "operationId": "get-/repo/v1/evaluation/{evalId}/acl",
               "parameters": [{
                    "name": "evalId",
                    "in": "path",
                    "required": true,
                    "description": "The ID of the evaluation whose ACL is being retrieved.",
                    "schema": {"type": "string"}
               }],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "The ACL requested.",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.AccessControlList"}}}
               }}
          }},
          "/repo/v1/evaluation/{evalId}/permissions": {"get": {
               "tags": ["Evaluation Services"],
               "operationId": "get-/repo/v1/evaluation/{evalId}/permissions",
               "parameters": [{
                    "name": "evalId",
                    "in": "path",
                    "required": true,
                    "description": "The ID of the evaluation over which the user permission are being retrieved.",
                    "schema": {"type": "string"}
               }],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "The requested user permissions.",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.evaluation.model.UserEvaluationPermissions"}}}
               }}
          }},
          "/repo/v1/evaluation/submission/{subId}/cancellation": {"put": {
               "tags": ["Evaluation Services"],
               "operationId": "put-/repo/v1/evaluation/submission/{subId}/cancellation",
               "parameters": [{
                    "name": "subId",
                    "in": "path",
                    "required": true,
                    "schema": {"type": "string"}
               }],
               "security": [{"bearerAuth": []}],
               "responses": {"204": {"description": "Void"}}
          }},
          "/repo/v1/evaluation/{evalId}/round": {"post": {
               "tags": ["Evaluation Services"],
               "operationId": "post-/repo/v1/evaluation/{evalId}/round",
               "parameters": [{
                    "name": "evalId",
                    "in": "path",
                    "required": true,
                    "schema": {"type": "string"}
               }],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.evaluation.model.EvaluationRound"}}},
                    "required": true
               },
               "security": [{"bearerAuth": []}],
               "responses": {"201": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.evaluation.model.EvaluationRound"}}}
               }}
          }},
          "/repo/v1/evaluation/{evalId}/round/{roundId}": {
               "get": {
                    "tags": ["Evaluation Services"],
                    "operationId": "get-/repo/v1/evaluation/{evalId}/round/{roundId}",
                    "parameters": [
                         {
                              "name": "evalId",
                              "in": "path",
                              "required": true,
                              "schema": {"type": "string"}
                         },
                         {
                              "name": "roundId",
                              "in": "path",
                              "required": true,
                              "schema": {"type": "string"}
                         }
                    ],
                    "security": [{"bearerAuth": []}],
                    "responses": {"200": {
                         "description": "Auto-generated description",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.evaluation.model.EvaluationRound"}}}
                    }}
               },
               "put": {
                    "tags": ["Evaluation Services"],
                    "operationId": "put-/repo/v1/evaluation/{evalId}/round/{roundId}",
                    "parameters": [
                         {
                              "name": "evalId",
                              "in": "path",
                              "required": true,
                              "schema": {"type": "string"}
                         },
                         {
                              "name": "roundId",
                              "in": "path",
                              "required": true,
                              "schema": {"type": "string"}
                         }
                    ],
                    "requestBody": {
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.evaluation.model.EvaluationRound"}}},
                         "required": true
                    },
                    "security": [{"bearerAuth": []}],
                    "responses": {"200": {
                         "description": "Auto-generated description",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.evaluation.model.EvaluationRound"}}}
                    }}
               },
               "delete": {
                    "tags": ["Evaluation Services"],
                    "operationId": "delete-/repo/v1/evaluation/{evalId}/round/{roundId}",
                    "parameters": [
                         {
                              "name": "evalId",
                              "in": "path",
                              "required": true,
                              "schema": {"type": "string"}
                         },
                         {
                              "name": "roundId",
                              "in": "path",
                              "required": true,
                              "schema": {"type": "string"}
                         }
                    ],
                    "security": [{"bearerAuth": []}],
                    "responses": {"204": {"description": "Void"}}
               }
          },
          "/repo/v1/evaluation/{evalId}/round/list": {"post": {
               "tags": ["Evaluation Services"],
               "operationId": "post-/repo/v1/evaluation/{evalId}/round/list",
               "parameters": [{
                    "name": "evalId",
                    "in": "path",
                    "required": true,
                    "schema": {"type": "string"}
               }],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.evaluation.model.EvaluationRoundListRequest"}}},
                    "required": true
               },
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.evaluation.model.EvaluationRoundListResponse"}}}
               }}
          }},
          "/repo/v1/evaluation/{evalId}/migratequota": {"post": {
               "tags": ["Evaluation Services"],
               "operationId": "post-/repo/v1/evaluation/{evalId}/migratequota",
               "parameters": [{
                    "name": "evalId",
                    "in": "path",
                    "required": true,
                    "schema": {"type": "string"}
               }],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {"description": "Void"}}
          }},
          "/repo/v1/asynchronous/job": {"post": {
               "tags": ["Asynchronous Job Services"],
               "operationId": "post-/repo/v1/asynchronous/job",
               "parameters": [],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.asynch.AsynchronousRequestBody"}}},
                    "required": true
               },
               "security": [{"bearerAuth": []}],
               "responses": {"201": {
                    "description": "Each new job launched will have a unique jobId that can be use to monitor the status of the job with",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.asynch.AsynchronousJobStatus"}}}
               }}
          }},
          "/repo/v1/asynchronous/job/{jobId}": {"get": {
               "tags": ["Asynchronous Job Services"],
               "operationId": "get-/repo/v1/asynchronous/job/{jobId}",
               "parameters": [{
                    "name": "jobId",
                    "in": "path",
                    "required": true,
                    "description": "The jobId issued to a job that has been launched with ,<a href=\"${POST.asynchronous.job}\">,POST\n        /asynchronous/job,<\/a>",
                    "schema": {"type": "string"}
               }],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.asynch.AsynchronousJobStatus"}}}
               }}
          }},
          "/repo/v1/agent/session": {"post": {
               "tags": ["Agent Chat Services"],
               "operationId": "post-/repo/v1/agent/session",
               "parameters": [],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.agent.CreateAgentSessionRequest"}}},
                    "required": true
               },
               "security": [{"bearerAuth": []}],
               "responses": {"201": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.agent.AgentSession"}}}
               }}
          }},
          "/repo/v1/agent/session/{sessionId}": {
               "get": {
                    "tags": ["Agent Chat Services"],
                    "operationId": "get-/repo/v1/agent/session/{sessionId}",
                    "parameters": [{
                         "name": "sessionId",
                         "in": "path",
                         "required": true,
                         "schema": {"type": "string"}
                    }],
                    "security": [{"bearerAuth": []}],
                    "responses": {"200": {
                         "description": "Auto-generated description",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.agent.AgentSession"}}}
                    }}
               },
               "put": {
                    "tags": ["Agent Chat Services"],
                    "operationId": "put-/repo/v1/agent/session/{sessionId}",
                    "parameters": [{
                         "name": "sessionId",
                         "in": "path",
                         "required": true,
                         "schema": {"type": "string"}
                    }],
                    "requestBody": {
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.agent.UpdateAgentSessionRequest"}}},
                         "required": true
                    },
                    "security": [{"bearerAuth": []}],
                    "responses": {"200": {
                         "description": "Auto-generated description",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.agent.AgentSession"}}}
                    }}
               }
          },
          "/repo/v1/agent/chat/async/start": {"post": {
               "tags": ["Agent Chat Services"],
               "operationId": "post-/repo/v1/agent/chat/async/start",
               "parameters": [],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.agent.AgentChatRequest"}}},
                    "required": true
               },
               "security": [{"bearerAuth": []}],
               "responses": {"201": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.asynch.AsyncJobId"}}}
               }}
          }},
          "/repo/v1/agent/chat/async/get/{asyncToken}": {"get": {
               "tags": ["Agent Chat Services"],
               "operationId": "get-/repo/v1/agent/chat/async/get/{asyncToken}",
               "parameters": [{
                    "name": "asyncToken",
                    "in": "path",
                    "required": true,
                    "schema": {"type": "string"}
               }],
               "security": [{"bearerAuth": []}],
               "responses": {"201": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.agent.AgentChatResponse"}}}
               }}
          }},
          "/repo/v1/challenge": {
               "post": {
                    "tags": ["Challenge Services"],
                    "operationId": "post-/repo/v1/challenge",
                    "parameters": [],
                    "requestBody": {
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.Challenge"}}},
                         "required": true
                    },
                    "security": [{"bearerAuth": []}],
                    "responses": {"201": {
                         "description": "Auto-generated description",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.Challenge"}}}
                    }}
               },
               "get": {
                    "tags": ["Challenge Services"],
                    "operationId": "get-/repo/v1/challenge",
                    "parameters": [
                         {
                              "name": "participantId",
                              "in": "query",
                              "required": true,
                              "schema": {"type": "number"}
                         },
                         {
                              "name": "limit",
                              "in": "query",
                              "required": false,
                              "schema": {"type": "number"}
                         },
                         {
                              "name": "offset",
                              "in": "query",
                              "required": false,
                              "schema": {"type": "number"}
                         }
                    ],
                    "security": [{"bearerAuth": []}],
                    "responses": {"200": {
                         "description": "Auto-generated description",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.ChallengePagedResults"}}}
                    }}
               }
          },
          "/repo/v1/challenge/{challengeId}": {
               "get": {
                    "tags": ["Challenge Services"],
                    "operationId": "get-/repo/v1/challenge/{challengeId}",
                    "parameters": [{
                         "name": "challengeId",
                         "in": "path",
                         "required": true,
                         "schema": {"type": "number"}
                    }],
                    "security": [{"bearerAuth": []}],
                    "responses": {"200": {
                         "description": "Auto-generated description",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.Challenge"}}}
                    }}
               },
               "put": {
                    "tags": ["Challenge Services"],
                    "operationId": "put-/repo/v1/challenge/{challengeId}",
                    "parameters": [{
                         "name": "challengeId",
                         "in": "path",
                         "required": true,
                         "schema": {"type": "number"}
                    }],
                    "requestBody": {
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.Challenge"}}},
                         "required": true
                    },
                    "security": [{"bearerAuth": []}],
                    "responses": {"200": {
                         "description": "Auto-generated description",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.Challenge"}}}
                    }}
               },
               "delete": {
                    "tags": ["Challenge Services"],
                    "operationId": "delete-/repo/v1/challenge/{challengeId}",
                    "parameters": [{
                         "name": "challengeId",
                         "in": "path",
                         "required": true,
                         "schema": {"type": "number"}
                    }],
                    "security": [{"bearerAuth": []}],
                    "responses": {"200": {"description": "Void"}}
               }
          },
          "/repo/v1/entity/{id}/challenge": {"get": {
               "tags": ["Challenge Services"],
               "operationId": "get-/repo/v1/entity/{id}/challenge",
               "parameters": [{
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {"type": "string"}
               }],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.Challenge"}}}
               }}
          }},
          "/repo/v1/challenge/{challengeId}/participant": {"get": {
               "tags": ["Challenge Services"],
               "operationId": "get-/repo/v1/challenge/{challengeId}/participant",
               "parameters": [
                    {
                         "name": "challengeId",
                         "in": "path",
                         "required": true,
                         "schema": {"type": "number"}
                    },
                    {
                         "name": "affiliated",
                         "in": "query",
                         "required": false,
                         "description": "If affiliated=true, return just participants affiliated with some \n registered Team.  If false, return those not affiliated with any registered Team.  \n If omitted return all participants.",
                         "schema": {"type": "boolean"}
                    },
                    {
                         "name": "limit",
                         "in": "query",
                         "required": false,
                         "schema": {"type": "number"}
                    },
                    {
                         "name": "offset",
                         "in": "query",
                         "required": false,
                         "schema": {"type": "number"}
                    }
               ],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.PaginatedIds"}}}
               }}
          }},
          "/repo/v1/challenge/{challengeId}/challengeTeam": {
               "post": {
                    "tags": ["Challenge Services"],
                    "operationId": "post-/repo/v1/challenge/{challengeId}/challengeTeam",
                    "parameters": [{
                         "name": "challengeId",
                         "in": "path",
                         "required": true,
                         "schema": {"type": "number"}
                    }],
                    "requestBody": {
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.ChallengeTeam"}}},
                         "required": true
                    },
                    "security": [{"bearerAuth": []}],
                    "responses": {"201": {
                         "description": "Auto-generated description",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.ChallengeTeam"}}}
                    }}
               },
               "get": {
                    "tags": ["Challenge Services"],
                    "operationId": "get-/repo/v1/challenge/{challengeId}/challengeTeam",
                    "parameters": [
                         {
                              "name": "challengeId",
                              "in": "path",
                              "required": true,
                              "schema": {"type": "number"}
                         },
                         {
                              "name": "limit",
                              "in": "query",
                              "required": false,
                              "schema": {"type": "number"}
                         },
                         {
                              "name": "offset",
                              "in": "query",
                              "required": false,
                              "schema": {"type": "number"}
                         }
                    ],
                    "security": [{"bearerAuth": []}],
                    "responses": {"200": {
                         "description": "Auto-generated description",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.ChallengeTeamPagedResults"}}}
                    }}
               }
          },
          "/repo/v1/challenge/{challengeId}/registratableTeam": {"get": {
               "tags": ["Challenge Services"],
               "operationId": "get-/repo/v1/challenge/{challengeId}/registratableTeam",
               "parameters": [
                    {
                         "name": "challengeId",
                         "in": "path",
                         "required": true,
                         "schema": {"type": "number"}
                    },
                    {
                         "name": "limit",
                         "in": "query",
                         "required": false,
                         "schema": {"type": "number"}
                    },
                    {
                         "name": "offset",
                         "in": "query",
                         "required": false,
                         "schema": {"type": "number"}
                    }
               ],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.PaginatedIds"}}}
               }}
          }},
          "/repo/v1/challenge/{challengeId}/challengeTeam/{challengeTeamId}": {"put": {
               "tags": ["Challenge Services"],
               "operationId": "put-/repo/v1/challenge/{challengeId}/challengeTeam/{challengeTeamId}",
               "parameters": [
                    {
                         "name": "challengeId",
                         "in": "path",
                         "required": true,
                         "schema": {"type": "number"}
                    },
                    {
                         "name": "challengeTeamId",
                         "in": "path",
                         "required": true,
                         "schema": {"type": "number"}
                    }
               ],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.ChallengeTeam"}}},
                    "required": true
               },
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.ChallengeTeam"}}}
               }}
          }},
          "/repo/v1/challengeTeam/{challengeTeamId}": {"delete": {
               "tags": ["Challenge Services"],
               "operationId": "delete-/repo/v1/challengeTeam/{challengeTeamId}",
               "parameters": [{
                    "name": "challengeTeamId",
                    "in": "path",
                    "required": true,
                    "schema": {"type": "number"}
               }],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {"description": "Void"}}
          }},
          "/repo/v1/challenge/{challengeId}/submissionTeams": {"get": {
               "tags": ["Challenge Services"],
               "operationId": "get-/repo/v1/challenge/{challengeId}/submissionTeams",
               "parameters": [
                    {
                         "name": "challengeId",
                         "in": "path",
                         "required": true,
                         "schema": {"type": "number"}
                    },
                    {
                         "name": "limit",
                         "in": "query",
                         "required": false,
                         "schema": {"type": "number"}
                    },
                    {
                         "name": "offset",
                         "in": "query",
                         "required": false,
                         "schema": {"type": "number"}
                    }
               ],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.PaginatedIds"}}}
               }}
          }},
          "/repo/v1/message": {"post": {
               "tags": ["Message Services"],
               "operationId": "post-/repo/v1/message",
               "parameters": [],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.message.MessageToUser"}}},
                    "required": true
               },
               "security": [{"bearerAuth": []}],
               "responses": {"201": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.message.MessageToUser"}}}
               }}
          }},
          "/repo/v1/cloudMailInMessage": {"post": {
               "tags": ["Message Services"],
               "operationId": "post-/repo/v1/cloudMailInMessage",
               "parameters": [{
                    "name": "notificationUnsubscribeEndpoint",
                    "in": "query",
                    "required": false,
                    "schema": {"type": "string"}
               }],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.message.cloudmailin.Message"}}},
                    "required": true
               },
               "responses": {"204": {"description": "Void"}}
          }},
          "/repo/v1/cloudMailInAuthorization": {"post": {
               "tags": ["Message Services"],
               "operationId": "post-/repo/v1/cloudMailInAuthorization",
               "parameters": [],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.message.cloudmailin.AuthorizationCheckHeader"}}},
                    "required": true
               },
               "responses": {"204": {"description": "Void"}}
          }},
          "/repo/v1/message/inbox": {"get": {
               "tags": ["Message Services"],
               "operationId": "get-/repo/v1/message/inbox",
               "parameters": [
                    {
                         "name": "inboxFilter",
                         "in": "query",
                         "required": true,
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "orderBy",
                         "in": "query",
                         "required": true,
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "descending",
                         "in": "query",
                         "required": true,
                         "schema": {"type": "boolean"}
                    },
                    {
                         "name": "limit",
                         "in": "query",
                         "required": true,
                         "schema": {"type": "number"}
                    },
                    {
                         "name": "offset",
                         "in": "query",
                         "required": true,
                         "schema": {"type": "number"}
                    }
               ],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/PaginatedResultsOfMessageBundle"}}}
               }}
          }},
          "/repo/v1/message/outbox": {"get": {
               "tags": ["Message Services"],
               "operationId": "get-/repo/v1/message/outbox",
               "parameters": [
                    {
                         "name": "orderBy",
                         "in": "query",
                         "required": true,
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "descending",
                         "in": "query",
                         "required": true,
                         "schema": {"type": "boolean"}
                    },
                    {
                         "name": "limit",
                         "in": "query",
                         "required": true,
                         "schema": {"type": "number"}
                    },
                    {
                         "name": "offset",
                         "in": "query",
                         "required": true,
                         "schema": {"type": "number"}
                    }
               ],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/PaginatedResultsOfMessageToUser"}}}
               }}
          }},
          "/repo/v1/message/{messageId}": {"get": {
               "tags": ["Message Services"],
               "operationId": "get-/repo/v1/message/{messageId}",
               "parameters": [{
                    "name": "messageId",
                    "in": "path",
                    "required": true,
                    "schema": {"type": "string"}
               }],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.message.MessageToUser"}}}
               }}
          }},
          "/repo/v1/message/{messageId}/forward": {"post": {
               "tags": ["Message Services"],
               "operationId": "post-/repo/v1/message/{messageId}/forward",
               "parameters": [{
                    "name": "messageId",
                    "in": "path",
                    "required": true,
                    "schema": {"type": "string"}
               }],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.message.MessageRecipientSet"}}},
                    "required": true
               },
               "security": [{"bearerAuth": []}],
               "responses": {"201": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.message.MessageToUser"}}}
               }}
          }},
          "/repo/v1/message/{messageId}/conversation": {"get": {
               "tags": ["Message Services"],
               "operationId": "get-/repo/v1/message/{messageId}/conversation",
               "parameters": [
                    {
                         "name": "messageId",
                         "in": "path",
                         "required": true,
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "orderBy",
                         "in": "query",
                         "required": true,
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "descending",
                         "in": "query",
                         "required": true,
                         "schema": {"type": "boolean"}
                    },
                    {
                         "name": "limit",
                         "in": "query",
                         "required": true,
                         "schema": {"type": "number"}
                    },
                    {
                         "name": "offset",
                         "in": "query",
                         "required": true,
                         "schema": {"type": "number"}
                    }
               ],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/PaginatedResultsOfMessageToUser"}}}
               }}
          }},
          "/repo/v1/message/status": {"put": {
               "tags": ["Message Services"],
               "operationId": "put-/repo/v1/message/status",
               "parameters": [],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.message.MessageStatus"}}},
                    "required": true
               },
               "security": [{"bearerAuth": []}],
               "responses": {"200": {"description": "Void"}}
          }},
          "/repo/v1/admin/message/{messageId}": {"delete": {
               "tags": ["Message Services"],
               "operationId": "delete-/repo/v1/admin/message/{messageId}",
               "parameters": [{
                    "name": "messageId",
                    "in": "path",
                    "required": true,
                    "schema": {"type": "string"}
               }],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {"description": "Void"}}
          }},
          "/repo/v1/message/{messageId}/file": {"get": {
               "tags": ["Message Services"],
               "operationId": "get-/repo/v1/message/{messageId}/file",
               "parameters": [
                    {
                         "name": "messageId",
                         "in": "path",
                         "required": true,
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "redirect",
                         "in": "query",
                         "required": false,
                         "description": "When set to false, the URL will be returned as text/plain\n            instead of redirecting.",
                         "schema": {"type": "boolean"}
                    }
               ],
               "security": [{"bearerAuth": []}],
               "responses": {
                    "200": {
                         "description": "Status 200 will be returned if the 'redirect' boolean param is false",
                         "content": {"text/plain": {"schema": {}}}
                    },
                    "307": {"description": "Status 307 will be returned if the 'redirect' boolean param is true or null"}
               }
          }},
          "/repo/v1/entity/{id}/message": {"post": {
               "tags": ["Message Services"],
               "operationId": "post-/repo/v1/entity/{id}/message",
               "parameters": [{
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {"type": "string"}
               }],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.message.MessageToUser"}}},
                    "required": true
               },
               "security": [{"bearerAuth": []}],
               "responses": {"201": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.message.MessageToUser"}}}
               }}
          }},
          "/repo/v1/doi": {"get": {
               "tags": ["DOI Services"],
               "operationId": "get-/repo/v1/doi",
               "parameters": [
                    {
                         "name": "id",
                         "in": "query",
                         "required": true,
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "type",
                         "in": "query",
                         "required": true,
                         "schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.ObjectType"}
                    },
                    {
                         "name": "version",
                         "in": "query",
                         "required": false,
                         "schema": {"type": "number"}
                    }
               ],
               "responses": {"200": {
                    "description": "The DOI and all its associated DOI metadata, if the DOI has been minted for the object",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.doi.v2.Doi"}}}
               }}
          }},
          "/repo/v1/doi/association": {"get": {
               "tags": ["DOI Services"],
               "operationId": "get-/repo/v1/doi/association",
               "parameters": [
                    {
                         "name": "id",
                         "in": "query",
                         "required": true,
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "type",
                         "in": "query",
                         "required": true,
                         "schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.ObjectType"}
                    },
                    {
                         "name": "version",
                         "in": "query",
                         "required": false,
                         "schema": {"type": "number"}
                    }
               ],
               "responses": {"200": {
                    "description": "The DOI if the DOI has been minted for the object",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.doi.v2.DoiAssociation"}}}
               }}
          }},
          "/repo/v1/doi/async/start": {"post": {
               "tags": ["DOI Services"],
               "operationId": "post-/repo/v1/doi/async/start",
               "parameters": [],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.doi.v2.DoiRequest"}}},
                    "required": true
               },
               "security": [{"bearerAuth": []}],
               "responses": {"201": {
                    "description": "The asynchronous job ID",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.asynch.AsyncJobId"}}}
               }}
          }},
          "/repo/v1/doi/async/get/{asyncToken}": {"get": {
               "tags": ["DOI Services"],
               "operationId": "get-/repo/v1/doi/async/get/{asyncToken}",
               "parameters": [{
                    "name": "asyncToken",
                    "in": "path",
                    "required": true,
                    "description": "The async job token from the create/update call",
                    "schema": {"type": "string"}
               }],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "The results of the call",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.doi.v2.DoiResponse"}}}
               }}
          }},
          "/repo/v1/doi/locate": {"get": {
               "tags": ["DOI Services"],
               "operationId": "get-/repo/v1/doi/locate",
               "parameters": [
                    {
                         "name": "id",
                         "in": "query",
                         "required": true,
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "type",
                         "in": "query",
                         "required": true,
                         "schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.ObjectType"}
                    },
                    {
                         "name": "version",
                         "in": "query",
                         "required": false,
                         "schema": {"type": "number"}
                    },
                    {
                         "name": "redirect",
                         "in": "query",
                         "required": false,
                         "description": "Whether to return the URL or redirect to the URL",
                         "schema": {"type": "boolean"}
                    }
               ],
               "responses": {
                    "200": {
                         "description": "Status 200 will be returned if the 'redirect' boolean param is false",
                         "content": {"text/plain": {"schema": {}}}
                    },
                    "307": {"description": "Status 307 will be returned if the 'redirect' boolean param is true or null"}
               }
          }},
          "/repo/v1/column": {
               "post": {
                    "tags": ["Table Services"],
                    "operationId": "post-/repo/v1/column",
                    "parameters": [],
                    "requestBody": {
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.ColumnModel"}}},
                         "required": true
                    },
                    "security": [{"bearerAuth": []}],
                    "responses": {"201": {
                         "description": "-",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.ColumnModel"}}}
                    }}
               },
               "get": {
                    "tags": ["Table Services"],
                    "operationId": "get-/repo/v1/column",
                    "parameters": [
                         {
                              "name": "prefix",
                              "in": "query",
                              "required": false,
                              "description": "When included, only columns with a name that starts with this\n            prefix will be returned.",
                              "schema": {"type": "string"}
                         },
                         {
                              "name": "limit",
                              "in": "query",
                              "required": false,
                              "description": "Limits the size of the page returned. For example, a page size\n            of 10 require limit = 10. The maximum Limit for this call is\n            100. The default Limit is 10;",
                              "schema": {"type": "number"}
                         },
                         {
                              "name": "offset",
                              "in": "query",
                              "required": false,
                              "description": "The index of the pagination offset. For a page size of 10, the\n            first page would be at offset = 0, and the second page would\n            be at offset = 10.",
                              "schema": {"type": "number"}
                         }
                    ],
                    "security": [{"bearerAuth": []}],
                    "responses": {"200": {
                         "description": "Auto-generated description",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.PaginatedColumnModels"}}}
                    }}
               }
          },
          "/repo/v1/column/batch": {"post": {
               "tags": ["Table Services"],
               "operationId": "post-/repo/v1/column/batch",
               "parameters": [],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ListWrapperOfColumnModel"}}},
                    "required": true
               },
               "security": [{"bearerAuth": []}],
               "responses": {"201": {
                    "description": "-",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ListWrapperOfColumnModel"}}}
               }}
          }},
          "/repo/v1/column/{columnId}": {"get": {
               "tags": ["Table Services"],
               "operationId": "get-/repo/v1/column/{columnId}",
               "parameters": [{
                    "name": "columnId",
                    "in": "path",
                    "required": true,
                    "description": "The ID of the ColumnModel to get.",
                    "schema": {"type": "string"}
               }],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.ColumnModel"}}}
               }}
          }},
          "/repo/v1/entity/{id}/column": {"get": {
               "tags": ["Table Services"],
               "operationId": "get-/repo/v1/entity/{id}/column",
               "parameters": [{
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "description": "The ID of the TableEntity to get the ColumnModels for.",
                    "schema": {"type": "string"}
               }],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.PaginatedColumnModels"}}}
               }}
          }},
          "/repo/v1/column/tableview/defaults": {"get": {
               "tags": ["Table Services"],
               "operationId": "get-/repo/v1/column/tableview/defaults",
               "parameters": [
                    {
                         "name": "viewEntityType",
                         "in": "query",
                         "required": false,
                         "description": "The ,<a href=\"${org.sagebionetworks.repo.model.table.ViewEntityType}\">,entity\n                       type,<\/a>, of the view, if omitted use entityview",
                         "schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.ViewEntityType"}
                    },
                    {
                         "name": "viewTypeMask",
                         "in": "query",
                         "required": false,
                         "description": "Bit mask representing the types to include in the view.\n                       Not required for a submission view. For an entity view\n                       following are the possible types: (type=,<mask_hex>,):\n                       File=0x01, Project=0x02, Table=0x04, Folder=0x08,\n                       View=0x10, Docker=0x20, SubmissionView=0x40, Dataset=0x80, \n                       DatasetCollection=0x100, MaterializedView=0x200).",
                         "schema": {"type": "number"}
                    }
               ],
               "responses": {"200": {
                    "description": "-",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ListWrapperOfColumnModel"}}}
               }}
          }},
          "/repo/v1/entity/{id}/table/transaction/async/start": {"post": {
               "tags": ["Table Services"],
               "operationId": "post-/repo/v1/entity/{id}/table/transaction/async/start",
               "parameters": [{
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "description": "The ID of the TableEntity to update.",
                    "schema": {"type": "string"}
               }],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.TableUpdateTransactionRequest"}}},
                    "required": true
               },
               "security": [{"bearerAuth": []}],
               "responses": {"201": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.asynch.AsyncJobId"}}}
               }}
          }},
          "/repo/v1/entity/{id}/table/transaction/async/get/{asyncToken}": {"get": {
               "tags": ["Table Services"],
               "operationId": "get-/repo/v1/entity/{id}/table/transaction/async/get/{asyncToken}",
               "parameters": [
                    {
                         "name": "id",
                         "in": "path",
                         "required": true,
                         "description": "The ID of the table entity.",
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "asyncToken",
                         "in": "path",
                         "required": true,
                         "description": "The token returned when the job was started.",
                         "schema": {"type": "string"}
                    }
               ],
               "security": [{"bearerAuth": []}],
               "responses": {"201": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.TableUpdateTransactionResponse"}}}
               }}
          }},
          "/repo/v1/entity/{id}/table/filehandles": {"post": {
               "tags": ["Table Services"],
               "operationId": "post-/repo/v1/entity/{id}/table/filehandles",
               "parameters": [{
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "description": "The ID of the TableEntity to append rows to.",
                    "schema": {"type": "string"}
               }],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.RowReferenceSet"}}},
                    "required": true
               },
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.TableFileHandleResults"}}}
               }}
          }},
          "/repo/v1/entity/{id}/table/column/{columnId}/row/{rowId}/version/{versionNumber}/file": {"get": {
               "tags": ["Table Services"],
               "operationId": "get-/repo/v1/entity/{id}/table/column/{columnId}/row/{rowId}/version/{versionNumber}/file",
               "parameters": [
                    {
                         "name": "id",
                         "in": "path",
                         "required": true,
                         "description": "The ID of the FileEntity to get.",
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "columnId",
                         "in": "path",
                         "required": true,
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "rowId",
                         "in": "path",
                         "required": true,
                         "schema": {"type": "number"}
                    },
                    {
                         "name": "versionNumber",
                         "in": "path",
                         "required": true,
                         "schema": {"type": "number"}
                    },
                    {
                         "name": "redirect",
                         "in": "query",
                         "required": false,
                         "description": "When set to false, the URL will be returned as text/plain\n            instead of redirecting.",
                         "schema": {"type": "boolean"}
                    }
               ],
               "security": [{"bearerAuth": []}],
               "responses": {
                    "200": {
                         "description": "Status 200 will be returned if the 'redirect' boolean param is false",
                         "content": {"text/plain": {"schema": {}}}
                    },
                    "307": {"description": "Status 307 will be returned if the 'redirect' boolean param is true or null"}
               }
          }},
          "/repo/v1/entity/{id}/table/column/{columnId}/row/{rowId}/version/{versionNumber}/filepreview": {"get": {
               "tags": ["Table Services"],
               "operationId": "get-/repo/v1/entity/{id}/table/column/{columnId}/row/{rowId}/version/{versionNumber}/filepreview",
               "parameters": [
                    {
                         "name": "id",
                         "in": "path",
                         "required": true,
                         "description": "The ID of the FileEntity to get.",
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "columnId",
                         "in": "path",
                         "required": true,
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "rowId",
                         "in": "path",
                         "required": true,
                         "schema": {"type": "number"}
                    },
                    {
                         "name": "versionNumber",
                         "in": "path",
                         "required": true,
                         "schema": {"type": "number"}
                    },
                    {
                         "name": "redirect",
                         "in": "query",
                         "required": false,
                         "description": "When set to false, the URL will be returned as text/plain\n            instead of redirecting.",
                         "schema": {"type": "boolean"}
                    }
               ],
               "security": [{"bearerAuth": []}],
               "responses": {
                    "200": {
                         "description": "Status 200 will be returned if the 'redirect' boolean param is false",
                         "content": {"text/plain": {"schema": {}}}
                    },
                    "307": {"description": "Status 307 will be returned if the 'redirect' boolean param is true or null"}
               }
          }},
          "/repo/v1/entity/{id}/table/query/async/start": {"post": {
               "tags": ["Table Services"],
               "operationId": "post-/repo/v1/entity/{id}/table/query/async/start",
               "parameters": [{
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "description": "The ID of the TableEntity.",
                    "schema": {"type": "string"}
               }],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.QueryBundleRequest"}}},
                    "required": true
               },
               "security": [{"bearerAuth": []}],
               "responses": {"201": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.asynch.AsyncJobId"}}}
               }}
          }},
          "/repo/v1/entity/{id}/table/query/async/get/{asyncToken}": {"get": {
               "tags": ["Table Services"],
               "operationId": "get-/repo/v1/entity/{id}/table/query/async/get/{asyncToken}",
               "parameters": [
                    {
                         "name": "id",
                         "in": "path",
                         "required": true,
                         "description": "The ID of the TableEntity.",
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "asyncToken",
                         "in": "path",
                         "required": true,
                         "schema": {"type": "string"}
                    }
               ],
               "security": [{"bearerAuth": []}],
               "responses": {"201": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.QueryResultBundle"}}}
               }}
          }},
          "/repo/v1/entity/{id}/table/download/csv/async/start": {"post": {
               "tags": ["Table Services"],
               "operationId": "post-/repo/v1/entity/{id}/table/download/csv/async/start",
               "parameters": [{
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "description": "The ID of the TableEntity.",
                    "schema": {"type": "string"}
               }],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.DownloadFromTableRequest"}}},
                    "required": true
               },
               "security": [{"bearerAuth": []}],
               "responses": {"201": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.asynch.AsyncJobId"}}}
               }}
          }},
          "/repo/v1/entity/{id}/table/download/csv/async/get/{asyncToken}": {"get": {
               "tags": ["Table Services"],
               "operationId": "get-/repo/v1/entity/{id}/table/download/csv/async/get/{asyncToken}",
               "parameters": [
                    {
                         "name": "id",
                         "in": "path",
                         "required": true,
                         "description": "The ID of the TableEntity.",
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "asyncToken",
                         "in": "path",
                         "required": true,
                         "schema": {"type": "string"}
                    }
               ],
               "security": [{"bearerAuth": []}],
               "responses": {"201": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.DownloadFromTableResult"}}}
               }}
          }},
          "/repo/v1/table/upload/csv/preview/async/start": {"post": {
               "tags": ["Table Services"],
               "operationId": "post-/repo/v1/table/upload/csv/preview/async/start",
               "parameters": [],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.UploadToTablePreviewRequest"}}},
                    "required": true
               },
               "security": [{"bearerAuth": []}],
               "responses": {"201": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.asynch.AsyncJobId"}}}
               }}
          }},
          "/repo/v1/table/upload/csv/preview/async/get/{asyncToken}": {"get": {
               "tags": ["Table Services"],
               "operationId": "get-/repo/v1/table/upload/csv/preview/async/get/{asyncToken}",
               "parameters": [{
                    "name": "asyncToken",
                    "in": "path",
                    "required": true,
                    "schema": {"type": "string"}
               }],
               "security": [{"bearerAuth": []}],
               "responses": {"201": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.UploadToTablePreviewResult"}}}
               }}
          }},
          "/repo/v1/entity/{id}/table/upload/csv/async/start": {"post": {
               "tags": ["Table Services"],
               "operationId": "post-/repo/v1/entity/{id}/table/upload/csv/async/start",
               "parameters": [{
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "description": "The ID of the TableEntity.",
                    "schema": {"type": "string"}
               }],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.UploadToTableRequest"}}},
                    "required": true
               },
               "security": [{"bearerAuth": []}],
               "responses": {"201": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.asynch.AsyncJobId"}}}
               }}
          }},
          "/repo/v1/entity/{id}/table/upload/csv/async/get/{asyncToken}": {"get": {
               "tags": ["Table Services"],
               "operationId": "get-/repo/v1/entity/{id}/table/upload/csv/async/get/{asyncToken}",
               "parameters": [
                    {
                         "name": "id",
                         "in": "path",
                         "required": true,
                         "description": "The ID of the TableEntity.",
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "asyncToken",
                         "in": "path",
                         "required": true,
                         "schema": {"type": "string"}
                    }
               ],
               "security": [{"bearerAuth": []}],
               "responses": {"201": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.UploadToTableResult"}}}
               }}
          }},
          "/repo/v1/column/view/scope/async/start": {"post": {
               "tags": ["Table Services"],
               "operationId": "post-/repo/v1/column/view/scope/async/start",
               "parameters": [],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.ViewColumnModelRequest"}}},
                    "required": true
               },
               "security": [{"bearerAuth": []}],
               "responses": {"201": {
                    "description": "An object containing the id of the asynchronous job whose results can be fetched using the \n ,<a href=\"${GET.column.view.scope.async.get.asyncToken}\">,GET /column/view/scope/async/get,<\/a>, service",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.asynch.AsyncJobId"}}}
               }}
          }},
          "/repo/v1/column/view/scope/async/get/{asyncToken}": {"get": {
               "tags": ["Table Services"],
               "operationId": "get-/repo/v1/column/view/scope/async/get/{asyncToken}",
               "parameters": [{
                    "name": "asyncToken",
                    "in": "path",
                    "required": true,
                    "schema": {"type": "string"}
               }],
               "security": [{"bearerAuth": []}],
               "responses": {"201": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.ViewColumnModelResponse"}}}
               }}
          }},
          "/repo/v1/entity/{id}/table/snapshot": {"post": {
               "tags": ["Table Services"],
               "operationId": "post-/repo/v1/entity/{id}/table/snapshot",
               "parameters": [{
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {"type": "string"}
               }],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.SnapshotRequest"}}},
                    "required": true
               },
               "security": [{"bearerAuth": []}],
               "responses": {"201": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.SnapshotResponse"}}}
               }}
          }},
          "/repo/v1/validateDefiningSql": {"post": {
               "tags": ["Table Services"],
               "operationId": "post-/repo/v1/validateDefiningSql",
               "parameters": [],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.ValidateDefiningSqlRequest"}}},
                    "required": true
               },
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.ValidateDefiningSqlResponse"}}}
               }}
          }},
          "/docker/v1/bearerToken": {"get": {
               "tags": ["Docker Authorization Services"],
               "operationId": "get-/docker/v1/bearerToken",
               "parameters": [
                    {
                         "name": "Synapse-Authorization",
                         "in": "header",
                         "required": false,
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "service",
                         "in": "query",
                         "required": true,
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "scope",
                         "in": "query",
                         "required": false,
                         "schema": {"$ref": "#/components/schemas/ListOfString"}
                    }
               ],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.docker.DockerAuthorizationToken"}}}
               }}
          }},
          "/repo/v1/membershipInvitation": {"post": {
               "tags": ["Membership Invitation Services"],
               "operationId": "post-/repo/v1/membershipInvitation",
               "parameters": [
                    {
                         "name": "acceptInvitationEndpoint",
                         "in": "query",
                         "required": false,
                         "description": "The portal endpoint prefix for one-click acceptance of the membership invitation.\n A signed, serialized token is appended to create the complete URL:\n ,<a href=\"${org.sagebionetworks.repo.model.JoinTeamSignedToken}\">,JoinTeamSignedToken,<\/a>,\n if an inviteeId is specified, or\n ,<a href=\"${org.sagebionetworks.repo.model.MembershipInvtnSignedToken}\">,MembershipInvtnSignedToken,<\/a>,\n if an inviteeEmail is specified.\n In normal operation, this parameter should be omitted.",
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "notificationUnsubscribeEndpoint",
                         "in": "query",
                         "required": true,
                         "description": "The portal endpoint prefix for one-click email unsubscription.\n A signed, serialized token is appended to create the complete URL:\n ,<a href=\"${org.sagebionetworks.repo.model.message.NotificationSettingsSignedToken}\">,NotificationSettingsSignedToken,<\/a>,.\n In normal operation, this parameter should be omitted.",
                         "schema": {"type": "string"}
                    }
               ],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.MembershipInvitation"}}},
                    "required": true
               },
               "security": [{"bearerAuth": []}],
               "responses": {"201": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.MembershipInvitation"}}}
               }}
          }},
          "/repo/v1/user/{id}/openInvitation": {"get": {
               "tags": ["Membership Invitation Services"],
               "operationId": "get-/repo/v1/user/{id}/openInvitation",
               "parameters": [
                    {
                         "name": "id",
                         "in": "path",
                         "required": true,
                         "description": "the ID of the Synapse user to which invitations have been extended.",
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "teamId",
                         "in": "query",
                         "required": false,
                         "description": "the ID of the Team extending the invitations (optional)",
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "limit",
                         "in": "query",
                         "required": false,
                         "description": "the maximum number of invitations to return (default 10)",
                         "schema": {"type": "integer"}
                    },
                    {
                         "name": "offset",
                         "in": "query",
                         "required": false,
                         "description": "the starting index of the returned results (default 0)",
                         "schema": {"type": "integer"}
                    }
               ],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/PaginatedResultsOfMembershipInvitation"}}}
               }}
          }},
          "/repo/v1/team/{id}/openInvitation": {"get": {
               "tags": ["Membership Invitation Services"],
               "operationId": "get-/repo/v1/team/{id}/openInvitation",
               "parameters": [
                    {
                         "name": "id",
                         "in": "path",
                         "required": true,
                         "description": "the ID of the Team extending the invitations",
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "inviteeId",
                         "in": "query",
                         "required": false,
                         "description": "the ID of the Synapse user to which invitations have been extended (optional)",
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "limit",
                         "in": "query",
                         "required": false,
                         "description": "the maximum number of invitations to return (default 10)",
                         "schema": {"type": "integer"}
                    },
                    {
                         "name": "offset",
                         "in": "query",
                         "required": false,
                         "description": "the starting index of the returned results (default 0)",
                         "schema": {"type": "integer"}
                    }
               ],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/PaginatedResultsOfMembershipInvitation"}}}
               }}
          }},
          "/repo/v1/membershipInvitation/{id}": {
               "get": {
                    "tags": ["Membership Invitation Services"],
                    "operationId": "get-/repo/v1/membershipInvitation/{id}",
                    "parameters": [{
                         "name": "id",
                         "in": "path",
                         "required": true,
                         "description": "the ID of the invitation",
                         "schema": {"type": "string"}
                    }],
                    "security": [{"bearerAuth": []}],
                    "responses": {"200": {
                         "description": "Auto-generated description",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.MembershipInvitation"}}}
                    }}
               },
               "post": {
                    "tags": ["Membership Invitation Services"],
                    "operationId": "post-/repo/v1/membershipInvitation/{id}",
                    "parameters": [{
                         "name": "id",
                         "in": "path",
                         "required": true,
                         "schema": {"type": "string"}
                    }],
                    "requestBody": {
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.MembershipInvtnSignedToken"}}},
                         "required": true
                    },
                    "responses": {"200": {
                         "description": "Auto-generated description",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.MembershipInvitation"}}}
                    }}
               },
               "delete": {
                    "tags": ["Membership Invitation Services"],
                    "operationId": "delete-/repo/v1/membershipInvitation/{id}",
                    "parameters": [{
                         "name": "id",
                         "in": "path",
                         "required": true,
                         "description": "the ID of the invitation to be deleted",
                         "schema": {"type": "string"}
                    }],
                    "security": [{"bearerAuth": []}],
                    "responses": {"204": {"description": "Void"}}
               }
          },
          "/repo/v1/membershipInvitation/openInvitationCount": {"get": {
               "tags": ["Membership Invitation Services"],
               "operationId": "get-/repo/v1/membershipInvitation/openInvitationCount",
               "parameters": [],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.Count"}}}
               }}
          }},
          "/repo/v1/membershipInvitation/{id}/inviteeVerificationSignedToken": {"get": {
               "tags": ["Membership Invitation Services"],
               "operationId": "get-/repo/v1/membershipInvitation/{id}/inviteeVerificationSignedToken",
               "parameters": [{
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {"type": "string"}
               }],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.InviteeVerificationSignedToken"}}}
               }}
          }},
          "/repo/v1/membershipInvitation/{id}/inviteeId": {"put": {
               "tags": ["Membership Invitation Services"],
               "operationId": "put-/repo/v1/membershipInvitation/{id}/inviteeId",
               "parameters": [{
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {"type": "string"}
               }],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.InviteeVerificationSignedToken"}}},
                    "required": true
               },
               "security": [{"bearerAuth": []}],
               "responses": {"200": {"description": "Void"}}
          }},
          "/repo/v1/entity/{ownerId}/wiki2": {
               "post": {
                    "tags": ["WikiPage Services 2"],
                    "operationId": "post-/repo/v1/entity/{ownerId}/wiki2",
                    "parameters": [{
                         "name": "ownerId",
                         "in": "path",
                         "required": true,
                         "description": "The ID of the owner Entity.",
                         "schema": {"type": "string"}
                    }],
                    "requestBody": {
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.v2.wiki.V2WikiPage"}}},
                         "required": true
                    },
                    "security": [{"bearerAuth": []}],
                    "responses": {"201": {
                         "description": "Auto-generated description",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.v2.wiki.V2WikiPage"}}}
                    }}
               },
               "get": {
                    "tags": ["WikiPage Services 2"],
                    "operationId": "get-/repo/v1/entity/{ownerId}/wiki2",
                    "parameters": [{
                         "name": "ownerId",
                         "in": "path",
                         "required": true,
                         "description": "The ID of the owning Entity.",
                         "schema": {"type": "string"}
                    }],
                    "security": [{"bearerAuth": []}],
                    "responses": {"200": {
                         "description": "Auto-generated description",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.v2.wiki.V2WikiPage"}}}
                    }}
               }
          },
          "/repo/v1/access_requirement/{ownerId}/wiki2": {
               "post": {
                    "tags": ["WikiPage Services 2"],
                    "operationId": "post-/repo/v1/access_requirement/{ownerId}/wiki2",
                    "parameters": [{
                         "name": "ownerId",
                         "in": "path",
                         "required": true,
                         "description": "The ID of the owner AccessRequirement.",
                         "schema": {"type": "string"}
                    }],
                    "requestBody": {
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.v2.wiki.V2WikiPage"}}},
                         "required": true
                    },
                    "security": [{"bearerAuth": []}],
                    "responses": {"201": {
                         "description": "Auto-generated description",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.v2.wiki.V2WikiPage"}}}
                    }}
               },
               "get": {
                    "tags": ["WikiPage Services 2"],
                    "operationId": "get-/repo/v1/access_requirement/{ownerId}/wiki2",
                    "parameters": [{
                         "name": "ownerId",
                         "in": "path",
                         "required": true,
                         "description": "The ID of the owning AccessRequirement.",
                         "schema": {"type": "string"}
                    }],
                    "security": [{"bearerAuth": []}],
                    "responses": {"200": {
                         "description": "Auto-generated description",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.v2.wiki.V2WikiPage"}}}
                    }}
               }
          },
          "/repo/v1/evaluation/{ownerId}/wiki2": {
               "post": {
                    "tags": ["WikiPage Services 2"],
                    "operationId": "post-/repo/v1/evaluation/{ownerId}/wiki2",
                    "parameters": [{
                         "name": "ownerId",
                         "in": "path",
                         "required": true,
                         "description": "The ID of the owner Evaluation.",
                         "schema": {"type": "string"}
                    }],
                    "requestBody": {
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.v2.wiki.V2WikiPage"}}},
                         "required": true
                    },
                    "security": [{"bearerAuth": []}],
                    "responses": {"201": {
                         "description": "Auto-generated description",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.v2.wiki.V2WikiPage"}}}
                    }}
               },
               "get": {
                    "tags": ["WikiPage Services 2"],
                    "operationId": "get-/repo/v1/evaluation/{ownerId}/wiki2",
                    "parameters": [{
                         "name": "ownerId",
                         "in": "path",
                         "required": true,
                         "description": "The ID of the owning Evaluation.",
                         "schema": {"type": "string"}
                    }],
                    "security": [{"bearerAuth": []}],
                    "responses": {"200": {
                         "description": "Auto-generated description",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.v2.wiki.V2WikiPage"}}}
                    }}
               }
          },
          "/repo/v1/entity/{ownerId}/wiki2/{wikiId}": {
               "get": {
                    "tags": ["WikiPage Services 2"],
                    "operationId": "get-/repo/v1/entity/{ownerId}/wiki2/{wikiId}",
                    "parameters": [
                         {
                              "name": "ownerId",
                              "in": "path",
                              "required": true,
                              "description": "The ID of the owning Entity.",
                              "schema": {"type": "string"}
                         },
                         {
                              "name": "wikiId",
                              "in": "path",
                              "required": true,
                              "description": "The ID of the WikiPage to get.",
                              "schema": {"type": "string"}
                         },
                         {
                              "name": "wikiVersion",
                              "in": "query",
                              "required": false,
                              "description": "When included returns a specific version of a wiki.",
                              "schema": {"type": "number"}
                         }
                    ],
                    "security": [{"bearerAuth": []}],
                    "responses": {"200": {
                         "description": "Auto-generated description",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.v2.wiki.V2WikiPage"}}}
                    }}
               },
               "put": {
                    "tags": ["WikiPage Services 2"],
                    "operationId": "put-/repo/v1/entity/{ownerId}/wiki2/{wikiId}",
                    "parameters": [
                         {
                              "name": "ownerId",
                              "in": "path",
                              "required": true,
                              "description": "The ID of the owning Entity.",
                              "schema": {"type": "string"}
                         },
                         {
                              "name": "wikiId",
                              "in": "path",
                              "required": true,
                              "description": "The ID of the WikiPage to update.",
                              "schema": {"type": "string"}
                         }
                    ],
                    "requestBody": {
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.v2.wiki.V2WikiPage"}}},
                         "required": true
                    },
                    "security": [{"bearerAuth": []}],
                    "responses": {"200": {
                         "description": "Auto-generated description",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.v2.wiki.V2WikiPage"}}}
                    }}
               },
               "delete": {
                    "tags": ["WikiPage Services 2"],
                    "operationId": "delete-/repo/v1/entity/{ownerId}/wiki2/{wikiId}",
                    "parameters": [
                         {
                              "name": "ownerId",
                              "in": "path",
                              "required": true,
                              "description": "The ID of the owning Entity.",
                              "schema": {"type": "string"}
                         },
                         {
                              "name": "wikiId",
                              "in": "path",
                              "required": true,
                              "description": "The ID of the WikiPage to delete.",
                              "schema": {"type": "string"}
                         }
                    ],
                    "security": [{"bearerAuth": []}],
                    "responses": {"200": {"description": "Void"}}
               }
          },
          "/repo/v1/access_requirement/{ownerId}/wiki2/{wikiId}": {
               "get": {
                    "tags": ["WikiPage Services 2"],
                    "operationId": "get-/repo/v1/access_requirement/{ownerId}/wiki2/{wikiId}",
                    "parameters": [
                         {
                              "name": "ownerId",
                              "in": "path",
                              "required": true,
                              "description": "The ID of the owning Access Requirement.",
                              "schema": {"type": "string"}
                         },
                         {
                              "name": "wikiId",
                              "in": "path",
                              "required": true,
                              "description": "The ID of the WikiPage to get.",
                              "schema": {"type": "string"}
                         },
                         {
                              "name": "wikiVersion",
                              "in": "query",
                              "required": false,
                              "schema": {"type": "number"}
                         }
                    ],
                    "security": [{"bearerAuth": []}],
                    "responses": {"200": {
                         "description": "Auto-generated description",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.v2.wiki.V2WikiPage"}}}
                    }}
               },
               "put": {
                    "tags": ["WikiPage Services 2"],
                    "operationId": "put-/repo/v1/access_requirement/{ownerId}/wiki2/{wikiId}",
                    "parameters": [
                         {
                              "name": "ownerId",
                              "in": "path",
                              "required": true,
                              "description": "The ID of the owning Access Requirement.",
                              "schema": {"type": "string"}
                         },
                         {
                              "name": "wikiId",
                              "in": "path",
                              "required": true,
                              "description": "The ID of the WikiPage to update.",
                              "schema": {"type": "string"}
                         }
                    ],
                    "requestBody": {
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.v2.wiki.V2WikiPage"}}},
                         "required": true
                    },
                    "security": [{"bearerAuth": []}],
                    "responses": {"200": {
                         "description": "Auto-generated description",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.v2.wiki.V2WikiPage"}}}
                    }}
               },
               "delete": {
                    "tags": ["WikiPage Services 2"],
                    "operationId": "delete-/repo/v1/access_requirement/{ownerId}/wiki2/{wikiId}",
                    "parameters": [
                         {
                              "name": "ownerId",
                              "in": "path",
                              "required": true,
                              "description": "The ID of the owning Access Requirement.",
                              "schema": {"type": "string"}
                         },
                         {
                              "name": "wikiId",
                              "in": "path",
                              "required": true,
                              "description": "The ID of the WikiPage to delete.",
                              "schema": {"type": "string"}
                         }
                    ],
                    "security": [{"bearerAuth": []}],
                    "responses": {"200": {"description": "Void"}}
               }
          },
          "/repo/v1/evaluation/{ownerId}/wiki2/{wikiId}": {
               "get": {
                    "tags": ["WikiPage Services 2"],
                    "operationId": "get-/repo/v1/evaluation/{ownerId}/wiki2/{wikiId}",
                    "parameters": [
                         {
                              "name": "ownerId",
                              "in": "path",
                              "required": true,
                              "description": "The ID of the owning Evaluation.",
                              "schema": {"type": "string"}
                         },
                         {
                              "name": "wikiId",
                              "in": "path",
                              "required": true,
                              "description": "The ID of the WikiPage to get.",
                              "schema": {"type": "string"}
                         },
                         {
                              "name": "wikiVersion",
                              "in": "query",
                              "required": false,
                              "schema": {"type": "number"}
                         }
                    ],
                    "security": [{"bearerAuth": []}],
                    "responses": {"200": {
                         "description": "Auto-generated description",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.v2.wiki.V2WikiPage"}}}
                    }}
               },
               "put": {
                    "tags": ["WikiPage Services 2"],
                    "operationId": "put-/repo/v1/evaluation/{ownerId}/wiki2/{wikiId}",
                    "parameters": [
                         {
                              "name": "ownerId",
                              "in": "path",
                              "required": true,
                              "description": "The ID of the owning Evaluation.",
                              "schema": {"type": "string"}
                         },
                         {
                              "name": "wikiId",
                              "in": "path",
                              "required": true,
                              "description": "The ID of the WikiPage to update.",
                              "schema": {"type": "string"}
                         }
                    ],
                    "requestBody": {
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.v2.wiki.V2WikiPage"}}},
                         "required": true
                    },
                    "security": [{"bearerAuth": []}],
                    "responses": {"200": {
                         "description": "Auto-generated description",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.v2.wiki.V2WikiPage"}}}
                    }}
               },
               "delete": {
                    "tags": ["WikiPage Services 2"],
                    "operationId": "delete-/repo/v1/evaluation/{ownerId}/wiki2/{wikiId}",
                    "parameters": [
                         {
                              "name": "ownerId",
                              "in": "path",
                              "required": true,
                              "description": "The ID of the owning Evaluations.",
                              "schema": {"type": "string"}
                         },
                         {
                              "name": "wikiId",
                              "in": "path",
                              "required": true,
                              "description": "The ID of the WikiPage to delete.",
                              "schema": {"type": "string"}
                         }
                    ],
                    "security": [{"bearerAuth": []}],
                    "responses": {"200": {"description": "Void"}}
               }
          },
          "/repo/v1/entity/{ownerId}/wiki2orderhint": {
               "put": {
                    "tags": ["WikiPage Services 2"],
                    "operationId": "put-/repo/v1/entity/{ownerId}/wiki2orderhint",
                    "parameters": [{
                         "name": "ownerId",
                         "in": "path",
                         "required": true,
                         "schema": {"type": "string"}
                    }],
                    "requestBody": {
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.v2.wiki.V2WikiOrderHint"}}},
                         "required": true
                    },
                    "security": [{"bearerAuth": []}],
                    "responses": {"200": {
                         "description": "Auto-generated description",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.v2.wiki.V2WikiOrderHint"}}}
                    }}
               },
               "get": {
                    "tags": ["WikiPage Services 2"],
                    "operationId": "get-/repo/v1/entity/{ownerId}/wiki2orderhint",
                    "parameters": [{
                         "name": "ownerId",
                         "in": "path",
                         "required": true,
                         "description": "The ID of the owning Entity.",
                         "schema": {"type": "string"}
                    }],
                    "security": [{"bearerAuth": []}],
                    "responses": {"200": {
                         "description": "Auto-generated description",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.v2.wiki.V2WikiOrderHint"}}}
                    }}
               }
          },
          "/repo/v1/entity/{ownerId}/wiki2/{wikiId}/{wikiVersion}": {"put": {
               "tags": ["WikiPage Services 2"],
               "operationId": "put-/repo/v1/entity/{ownerId}/wiki2/{wikiId}/{wikiVersion}",
               "parameters": [
                    {
                         "name": "wikiVersion",
                         "in": "path",
                         "required": true,
                         "schema": {"type": "number"}
                    },
                    {
                         "name": "ownerId",
                         "in": "path",
                         "required": true,
                         "description": "The ID of the owning Entity.",
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "wikiId",
                         "in": "path",
                         "required": true,
                         "description": "The ID of the WikiPage to update.",
                         "schema": {"type": "string"}
                    }
               ],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.v2.wiki.V2WikiPage"}}}
               }}
          }},
          "/repo/v1/access_requirement/{ownerId}/wiki2/{wikiId}/{wikiVersion}": {"put": {
               "tags": ["WikiPage Services 2"],
               "operationId": "put-/repo/v1/access_requirement/{ownerId}/wiki2/{wikiId}/{wikiVersion}",
               "parameters": [
                    {
                         "name": "wikiVersion",
                         "in": "path",
                         "required": true,
                         "schema": {"type": "number"}
                    },
                    {
                         "name": "ownerId",
                         "in": "path",
                         "required": true,
                         "description": "The ID of the owning Access Requirement.",
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "wikiId",
                         "in": "path",
                         "required": true,
                         "description": "The ID of the WikiPage to update.",
                         "schema": {"type": "string"}
                    }
               ],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.v2.wiki.V2WikiPage"}}}
               }}
          }},
          "/repo/v1/evaluation/{ownerId}/wiki2/{wikiId}/{wikiVersion}": {"put": {
               "tags": ["WikiPage Services 2"],
               "operationId": "put-/repo/v1/evaluation/{ownerId}/wiki2/{wikiId}/{wikiVersion}",
               "parameters": [
                    {
                         "name": "wikiVersion",
                         "in": "path",
                         "required": true,
                         "schema": {"type": "number"}
                    },
                    {
                         "name": "ownerId",
                         "in": "path",
                         "required": true,
                         "description": "The ID of the owning Entity.",
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "wikiId",
                         "in": "path",
                         "required": true,
                         "description": "The ID of the WikiPage to update.",
                         "schema": {"type": "string"}
                    }
               ],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.v2.wiki.V2WikiPage"}}}
               }}
          }},
          "/repo/v1/entity/{ownerId}/wikiheadertree2": {"get": {
               "tags": ["WikiPage Services 2"],
               "operationId": "get-/repo/v1/entity/{ownerId}/wikiheadertree2",
               "parameters": [
                    {
                         "name": "offset",
                         "in": "query",
                         "required": false,
                         "description": "The index of the pagination offset. For a page size of 10, the\n            first page would be at offset = 0, and the second page would\n            be at offset = 10.",
                         "schema": {"type": "number"}
                    },
                    {
                         "name": "limit",
                         "in": "query",
                         "required": false,
                         "description": "Limits the size of the page returned. For example, a page size\n            of 10 require limit = 10. Limit must be 50 or less.",
                         "schema": {"type": "number"}
                    },
                    {
                         "name": "ownerId",
                         "in": "path",
                         "required": true,
                         "description": "The ID of the owning Entity.",
                         "schema": {"type": "string"}
                    }
               ],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/PaginatedResultsOfV2WikiHeader"}}}
               }}
          }},
          "/repo/v1/access_requirement/{ownerId}/wikiheadertree2": {"get": {
               "tags": ["WikiPage Services 2"],
               "operationId": "get-/repo/v1/access_requirement/{ownerId}/wikiheadertree2",
               "parameters": [
                    {
                         "name": "offset",
                         "in": "query",
                         "required": false,
                         "description": "The index of the pagination offset. For a page size of 10, the\n            first page would be at offset = 0, and the second page would\n            be at offset = 10.",
                         "schema": {"type": "number"}
                    },
                    {
                         "name": "limit",
                         "in": "query",
                         "required": false,
                         "description": "Limits the size of the page returned. For example, a page size\n            of 10 require limit = 10.",
                         "schema": {"type": "number"}
                    },
                    {
                         "name": "ownerId",
                         "in": "path",
                         "required": true,
                         "description": "The ID of the owning Access Requirement.",
                         "schema": {"type": "string"}
                    }
               ],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/PaginatedResultsOfV2WikiHeader"}}}
               }}
          }},
          "/repo/v1/evaluation/{ownerId}/wikiheadertree2": {"get": {
               "tags": ["WikiPage Services 2"],
               "operationId": "get-/repo/v1/evaluation/{ownerId}/wikiheadertree2",
               "parameters": [
                    {
                         "name": "offset",
                         "in": "query",
                         "required": false,
                         "description": "The index of the pagination offset. For a page size of 10, the\n            first page would be at offset = 0, and the second page would\n            be at offset = 10.",
                         "schema": {"type": "number"}
                    },
                    {
                         "name": "limit",
                         "in": "query",
                         "required": false,
                         "description": "Limits the size of the page returned. For example, a page size\n            of 10 require limit = 10.",
                         "schema": {"type": "number"}
                    },
                    {
                         "name": "ownerId",
                         "in": "path",
                         "required": true,
                         "description": "The ID of the owning Evaluation.",
                         "schema": {"type": "string"}
                    }
               ],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/PaginatedResultsOfV2WikiHeader"}}}
               }}
          }},
          "/repo/v1/entity/{ownerId}/wiki2/{wikiId}/wikihistory": {"get": {
               "tags": ["WikiPage Services 2"],
               "operationId": "get-/repo/v1/entity/{ownerId}/wiki2/{wikiId}/wikihistory",
               "parameters": [
                    {
                         "name": "offset",
                         "in": "query",
                         "required": true,
                         "description": "The index of the pagination offset. For a page size of 10, the\n            first page would be at offset = 0, and the second page would\n            be at offset = 10.",
                         "schema": {"type": "number"}
                    },
                    {
                         "name": "limit",
                         "in": "query",
                         "required": true,
                         "description": "Limits the size of the page returned. For example, a page size\n            of 10 require limit = 10. Limit must be 50 or less.",
                         "schema": {"type": "number"}
                    },
                    {
                         "name": "wikiId",
                         "in": "path",
                         "required": true,
                         "description": "The ID of the WikiPage.",
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "ownerId",
                         "in": "path",
                         "required": true,
                         "description": "The ID of the owning Entity.",
                         "schema": {"type": "string"}
                    }
               ],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/PaginatedResultsOfV2WikiHistorySnapshot"}}}
               }}
          }},
          "/repo/v1/access_requirement/{ownerId}/wiki2/{wikiId}/wikihistory": {"get": {
               "tags": ["WikiPage Services 2"],
               "operationId": "get-/repo/v1/access_requirement/{ownerId}/wiki2/{wikiId}/wikihistory",
               "parameters": [
                    {
                         "name": "offset",
                         "in": "query",
                         "required": true,
                         "description": "The index of the pagination offset. For a page size of 10, the\n            first page would be at offset = 0, and the second page would\n            be at offset = 10.",
                         "schema": {"type": "number"}
                    },
                    {
                         "name": "limit",
                         "in": "query",
                         "required": true,
                         "description": "Limits the size of the page returned. For example, a page size\n            of 10 require limit = 10.",
                         "schema": {"type": "number"}
                    },
                    {
                         "name": "wikiId",
                         "in": "path",
                         "required": true,
                         "description": "The ID of the WikiPage.",
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "ownerId",
                         "in": "path",
                         "required": true,
                         "description": "The ID of the owning Access Requirement.",
                         "schema": {"type": "string"}
                    }
               ],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/PaginatedResultsOfV2WikiHistorySnapshot"}}}
               }}
          }},
          "/repo/v1/evaluation/{ownerId}/wiki2/{wikiId}/wikihistory": {"get": {
               "tags": ["WikiPage Services 2"],
               "operationId": "get-/repo/v1/evaluation/{ownerId}/wiki2/{wikiId}/wikihistory",
               "parameters": [
                    {
                         "name": "offset",
                         "in": "query",
                         "required": true,
                         "description": "The index of the pagination offset. For a page size of 10, the\n            first page would be at offset = 0, and the second page would\n            be at offset = 10.",
                         "schema": {"type": "number"}
                    },
                    {
                         "name": "limit",
                         "in": "query",
                         "required": true,
                         "description": "Limits the size of the page returned. For example, a page size\n            of 10 require limit = 10.",
                         "schema": {"type": "number"}
                    },
                    {
                         "name": "wikiId",
                         "in": "path",
                         "required": true,
                         "description": "The ID of the WikiPage.",
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "ownerId",
                         "in": "path",
                         "required": true,
                         "description": "The ID of the owning Entity.",
                         "schema": {"type": "string"}
                    }
               ],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/PaginatedResultsOfV2WikiHistorySnapshot"}}}
               }}
          }},
          "/repo/v1/entity/{ownerId}/wiki2/{wikiId}/attachmenthandles": {"get": {
               "tags": ["WikiPage Services 2"],
               "operationId": "get-/repo/v1/entity/{ownerId}/wiki2/{wikiId}/attachmenthandles",
               "parameters": [
                    {
                         "name": "ownerId",
                         "in": "path",
                         "required": true,
                         "description": "The ID of the owning Entity.",
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "wikiId",
                         "in": "path",
                         "required": true,
                         "description": "The ID of the WikiPage.",
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "wikiVersion",
                         "in": "query",
                         "required": false,
                         "schema": {"type": "number"}
                    }
               ],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.file.FileHandleResults"}}}
               }}
          }},
          "/repo/v1/access_requirement/{ownerId}/wiki2/{wikiId}/attachmenthandles": {"get": {
               "tags": ["WikiPage Services 2"],
               "operationId": "get-/repo/v1/access_requirement/{ownerId}/wiki2/{wikiId}/attachmenthandles",
               "parameters": [
                    {
                         "name": "ownerId",
                         "in": "path",
                         "required": true,
                         "description": "The ID of the owning Access Requirement.",
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "wikiId",
                         "in": "path",
                         "required": true,
                         "description": "The ID of the WikiPage.",
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "wikiVersion",
                         "in": "query",
                         "required": false,
                         "schema": {"type": "number"}
                    }
               ],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.file.FileHandleResults"}}}
               }}
          }},
          "/repo/v1/evaluation/{ownerId}/wiki2/{wikiId}/attachmenthandles": {"get": {
               "tags": ["WikiPage Services 2"],
               "operationId": "get-/repo/v1/evaluation/{ownerId}/wiki2/{wikiId}/attachmenthandles",
               "parameters": [
                    {
                         "name": "ownerId",
                         "in": "path",
                         "required": true,
                         "description": "The ID of the owning Evaluation.",
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "wikiId",
                         "in": "path",
                         "required": true,
                         "description": "The ID of the WikiPage.",
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "wikiVersion",
                         "in": "query",
                         "required": false,
                         "schema": {"type": "number"}
                    }
               ],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.file.FileHandleResults"}}}
               }}
          }},
          "/repo/v1/entity/{ownerId}/wiki2/{wikiId}/attachment": {"get": {
               "tags": ["WikiPage Services 2"],
               "operationId": "get-/repo/v1/entity/{ownerId}/wiki2/{wikiId}/attachment",
               "parameters": [
                    {
                         "name": "ownerId",
                         "in": "path",
                         "required": true,
                         "description": "The ID of the owning Entity",
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "wikiId",
                         "in": "path",
                         "required": true,
                         "description": "The ID of the WikiPage",
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "fileName",
                         "in": "query",
                         "required": true,
                         "description": "The name of the file to get. The file names can be found in\n            the FileHandles from the ,<a href=\"${GET.entity.ownerId.wiki.wikiId.attachmenthandles}\">,GET\n            /entity/{ownerId}/wiki/{wikiId}/attachmenthandles,<\/a>, method.",
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "redirect",
                         "in": "query",
                         "required": false,
                         "description": "When set to false, the URL will be returned as text/plain\n            instead of redirecting.",
                         "schema": {"type": "boolean"}
                    },
                    {
                         "name": "wikiVersion",
                         "in": "query",
                         "required": false,
                         "schema": {"type": "number"}
                    }
               ],
               "security": [{"bearerAuth": []}],
               "responses": {
                    "200": {
                         "description": "Status 200 will be returned if the 'redirect' boolean param is false",
                         "content": {"text/plain": {"schema": {}}}
                    },
                    "307": {"description": "Status 307 will be returned if the 'redirect' boolean param is true or null"}
               }
          }},
          "/repo/v1/access_requirement/{ownerId}/wiki2/{wikiId}/attachment": {"get": {
               "tags": ["WikiPage Services 2"],
               "operationId": "get-/repo/v1/access_requirement/{ownerId}/wiki2/{wikiId}/attachment",
               "parameters": [
                    {
                         "name": "ownerId",
                         "in": "path",
                         "required": true,
                         "description": "The ID of the owning Access Requirement",
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "wikiId",
                         "in": "path",
                         "required": true,
                         "description": "The ID of the WikiPage",
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "fileName",
                         "in": "query",
                         "required": true,
                         "description": "The name of the file to get. The file names can be found in\n            the FileHandles from the ,<a href=\"${GET.entity.ownerId.wiki.wikiId.attachmenthandles}\">,GET\n            /accessRequirement/{ownerId}/wiki/{wikiId}/attachmenthandles,<\/a>, method.",
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "redirect",
                         "in": "query",
                         "required": false,
                         "description": "When set to false, the URL will be returned as text/plain\n            instead of redirecting.",
                         "schema": {"type": "boolean"}
                    },
                    {
                         "name": "wikiVersion",
                         "in": "query",
                         "required": false,
                         "schema": {"type": "number"}
                    }
               ],
               "security": [{"bearerAuth": []}],
               "responses": {
                    "200": {
                         "description": "Status 200 will be returned if the 'redirect' boolean param is false",
                         "content": {"text/plain": {"schema": {}}}
                    },
                    "307": {"description": "Status 307 will be returned if the 'redirect' boolean param is true or null"}
               }
          }},
          "/repo/v1/evaluation/{ownerId}/wiki2/{wikiId}/attachment": {"get": {
               "tags": ["WikiPage Services 2"],
               "operationId": "get-/repo/v1/evaluation/{ownerId}/wiki2/{wikiId}/attachment",
               "parameters": [
                    {
                         "name": "ownerId",
                         "in": "path",
                         "required": true,
                         "description": "The ID of the owning Evaluation",
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "wikiId",
                         "in": "path",
                         "required": true,
                         "description": "The ID of the WikiPage",
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "fileName",
                         "in": "query",
                         "required": true,
                         "description": "The name of the file to get. The file names can be found in\n            the FileHandles from the ,<a href=\"${GET.evaluation.ownerId.wiki.wikiId.attachmenthandles}\">,GET /evaluation/{ownerId}/wiki/{wikiId}/attachmenthandles,<\/a>,\n            method.",
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "redirect",
                         "in": "query",
                         "required": false,
                         "description": "When set to false, the URL will be returned as text/plain\n            instead of redirecting.",
                         "schema": {"type": "boolean"}
                    },
                    {
                         "name": "wikiVersion",
                         "in": "query",
                         "required": false,
                         "schema": {"type": "number"}
                    }
               ],
               "security": [{"bearerAuth": []}],
               "responses": {
                    "200": {
                         "description": "Status 200 will be returned if the 'redirect' boolean param is false",
                         "content": {"text/plain": {"schema": {}}}
                    },
                    "307": {"description": "Status 307 will be returned if the 'redirect' boolean param is true or null"}
               }
          }},
          "/repo/v1/entity/{ownerId}/wiki2/{wikiId}/attachmentpreview": {"get": {
               "tags": ["WikiPage Services 2"],
               "operationId": "get-/repo/v1/entity/{ownerId}/wiki2/{wikiId}/attachmentpreview",
               "parameters": [
                    {
                         "name": "ownerId",
                         "in": "path",
                         "required": true,
                         "description": "The ID of the owning Entity",
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "wikiId",
                         "in": "path",
                         "required": true,
                         "description": "The ID of the WikiPage",
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "fileName",
                         "in": "query",
                         "required": true,
                         "description": "The name of the file to get. The file names can be found in\n            the FileHandles from the ,<a href=\"${GET.entity.ownerId.wiki.wikiId.attachmenthandles}\">,GET\n            /entity/{ownerId}/wiki/{wikiId}/attachmenthandles,<\/a>, method.",
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "redirect",
                         "in": "query",
                         "required": false,
                         "description": "When set to false, the URL will be returned as text/plain\n            instead of redirecting.",
                         "schema": {"type": "boolean"}
                    },
                    {
                         "name": "wikiVersion",
                         "in": "query",
                         "required": false,
                         "schema": {"type": "number"}
                    }
               ],
               "security": [{"bearerAuth": []}],
               "responses": {
                    "200": {
                         "description": "Status 200 will be returned if the 'redirect' boolean param is false",
                         "content": {"text/plain": {"schema": {}}}
                    },
                    "307": {"description": "Status 307 will be returned if the 'redirect' boolean param is true or null"}
               }
          }},
          "/repo/v1/access_requirement/{ownerId}/wiki2/{wikiId}/attachmentpreview": {"get": {
               "tags": ["WikiPage Services 2"],
               "operationId": "get-/repo/v1/access_requirement/{ownerId}/wiki2/{wikiId}/attachmentpreview",
               "parameters": [
                    {
                         "name": "ownerId",
                         "in": "path",
                         "required": true,
                         "description": "The ID of the owning Access Requirement",
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "wikiId",
                         "in": "path",
                         "required": true,
                         "description": "The ID of the WikiPage",
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "fileName",
                         "in": "query",
                         "required": true,
                         "description": "The name of the file to get. The file names can be found in\n            the FileHandles from the ,<a href=\"${GET.entity.ownerId.wiki.wikiId.attachmenthandles}\">,GET\n            /accessRequirement/{ownerId}/wiki/{wikiId}/attachmenthandles,<\/a>, method.",
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "redirect",
                         "in": "query",
                         "required": false,
                         "description": "When set to false, the URL will be returned as text/plain\n            instead of redirecting.",
                         "schema": {"type": "boolean"}
                    },
                    {
                         "name": "wikiVersion",
                         "in": "query",
                         "required": false,
                         "schema": {"type": "number"}
                    }
               ],
               "security": [{"bearerAuth": []}],
               "responses": {
                    "200": {
                         "description": "Status 200 will be returned if the 'redirect' boolean param is false",
                         "content": {"text/plain": {"schema": {}}}
                    },
                    "307": {"description": "Status 307 will be returned if the 'redirect' boolean param is true or null"}
               }
          }},
          "/repo/v1/evaluation/{ownerId}/wiki2/{wikiId}/attachmentpreview": {"get": {
               "tags": ["WikiPage Services 2"],
               "operationId": "get-/repo/v1/evaluation/{ownerId}/wiki2/{wikiId}/attachmentpreview",
               "parameters": [
                    {
                         "name": "ownerId",
                         "in": "path",
                         "required": true,
                         "description": "The ID of the owning Evaluation",
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "wikiId",
                         "in": "path",
                         "required": true,
                         "description": "The ID of the WikiPage",
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "fileName",
                         "in": "query",
                         "required": true,
                         "description": "The name of the file to get. The file names can be found in\n            the FileHandles from the ,<a href=\"${GET.evaluation.ownerId.wiki.wikiId.attachmenthandles}\">,GET /evaluation/{ownerId}/wiki/{wikiId}/attachmenthandles,<\/a>,\n            method.",
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "redirect",
                         "in": "query",
                         "required": false,
                         "description": "When set to false, the URL will be returned as text/plain\n            instead of redirecting.",
                         "schema": {"type": "boolean"}
                    },
                    {
                         "name": "wikiVersion",
                         "in": "query",
                         "required": false,
                         "schema": {"type": "number"}
                    }
               ],
               "security": [{"bearerAuth": []}],
               "responses": {
                    "200": {
                         "description": "Status 200 will be returned if the 'redirect' boolean param is false",
                         "content": {"text/plain": {"schema": {}}}
                    },
                    "307": {"description": "Status 307 will be returned if the 'redirect' boolean param is true or null"}
               }
          }},
          "/repo/v1/entity/{ownerId}/wiki2/{wikiId}/markdown": {"get": {
               "tags": ["WikiPage Services 2"],
               "operationId": "get-/repo/v1/entity/{ownerId}/wiki2/{wikiId}/markdown",
               "parameters": [
                    {
                         "name": "ownerId",
                         "in": "path",
                         "required": true,
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "wikiId",
                         "in": "path",
                         "required": true,
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "redirect",
                         "in": "query",
                         "required": false,
                         "schema": {"type": "boolean"}
                    },
                    {
                         "name": "wikiVersion",
                         "in": "query",
                         "required": false,
                         "schema": {"type": "number"}
                    }
               ],
               "security": [{"bearerAuth": []}],
               "responses": {
                    "200": {
                         "description": "Status 200 will be returned if the 'redirect' boolean param is false",
                         "content": {"text/plain": {"schema": {}}}
                    },
                    "307": {"description": "Status 307 will be returned if the 'redirect' boolean param is true or null"}
               }
          }},
          "/repo/v1/access_requirement/{ownerId}/wiki2/{wikiId}/markdown": {"get": {
               "tags": ["WikiPage Services 2"],
               "operationId": "get-/repo/v1/access_requirement/{ownerId}/wiki2/{wikiId}/markdown",
               "parameters": [
                    {
                         "name": "ownerId",
                         "in": "path",
                         "required": true,
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "wikiId",
                         "in": "path",
                         "required": true,
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "redirect",
                         "in": "query",
                         "required": false,
                         "schema": {"type": "boolean"}
                    },
                    {
                         "name": "wikiVersion",
                         "in": "query",
                         "required": false,
                         "schema": {"type": "number"}
                    }
               ],
               "security": [{"bearerAuth": []}],
               "responses": {
                    "200": {
                         "description": "Status 200 will be returned if the 'redirect' boolean param is false",
                         "content": {"text/plain": {"schema": {}}}
                    },
                    "307": {"description": "Status 307 will be returned if the 'redirect' boolean param is true or null"}
               }
          }},
          "/repo/v1/evaluation/{ownerId}/wiki2/{wikiId}/markdown": {"get": {
               "tags": ["WikiPage Services 2"],
               "operationId": "get-/repo/v1/evaluation/{ownerId}/wiki2/{wikiId}/markdown",
               "parameters": [
                    {
                         "name": "ownerId",
                         "in": "path",
                         "required": true,
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "wikiId",
                         "in": "path",
                         "required": true,
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "redirect",
                         "in": "query",
                         "required": false,
                         "schema": {"type": "boolean"}
                    },
                    {
                         "name": "wikiVersion",
                         "in": "query",
                         "required": false,
                         "schema": {"type": "number"}
                    }
               ],
               "security": [{"bearerAuth": []}],
               "responses": {
                    "200": {
                         "description": "Status 200 will be returned if the 'redirect' boolean param is false",
                         "content": {"text/plain": {"schema": {}}}
                    },
                    "307": {"description": "Status 307 will be returned if the 'redirect' boolean param is true or null"}
               }
          }},
          "/repo/v1/projectSettings/{id}": {
               "get": {
                    "tags": ["Project Settings Services"],
                    "operationId": "get-/repo/v1/projectSettings/{id}",
                    "parameters": [{
                         "name": "id",
                         "in": "path",
                         "required": true,
                         "description": "the ID of the ,<a href=\"${org.sagebionetworks.repo.model.project.ProjectSetting}\">,ProjectSetting,<\/a>",
                         "schema": {"type": "string"}
                    }],
                    "security": [{"bearerAuth": []}],
                    "responses": {"200": {
                         "description": "the ,<a href=\"${org.sagebionetworks.repo.model.project.ProjectSetting}\">,ProjectSetting,<\/a>, with the corresponding ID, if it exists.",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.project.ProjectSetting"}}}
                    }}
               },
               "delete": {
                    "tags": ["Project Settings Services"],
                    "operationId": "delete-/repo/v1/projectSettings/{id}",
                    "parameters": [{
                         "name": "id",
                         "in": "path",
                         "required": true,
                         "description": "The ID of the ,<a href=\"${org.sagebionetworks.repo.model.project.ProjectSetting}\">,ProjectSetting,<\/a>,. This is not the ID of the project.",
                         "schema": {"type": "string"}
                    }],
                    "security": [{"bearerAuth": []}],
                    "responses": {"204": {"description": "Void"}}
               }
          },
          "/repo/v1/projectSettings/{projectId}/type/{type}": {"get": {
               "tags": ["Project Settings Services"],
               "operationId": "get-/repo/v1/projectSettings/{projectId}/type/{type}",
               "parameters": [
                    {
                         "name": "projectId",
                         "in": "path",
                         "required": true,
                         "description": "the ID of the project",
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "type",
                         "in": "path",
                         "required": true,
                         "description": "The ,<a href=\"${org.sagebionetworks.repo.model.project.ProjectSettingsType}\">,ProjectSettingsType,<\/a>, to get.",
                         "schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.project.ProjectSettingsType"}
                    }
               ],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.project.ProjectSetting"}}}
               }}
          }},
          "/repo/v1/projectSettings": {
               "post": {
                    "tags": ["Project Settings Services"],
                    "operationId": "post-/repo/v1/projectSettings",
                    "parameters": [],
                    "requestBody": {
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.project.ProjectSetting"}}},
                         "required": true
                    },
                    "security": [{"bearerAuth": []}],
                    "responses": {"201": {
                         "description": "The created ,<a href=\"${org.sagebionetworks.repo.model.project.ProjectSetting}\">,ProjectSetting,<\/a>,.",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.project.ProjectSetting"}}}
                    }}
               },
               "put": {
                    "tags": ["Project Settings Services"],
                    "operationId": "put-/repo/v1/projectSettings",
                    "parameters": [],
                    "requestBody": {
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.project.ProjectSetting"}}},
                         "required": true
                    },
                    "security": [{"bearerAuth": []}],
                    "responses": {"200": {"description": "Void"}}
               }
          },
          "/repo/v1/storageLocation": {"post": {
               "tags": ["Project Settings Services"],
               "operationId": "post-/repo/v1/storageLocation",
               "parameters": [],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.project.StorageLocationSetting"}}},
                    "required": true
               },
               "security": [{"bearerAuth": []}],
               "responses": {"201": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.project.StorageLocationSetting"}}}
               }}
          }},
          "/repo/v1/storageLocation/{id}": {"get": {
               "tags": ["Project Settings Services"],
               "operationId": "get-/repo/v1/storageLocation/{id}",
               "parameters": [{
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "description": "the ID of the storage location setting.",
                    "schema": {"type": "number"}
               }],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.project.StorageLocationSetting"}}}
               }}
          }},
          "/repo/v1/verificationSubmission": {
               "post": {
                    "tags": ["Verification Services"],
                    "operationId": "post-/repo/v1/verificationSubmission",
                    "parameters": [{
                         "name": "notificationUnsubscribeEndpoint",
                         "in": "query",
                         "required": false,
                         "schema": {"type": "string"}
                    }],
                    "requestBody": {
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.verification.VerificationSubmission"}}},
                         "required": true
                    },
                    "security": [{"bearerAuth": []}],
                    "responses": {"201": {
                         "description": "Auto-generated description",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.verification.VerificationSubmission"}}}
                    }}
               },
               "get": {
                    "tags": ["Verification Services"],
                    "operationId": "get-/repo/v1/verificationSubmission",
                    "parameters": [
                         {
                              "name": "verifiedUserId",
                              "in": "query",
                              "required": false,
                              "description": "filter on the user requesting verification (optional)",
                              "schema": {"type": "number"}
                         },
                         {
                              "name": "currentVerificationState",
                              "in": "query",
                              "required": false,
                              "description": "filter on the state of the verification submission (optional)",
                              "schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.verification.VerificationStateEnum"}
                         },
                         {
                              "name": "limit",
                              "in": "query",
                              "required": false,
                              "description": "page size pagination parameter (optional)",
                              "schema": {"type": "number"}
                         },
                         {
                              "name": "offset",
                              "in": "query",
                              "required": false,
                              "description": "page start pagination parameter (zero offset, optional)",
                              "schema": {"type": "number"}
                         }
                    ],
                    "security": [{"bearerAuth": []}],
                    "responses": {"200": {
                         "description": "Auto-generated description",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.verification.VerificationPagedResults"}}}
                    }}
               }
          },
          "/repo/v1/verificationSubmission/{id}/state": {"post": {
               "tags": ["Verification Services"],
               "operationId": "post-/repo/v1/verificationSubmission/{id}/state",
               "parameters": [
                    {
                         "name": "id",
                         "in": "path",
                         "required": true,
                         "description": "the ID of the verification submission",
                         "schema": {"type": "number"}
                    },
                    {
                         "name": "notificationUnsubscribeEndpoint",
                         "in": "query",
                         "required": false,
                         "description": "the portal prefix for one-click email unsubscription",
                         "schema": {"type": "string"}
                    }
               ],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.verification.VerificationState"}}},
                    "required": true
               },
               "security": [{"bearerAuth": []}],
               "responses": {"201": {"description": "Void"}}
          }},
          "/repo/v1/verificationSubmission/{id}": {"delete": {
               "tags": ["Verification Services"],
               "operationId": "delete-/repo/v1/verificationSubmission/{id}",
               "parameters": [{
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {"type": "number"}
               }],
               "security": [{"bearerAuth": []}],
               "responses": {"204": {"description": "Void"}}
          }},
          "/repo/v1/form/group": {"post": {
               "tags": ["Form Services"],
               "operationId": "post-/repo/v1/form/group",
               "parameters": [{
                    "name": "name",
                    "in": "query",
                    "required": true,
                    "description": "A globally unique name for the group. Required. Between 3 and\n               256 characters.",
                    "schema": {"type": "string"}
               }],
               "security": [{"bearerAuth": []}],
               "responses": {"201": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.form.FormGroup"}}}
               }}
          }},
          "/repo/v1/form/group/{id}": {"get": {
               "tags": ["Form Services"],
               "operationId": "get-/repo/v1/form/group/{id}",
               "parameters": [{
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {"type": "string"}
               }],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.form.FormGroup"}}}
               }}
          }},
          "/repo/v1/form/group/{id}/acl": {
               "get": {
                    "tags": ["Form Services"],
                    "operationId": "get-/repo/v1/form/group/{id}/acl",
                    "parameters": [{
                         "name": "id",
                         "in": "path",
                         "required": true,
                         "description": "The identifier of the FormGroup.",
                         "schema": {"type": "string"}
                    }],
                    "security": [{"bearerAuth": []}],
                    "responses": {"200": {
                         "description": "Auto-generated description",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.AccessControlList"}}}
                    }}
               },
               "put": {
                    "tags": ["Form Services"],
                    "operationId": "put-/repo/v1/form/group/{id}/acl",
                    "parameters": [{
                         "name": "id",
                         "in": "path",
                         "required": true,
                         "description": "The identifier of the FormGroup.",
                         "schema": {"type": "string"}
                    }],
                    "requestBody": {
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.AccessControlList"}}},
                         "required": true
                    },
                    "security": [{"bearerAuth": []}],
                    "responses": {"200": {
                         "description": "Auto-generated description",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.AccessControlList"}}}
                    }}
               }
          },
          "/repo/v1/form/data": {"post": {
               "tags": ["Form Services"],
               "operationId": "post-/repo/v1/form/data",
               "parameters": [{
                    "name": "groupId",
                    "in": "query",
                    "required": true,
                    "description": "The identifier of the group that manages this data.\n                         Required.",
                    "schema": {"type": "string"}
               }],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.form.FormChangeRequest"}}},
                    "required": true
               },
               "security": [{"bearerAuth": []}],
               "responses": {"201": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.form.FormData"}}}
               }}
          }},
          "/repo/v1/form/data/{id}": {
               "put": {
                    "tags": ["Form Services"],
                    "operationId": "put-/repo/v1/form/data/{id}",
                    "parameters": [{
                         "name": "id",
                         "in": "path",
                         "required": true,
                         "description": "The identifier of the FormData to update.",
                         "schema": {"type": "string"}
                    }],
                    "requestBody": {
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.form.FormChangeRequest"}}},
                         "required": true
                    },
                    "security": [{"bearerAuth": []}],
                    "responses": {"200": {
                         "description": "Auto-generated description",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.form.FormData"}}}
                    }}
               },
               "delete": {
                    "tags": ["Form Services"],
                    "operationId": "delete-/repo/v1/form/data/{id}",
                    "parameters": [{
                         "name": "id",
                         "in": "path",
                         "required": true,
                         "description": "Id of the FormData object to delete",
                         "schema": {"type": "string"}
                    }],
                    "security": [{"bearerAuth": []}],
                    "responses": {"200": {"description": "Void"}}
               }
          },
          "/repo/v1/form/data/{id}/submit": {"post": {
               "tags": ["Form Services"],
               "operationId": "post-/repo/v1/form/data/{id}/submit",
               "parameters": [{
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {"type": "string"}
               }],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.form.FormData"}}}
               }}
          }},
          "/repo/v1/form/data/list": {"post": {
               "tags": ["Form Services"],
               "operationId": "post-/repo/v1/form/data/list",
               "parameters": [],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.form.ListRequest"}}},
                    "required": true
               },
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.form.ListResponse"}}}
               }}
          }},
          "/repo/v1/form/data/list/reviewer": {"post": {
               "tags": ["Form Services"],
               "operationId": "post-/repo/v1/form/data/list/reviewer",
               "parameters": [],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.form.ListRequest"}}},
                    "required": true
               },
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.form.ListResponse"}}}
               }}
          }},
          "/repo/v1/form/data/{id}/accept": {"put": {
               "tags": ["Form Services"],
               "operationId": "put-/repo/v1/form/data/{id}/accept",
               "parameters": [{
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "description": "Identifier of the FormData to accept.",
                    "schema": {"type": "string"}
               }],
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.form.FormData"}}}
               }}
          }},
          "/repo/v1/form/data/{id}/reject": {"put": {
               "tags": ["Form Services"],
               "operationId": "put-/repo/v1/form/data/{id}/reject",
               "parameters": [{
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "description": "Identifier of the FormData to accept.",
                    "schema": {"type": "string"}
               }],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.form.FormRejection"}}},
                    "required": true
               },
               "security": [{"bearerAuth": []}],
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.form.FormData"}}}
               }}
          }},
          "/repo/v1/principal/available": {"post": {
               "tags": ["Principal Services"],
               "operationId": "post-/repo/v1/principal/available",
               "parameters": [],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.principal.AliasCheckRequest"}}},
                    "required": true
               },
               "responses": {"201": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.principal.AliasCheckResponse"}}}
               }}
          }},
          "/repo/v1/account/emailValidation": {"post": {
               "tags": ["Principal Services"],
               "operationId": "post-/repo/v1/account/emailValidation",
               "parameters": [{
                    "name": "portalEndpoint",
                    "in": "query",
                    "required": true,
                    "description": "the beginning of the URL included in the email verification message. When concatenated with\n        a list of ampersand (,&,) separated request parameters, must become a well formed URL. The concatenated\n        string must be included with the ,<a href=\"${POST.account2}\">,POST /account,<\/a>, request.",
                    "schema": {"type": "string"}
               }],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.auth.NewUser"}}},
                    "required": true
               },
               "responses": {"201": {"description": "Void"}}
          }},
          "/repo/v1/account2": {"post": {
               "tags": ["Principal Services"],
               "operationId": "post-/repo/v1/account2",
               "parameters": [],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.principal.AccountSetupInfo"}}},
                    "required": true
               },
               "responses": {"201": {
                    "description": "an access token, allowing the client to begin making authenticated requests",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.auth.LoginResponse"}}}
               }}
          }},
          "/repo/v1/account/{id}/emailValidation": {"post": {
               "tags": ["Principal Services"],
               "operationId": "post-/repo/v1/account/{id}/emailValidation",
               "parameters": [
                    {
                         "name": "id",
                         "in": "path",
                         "required": true,
                         "description": "the ID of the user account to which the email address is to be added. Must match the ID of the user\n        making the request.",
                         "schema": {"type": "string"}
                    },
                    {
                         "name": "portalEndpoint",
                         "in": "query",
                         "required": true,
                         "description": "the beginning of the URL included in the email verification message. When concatenated with\n        a list of ampersand (,&,) separated request parameters, must become a well formed URL. The concatenated\n        string must be included with the ,<a href=\"${POST.email}\">,POST /email,<\/a>, request.",
                         "schema": {"type": "string"}
                    }
               ],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.auth.Username"}}},
                    "required": true
               },
               "security": [{"bearerAuth": []}],
               "responses": {"201": {"description": "Void"}}
          }},
          "/repo/v1/email": {
               "post": {
                    "tags": ["Principal Services"],
                    "operationId": "post-/repo/v1/email",
                    "parameters": [{
                         "name": "setAsNotificationEmail",
                         "in": "query",
                         "required": false,
                         "description": "if true then the newly added email address becomes the address\n used by the system for sending messages to the user.",
                         "schema": {"type": "boolean"}
                    }],
                    "requestBody": {
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.principal.EmailValidationSignedToken"}}},
                         "required": true
                    },
                    "security": [{"bearerAuth": []}],
                    "responses": {"201": {"description": "Void"}}
               },
               "delete": {
                    "tags": ["Principal Services"],
                    "operationId": "delete-/repo/v1/email",
                    "parameters": [{
                         "name": "email",
                         "in": "query",
                         "required": true,
                         "description": "the email address to remove",
                         "schema": {"type": "string"}
                    }],
                    "security": [{"bearerAuth": []}],
                    "responses": {"200": {"description": "Void"}}
               }
          },
          "/repo/v1/notificationEmail": {
               "put": {
                    "tags": ["Principal Services"],
                    "operationId": "put-/repo/v1/notificationEmail",
                    "parameters": [],
                    "requestBody": {
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.auth.Username"}}},
                         "required": true
                    },
                    "security": [{"bearerAuth": []}],
                    "responses": {"200": {"description": "Void"}}
               },
               "get": {
                    "tags": ["Principal Services"],
                    "operationId": "get-/repo/v1/notificationEmail",
                    "parameters": [],
                    "security": [{"bearerAuth": []}],
                    "responses": {"200": {
                         "description": "the email address to use for notifications",
                         "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.principal.NotificationEmail"}}}
                    }}
               }
          },
          "/repo/v1/principal/alias": {"post": {
               "tags": ["Principal Services"],
               "operationId": "post-/repo/v1/principal/alias",
               "parameters": [],
               "requestBody": {
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.principal.PrincipalAliasRequest"}}},
                    "required": true
               },
               "responses": {"200": {
                    "description": "Auto-generated description",
                    "content": {"application/json": {"schema": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.principal.PrincipalAliasResponse"}}}
               }}
          }}
     },
     "components": {
          "schemas": {
               "org.sagebionetworks.repo.model.RestrictionInformationRequest": {
                    "type": "object",
                    "properties": {
                         "restrictableObjectType": {"type": "string"},
                         "objectId": {"type": "string"}
                    },
                    "description": "A request to retrieve the information about restriction level on a restrict-able object."
               },
               "org.sagebionetworks.repo.model.asynch.AsynchJobState": {
                    "type": "string",
                    "enum": [
                         "PROCESSING",
                         "FAILED",
                         "COMPLETE"
                    ]
               },
               "org.sagebionetworks.repo.model.principal.EmailValidationSignedToken": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.principal.EmailValidationSignedToken"]
                         },
                         "hmac": {"type": "string"},
                         "version": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "expiresOn": {"type": "string"},
                         "createdOn": {"type": "string"},
                         "email": {"type": "string"},
                         "userId": {"type": "string"}
                    },
                    "description": "Signed token containing the the information necessary to create a new account or add an email address to an existing account.",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.migration.MigrationTypeNames": {
                    "type": "object",
                    "properties": {"list": {
                         "type": "array",
                         "items": {"type": "string"}
                    }},
                    "description": "List of MigrationType names"
               },
               "org.sagebionetworks.repo.model.table.QueryResultBundle": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.table.QueryResultBundle"]
                         },
                         "queryResult": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.QueryResult",
                              "description": "A page of query result."
                         },
                         "queryCount": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "selectColumns": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.SelectColumn",
                                   "description": "A column model contains the metadata of a single column of a TableEntity"
                              },
                              "description": "The list of SelectColumns from the select clause. Use mask = 0x4 to include in the bundle."
                         },
                         "maxRowsPerPage": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "columnModels": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.ColumnModel",
                                   "description": "A column model contains the metadata of a single column of a table or view."
                              },
                              "description": "The list of ColumnModels for the table. Use mask = 0x10 to include in the bundle."
                         },
                         "facets": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.FacetColumnResult",
                                   "description": "Resulting information about a faceted column"
                              },
                              "description": "The list of facets for the search results"
                         },
                         "sumFileSizes": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.SumFileSizes",
                              "description": "The sum of the file size for all files in the given view query. Use mask = 0x40 to include in the bundle."
                         },
                         "lastUpdatedOn": {"type": "string"},
                         "combinedSql": {"type": "string"},
                         "actionsRequired": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.download.ActionRequiredCount",
                                   "description": "Represents a single action that the user will need to take in order to download one or more files."
                              },
                              "description": "The first 50 actions required to download the files that are part of the query. Use mask = 0x200 to include them in the bundle."
                         }
                    },
                    "description": "A bundle of information about a query result.",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.oauth.TokenTypeHint": {
                    "type": "string",
                    "enum": [
                         "access_token",
                         "refresh_token"
                    ]
               },
               "org.sagebionetworks.repo.model.message.multipart.Attachment": {
                    "type": "object",
                    "properties": {
                         "content": {"type": "string"},
                         "content_id": {"type": "string"},
                         "url": {"type": "string"},
                         "file_name": {"type": "string"},
                         "content_type": {"type": "string"},
                         "size": {"type": "string"},
                         "disposition": {"type": "string"}
                    },
                    "description": "Multipart Message Attachment"
               },
               "org.sagebionetworks.repo.model.doi.v2.DoiResourceType": {
                    "type": "object",
                    "properties": {"resourceTypeGeneral": {"type": "string"}},
                    "description": "Required. Describes the type of media that the DOI Metadata refers to."
               },
               "org.sagebionetworks.repo.model.attachment.PresignedUrl": {
                    "type": "object",
                    "properties": {
                         "tokenID": {"type": "string"},
                         "presignedUrl": {"type": "string"},
                         "status": {"type": "string"}
                    },
                    "description": "This object is deprecated and will be removed in future versions of Synapse."
               },
               "org.sagebionetworks.repo.model.table.TableRowChange": {
                    "type": "object",
                    "properties": {
                         "id": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "tableId": {"type": "string"},
                         "rowVersion": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "etag": {"type": "string"},
                         "createdOn": {"type": "string"},
                         "createdBy": {"type": "string"},
                         "bucket": {"type": "string"},
                         "keyNew": {"type": "string"},
                         "rowCount": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "changeType": {"type": "string"},
                         "transactionId": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "hasFileRefs": {"type": "boolean"},
                         "isSearchEnabled": {"type": "boolean"}
                    },
                    "description": "Metadata about Table row change set."
               },
               "org.sagebionetworks.repo.model.dataaccess.SubmissionSearchSort": {
                    "type": "object",
                    "properties": {
                         "field": {"type": "string"},
                         "direction": {"type": "string"}
                    },
                    "description": "Identifies both the field and direction for a single sort operation"
               },
               "org.sagebionetworks.repo.model.file.MultipartRequest": {
                    "type": "object",
                    "properties": {
                         "concreteType": {"type": "string"},
                         "partSizeBytes": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "fileName": {"type": "string"},
                         "storageLocationId": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "generatePreview": {"type": "boolean"}
                    },
                    "description": "Interface to describe a multi-part request. If the concrete type is not supplied will default to a <a href=\"${org.sagebionetworks.repo.model.file.MultipartUploadRequest}\">MultipartUploadRequest<\/a>",
                    "oneOf": [
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.file.MultipartUploadCopyRequest"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.file.MultipartUploadRequest"}
                    ],
                    "required": ["concreteType"],
                    "discriminator": {"propertyName": "concreteType"}
               },
               "org.sagebionetworks.evaluation.model.SubmissionStatusEnum": {
                    "type": "string",
                    "enum": [
                         "OPEN",
                         "CLOSED",
                         "SCORED",
                         "INVALID",
                         "VALIDATED",
                         "EVALUATION_IN_PROGRESS",
                         "RECEIVED",
                         "REJECTED",
                         "ACCEPTED"
                    ]
               },
               "org.sagebionetworks.repo.model.migration.AsyncMigrationTypeCountsRequest": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.migration.AsyncMigrationTypeCountsRequest"]
                         },
                         "types": {
                              "type": "array",
                              "items": {"type": "string"}
                         }
                    },
                    "description": "Request count for migration types",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.feature.Feature": {
                    "type": "string",
                    "enum": [
                         "DATA_ACCESS_NOTIFICATIONS",
                         "DATA_ACCESS_AUTO_REVOCATION",
                         "MULTIPART_AUTO_CLEANUP",
                         "DATA_DOWNLOAD_THROUGH_CLOUDFRONT",
                         "CHANGE_PASSWORD_2FA_CHECK_BYPASS",
                         "USE_NEW_ASYNC_GOOGLE_MULTIPART_UPLOAD"
                    ]
               },
               "org.sagebionetworks.repo.model.dataaccess.AccessApprovalNotificationResponse": {
                    "type": "object",
                    "properties": {
                         "requirementId": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "results": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.dataaccess.AccessApprovalNotification",
                                   "description": "Information about the a notification for an access approval."
                              },
                              "description": "The list of notifications, sorted by the recipient and the sentOn date."
                         }
                    },
                    "description": "Contains the response for an <a href=\"${org.sagebionetworks.repo.model.dataaccess.AccessApprovalNotificationRequest}\">AccessApprovalNotificationRequest<\/a>."
               },
               "org.sagebionetworks.repo.model.file.FileHandleRestoreResult": {
                    "type": "object",
                    "properties": {
                         "fileHandleId": {"type": "string"},
                         "status": {"type": "string"},
                         "statusMessage": {"type": "string"}
                    },
                    "description": "Result of a single file handle restore operation."
               },
               "org.sagebionetworks.repo.model.TeamMember": {
                    "type": "object",
                    "properties": {
                         "teamId": {"type": "string"},
                         "member": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.UserGroupHeader",
                              "description": "JSON schema for UserHeader POJO"
                         },
                         "isAdmin": {"type": "boolean"}
                    },
                    "description": "JSON schema for Team Member, which bundles UserGroupHeader and isAdmin"
               },
               "org.sagebionetworks.repo.model.oauth.JsonWebKeySet": {
                    "type": "object",
                    "properties": {"keys": {
                         "type": "array",
                         "items": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.oauth.JsonWebKey",
                              "description": "Public key used to verify JSON Web Token signatures"
                         }
                    }},
                    "description": "List of JSON Web Keys"
               },
               "org.sagebionetworks.repo.model.table.ViewScope": {
                    "type": "object",
                    "properties": {
                         "viewTypeMask": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "scope": {
                              "type": "array",
                              "items": {"type": "string"},
                              "description": "List of parent IDs that define a view scope. For an entityview the ids should point to entities, for a submissionview the ids should point to evaluation ids"
                         },
                         "viewEntityType": {"type": "string"},
                         "viewType": {"type": "string"}
                    },
                    "description": "List of parent IDs that define a view scope."
               },
               "org.sagebionetworks.repo.model.table.SumFileSizes": {
                    "type": "object",
                    "properties": {
                         "sumFileSizesBytes": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "greaterThan": {"type": "boolean"}
                    },
                    "description": "The sum of the file size for all files in the given view query. Use mask = 0x40 to include in the bundle."
               },
               "org.sagebionetworks.repo.model.download.DownloadListPackageRequest": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.download.DownloadListPackageRequest"]
                         },
                         "zipFileName": {"type": "string"},
                         "includeManifest": {"type": "boolean"},
                         "csvTableDescriptor": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.CsvTableDescriptor",
                              "description": "The description of a csv for upload or download."
                         }
                    },
                    "description": "Request to package files from a user's download list.",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.quiz.Quiz": {
                    "type": "object",
                    "properties": {
                         "id": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "header": {"type": "string"},
                         "questions": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.quiz.Question",
                                   "description": "a single question in a Quiz"
                              },
                              "description": "The questions in the Quiz"
                         }
                    },
                    "description": "Schema for a quiz and, optionally, its answer key"
               },
               "org.sagebionetworks.repo.model.auth.TwoFactorAuthResetRequest": {
                    "type": "object",
                    "properties": {
                         "userId": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "twoFaResetEndpoint": {"type": "string"},
                         "twoFaToken": {"type": "string"},
                         "password": {"type": "string"}
                    },
                    "description": "Used to request a two fa reset token to be sent by email, can be requested with a twoFaToken returned by an authentication attempt."
               },
               "org.sagebionetworks.repo.model.table.SparseRowDto": {
                    "type": "object",
                    "properties": {
                         "etag": {"type": "string"},
                         "rowId": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "versionNumber": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "values": {
                              "type": "object",
                              "description": "The values for columns of this row as a map. The key is the columnId and value is the cell value",
                              "additionalProperties": {"type": "string"}
                         }
                    },
                    "description": "Represents a single partial row of a TableEntity"
               },
               "org.sagebionetworks.repo.model.EntityGroup": {
                    "type": "object",
                    "properties": {
                         "name": {"type": "string"},
                         "description": {"type": "string"},
                         "records": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.EntityGroupRecord",
                                   "description": "JSON schema for Entity Group Record POJO"
                              },
                              "description": "The set of EntityGroupRecords for this group."
                         }
                    },
                    "description": "JSON schema for an Entity Group POJO"
               },
               "org.sagebionetworks.repo.model.auth.PasswordResetSignedToken": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.auth.PasswordResetSignedToken"]
                         },
                         "hmac": {"type": "string"},
                         "version": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "expiresOn": {"type": "string"},
                         "createdOn": {"type": "string"},
                         "userId": {"type": "string"},
                         "validity": {"type": "string"}
                    },
                    "description": "Signed token containing the the information necessary to reset the password for a user.",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.oauth.OAuthResponseType": {
                    "type": "string",
                    "enum": ["code"]
               },
               "org.sagebionetworks.repo.model.file.ZipFileFormat": {
                    "type": "string",
                    "enum": [
                         "CommandLineCache",
                         "Flat"
                    ]
               },
               "org.sagebionetworks.repo.model.migration.MigrationTypeChecksum": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.migration.MigrationTypeChecksum"]
                         },
                         "migrationType": {"type": "string"},
                         "type": {"type": "string"},
                         "checksum": {"type": "string"}
                    },
                    "description": "Table checksum (CHECKSUM TABLE) for migration type 'type'",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.schema.CreateSchemaResponse": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.schema.CreateSchemaResponse"]
                         },
                         "newVersionInfo": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.schema.JsonSchemaVersionInfo",
                              "description": "Information about a single version of a JSON schema."
                         },
                         "validationSchema": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.schema.JsonSchema",
                              "description": "The JSON schema is defined by: <a href=\"https://json-schema.org/\">json-schema.org<\/a>, specifically draft-07.  Only features listed here are currently supported."
                         }
                    },
                    "description": "The response of a create JsonSchema request.",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.table.View": {
                    "type": "object",
                    "properties": {
                         "name": {"type": "string"},
                         "description": {"type": "string"},
                         "id": {"type": "string"},
                         "etag": {"type": "string"},
                         "createdOn": {"type": "string"},
                         "modifiedOn": {"type": "string"},
                         "createdBy": {"type": "string"},
                         "modifiedBy": {"type": "string"},
                         "parentId": {"type": "string"},
                         "concreteType": {"type": "string"},
                         "versionNumber": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "versionLabel": {"type": "string"},
                         "versionComment": {"type": "string"},
                         "isLatestVersion": {"type": "boolean"},
                         "columnIds": {
                              "type": "array",
                              "items": {"type": "string"},
                              "description": "The list of ColumnModel IDs that define the schema of the object."
                         },
                         "isSearchEnabled": {"type": "boolean"}
                    },
                    "description": "A view of objects within a scope",
                    "oneOf": [
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.SubmissionView"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.DatasetCollection"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.EntityView"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.Dataset"}
                    ],
                    "required": ["concreteType"],
                    "discriminator": {"propertyName": "concreteType"}
               },
               "org.sagebionetworks.repo.model.TeamHeader": {
                    "type": "object",
                    "properties": {
                         "id": {"type": "string"},
                         "name": {"type": "string"}
                    },
                    "description": "JSON schema for TeamHeader POJO"
               },
               "org.sagebionetworks.repo.model.Versionable": {
                    "type": "object",
                    "properties": {"versionNumber": {
                         "type": "integer",
                         "format": "int32"
                    }},
                    "description": "JSON schema for Versionable interface",
                    "oneOf": [
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.DatasetCollection"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.EntityView"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.VirtualTable"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.SelfSignAccessRequirement"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.ACTAccessRequirement"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.FileEntity"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.TableEntity"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.PostMessageContentAccessRequirement"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.SubmissionView"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.TermsOfUseAccessRequirement"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.ManagedACTAccessRequirement"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.MaterializedView"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.LockAccessRequirement"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.Dataset"}
                    ],
                    "discriminator": {"propertyName": "concreteType"}
               },
               "org.sagebionetworks.repo.model.table.CsvTableDescriptor": {
                    "type": "object",
                    "properties": {
                         "separator": {"type": "string"},
                         "quoteCharacter": {"type": "string"},
                         "escapeCharacter": {"type": "string"},
                         "lineEnd": {"type": "string"},
                         "isFirstLineHeader": {"type": "boolean"}
                    },
                    "description": "The description of a csv for upload or download."
               },
               "org.sagebionetworks.repo.model.DataTypeResponse": {
                    "type": "object",
                    "properties": {
                         "objectId": {"type": "string"},
                         "objectType": {"type": "string"},
                         "dataType": {"type": "string"},
                         "updatedBy": {"type": "string"},
                         "updatedOn": {"type": "string"}
                    },
                    "description": "Response for an Object's DataType."
               },
               "org.sagebionetworks.repo.model.registry.RenameData": {
                    "type": "object",
                    "properties": {
                         "entityTypeName": {"type": "string"},
                         "oldFieldName": {"type": "string"},
                         "newFieldName": {"type": "string"}
                    },
                    "description": "Rename datat"
               },
               "org.sagebionetworks.repo.model.dataaccess.BasicAccessRequirementStatus": {
                    "type": "object",
                    "properties": {
                         "accessRequirementId": {"type": "string"},
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.dataaccess.BasicAccessRequirementStatus"]
                         },
                         "isApproved": {"type": "boolean"},
                         "expiredOn": {"type": "string"}
                    },
                    "description": "The status of a user meeting a TermsOfUseAccessRequirement.",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.registry.EntityTypeMigrationSpec": {
                    "type": "object",
                    "properties": {
                         "entityType": {"type": "string"},
                         "fields": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.registry.FieldMigrationSpec",
                                   "description": "Metadata to describe the migration of a generic field"
                              }
                         }
                    },
                    "description": "Metadata to describe the migration of an entity type"
               },
               "org.sagebionetworks.repo.model.message.cloudmailin.Message": {
                    "type": "object",
                    "properties": {
                         "envelope": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.message.cloudmailin.Envelope",
                              "description": "Message Envelope"
                         },
                         "headers": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.message.cloudmailin.Headers",
                              "description": "The headers from the email message."
                         },
                         "plain": {"type": "string"},
                         "html": {"type": "string"},
                         "reply_plain": {"type": "string"},
                         "attachments": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.message.cloudmailin.Attachment",
                                   "description": "Message Attachment"
                              },
                              "description": "Attachments to the message."
                         }
                    },
                    "description": "JSON schema for the CloudMainIn message format"
               },
               "org.sagebionetworks.repo.model.dataaccess.AccessorGroup": {
                    "type": "object",
                    "properties": {
                         "accessRequirementId": {"type": "string"},
                         "accessorIds": {
                              "type": "array",
                              "items": {"type": "string"}
                         },
                         "submitterId": {"type": "string"},
                         "expiredOn": {"type": "string"}
                    },
                    "description": "A group of accessors who gained access by the same submitter."
               },
               "org.sagebionetworks.repo.model.oauth.OIDCAuthorizationRequest": {
                    "type": "object",
                    "properties": {
                         "clientId": {"type": "string"},
                         "scope": {"type": "string"},
                         "claims": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.oauth.OIDCClaimsRequest",
                              "description": "Stores OIDC claims and details in accordance with <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#ClaimsParameter\">OIDC Core 1.0 Claims Request<\/a>. The keys used in these maps are <a href=\"${org.sagebionetworks.repo.model.oauth.OIDCClaimName}\">OIDCClaimName<\/a>s"
                         },
                         "responseType": {"type": "string"},
                         "redirectUri": {"type": "string"},
                         "nonce": {"type": "string"},
                         "userId": {"type": "string"},
                         "authenticatedAt": {"type": "string"},
                         "authorizedAt": {"type": "string"}
                    },
                    "description": "Content of an authorization request"
               },
               "org.sagebionetworks.repo.model.dataaccess.SubmissionOrder": {
                    "type": "string",
                    "enum": [
                         "CREATED_ON",
                         "MODIFIED_ON"
                    ]
               },
               "org.sagebionetworks.repo.model.search.FacetTypeNames": {
                    "type": "string",
                    "enum": [
                         "LITERAL",
                         "DATE",
                         "CONTINUOUS"
                    ]
               },
               "org.sagebionetworks.repo.model.registry.EntityRegistry": {
                    "type": "object",
                    "properties": {"entityTypes": {
                         "type": "array",
                         "items": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.registry.EntityTypeMetadata",
                              "description": "Metadata about entities"
                         },
                         "description": "The full path of the entity schema."
                    }},
                    "description": "Metadata about entities"
               },
               "org.sagebionetworks.repo.model.search.Hit": {
                    "type": "object",
                    "properties": {
                         "id": {"type": "string"},
                         "etag": {"type": "string"},
                         "name": {"type": "string"},
                         "alias": {"type": "string"},
                         "path": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.EntityPath",
                              "description": "All entities in this Entity's path"
                         },
                         "description": {"type": "string"},
                         "node_type": {"type": "string"},
                         "created_on": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "modified_on": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "created_by": {"type": "string"},
                         "modified_by": {"type": "string"},
                         "diagnosis": {"type": "string"},
                         "tissue": {"type": "string"},
                         "consortium": {"type": "string"},
                         "organ": {"type": "string"}
                    },
                    "description": "JSON schema for a Hit in the search results.  Each Hit contains a subset of entity data."
               },
               "org.sagebionetworks.repo.model.v2.wiki.V2WikiHistorySnapshot": {
                    "type": "object",
                    "properties": {
                         "version": {"type": "string"},
                         "modifiedOn": {"type": "string"},
                         "modifiedBy": {"type": "string"}
                    },
                    "description": "A WikiHistorySnapshot contains basic information about an update to a WikiPage."
               },
               "org.sagebionetworks.repo.model.message.MessageRecipientSetInterface": {
                    "type": "object",
                    "properties": {"recipients": {
                         "type": "array",
                         "items": {"type": "string"},
                         "description": "The unique identifiers of the intended recipients of a message",
                         "uniqueItems": true
                    }},
                    "description": "Contains a set of IDs of the intended recipients of a message",
                    "oneOf": [
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.message.MessageRecipientSet"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.message.MessageToUser"}
                    ],
                    "discriminator": {"propertyName": "concreteType"}
               },
               "org.sagebionetworks.repo.model.table.SubmissionView": {
                    "type": "object",
                    "properties": {
                         "name": {"type": "string"},
                         "description": {"type": "string"},
                         "id": {"type": "string"},
                         "etag": {"type": "string"},
                         "createdOn": {"type": "string"},
                         "modifiedOn": {"type": "string"},
                         "createdBy": {"type": "string"},
                         "modifiedBy": {"type": "string"},
                         "parentId": {"type": "string"},
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.table.SubmissionView"]
                         },
                         "versionNumber": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "versionLabel": {"type": "string"},
                         "versionComment": {"type": "string"},
                         "isLatestVersion": {"type": "boolean"},
                         "columnIds": {
                              "type": "array",
                              "items": {"type": "string"},
                              "description": "The list of ColumnModel IDs that define the schema of the object."
                         },
                         "isSearchEnabled": {"type": "boolean"},
                         "scopeIds": {
                              "type": "array",
                              "items": {"type": "string"},
                              "description": "The list of container ids that define the scope of this view."
                         }
                    },
                    "description": "A view of evaluation submissions whose scope is defined by the evaluation ids the submissions are part of. The user must have READ_PRIVATE_SUBMISSION access on each of the evaluations in the scope.",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.message.UnsentMessageRange": {
                    "type": "object",
                    "properties": {
                         "lowerBound": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "upperBound": {
                              "type": "integer",
                              "format": "int32"
                         }
                    },
                    "description": "JSON schema for a range of change message numbers to recheck"
               },
               "org.sagebionetworks.repo.model.download.ActionRequiredList": {
                    "type": "object",
                    "properties": {"actions": {
                         "type": "array",
                         "items": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.download.Action",
                              "description": "An action that the user must take in order to download a file."
                         },
                         "description": "The list of actions"
                    }},
                    "description": "Represents the list of required actions that the user will need to take in order to gain access to an entity for download."
               },
               "org.sagebionetworks.repo.model.v2.wiki.V2WikiMarkdownVersion": {
                    "type": "object",
                    "properties": {
                         "version": {"type": "string"},
                         "title": {"type": "string"},
                         "markdownFileHandleId": {"type": "string"},
                         "attachmentFileHandleIds": {
                              "type": "array",
                              "items": {"type": "string"},
                              "description": "The list of attachment file handle ids of this page for this version."
                         }
                    },
                    "description": "A V2WikiMarkdownVersion contains the markdown file handle id and title of a specific version of a V2WikiPage"
               },
               "org.sagebionetworks.repo.model.annotation.DoubleAnnotation": {
                    "type": "object",
                    "properties": {
                         "key": {"type": "string"},
                         "isPrivate": {"type": "boolean"},
                         "value": {"type": "number"}
                    },
                    "description": "An Annotation containing a Double value"
               },
               "org.sagebionetworks.repo.model.schema.Organization": {
                    "type": "object",
                    "properties": {
                         "id": {"type": "string"},
                         "name": {"type": "string"},
                         "createdOn": {"type": "string"},
                         "createdBy": {"type": "string"}
                    },
                    "description": "The first step in creating new type schema in Synapse is to setup and configure an organization. The name of the organization serves as the root for each schema's $id managed by that organization.  The organization name 'org.sagebionetworks' is reserved for the core Synapse model objects.   Each organization also has an Access Control List (ACL) that controls who can add schemas to an organization.  All schemas created under an Organization will be considered publicly readable and reference-able. Organizations are immutable"
               },
               "org.sagebionetworks.repo.model.download.RequestDownload": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.download.RequestDownload"]
                         },
                         "benefactorId": {
                              "type": "integer",
                              "format": "int32"
                         }
                    },
                    "description": "In order to download a one or more files, the user will need to be granted the 'DOWNLOAD' permission.",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.dataaccess.OpenSubmission": {
                    "type": "object",
                    "properties": {
                         "numberOfSubmittedSubmission": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "accessRequirementId": {"type": "string"}
                    },
                    "description": "This object stores information about the number of submitted Submissions for a single ACTAccessRequirement."
               },
               "org.sagebionetworks.evaluation.model.UserEvaluationPermissions": {
                    "type": "object",
                    "properties": {
                         "canChangePermissions": {"type": "boolean"},
                         "canView": {"type": "boolean"},
                         "canPublicRead": {"type": "boolean"},
                         "canEdit": {"type": "boolean"},
                         "canDelete": {"type": "boolean"},
                         "canParticipate": {"type": "boolean"},
                         "canSubmit": {"type": "boolean"},
                         "canViewPrivateSubmissionStatusAnnotations": {"type": "boolean"},
                         "canEditSubmissionStatuses": {"type": "boolean"},
                         "canDeleteSubmissions": {"type": "boolean"},
                         "ownerPrincipalId": {
                              "type": "integer",
                              "format": "int32"
                         }
                    },
                    "description": "The permission a User has for a given Evaluation"
               },
               "PaginatedResultsOfPassingRecord": {
                    "type": "object",
                    "properties": {
                         "totalNumberOfResults": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "results": {
                              "type": "array",
                              "items": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.quiz.PassingRecord"}
                         }
                    }
               },
               "org.sagebionetworks.repo.model.download.DownloadListManifestRequest": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.download.DownloadListManifestRequest"]
                         },
                         "csvTableDescriptor": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.CsvTableDescriptor",
                              "description": "The description of a csv for upload or download."
                         }
                    },
                    "description": "Start an asynchronous job to generate a metadata manifest CSV of the available files on the user's download list.",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.table.ColumnModelInterface": {
                    "type": "object",
                    "properties": {
                         "name": {"type": "string"},
                         "columnType": {"type": "string"},
                         "facetType": {"type": "string"}
                    },
                    "description": "Common properties of all ColumnModel implementation",
                    "oneOf": [
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.ColumnModel"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.JsonSubColumnModel"}
                    ],
                    "discriminator": {"propertyName": "concreteType"}
               },
               "org.sagebionetworks.repo.model.quiz.MultichoiceResponse": {
                    "type": "object",
                    "properties": {
                         "questionIndex": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.quiz.MultichoiceResponse"]
                         },
                         "answerIndex": {
                              "type": "array",
                              "items": {
                                   "type": "integer",
                                   "format": "int32"
                              },
                              "uniqueItems": true
                         }
                    },
                    "description": "The response to a multiple choice question",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.table.ValidateDefiningSqlRequest": {
                    "type": "object",
                    "properties": {
                         "definingSql": {"type": "string"},
                         "entityType": {"type": "string"}
                    },
                    "description": "The request body for validateDefiningSql"
               },
               "org.sagebionetworks.repo.model.query.QueryTableResults": {
                    "type": "object",
                    "properties": {
                         "headers": {
                              "type": "array",
                              "items": {"type": "string"},
                              "description": "The ordered list of column headers (attribute names)."
                         },
                         "rows": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.query.Row",
                                   "description": "A simple list of Strings to store query results about a single object."
                              },
                              "description": "The ordered list of row data. Each row corresponds to one object."
                         },
                         "totalNumberOfResults": {
                              "type": "integer",
                              "format": "int32"
                         }
                    },
                    "description": "An object to store the results of a Synapse Query. Results are stored in row-major tabular format."
               },
               "org.sagebionetworks.repo.model.statistics.ObjectStatisticsRequest": {
                    "type": "object",
                    "properties": {
                         "concreteType": {"type": "string"},
                         "objectId": {"type": "string"}
                    },
                    "description": "Common request type containing the specifications of the request in order to retrieve statistics about specific objects",
                    "oneOf": [{"$ref": "#/components/schemas/org.sagebionetworks.repo.model.statistics.ProjectFilesStatisticsRequest"}],
                    "required": ["concreteType"],
                    "discriminator": {"propertyName": "concreteType"}
               },
               "org.sagebionetworks.repo.model.download.ActionRequiredResponse": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.download.ActionRequiredResponse"]
                         },
                         "page": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.download.ActionRequiredCount",
                                   "description": "Represents a single action that the user will need to take in order to download one or more files."
                              },
                              "description": "The page of ActionRequiredCount"
                         },
                         "nextPageToken": {"type": "string"}
                    },
                    "description": "Represents a single page of actions that the user will need to take in order to gain access to one or more files on their download list.",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.search.Facet": {
                    "type": "object",
                    "properties": {
                         "name": {"type": "string"},
                         "type": {"type": "string"},
                         "min": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "max": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "constraints": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.search.FacetConstraint",
                                   "description": "JSON schema for a Facet Constraint for a particular facet in the search results."
                              },
                              "description": "The list of constraints for this facet"
                         }
                    },
                    "description": "JSON schema for a continuous or literal value Facet found in the search results."
               },
               "org.sagebionetworks.repo.model.docker.RegistryEventSource": {
                    "type": "object",
                    "properties": {
                         "addr": {"type": "string"},
                         "instanceID": {"type": "string"}
                    }
               },
               "org.sagebionetworks.repo.model.annotation.v2.AnnotationsValueType": {
                    "type": "string",
                    "enum": [
                         "STRING",
                         "DOUBLE",
                         "LONG",
                         "TIMESTAMP_MS",
                         "BOOLEAN"
                    ]
               },
               "org.sagebionetworks.repo.model.table.RowSelection": {
                    "type": "object",
                    "properties": {
                         "tableId": {"type": "string"},
                         "etag": {"type": "string"},
                         "rowIds": {
                              "type": "array",
                              "items": {
                                   "type": "integer",
                                   "format": "int32"
                              },
                              "description": "Each row id of this list refers to a single row of a TableEntity."
                         }
                    },
                    "description": "Represents a selection of rows of a TableEntity"
               },
               "org.sagebionetworks.repo.model.project.ExternalGoogleCloudStorageLocationSetting": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.project.ExternalGoogleCloudStorageLocationSetting"]
                         },
                         "storageLocationId": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "uploadType": {"type": "string"},
                         "banner": {"type": "string"},
                         "description": {"type": "string"},
                         "etag": {"type": "string"},
                         "createdOn": {"type": "string"},
                         "createdBy": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "bucket": {"type": "string"},
                         "baseKey": {"type": "string"}
                    },
                    "description": "The external upload destination setting contains information to generate an external Google Cloud Storage upload destination connected with Synapse.  For details on how to create a custom Google Cloud storage location in the web client, see <a href=\"https://help.synapse.org/docs/Custom-Storage-Locations.2048327803.html\">Custom Storage Locations<\/a>",
                    "required": [
                         "bucket",
                         "concreteType"
                    ]
               },
               "org.sagebionetworks.repo.model.principal.AliasCheckRequest": {
                    "type": "object",
                    "properties": {
                         "alias": {"type": "string"},
                         "type": {"type": "string"}
                    },
                    "description": "Request to check if an alias is available."
               },
               "PaginatedResultsOfSubmissionBundle": {
                    "type": "object",
                    "properties": {
                         "totalNumberOfResults": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "results": {
                              "type": "array",
                              "items": {"$ref": "#/components/schemas/org.sagebionetworks.evaluation.model.SubmissionBundle"}
                         }
                    }
               },
               "org.sagebionetworks.repo.model.table.AppendableRowSet": {
                    "type": "object",
                    "properties": {
                         "concreteType": {"type": "string"},
                         "tableId": {"type": "string"}
                    },
                    "description": "Abstraction for a set of rows that can be appended to a table.",
                    "oneOf": [
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.PartialRowSet"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.RowSet"}
                    ],
                    "required": ["concreteType"],
                    "discriminator": {"propertyName": "concreteType"}
               },
               "org.sagebionetworks.repo.model.dataaccess.AccessorGroupRevokeRequest": {
                    "type": "object",
                    "properties": {
                         "accessRequirementId": {"type": "string"},
                         "submitterId": {"type": "string"}
                    },
                    "description": "A request to revoke access of an accessor group. Accessors will be group by submitter and access requirement."
               },
               "PaginatedResultsOfQuizResponse": {
                    "type": "object",
                    "properties": {
                         "totalNumberOfResults": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "results": {
                              "type": "array",
                              "items": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.quiz.QuizResponse"}
                         }
                    }
               },
               "org.sagebionetworks.repo.model.HasEtag": {
                    "type": "object",
                    "properties": {"etag": {"type": "string"}},
                    "description": "Implementation has an etag.",
                    "oneOf": [
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.SparseRowDto"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.PartialRow"}
                    ],
                    "discriminator": {"propertyName": "concreteType"}
               },
               "org.sagebionetworks.repo.model.auth.AccessTokenGenerationRequest": {
                    "type": "object",
                    "properties": {
                         "scope": {
                              "type": "array",
                              "items": {"type": "string"},
                              "description": "The scopes that have been granted to this token"
                         },
                         "userInfoClaims": {
                              "type": "object",
                              "description": "The OIDC claims that can be accessed using this token.",
                              "additionalProperties": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.oauth.OIDCClaimsRequestDetails",
                                   "description": "<a href=\"https://openid.net/specs/openid-connect-core-1_0.html#ClaimsParameter\">OIDC Core 1.0 Claims Request<\/a> value"
                              }
                         },
                         "name": {"type": "string"}
                    },
                    "description": "Request body for creating a personal access token."
               },
               "org.sagebionetworks.repo.model.migration.CalculateOptimalRangeResponse": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.migration.CalculateOptimalRangeResponse"]
                         },
                         "migrationType": {"type": "string"},
                         "ranges": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.migration.IdRange",
                                   "description": "A range of IDs"
                              },
                              "description": "List of object IDs to delete"
                         }
                    },
                    "description": "Results for a backup type job.",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.schema.ListJsonSchemaVersionInfoRequest": {
                    "type": "object",
                    "properties": {
                         "organizationName": {"type": "string"},
                         "schemaName": {"type": "string"},
                         "nextPageToken": {"type": "string"}
                    },
                    "description": "Request to get a single page of schema version metadata for the given organization and schema name."
               },
               "org.sagebionetworks.repo.model.table.TableSchemaChangeRequest": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.table.TableSchemaChangeRequest"]
                         },
                         "entityId": {"type": "string"},
                         "changes": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.ColumnChange",
                                   "description": "Describes a change from one column to another."
                              },
                              "description": "List of changes that describes column additions, deletions, and updates"
                         },
                         "orderedColumnIds": {
                              "type": "array",
                              "items": {"type": "string"},
                              "description": "Optional: Used to set the order of columns for this table. If this list is provided it must include the IDs of each column that will be in the schema after the changes of this request are applied."
                         }
                    },
                    "description": "An AsynchronousRequestBody to change the schema of a table.",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.AccessApproval": {
                    "type": "object",
                    "properties": {
                         "id": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "etag": {"type": "string"},
                         "createdOn": {"type": "string"},
                         "modifiedOn": {"type": "string"},
                         "createdBy": {"type": "string"},
                         "modifiedBy": {"type": "string"},
                         "requirementId": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "requirementVersion": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "submitterId": {"type": "string"},
                         "accessorId": {"type": "string"},
                         "expiredOn": {"type": "string"},
                         "state": {"type": "string"}
                    },
                    "description": "JSON schema for AccessApproval POJO"
               },
               "org.sagebionetworks.repo.model.file.FileHandleCopyRequest": {
                    "type": "object",
                    "properties": {
                         "originalFile": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.file.FileHandleAssociation",
                              "description": "Describes an association of a FileHandle with another object."
                         },
                         "newFileName": {"type": "string"},
                         "newContentType": {"type": "string"}
                    },
                    "description": "Request to make a copy of an existing FileHandle."
               },
               "org.sagebionetworks.repo.model.file.BulkFileDownloadRequest": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.file.BulkFileDownloadRequest"]
                         },
                         "requestedFiles": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.file.FileHandleAssociation",
                                   "description": "Describes an association of a FileHandle with another object."
                              },
                              "description": "The files to be included in the download."
                         },
                         "zipFileName": {"type": "string"},
                         "zipFileFormat": {"type": "string"}
                    },
                    "description": "Request for a bulk file download.",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.migration.AsyncMigrationResponse": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.migration.AsyncMigrationResponse"]
                         },
                         "adminResponse": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.migration.AdminResponse",
                              "description": "Abstraction for Admin response"
                         }
                    },
                    "description": "Async Migration response will implement this type of AsynchronousResponseBody",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.MembershipRequest": {
                    "type": "object",
                    "properties": {
                         "id": {"type": "string"},
                         "teamId": {"type": "string"},
                         "userId": {"type": "string"},
                         "message": {"type": "string"},
                         "expiresOn": {"type": "string"},
                         "createdOn": {"type": "string"},
                         "createdBy": {"type": "string"}
                    },
                    "description": "JSON schema for MembershipRequest POJO"
               },
               "org.sagebionetworks.repo.model.oauth.OIDCClaimsRequest": {
                    "type": "object",
                    "properties": {
                         "userinfo": {
                              "type": "object",
                              "description": "The OIDC Claims that can be accessed by making a request to the userinfo endpoint",
                              "additionalProperties": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.oauth.OIDCClaimsRequestDetails",
                                   "description": "<a href=\"https://openid.net/specs/openid-connect-core-1_0.html#ClaimsParameter\">OIDC Core 1.0 Claims Request<\/a> value"
                              }
                         },
                         "id_token": {
                              "type": "object",
                              "description": "The OIDC Claims that will be provided via an ID token by making a request to the token endpoint.",
                              "additionalProperties": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.oauth.OIDCClaimsRequestDetails",
                                   "description": "<a href=\"https://openid.net/specs/openid-connect-core-1_0.html#ClaimsParameter\">OIDC Core 1.0 Claims Request<\/a> value"
                              }
                         }
                    },
                    "description": "Stores OIDC claims and details in accordance with <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#ClaimsParameter\">OIDC Core 1.0 Claims Request<\/a>. The keys used in these maps are <a href=\"${org.sagebionetworks.repo.model.oauth.OIDCClaimName}\">OIDCClaimName<\/a>s"
               },
               "org.sagebionetworks.evaluation.model.Evaluation": {
                    "type": "object",
                    "properties": {
                         "id": {"type": "string"},
                         "etag": {"type": "string"},
                         "name": {"type": "string"},
                         "description": {"type": "string"},
                         "ownerId": {"type": "string"},
                         "createdOn": {"type": "string"},
                         "contentSource": {"type": "string"},
                         "submissionInstructionsMessage": {"type": "string"},
                         "submissionReceiptMessage": {"type": "string"},
                         "quota": {
                              "$ref": "#/components/schemas/org.sagebionetworks.evaluation.model.SubmissionQuota",
                              "description": "DEPRECATED: use EvaluationRound APIs instead. No SubmissionQuota will be returned with the Evaluation. Any SubmissionQuotas submitted will be instead be converted into similar EvaluationRounds."
                         }
                    },
                    "description": "An Evaluation is the core object of the Evaluation API, used to support collaborative data analysis challenges in Synapse."
               },
               "org.sagebionetworks.repo.model.ChallengeTeam": {
                    "type": "object",
                    "properties": {
                         "id": {"type": "string"},
                         "etag": {"type": "string"},
                         "challengeId": {"type": "string"},
                         "teamId": {"type": "string"},
                         "message": {"type": "string"}
                    },
                    "description": "Relationship between a Challenge and registered Team"
               },
               "org.sagebionetworks.repo.model.docker.DockerAuthorizationToken": {
                    "type": "object",
                    "properties": {"token": {"type": "string"}},
                    "description": "Authorization Token for Docker Registry Access"
               },
               "org.sagebionetworks.repo.model.audit.NodeRecord": {
                    "type": "object",
                    "properties": {
                         "isPublic": {"type": "boolean"},
                         "isRestricted": {"type": "boolean"},
                         "isControlled": {"type": "boolean"},
                         "benefactorId": {"type": "string"},
                         "projectId": {"type": "string"},
                         "effectiveArs": {
                              "type": "array",
                              "items": {
                                   "type": "integer",
                                   "format": "int32"
                              }
                         },
                         "annotations": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.annotation.v2.Annotations",
                              "description": "Annotations are additional key-value pair metadata that are associated with an object."
                         },
                         "derivedAnnotations": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.annotation.v2.Annotations",
                              "description": "Annotations are additional key-value pair metadata that are associated with an object."
                         },
                         "internalAnnotations": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.annotation.v2.Annotations",
                              "description": "Annotations are additional key-value pair metadata that are associated with an object."
                         },
                         "id": {"type": "string"},
                         "name": {"type": "string"},
                         "description": {"type": "string"},
                         "parentId": {"type": "string"},
                         "createdByPrincipalId": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "createdOn": {"type": "string"},
                         "modifiedByPrincipalId": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "modifiedOn": {"type": "string"},
                         "nodeType": {"type": "string"},
                         "eTag": {"type": "string"},
                         "versionNumber": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "versionComment": {"type": "string"},
                         "versionLabel": {"type": "string"},
                         "isLatestVersion": {"type": "boolean"},
                         "activityId": {"type": "string"},
                         "fileHandleId": {"type": "string"},
                         "columnModelIds": {
                              "type": "array",
                              "items": {"type": "string"}
                         },
                         "scopeIds": {
                              "type": "array",
                              "items": {"type": "string"},
                              "description": "For FileVeiws, the list of IDs the define the scope of the view."
                         },
                         "items": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.EntityRef",
                                   "description": "Represents a reference to the id and version of an entity to be used in collections."
                              },
                              "description": "For Datasets and Dataset Collections, the list of entity references the define the view."
                         },
                         "reference": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.Reference",
                              "description": "JSON schema for Reference POJO"
                         },
                         "alias": {"type": "string"},
                         "isSearchEnabled": {"type": "boolean"},
                         "definingSQL": {"type": "string"}
                    },
                    "description": "Data record from a node object."
               },
               "org.sagebionetworks.repo.model.entitybundle.v2.EntityBundleCreate": {
                    "type": "object",
                    "properties": {
                         "entity": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.Entity",
                              "description": "This is the base interface that all Entities implement."
                         },
                         "annotations": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.annotation.v2.Annotations",
                              "description": "Annotations are additional key-value pair metadata that are associated with an object."
                         },
                         "accessControlList": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.AccessControlList",
                              "description": "Contains list of principals who can access the data with the allowed types of access for each."
                         }
                    },
                    "description": "Used to create Entity and associated metadata in a single transaction"
               },
               "org.sagebionetworks.repo.model.table.DownloadFromTableRequest": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.table.DownloadFromTableRequest"]
                         },
                         "entityId": {"type": "string"},
                         "writeHeader": {"type": "boolean"},
                         "includeRowIdAndRowVersion": {"type": "boolean"},
                         "csvTableDescriptor": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.CsvTableDescriptor",
                              "description": "The description of a csv for upload or download."
                         },
                         "fileName": {"type": "string"},
                         "sql": {"type": "string"},
                         "additionalFilters": {
                              "type": "array",
                              "items": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.QueryFilter"},
                              "description": "Appends additional filters to the SQL query. These are applied before facets. Filters within the list have an AND relationship. If a WHERE clause already exists on the SQL query or facets are selected, it will also be ANDed with the query generated by these additional filters."
                         },
                         "selectedFacets": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.FacetColumnRequest",
                                   "description": "A set of values that have been selected for filtering in a faceted column"
                              },
                              "description": "The selected facet filters."
                         },
                         "includeEntityEtag": {"type": "boolean"},
                         "selectFileColumn": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "selectFileVersionColumn": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "offset": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "limit": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "sort": {
                              "type": "array",
                              "items": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.SortItem"}
                         }
                    },
                    "description": "A CSV table download request.",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.RestrictionLevel": {
                    "type": "string",
                    "enum": [
                         "OPEN",
                         "RESTRICTED_BY_TERMS_OF_USE",
                         "CONTROLLED_BY_ACT"
                    ]
               },
               "org.sagebionetworks.repo.model.docker.DockerRegistryEventList": {
                    "type": "object",
                    "properties": {"events": {
                         "type": "array",
                         "items": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.docker.DockerRegistryEvent",
                              "description": "https://godoc.org/github.com/docker/distribution/notifications#Event"
                         },
                         "description": "A list of events that occurred in a docker registry"
                    }},
                    "description": "List of Registry Events"
               },
               "org.sagebionetworks.repo.model.form.FormData": {
                    "type": "object",
                    "properties": {
                         "formDataId": {"type": "string"},
                         "etag": {"type": "string"},
                         "groupId": {"type": "string"},
                         "name": {"type": "string"},
                         "createdBy": {"type": "string"},
                         "createdOn": {"type": "string"},
                         "modifiedOn": {"type": "string"},
                         "dataFileHandleId": {"type": "string"},
                         "submissionStatus": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.form.SubmissionStatus",
                              "description": "The status of a a submitted FormData object."
                         }
                    },
                    "description": "User's data gathered from a form template. All FormData belongs to a single FormGroup."
               },
               "org.sagebionetworks.repo.model.table.FacetColumnResultValueCount": {
                    "type": "object",
                    "properties": {
                         "value": {"type": "string"},
                         "count": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "isSelected": {"type": "boolean"}
                    },
                    "description": "A pair containing the value of a column and the number of times that value appears"
               },
               "org.sagebionetworks.repo.model.RSSEntry": {
                    "type": "object",
                    "properties": {
                         "title": {"type": "string"},
                         "date": {"type": "string"},
                         "author": {"type": "string"},
                         "content": {"type": "string"},
                         "link": {"type": "string"}
                    },
                    "description": "This contains items from an rss feed, and meta data about the rss feed itself"
               },
               "PaginatedResultsOfTeam": {
                    "type": "object",
                    "properties": {
                         "totalNumberOfResults": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "results": {
                              "type": "array",
                              "items": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.Team"}
                         }
                    }
               },
               "org.sagebionetworks.repo.model.RestrictableObjectType": {
                    "type": "string",
                    "enum": [
                         "ENTITY",
                         "EVALUATION",
                         "TEAM"
                    ]
               },
               "org.sagebionetworks.repo.model.SelfSignAccessRequirement": {
                    "type": "object",
                    "properties": {
                         "versionNumber": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "id": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "description": {"type": "string"},
                         "name": {"type": "string"},
                         "etag": {"type": "string"},
                         "createdOn": {"type": "string"},
                         "modifiedOn": {"type": "string"},
                         "createdBy": {"type": "string"},
                         "modifiedBy": {"type": "string"},
                         "subjectsDefinedByAnnotations": {"type": "boolean"},
                         "subjectIds": {
                              "type": "array",
                              "items": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.RestrictableObjectDescriptor"},
                              "description": "The IDs of the items controlled by this Access Requirement when 'subjectsDefinedByAnnotations=false'. This property is mutually exclusive with 'subjectsDefinedByAnnotations'.  When 'subjectsDefinedByAnnotations=true' then this property must be empty or excluded.  Required when creating or updating and 'subjectsDefinedByAnnotations=false' or 'subjectsDefinedByAnnotations' is excluded."
                         },
                         "accessType": {"type": "string"},
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.SelfSignAccessRequirement"]
                         },
                         "isCertifiedUserRequired": {"type": "boolean"},
                         "isValidatedProfileRequired": {"type": "boolean"}
                    },
                    "description": "JSON schema for Terms of Use Access Requirement, used for a 'tier 2' Access Requirement",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.oauth.OAuthAccountCreationRequest": {
                    "type": "object",
                    "properties": {
                         "provider": {"type": "string"},
                         "authenticationCode": {"type": "string"},
                         "redirectUrl": {"type": "string"},
                         "userName": {"type": "string"}
                    },
                    "description": "Request to create an account, validated via OAuth"
               },
               "org.sagebionetworks.repo.model.asynch.ReadOnlyRequestBody": {
                    "type": "object",
                    "properties": {"concreteType": {"type": "string"}},
                    "description": "Jobs that are read-only will implement this type of AsynchronousRequestBody",
                    "oneOf": [{"$ref": "#/components/schemas/org.sagebionetworks.repo.model.migration.AsyncMigrationRequest"}],
                    "required": ["concreteType"],
                    "discriminator": {"propertyName": "concreteType"}
               },
               "org.sagebionetworks.repo.model.file.GoogleCloudFileHandle": {
                    "type": "object",
                    "properties": {
                         "id": {"type": "string"},
                         "etag": {"type": "string"},
                         "createdBy": {"type": "string"},
                         "createdOn": {"type": "string"},
                         "modifiedOn": {"type": "string"},
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.file.GoogleCloudFileHandle"]
                         },
                         "contentType": {"type": "string"},
                         "contentMd5": {"type": "string"},
                         "fileName": {"type": "string"},
                         "storageLocationId": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "contentSize": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "status": {"type": "string"},
                         "bucketName": {"type": "string"},
                         "key": {"type": "string"},
                         "previewId": {"type": "string"},
                         "isPreview": {"type": "boolean"}
                    },
                    "description": "A GoogleCloudFileHandle represents a file stored in Google Cloud Storage.",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.docker.RegistryEventActor": {
                    "type": "object",
                    "properties": {"name": {"type": "string"}}
               },
               "org.sagebionetworks.repo.model.migration.BackupTypeRequest": {
                    "type": "object",
                    "properties": {
                         "concreteType": {"type": "string"},
                         "migrationType": {"type": "string"},
                         "aliasType": {"type": "string"},
                         "batchSize": {
                              "type": "integer",
                              "format": "int32"
                         }
                    },
                    "description": "Abstract Request to create a migration backup.",
                    "oneOf": [{"$ref": "#/components/schemas/org.sagebionetworks.repo.model.migration.BackupTypeRangeRequest"}],
                    "required": ["concreteType"],
                    "discriminator": {"propertyName": "concreteType"}
               },
               "org.sagebionetworks.repo.model.download.AvailableFilesRequest": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.download.AvailableFilesRequest"]
                         },
                         "nextPageToken": {"type": "string"},
                         "sort": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.download.Sort",
                                   "description": "Identifies both the field and direction for a single sort operation"
                              },
                              "description": "Optional. Defines how the query results should be sorted. If excluded a default sort will be used."
                         },
                         "filter": {"type": "string"}
                    },
                    "description": "Request to get a single page of files from the user's download list for files that are currently available for download.",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.message.multipart.MessageBody": {
                    "type": "object",
                    "properties": {
                         "plain": {"type": "string"},
                         "html": {"type": "string"},
                         "attachments": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.message.multipart.Attachment",
                                   "description": "Multipart Message Attachment"
                              },
                              "description": "Attachments to the message."
                         }
                    },
                    "description": "JSON schema for a multipart message body"
               },
               "org.sagebionetworks.repo.model.file.BatchPresignedUploadUrlResponse": {
                    "type": "object",
                    "properties": {"partPresignedUrls": {
                         "type": "array",
                         "items": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.file.PartPresignedUrl",
                              "description": "A single pre-signed URL for uploading or coping a part of a multi-part request. Note that the headers in the signedHeaders property must be included in the PUT request that is sent to the pre-signed URL. In the case of a multipart copy, when sending the PUT request to the pre-signed URL the body of the request needs to be empty."
                         },
                         "description": "List of part pre-signed URLs."
                    }},
                    "description": "Batch response of part pre-signed URLs."
               },
               "org.sagebionetworks.evaluation.model.EvaluationRound": {
                    "type": "object",
                    "properties": {
                         "id": {"type": "string"},
                         "etag": {"type": "string"},
                         "evaluationId": {"type": "string"},
                         "roundStart": {"type": "string"},
                         "roundEnd": {"type": "string"},
                         "limits": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.evaluation.model.EvaluationRoundLimit",
                                   "description": "Sets limits for maximum submissions in a SubmissionRound. Each limitType may only appear once in an EvaluationRound's list of limits"
                              },
                              "description": "Optional. Sets limits for maximum submissions in this round."
                         }
                    },
                    "description": "Defines the duration of a round and sets limits for maximum submissions per round",
                    "required": [
                         "evaluationId",
                         "roundStart",
                         "roundEnd"
                    ]
               },
               "org.sagebionetworks.repo.model.table.EntityUpdateResult": {
                    "type": "object",
                    "properties": {
                         "entityId": {"type": "string"},
                         "failureMessage": {"type": "string"},
                         "failureCode": {"type": "string"}
                    },
                    "description": "Result of a single Entity Update."
               },
               "org.sagebionetworks.repo.model.file.FileHandleArchivalRequest": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.file.FileHandleArchivalRequest"]
                         },
                         "limit": {
                              "type": "integer",
                              "format": "int32"
                         }
                    },
                    "description": "Request used to tag unlinked file handles for archival. Only administrator can perform this kind of job.",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.oauth.OAuthRefreshTokenInformationList": {
                    "type": "object",
                    "properties": {
                         "results": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.oauth.OAuthRefreshTokenInformation",
                                   "description": "OAuth 2.0 refresh token metadata. Note that the token itself may not be retrieved after it is issued to a client."
                              }
                         },
                         "nextPageToken": {"type": "string"}
                    },
                    "description": "Metadata for a paginated list of refresh token metadata that give OAuth 2.0 clients access to access a user's resources in Synapse."
               },
               "org.sagebionetworks.repo.model.agent.CreateAgentSessionRequest": {
                    "type": "object",
                    "properties": {
                         "agentAccessLevel": {"type": "string"},
                         "agentId": {"type": "string"}
                    },
                    "description": "Information about a specific session (conversation) with an agent.  Only the acess level can be changed on an existing session.  You will need to start a new session if you wish to use a different agentId."
               },
               "org.sagebionetworks.repo.model.table.TableChangeType": {
                    "type": "string",
                    "enum": [
                         "ROW",
                         "COLUMN",
                         "SEARCH"
                    ]
               },
               "org.sagebionetworks.repo.model.download.Sort": {
                    "type": "object",
                    "properties": {
                         "field": {"type": "string"},
                         "direction": {"type": "string"}
                    },
                    "description": "Identifies both the field and direction for a single sort operation"
               },
               "org.sagebionetworks.repo.model.ProjectListSortColumn": {
                    "type": "string",
                    "enum": [
                         "LAST_ACTIVITY",
                         "PROJECT_NAME"
                    ]
               },
               "org.sagebionetworks.evaluation.model.SubmissionQuota": {
                    "type": "object",
                    "properties": {
                         "firstRoundStart": {"type": "string"},
                         "roundDurationMillis": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "numberOfRounds": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "submissionLimit": {
                              "type": "integer",
                              "format": "int32"
                         }
                    },
                    "description": "DEPRECATED: use EvaluationRound APIs instead. No SubmissionQuota will be returned with the Evaluation. Any SubmissionQuotas submitted will be instead be converted into similar EvaluationRounds."
               },
               "org.sagebionetworks.repo.model.file.ProxyFileHandle": {
                    "type": "object",
                    "properties": {
                         "id": {"type": "string"},
                         "etag": {"type": "string"},
                         "createdBy": {"type": "string"},
                         "createdOn": {"type": "string"},
                         "modifiedOn": {"type": "string"},
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.file.ProxyFileHandle"]
                         },
                         "contentType": {"type": "string"},
                         "contentMd5": {"type": "string"},
                         "fileName": {"type": "string"},
                         "storageLocationId": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "contentSize": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "status": {"type": "string"},
                         "filePath": {"type": "string"}
                    },
                    "description": "Reference to a file that accessible via a proxy server.  Each ProxyFileHandle must reference a ProxyStorageLocationSettings that defines how the files are accessed.",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.project.BucketStorageLocationSetting": {
                    "type": "object",
                    "properties": {
                         "concreteType": {"type": "string"},
                         "storageLocationId": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "uploadType": {"type": "string"},
                         "banner": {"type": "string"},
                         "description": {"type": "string"},
                         "etag": {"type": "string"},
                         "createdOn": {"type": "string"},
                         "createdBy": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "bucket": {"type": "string"}
                    },
                    "description": "A storage location that needs to provide a bucket name",
                    "oneOf": [
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.project.ExternalObjectStorageLocationSetting"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.project.ExternalGoogleCloudStorageLocationSetting"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.project.ExternalS3StorageLocationSetting"}
                    ],
                    "required": [
                         "bucket",
                         "concreteType"
                    ],
                    "discriminator": {"propertyName": "concreteType"}
               },
               "org.sagebionetworks.repo.model.migration.MigrationType": {
                    "type": "string",
                    "enum": [
                         "PRINCIPAL",
                         "GROUP_MEMBERS",
                         "CREDENTIAL",
                         "TERMS_OF_USE_AGREEMENT",
                         "AUTHENTICATED_ON",
                         "PRINCIPAL_ALIAS",
                         "NOTIFICATION_EMAIL",
                         "USER_PROFILE",
                         "STORAGE_LOCATION",
                         "FILE_HANDLE",
                         "MULTIPART_UPLOAD",
                         "MULTIPART_UPLOAD_PART_STATE",
                         "MULTIPART_UPLOAD_COMPOSER_PART_STATE",
                         "MESSAGE_CONTENT",
                         "MESSAGE_TO_USER",
                         "MESSAGE_RECIPIENT",
                         "MESSAGE_STATUS",
                         "COMMENT",
                         "V2_WIKI_PAGE",
                         "V2_WIKI_ATTACHMENT_RESERVATION",
                         "V2_WIKI_MARKDOWN",
                         "V2_WIKI_OWNERS",
                         "ACTIVITY",
                         "NODE",
                         "NODE_REVISION",
                         "NODE_ACCESS_REQUIRMENT",
                         "DOCKER_REPOSITORY_NAME",
                         "DOCKER_COMMIT",
                         "TEAM",
                         "MEMBERSHIP_INVITATION_SUBMISSION",
                         "MEMBERSHIP_REQUEST_SUBMISSION",
                         "EVALUATION",
                         "EVALUATION_ROUND",
                         "EVALUATION_SUBMISSIONS",
                         "SUBMISSION",
                         "SUBMISSION_CONTRIBUTOR",
                         "SUBMISSION_FILE",
                         "SUBMISSION_STATUS",
                         "PROJECT_SETTINGS",
                         "PROJECT_STATS",
                         "ACCESS_REQUIREMENT",
                         "ACCESS_REQUIREMENT_REVISION",
                         "ACCESS_APPROVAL",
                         "ACL",
                         "ACL_ACCESS",
                         "ACL_ACCESS_TYPE",
                         "FAVORITE",
                         "TRASH_CAN",
                         "DOI",
                         "CHALLENGE",
                         "CHALLENGE_TEAM",
                         "COLUMN_MODEL",
                         "BOUND_COLUMN_OWNER",
                         "BOUND_COLUMN_ORDINAL",
                         "TABLE_TRANSACTION",
                         "TABLE_TRANSACTION_TO_VERSION",
                         "TABLE_SEQUENCE",
                         "TABLE_CHANGE",
                         "QUIZ_RESPONSE",
                         "VERIFICATION_SUBMISSION",
                         "VERIFICATION_STATE",
                         "VERIFICATION_FILE",
                         "FORUM",
                         "DISCUSSION_THREAD",
                         "DISCUSSION_THREAD_VIEW",
                         "DISCUSSION_THREAD_ENTITY_REFERENCE",
                         "DISCUSSION_REPLY",
                         "SUBSCRIPTION",
                         "BROADCAST_MESSAGE",
                         "VIEW_TYPE",
                         "VIEW_SCOPE",
                         "VIEW_SNAPSHOT",
                         "THROTTLE_RULE",
                         "RESEARCH_PROJECT",
                         "DATA_ACCESS_REQUEST",
                         "DATA_ACCESS_SUBMISSION",
                         "DATA_ACCESS_SUBMISSION_SUBMITTER",
                         "DATA_ACCESS_SUBMISSION_STATUS",
                         "DATA_ACCESS_SUBMISSION_ACCESSOR_CHANGE",
                         "DATA_ACCESS_NOTIFICATIONS",
                         "FORM_GROUP",
                         "FORM_DATA",
                         "ORGANIZATION",
                         "JSON_SCHEMA",
                         "JSON_SCHEMA_BLOB",
                         "JSON_SCHEMA_VERSION",
                         "JSON_SCHEMA_LATEST_VERSION",
                         "JSON_SCHEMA_DEPENDENCY",
                         "JSON_SCHEMA_OBJECT_BINDING",
                         "DOWNLOAD_LIST",
                         "DOWNLOAD_LIST_ITEM",
                         "DOWNLOAD_ORDER",
                         "DOWNLOAD_LIST_2",
                         "DOWNLOAD_LIST_ITEM_2",
                         "DATA_TYPE",
                         "OAUTH_SECTOR_IDENTIFIER",
                         "OAUTH_CLIENT",
                         "OAUTH_REFRESH_TOKEN",
                         "OAUTH_ACCESS_TOKEN",
                         "PERSONAL_ACCESS_TOKEN",
                         "AUTHORIZATION_GRANT",
                         "SES_NOTIFICATIONS",
                         "QUARANTINED_EMAILS",
                         "FEATURE_STATUS",
                         "MATERIALIZED_VIEW_ID",
                         "MATERIALIZED_VIEW_SOURCE_TABLE",
                         "PRINCIPAL_OIDC_BINDING",
                         "OTP_SECRET",
                         "OTP_RECOVERY_CODE",
                         "TWO_FA_STATUS",
                         "WEBHOOK",
                         "WEBHOOK_VERIFICATION",
                         "WEBHOOK_ALLOWED_DOMAIN",
                         "AGENT_SESSION",
                         "CHANGE"
                    ]
               },
               "org.sagebionetworks.repo.model.schema.Type": {
                    "type": "string",
                    "enum": [
                         "null",
                         "boolean",
                         "object",
                         "array",
                         "number",
                         "string",
                         "integer"
                    ]
               },
               "org.sagebionetworks.repo.model.verification.VerificationPagedResults": {
                    "type": "object",
                    "properties": {
                         "results": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.verification.VerificationSubmission",
                                   "description": "User info submitted for verification by Synapse ACT"
                              },
                              "description": "The list of results for this page"
                         },
                         "totalNumberOfResults": {
                              "type": "integer",
                              "format": "int32"
                         }
                    },
                    "description": "A paginated list of VerificationSubmission objects"
               },
               "org.sagebionetworks.repo.model.EntityRef": {
                    "type": "object",
                    "properties": {
                         "entityId": {"type": "string"},
                         "versionNumber": {
                              "type": "integer",
                              "format": "int32"
                         }
                    },
                    "description": "Represents a reference to the id and version of an entity to be used in collections."
               },
               "org.sagebionetworks.repo.model.project.ProxyStorageLocationSettings": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.project.ProxyStorageLocationSettings"]
                         },
                         "storageLocationId": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "uploadType": {"type": "string"},
                         "banner": {"type": "string"},
                         "description": {"type": "string"},
                         "etag": {"type": "string"},
                         "createdOn": {"type": "string"},
                         "createdBy": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "proxyUrl": {"type": "string"},
                         "secretKey": {"type": "string"},
                         "benefactorId": {"type": "string"}
                    },
                    "description": "A storage location that uses a HTTPS proxy for all upload and download operations.",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.schema.CreateSchemaRequest": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.schema.CreateSchemaRequest"]
                         },
                         "schema": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.schema.JsonSchema",
                              "description": "The JSON schema is defined by: <a href=\"https://json-schema.org/\">json-schema.org<\/a>, specifically draft-07.  Only features listed here are currently supported."
                         },
                         "dryRun": {"type": "boolean"}
                    },
                    "description": "An AsynchronousRequestBody to define a new JsonSchema.",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.oauth.OAuthScope": {
                    "type": "string",
                    "enum": [
                         "openid",
                         "email",
                         "profile",
                         "view",
                         "download",
                         "modify",
                         "authorize",
                         "offline_access"
                    ]
               },
               "org.sagebionetworks.repo.model.download.ActionRequiredCount": {
                    "type": "object",
                    "properties": {
                         "action": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.download.Action",
                              "description": "An action that the user must take in order to download a file."
                         },
                         "count": {
                              "type": "integer",
                              "format": "int32"
                         }
                    },
                    "description": "Represents a single action that the user will need to take in order to download one or more files."
               },
               "org.sagebionetworks.repo.model.message.cloudmailin.Attachment": {
                    "type": "object",
                    "properties": {
                         "content": {"type": "string"},
                         "content_id": {"type": "string"},
                         "url": {"type": "string"},
                         "file_name": {"type": "string"},
                         "content_type": {"type": "string"},
                         "size": {"type": "string"},
                         "disposition": {"type": "string"}
                    },
                    "description": "Message Attachment"
               },
               "org.sagebionetworks.repo.model.UserGroupInt": {
                    "type": "object",
                    "properties": {
                         "id": {"type": "string"},
                         "isIndividual": {"type": "boolean"},
                         "etag": {"type": "string"}
                    },
                    "description": "This is the base interface for a user group",
                    "oneOf": [{"$ref": "#/components/schemas/org.sagebionetworks.repo.model.UserGroup"}],
                    "discriminator": {"propertyName": "concreteType"}
               },
               "org.sagebionetworks.repo.model.dataaccess.AccessApprovalSearchResult": {
                    "type": "object",
                    "properties": {
                         "id": {"type": "string"},
                         "accessRequirementId": {"type": "string"},
                         "accessRequirementVersion": {"type": "string"},
                         "accessRequirementName": {"type": "string"},
                         "submitterId": {"type": "string"},
                         "reviewerId": {"type": "string"},
                         "state": {"type": "string"},
                         "modifiedOn": {"type": "string"},
                         "expiredOn": {"type": "string"}
                    },
                    "description": "The result item in an Access Approval search"
               },
               "org.sagebionetworks.repo.model.BatchAccessApprovalInfoResponse": {
                    "type": "object",
                    "properties": {"results": {
                         "type": "array",
                         "items": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.AccessApprovalInfo",
                              "description": "Information about whether or not a user has an AccessApproval for an AccessRequirement."
                         },
                         "description": "The list of resulting AccessApprovalInfo."
                    }},
                    "description": "Response for an AccessApprovalInfoRequest."
               },
               "org.sagebionetworks.repo.model.JoinTeamSignedToken": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.JoinTeamSignedToken"]
                         },
                         "hmac": {"type": "string"},
                         "version": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "expiresOn": {"type": "string"},
                         "createdOn": {"type": "string"},
                         "userId": {"type": "string"},
                         "teamId": {"type": "string"},
                         "memberId": {"type": "string"}
                    },
                    "description": "Signed token containing the information needed to join a new user to a team.",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.provenance.Activity": {
                    "type": "object",
                    "properties": {
                         "id": {"type": "string"},
                         "name": {"type": "string"},
                         "description": {"type": "string"},
                         "etag": {"type": "string"},
                         "createdOn": {"type": "string"},
                         "modifiedOn": {"type": "string"},
                         "createdBy": {"type": "string"},
                         "modifiedBy": {"type": "string"},
                         "used": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.provenance.Used",
                                   "description": "Interface for JSON schema for a Used record in Provenance"
                              },
                              "description": "The entities used by this Activity.",
                              "uniqueItems": true
                         }
                    },
                    "description": "Interface for JSON schema for Activity POJO."
               },
               "org.sagebionetworks.repo.model.search.query.KeyList": {
                    "type": "object",
                    "properties": {
                         "key": {"type": "string"},
                         "values": {
                              "type": "array",
                              "items": {"type": "string"},
                              "description": "The value list"
                         }
                    },
                    "description": "JSON schema for a faceted key-to-string list pair."
               },
               "org.sagebionetworks.evaluation.model.EvaluationRoundLimitType": {
                    "type": "string",
                    "enum": [
                         "TOTAL",
                         "DAILY",
                         "WEEKLY",
                         "MONTHLY"
                    ]
               },
               "org.sagebionetworks.repo.model.subscription.SortDirection": {
                    "type": "string",
                    "enum": [
                         "ASC",
                         "DESC"
                    ]
               },
               "org.sagebionetworks.repo.model.Row": {
                    "type": "object",
                    "properties": {"cells": {
                         "type": "array",
                         "items": {"type": "string"},
                         "description": "The the id of the entity to which this reference refers"
                    }},
                    "description": "JSON schema for Row POJO"
               },
               "org.sagebionetworks.repo.model.admin.ExpireQuarantinedEmailRequest": {
                    "type": "object",
                    "properties": {"email": {"type": "string"}},
                    "description": "Request body used to remove an email address from quarantine"
               },
               "org.sagebionetworks.repo.model.schema.ListValidationResultsRequest": {
                    "type": "object",
                    "properties": {
                         "containerId": {"type": "string"},
                         "nextPageToken": {"type": "string"}
                    },
                    "description": "Request to get a single page of JSON schema validation results for a given Entity container."
               },
               "org.sagebionetworks.repo.model.dataaccess.Request": {
                    "type": "object",
                    "properties": {
                         "id": {"type": "string"},
                         "accessRequirementId": {"type": "string"},
                         "researchProjectId": {"type": "string"},
                         "createdOn": {"type": "string"},
                         "modifiedOn": {"type": "string"},
                         "createdBy": {"type": "string"},
                         "modifiedBy": {"type": "string"},
                         "ducFileHandleId": {"type": "string"},
                         "irbFileHandleId": {"type": "string"},
                         "attachments": {
                              "type": "array",
                              "items": {"type": "string"},
                              "description": "The set of file handle ID of attached files to this request."
                         },
                         "accessorChanges": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.dataaccess.AccessorChange",
                                   "description": "Request for a single user change access to a resource."
                              },
                              "description": "List of user changes. A user can gain access, renew access or have access revoked."
                         },
                         "etag": {"type": "string"},
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.dataaccess.Request"]
                         }
                    },
                    "description": "A Request contains information required by an AccessRequirement.",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.file.BaseKeyUploadDestination": {
                    "type": "object",
                    "properties": {
                         "concreteType": {"type": "string"},
                         "storageLocationId": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "uploadType": {"type": "string"},
                         "banner": {"type": "string"},
                         "baseKey": {"type": "string"}
                    },
                    "description": "An upload destination with an optional base key",
                    "oneOf": [
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.file.S3UploadDestination"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.file.ExternalS3UploadDestination"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.file.ExternalGoogleCloudUploadDestination"}
                    ],
                    "required": ["concreteType"],
                    "discriminator": {"propertyName": "concreteType"}
               },
               "org.sagebionetworks.repo.model.audit.AccessRecord": {
                    "type": "object",
                    "properties": {
                         "sessionId": {"type": "string"},
                         "timestamp": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "userId": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "method": {"type": "string"},
                         "requestURL": {"type": "string"},
                         "userAgent": {"type": "string"},
                         "host": {"type": "string"},
                         "origin": {"type": "string"},
                         "xForwardedFor": {"type": "string"},
                         "via": {"type": "string"},
                         "threadId": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "elapseMS": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "success": {"type": "boolean"},
                         "stack": {"type": "string"},
                         "instance": {"type": "string"},
                         "date": {"type": "string"},
                         "vmId": {"type": "string"},
                         "returnObjectId": {"type": "string"},
                         "queryString": {"type": "string"},
                         "responseStatus": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "oauthClientId": {"type": "string"},
                         "basicAuthUsername": {"type": "string"},
                         "authenticationMethod": {"type": "string"}
                    },
                    "description": "Data recored from a single web-services methods."
               },
               "org.sagebionetworks.repo.model.agent.AgentChatResponse": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.agent.AgentChatResponse"]
                         },
                         "sessionId": {"type": "string"},
                         "responseText": {"type": "string"}
                    },
                    "description": "The response to an agent chat request.",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.table.FacetColumnRequest": {
                    "type": "object",
                    "properties": {
                         "concreteType": {"type": "string"},
                         "columnName": {"type": "string"},
                         "jsonPath": {"type": "string"}
                    },
                    "description": "A set of values that have been selected for filtering in a faceted column",
                    "oneOf": [
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.FacetColumnValuesRequest"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.FacetColumnRangeRequest"}
                    ],
                    "required": ["concreteType"],
                    "discriminator": {"propertyName": "concreteType"}
               },
               "org.sagebionetworks.repo.model.table.TableEntity": {
                    "type": "object",
                    "properties": {
                         "name": {"type": "string"},
                         "description": {"type": "string"},
                         "id": {"type": "string"},
                         "etag": {"type": "string"},
                         "createdOn": {"type": "string"},
                         "modifiedOn": {"type": "string"},
                         "createdBy": {"type": "string"},
                         "modifiedBy": {"type": "string"},
                         "parentId": {"type": "string"},
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.table.TableEntity"]
                         },
                         "versionNumber": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "versionLabel": {"type": "string"},
                         "versionComment": {"type": "string"},
                         "isLatestVersion": {"type": "boolean"},
                         "columnIds": {
                              "type": "array",
                              "items": {"type": "string"},
                              "description": "The list of ColumnModel IDs that define the schema of the object."
                         },
                         "isSearchEnabled": {"type": "boolean"}
                    },
                    "description": "A TableEntity represents the metadata of a table.",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.download.QueryRequestDetails": {
                    "type": "object",
                    "properties": {"concreteType": {"type": "string"}},
                    "description": "Required.  Must be one of the implementations of QueryRequestDetails.",
                    "oneOf": [
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.download.ActionRequiredRequest"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.download.FilesStatisticsRequest"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.download.AvailableFilesRequest"}
                    ],
                    "required": ["concreteType"],
                    "discriminator": {"propertyName": "concreteType"}
               },
               "org.sagebionetworks.evaluation.model.SubmissionEligibility": {
                    "type": "object",
                    "properties": {
                         "isEligible": {"type": "boolean"},
                         "isRegistered": {"type": "boolean"},
                         "isQuotaFilled": {"type": "boolean"}
                    },
                    "description": "Describes the eligibility of a to submit to an Evaluation queue, reflecting the queue's submission quotas and current submissions."
               },
               "org.sagebionetworks.repo.model.registry.EntityTypeMetadata": {
                    "type": "object",
                    "properties": {
                         "name": {"type": "string"},
                         "displayName": {"type": "string"},
                         "className": {"type": "string"},
                         "entityType": {"type": "string"},
                         "defaultParentPath": {"type": "string"},
                         "validParentTypes": {
                              "type": "array",
                              "items": {"type": "string"},
                              "description": "The full path of the entity schema."
                         },
                         "aliases": {
                              "type": "array",
                              "items": {"type": "string"},
                              "description": "The list of aliases that can be used to look an entity type with a query."
                         }
                    },
                    "description": "Metadata about entities",
                    "required": ["name"]
               },
               "org.sagebionetworks.repo.model.Favorite": {
                    "type": "object",
                    "properties": {
                         "entityId": {"type": "string"},
                         "principalId": {"type": "string"},
                         "createdOn": {"type": "string"}
                    },
                    "description": "JSON schema for a Favorite POJO"
               },
               "org.sagebionetworks.repo.model.table.FacetColumnResult": {
                    "type": "object",
                    "properties": {
                         "concreteType": {"type": "string"},
                         "columnName": {"type": "string"},
                         "facetType": {"type": "string"},
                         "jsonPath": {"type": "string"}
                    },
                    "description": "Resulting information about a faceted column",
                    "oneOf": [
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.FacetColumnResultValues"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.FacetColumnResultRange"}
                    ],
                    "required": ["concreteType"],
                    "discriminator": {"propertyName": "concreteType"}
               },
               "org.sagebionetworks.repo.model.table.UploadToTableRequest": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.table.UploadToTableRequest"]
                         },
                         "entityId": {"type": "string"},
                         "tableId": {"type": "string"},
                         "uploadFileHandleId": {"type": "string"},
                         "updateEtag": {"type": "string"},
                         "linesToSkip": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "csvTableDescriptor": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.CsvTableDescriptor",
                              "description": "The description of a csv for upload or download."
                         },
                         "columnIds": {
                              "type": "array",
                              "items": {"type": "string"},
                              "description": "Deprecated."
                         }
                    },
                    "description": "A CSV table upload request.",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.v2.wiki.V2WikiHeader": {
                    "type": "object",
                    "properties": {
                         "id": {"type": "string"},
                         "title": {"type": "string"},
                         "parentId": {"type": "string"}
                    },
                    "description": "A WikiHeader contains basic metadata about a WikiPage."
               },
               "org.sagebionetworks.repo.model.message.cloudmailin.Headers": {
                    "type": "object",
                    "properties": {
                         "To": {"type": "string"},
                         "Cc": {"type": "string"},
                         "Bcc": {"type": "string"},
                         "Subject": {"type": "string"},
                         "From": {"type": "string"}
                    },
                    "description": "The headers from the email message."
               },
               "org.sagebionetworks.repo.model.doi.v2.DataciteMetadata": {
                    "type": "object",
                    "properties": {
                         "creators": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.doi.v2.DoiCreator",
                                   "description": "JSON schema for DOI Metadata Creator."
                              },
                              "description": "Required. The main researchers involved in producing the data, or the authors of the publication, in priority order."
                         },
                         "titles": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.doi.v2.DoiTitle",
                                   "description": "JSON schema for DOI Metadata Title."
                              },
                              "description": "Required. A name or title by which a resource is known."
                         },
                         "publicationYear": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "resourceType": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.doi.v2.DoiResourceType",
                              "description": "Required. Describes the type of media that the DOI Metadata refers to."
                         }
                    },
                    "description": "JSON schema for metadata that is submitted to DataCite and can later be retrieved via DOI in Synapse, with the DataCite REST API, or with external citation services.",
                    "oneOf": [{"$ref": "#/components/schemas/org.sagebionetworks.repo.model.doi.v2.Doi"}],
                    "discriminator": {"propertyName": "concreteType"}
               },
               "org.sagebionetworks.repo.model.table.TableUpdateResponse": {
                    "type": "object",
                    "properties": {"concreteType": {"type": "string"}},
                    "description": "Abstraction for a response to update a table.",
                    "oneOf": [
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.EntityUpdateResults"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.TableSchemaChangeResponse"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.TableSearchChangeResponse"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.RowReferenceSetResults"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.UploadToTableResult"}
                    ],
                    "required": ["concreteType"],
                    "discriminator": {"propertyName": "concreteType"}
               },
               "org.sagebionetworks.repo.model.dataaccess.OpenSubmissionPage": {
                    "type": "object",
                    "properties": {
                         "openSubmissionList": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.dataaccess.OpenSubmission",
                                   "description": "This object stores information about the number of submitted Submissions for a single ACTAccessRequirement."
                              }
                         },
                         "nextPageToken": {"type": "string"}
                    },
                    "description": "A page of OpenSubmission."
               },
               "PaginatedResultsOfVersionInfo": {
                    "type": "object",
                    "properties": {
                         "totalNumberOfResults": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "results": {
                              "type": "array",
                              "items": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.VersionInfo"}
                         }
                    }
               },
               "org.sagebionetworks.repo.model.oauth.OAuthClientList": {
                    "type": "object",
                    "properties": {
                         "results": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.oauth.OAuthClient",
                                   "description": "OAuth 2.0 Client metadata described in <a href=\"https://openid.net/specs/openid-connect-registration-1_0.html#ClientMetadata\">OpenID Connect Core 1.0 Client Metadata<\/a>"
                              }
                         },
                         "nextPageToken": {"type": "string"}
                    },
                    "description": "Metadata for a list page OAuth 2.0 clients"
               },
               "org.sagebionetworks.repo.model.auth.LoginResponse": {
                    "type": "object",
                    "properties": {
                         "sessionToken": {"type": "string"},
                         "accessToken": {"type": "string"},
                         "acceptsTermsOfUse": {"type": "boolean"},
                         "authenticationReceipt": {"type": "string"}
                    },
                    "description": "Holds a session token used for short-term authentication with Synapse"
               },
               "org.sagebionetworks.repo.model.auth.TwoFactorAuthDisableRequest": {
                    "type": "object",
                    "properties": {
                         "twoFaToken": {"type": "string"},
                         "password": {"type": "string"},
                         "twoFaResetToken": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.auth.TwoFactorAuthResetToken",
                              "description": "Signed token containing the the information necessary to reset 2fa for a user."
                         }
                    },
                    "description": "Allows to disable two-factor authentication for the user account"
               },
               "org.sagebionetworks.repo.model.DataType": {
                    "type": "string",
                    "enum": [
                         "SENSITIVE_DATA",
                         "OPEN_DATA"
                    ]
               },
               "org.sagebionetworks.repo.model.message.MessageContent": {
                    "type": "object",
                    "properties": {
                         "id": {"type": "string"},
                         "createdBy": {"type": "string"},
                         "fileHandleId": {"type": "string"},
                         "createdOn": {"type": "string"}
                    },
                    "description": "Contains fields common to all messages and comments",
                    "oneOf": [
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.message.Comment"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.message.MessageToUser"}
                    ],
                    "discriminator": {"propertyName": "concreteType"}
               },
               "org.sagebionetworks.repo.model.discussion.DiscussionThreadBundle": {
                    "type": "object",
                    "properties": {
                         "id": {"type": "string"},
                         "forumId": {"type": "string"},
                         "projectId": {"type": "string"},
                         "title": {"type": "string"},
                         "createdOn": {"type": "string"},
                         "createdBy": {"type": "string"},
                         "modifiedOn": {"type": "string"},
                         "etag": {"type": "string"},
                         "messageKey": {"type": "string"},
                         "numberOfViews": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "numberOfReplies": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "lastActivity": {"type": "string"},
                         "activeAuthors": {
                              "type": "array",
                              "items": {"type": "string"},
                              "description": "The list of userId whose most active on this Thread "
                         },
                         "isEdited": {"type": "boolean"},
                         "isDeleted": {"type": "boolean"},
                         "isPinned": {"type": "boolean"}
                    },
                    "description": "The Thread model object represents a single Thread."
               },
               "org.sagebionetworks.repo.model.drs.Content": {
                    "type": "object",
                    "properties": {
                         "name": {"type": "string"},
                         "id": {"type": "string"},
                         "drs_uri": {"type": "string"}
                    },
                    "description": "For blob there is no contents and for bundle its list of object inside the bundle."
               },
               "org.sagebionetworks.repo.model.table.UploadToTablePreviewResult": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.table.UploadToTablePreviewResult"]
                         },
                         "suggestedColumns": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.ColumnModel",
                                   "description": "A column model contains the metadata of a single column of a table or view."
                              },
                              "description": "The list of ColumnModels that are compatible with the CSV file.  This is more accurate for a full scan than a partial scan."
                         },
                         "sampleRows": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.Row",
                                   "description": "Represents a single row of a TableEntity"
                              },
                              "description": "A sampling of the first few rows from the CSV as they would be applied with the provided parameters."
                         },
                         "rowsScanned": {
                              "type": "integer",
                              "format": "int32"
                         }
                    },
                    "description": "Resulting preview of a CSV upload to a Table.",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.verification.VerificationSubmission": {
                    "type": "object",
                    "properties": {
                         "id": {"type": "string"},
                         "createdOn": {"type": "string"},
                         "createdBy": {"type": "string"},
                         "firstName": {"type": "string"},
                         "lastName": {"type": "string"},
                         "emails": {
                              "type": "array",
                              "items": {"type": "string"},
                              "description": "The list of user email addresses registered to this user."
                         },
                         "notificationEmail": {"type": "string"},
                         "location": {"type": "string"},
                         "company": {"type": "string"},
                         "orcid": {"type": "string"},
                         "stateHistory": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.verification.VerificationState",
                                   "description": "The state of a verification submission"
                              },
                              "description": "List of state changes the submission has passed through, ordered by time.  The last in the list contains the current state of the submission."
                         },
                         "attachments": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.verification.AttachmentMetadata",
                                   "description": "The metadata of a file attached to a Verification Submission"
                              },
                              "description": "Metadata of Files attached to the submission. The list will be emptied after the state is APPROVED or REJECTED."
                         }
                    },
                    "description": "User info submitted for verification by Synapse ACT"
               },
               "org.sagebionetworks.repo.model.table.SelectColumn": {
                    "type": "object",
                    "properties": {
                         "name": {"type": "string"},
                         "columnType": {"type": "string"},
                         "id": {"type": "string"}
                    },
                    "description": "A column model contains the metadata of a single column of a TableEntity"
               },
               "org.sagebionetworks.repo.model.ACTAccessRequirement": {
                    "type": "object",
                    "properties": {
                         "versionNumber": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "id": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "description": {"type": "string"},
                         "name": {"type": "string"},
                         "etag": {"type": "string"},
                         "createdOn": {"type": "string"},
                         "modifiedOn": {"type": "string"},
                         "createdBy": {"type": "string"},
                         "modifiedBy": {"type": "string"},
                         "subjectsDefinedByAnnotations": {"type": "boolean"},
                         "subjectIds": {
                              "type": "array",
                              "items": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.RestrictableObjectDescriptor"},
                              "description": "The IDs of the items controlled by this Access Requirement when 'subjectsDefinedByAnnotations=false'. This property is mutually exclusive with 'subjectsDefinedByAnnotations'.  When 'subjectsDefinedByAnnotations=true' then this property must be empty or excluded.  Required when creating or updating and 'subjectsDefinedByAnnotations=false' or 'subjectsDefinedByAnnotations' is excluded."
                         },
                         "accessType": {"type": "string"},
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.ACTAccessRequirement"]
                         },
                         "actContactInfo": {"type": "string"},
                         "openJiraIssue": {"type": "boolean"}
                    },
                    "description": "JSON schema for out of band 'Access Control Team' controlled Access Requirement, a 'tier 3' Access Requirement. This access requirement directs user to contact an ACT member to gain access to the data.",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.evaluation.model.EvaluationRoundListRequest": {
                    "type": "object",
                    "properties": {"nextPageToken": {"type": "string"}},
                    "description": "Request to list a single page of EvaluationRounds associated with an Evaluation"
               },
               "org.sagebionetworks.repo.model.PaginatedTeamIds": {
                    "type": "object",
                    "properties": {
                         "teamIds": {
                              "type": "array",
                              "items": {"type": "string"},
                              "description": "The requested team IDs."
                         },
                         "nextPageToken": {"type": "string"}
                    },
                    "description": "Container for a page of team IDs."
               },
               "org.sagebionetworks.repo.model.file.BatchFileHandleCopyRequest": {
                    "type": "object",
                    "properties": {"copyRequests": {
                         "type": "array",
                         "items": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.file.FileHandleCopyRequest",
                              "description": "Request to make a copy of an existing FileHandle."
                         },
                         "description": "Defines the copy requests."
                    }},
                    "description": "Batch Request for copying FileHandles."
               },
               "org.sagebionetworks.repo.model.principal.EmailQuarantineReason": {
                    "type": "string",
                    "enum": [
                         "PERMANENT_BOUNCE",
                         "TRANSIENT_BOUNCE",
                         "COMPLAINT",
                         "OTHER"
                    ]
               },
               "org.sagebionetworks.repo.model.oauth.OAuthClientVerificationPrecheckResult": {
                    "type": "object",
                    "properties": {"reverificationRequired": {"type": "boolean"}},
                    "description": "boolean value indicating whether proposed changes to the OAuth client will require reverification"
               },
               "org.sagebionetworks.repo.model.doi.v2.DoiRequest": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.doi.v2.DoiRequest"]
                         },
                         "doi": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.doi.v2.Doi",
                              "description": "JSON schema for fields associated with a DOI and its metadata. This object contains fields from both <a href=\"${org.sagebionetworks.repo.model.doi.v2.DoiAssociation}\">DoiAssociation<\/a> and <a href=\"${org.sagebionetworks.repo.model.doi.v2.DataciteMetadata}\">DataciteMetadata<\/a>.<br>To mint a DOI, the following fields are required: <ul> <li>Information that uniquely identifies an object in Synapse <ul><li> The object ID <i>(e.g. \"syn12345\")<\/i><\/li><li>The object type <i>(Note: as of this writing, only ENTITY is supported)<\/i><\/li><li>The version number of the object <i>(Optional. A \"null\" version will mint a DOI that will point to the most recent version of the object, even if the object changes)<\/i><\/li><li>An eTag <i>(Necessary when updating an existing DOI)<\/i><\/li><\/ul><\/li> <li>Additional supplementary information to mint a DOI <ul><li>Creator(s)<\/li><li>Title(s)<\/li><li>The general resource type<\/li><li>A publication year (no later than one year after the current year)<\/li><\/ul><\/li> <\/ul><br>For more information, see the <a href=\"${org.sagebionetworks.repo.model.doi.v2.DoiAssociation}\">DoiAssociation<\/a> and <a href=\"${org.sagebionetworks.repo.model.doi.v2.DataciteMetadata}\">DataciteMetadata<\/a> objects."
                         }
                    },
                    "description": "An AsynchronousRequestBody to mint or modify DOIs.",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.FileEntity": {
                    "type": "object",
                    "properties": {
                         "name": {"type": "string"},
                         "description": {"type": "string"},
                         "id": {"type": "string"},
                         "etag": {"type": "string"},
                         "createdOn": {"type": "string"},
                         "modifiedOn": {"type": "string"},
                         "createdBy": {"type": "string"},
                         "modifiedBy": {"type": "string"},
                         "parentId": {"type": "string"},
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.FileEntity"]
                         },
                         "versionNumber": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "versionLabel": {"type": "string"},
                         "versionComment": {"type": "string"},
                         "isLatestVersion": {"type": "boolean"},
                         "dataFileHandleId": {"type": "string"},
                         "fileNameOverride": {"type": "string"}
                    },
                    "description": "JSON schema for File POJO",
                    "required": ["concreteType"]
               },
               "ListWrapperOfUploadDestinationLocation": {
                    "type": "object",
                    "properties": {"list": {
                         "type": "array",
                         "items": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.file.UploadDestinationLocation"}
                    }}
               },
               "org.sagebionetworks.repo.model.table.Table": {
                    "type": "object",
                    "properties": {
                         "name": {"type": "string"},
                         "description": {"type": "string"},
                         "id": {"type": "string"},
                         "etag": {"type": "string"},
                         "createdOn": {"type": "string"},
                         "modifiedOn": {"type": "string"},
                         "createdBy": {"type": "string"},
                         "modifiedBy": {"type": "string"},
                         "parentId": {"type": "string"},
                         "concreteType": {"type": "string"},
                         "versionNumber": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "versionLabel": {"type": "string"},
                         "versionComment": {"type": "string"},
                         "isLatestVersion": {"type": "boolean"},
                         "columnIds": {
                              "type": "array",
                              "items": {"type": "string"},
                              "description": "The list of ColumnModel IDs that define the schema of the object."
                         },
                         "isSearchEnabled": {"type": "boolean"}
                    },
                    "description": "JSON schema that defines a common interface for all the table type entities.",
                    "oneOf": [
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.SubmissionView"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.DatasetCollection"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.EntityView"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.VirtualTable"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.MaterializedView"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.Dataset"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.TableEntity"}
                    ],
                    "required": ["concreteType"],
                    "discriminator": {"propertyName": "concreteType"}
               },
               "org.sagebionetworks.repo.model.IdSet": {
                    "type": "object",
                    "properties": {"set": {
                         "type": "array",
                         "items": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "uniqueItems": true
                    }},
                    "description": "Set of IDs"
               },
               "org.sagebionetworks.repo.model.table.EntityView": {
                    "type": "object",
                    "properties": {
                         "name": {"type": "string"},
                         "description": {"type": "string"},
                         "id": {"type": "string"},
                         "etag": {"type": "string"},
                         "createdOn": {"type": "string"},
                         "modifiedOn": {"type": "string"},
                         "createdBy": {"type": "string"},
                         "modifiedBy": {"type": "string"},
                         "parentId": {"type": "string"},
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.table.EntityView"]
                         },
                         "versionNumber": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "versionLabel": {"type": "string"},
                         "versionComment": {"type": "string"},
                         "isLatestVersion": {"type": "boolean"},
                         "columnIds": {
                              "type": "array",
                              "items": {"type": "string"},
                              "description": "The list of ColumnModel IDs that define the schema of the object."
                         },
                         "isSearchEnabled": {"type": "boolean"},
                         "viewTypeMask": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "type": {"type": "string"},
                         "scopeIds": {
                              "type": "array",
                              "items": {"type": "string"},
                              "description": "The list of container ids that define the scope of this view."
                         }
                    },
                    "description": "A view of Entities within a defined scope.",
                    "required": ["concreteType"]
               },
               "PaginatedResultsOfUserProfile": {
                    "type": "object",
                    "properties": {
                         "totalNumberOfResults": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "results": {
                              "type": "array",
                              "items": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.UserProfile"}
                         }
                    }
               },
               "org.sagebionetworks.repo.model.docker.DockerRegistryEvent": {
                    "type": "object",
                    "properties": {
                         "id": {"type": "string"},
                         "timestamp": {"type": "string"},
                         "action": {"type": "string"},
                         "target": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.docker.RegistryEventTarget"},
                         "request": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.docker.RegistryEventRequest"},
                         "actor": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.docker.RegistryEventActor"},
                         "source": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.docker.RegistryEventSource"}
                    },
                    "description": "https://godoc.org/github.com/docker/distribution/notifications#Event"
               },
               "org.sagebionetworks.repo.model.table.TableBundle": {
                    "type": "object",
                    "properties": {
                         "columnModels": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.ColumnModel",
                                   "description": "A column model contains the metadata of a single column of a table or view."
                              },
                              "description": "The list of ColumnModels currently used by this table."
                         },
                         "maxRowsPerPage": {
                              "type": "integer",
                              "format": "int32"
                         }
                    },
                    "description": "Metadata about a TableEntity that can be included in an EntityBundle"
               },
               "org.sagebionetworks.repo.model.UserGroupHeader": {
                    "type": "object",
                    "properties": {
                         "ownerId": {"type": "string"},
                         "firstName": {"type": "string"},
                         "lastName": {"type": "string"},
                         "userName": {"type": "string"},
                         "email": {"type": "string"},
                         "displayName": {"type": "string"},
                         "isIndividual": {"type": "boolean"}
                    },
                    "description": "JSON schema for UserHeader POJO"
               },
               "org.sagebionetworks.repo.model.ChallengeTeamPagedResults": {
                    "type": "object",
                    "properties": {
                         "results": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.ChallengeTeam",
                                   "description": "Relationship between a Challenge and registered Team"
                              },
                              "description": "The list of results for this page"
                         },
                         "totalNumberOfResults": {
                              "type": "integer",
                              "format": "int32"
                         }
                    },
                    "description": "A paginated list of ChallengeTeam objects"
               },
               "org.sagebionetworks.repo.model.auth.AccessTokenState": {
                    "type": "string",
                    "enum": [
                         "ACTIVE",
                         "EXPIRED"
                    ]
               },
               "org.sagebionetworks.repo.model.wiki.WikiHeader": {
                    "type": "object",
                    "properties": {
                         "id": {"type": "string"},
                         "title": {"type": "string"},
                         "parentId": {"type": "string"}
                    },
                    "description": "A WikiHeader contains basic metadata about a WikiPage."
               },
               "org.sagebionetworks.repo.model.file.FileHandleRestoreResponse": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.file.FileHandleRestoreResponse"]
                         },
                         "restoreResults": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.file.FileHandleRestoreResult",
                                   "description": "Result of a single file handle restore operation."
                              },
                              "description": "The list of restore operation status for each of the file handle in the original request."
                         }
                    },
                    "description": "Response of a restore operation. Each item in the list match the order of the file handle id in the original request.",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.file.FileHandleResults": {
                    "type": "object",
                    "properties": {"list": {
                         "type": "array",
                         "items": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.file.FileHandle",
                              "description": "The FileHandle interface defines all of the fields that are common to all implementations."
                         }
                    }},
                    "description": "JSON schema for FileHandleResults."
               },
               "org.sagebionetworks.repo.model.search.query.FacetSort": {
                    "type": "object",
                    "properties": {
                         "facetName": {"type": "string"},
                         "sortType": {"type": "string"},
                         "sumFields": {
                              "type": "array",
                              "items": {"type": "string"},
                              "description": "Sort the facet values by the sum of the values in two or more fields. This is a list of names of the fields to sum."
                         },
                         "maxfield": {"type": "string"}
                    },
                    "description": "JSON schema for a facet field sort key-value pair."
               },
               "PaginatedResultsOfTeamMember": {
                    "type": "object",
                    "properties": {
                         "totalNumberOfResults": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "results": {
                              "type": "array",
                              "items": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.TeamMember"}
                         }
                    }
               },
               "org.sagebionetworks.evaluation.model.SubmissionStatusBatch": {
                    "type": "object",
                    "properties": {
                         "statuses": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.evaluation.model.SubmissionStatus",
                                   "description": "A SubmissionStatus is a secondary, mutable object associated with a Submission. This object should be used to contain scoring data about the Submission."
                              },
                              "description": "A collection of Submission Statuses"
                         },
                         "batchToken": {"type": "string"},
                         "isFirstBatch": {"type": "boolean"},
                         "isLastBatch": {"type": "boolean"}
                    },
                    "description": "A batch of status objects, to be updated en masse."
               },
               "org.sagebionetworks.repo.model.table.ColumnSingleValueFilterOperator": {
                    "type": "string",
                    "enum": [
                         "LIKE",
                         "EQUAL",
                         "IN"
                    ]
               },
               "org.sagebionetworks.repo.model.table.ColumnMultiValueFunction": {
                    "type": "string",
                    "enum": [
                         "HAS",
                         "HAS_LIKE"
                    ]
               },
               "PaginatedResultsOfMessageBundle": {
                    "type": "object",
                    "properties": {
                         "totalNumberOfResults": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "results": {
                              "type": "array",
                              "items": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.message.MessageBundle"}
                         }
                    }
               },
               "org.sagebionetworks.repo.model.attachment.UploadStatus": {
                    "type": "string",
                    "enum": [
                         "FAILED",
                         "SUCCESS"
                    ]
               },
               "org.sagebionetworks.repo.model.dataaccess.SubmissionReviewerFilterType": {
                    "type": "string",
                    "enum": [
                         "ALL",
                         "ACT_ONLY",
                         "DELEGATED_ONLY"
                    ]
               },
               "org.sagebionetworks.evaluation.model.SubmissionStatus": {
                    "type": "object",
                    "properties": {
                         "id": {"type": "string"},
                         "etag": {"type": "string"},
                         "modifiedOn": {"type": "string"},
                         "status": {"type": "string"},
                         "score": {"type": "number"},
                         "report": {"type": "string"},
                         "annotations": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.annotation.Annotations",
                              "description": "Primary container object for Annotations on a Synapse object"
                         },
                         "submissionAnnotations": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.annotation.v2.Annotations",
                              "description": "Annotations are additional key-value pair metadata that are associated with an object."
                         },
                         "entityId": {"type": "string"},
                         "versionNumber": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "statusVersion": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "canCancel": {"type": "boolean"},
                         "cancelRequested": {"type": "boolean"}
                    },
                    "description": "A SubmissionStatus is a secondary, mutable object associated with a Submission. This object should be used to contain scoring data about the Submission."
               },
               "org.sagebionetworks.repo.model.table.QueryBundleRequest": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.table.QueryBundleRequest"]
                         },
                         "entityId": {"type": "string"},
                         "query": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.Query"},
                         "partMask": {
                              "type": "integer",
                              "format": "int32"
                         }
                    },
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.dataaccess.AccessApprovalSearchSort": {
                    "type": "object",
                    "properties": {
                         "field": {"type": "string"},
                         "direction": {"type": "string"}
                    },
                    "description": "Identifies both the field and direction for a single sort operation"
               },
               "org.sagebionetworks.repo.model.dataaccess.SubmissionSearchResponse": {
                    "type": "object",
                    "properties": {
                         "results": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.dataaccess.SubmissionSearchResult",
                                   "description": ""
                              },
                              "description": "The matching submissions information corresponding to the search parameters"
                         },
                         "nextPageToken": {"type": "string"}
                    },
                    "description": "Response for the request to search through the data access submissions"
               },
               "org.sagebionetworks.repo.model.subscription.SubscriptionPagedResults": {
                    "type": "object",
                    "properties": {
                         "results": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.subscription.Subscription",
                                   "description": "The model object represents a single Subscription."
                              },
                              "description": "The list of results for this page"
                         },
                         "totalNumberOfResults": {
                              "type": "integer",
                              "format": "int32"
                         }
                    },
                    "description": "A paginated list of Subscription objects"
               },
               "org.sagebionetworks.repo.model.message.cloudmailin.AuthorizationCheckHeader": {
                    "type": "object",
                    "properties": {
                         "to": {"type": "string"},
                         "from": {"type": "string"},
                         "size": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "helo_domain": {"type": "string"},
                         "remote_ip": {"type": "string"}
                    },
                    "description": "Message Envelope"
               },
               "org.sagebionetworks.repo.model.report.DownloadStorageReportRequest": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.report.DownloadStorageReportRequest"]
                         },
                         "reportType": {"type": "string"}
                    },
                    "description": "A Storage Report CSV download request.",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.table.QueryFilter": {
                    "type": "object",
                    "properties": {
                         "concreteType": {"type": "string"},
                         "isDefiningCondition": {"type": "boolean"}
                    },
                    "oneOf": [
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.ColumnMultiValueFunctionQueryFilter"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.ColumnSingleValueQueryFilter"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.TextMatchesQueryFilter"}
                    ],
                    "required": ["concreteType"],
                    "discriminator": {"propertyName": "concreteType"}
               },
               "org.sagebionetworks.repo.model.versionInfo.SynapseVersionInfo": {
                    "type": "object",
                    "properties": {
                         "version": {"type": "string"},
                         "stackInstance": {"type": "string"}
                    },
                    "description": "Information about the version of the stack"
               },
               "org.sagebionetworks.repo.model.asynch.AsynchronousRequestBody": {
                    "type": "object",
                    "properties": {"concreteType": {"type": "string"}},
                    "description": "The body of an Asynchronous job request.",
                    "oneOf": [
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.download.DownloadListManifestRequest"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.report.DownloadStorageReportRequest"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.download.AddToDownloadListRequest"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.UploadToTablePreviewRequest"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.DownloadFromTableRequest"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.download.DownloadListPackageRequest"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.doi.v2.DoiRequest"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.UploadToTableRequest"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.TableSchemaChangeRequest"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.ViewColumnModelRequest"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.QueryBundleRequest"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.TableSearchChangeRequest"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.TableUpdateTransactionRequest"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.file.FileHandleArchivalRequest"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.download.DownloadListQueryRequest"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.file.BulkFileDownloadRequest"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.migration.AsyncMigrationRequest"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.agent.AgentChatRequest"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.AppendableRowSetRequest"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.schema.CreateSchemaRequest"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.schema.GetValidationSchemaRequest"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.file.FileHandleRestoreRequest"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.QueryNextPageToken"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.file.AddFileToDownloadListRequest"}
                    ],
                    "required": ["concreteType"],
                    "discriminator": {"propertyName": "concreteType"}
               },
               "org.sagebionetworks.repo.model.agent.ListAgentSessionsResponse": {
                    "type": "object",
                    "properties": {
                         "page": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.agent.AgentSession",
                                   "description": "Information about a specific session (conversation) with an agent.  Only the acess level can be changed on an existing session.  You will need to start a new session if you wish to use a different agentId."
                              }
                         },
                         "nextPageToken": {"type": "string"}
                    },
                    "description": "A single page of agent sessions"
               },
               "org.sagebionetworks.repo.model.ProjectHeader": {
                    "type": "object",
                    "properties": {
                         "name": {"type": "string"},
                         "id": {"type": "string"},
                         "lastActivity": {"type": "string"},
                         "modifiedOn": {"type": "string"},
                         "modifiedBy": {
                              "type": "integer",
                              "format": "int32"
                         }
                    },
                    "description": "JSON schema for ProjectHeader"
               },
               "org.sagebionetworks.repo.model.table.Dataset": {
                    "type": "object",
                    "properties": {
                         "name": {"type": "string"},
                         "description": {"type": "string"},
                         "id": {"type": "string"},
                         "etag": {"type": "string"},
                         "createdOn": {"type": "string"},
                         "modifiedOn": {"type": "string"},
                         "createdBy": {"type": "string"},
                         "modifiedBy": {"type": "string"},
                         "parentId": {"type": "string"},
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.table.Dataset"]
                         },
                         "versionNumber": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "versionLabel": {"type": "string"},
                         "versionComment": {"type": "string"},
                         "isLatestVersion": {"type": "boolean"},
                         "columnIds": {
                              "type": "array",
                              "items": {"type": "string"},
                              "description": "The list of ColumnModel IDs that define the schema of the object."
                         },
                         "isSearchEnabled": {"type": "boolean"},
                         "items": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.EntityRef",
                                   "description": "Represents a reference to the id and version of an entity to be used in collections."
                              },
                              "description": "The flat list of file entity references that define this dataset.  Limit: 30K items."
                         },
                         "size": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "checksum": {"type": "string"},
                         "count": {
                              "type": "integer",
                              "format": "int32"
                         }
                    },
                    "description": "A dataset is a type of view defined by a flat list of entities.",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.Snapshotable": {
                    "type": "object",
                    "properties": {},
                    "description": "This interface helps identify object that can be captured.",
                    "oneOf": [{"$ref": "#/components/schemas/org.sagebionetworks.repo.model.file.BulkFileDownloadResponse"}],
                    "discriminator": {"propertyName": "concreteType"}
               },
               "org.sagebionetworks.repo.model.query.Row": {
                    "type": "object",
                    "properties": {"values": {
                         "type": "array",
                         "items": {"type": "string"},
                         "description": "The ordered list of annotation values for this object."
                    }},
                    "description": "A simple list of Strings to store query results about a single object."
               },
               "org.sagebionetworks.evaluation.model.SubmissionContributor": {
                    "type": "object",
                    "properties": {
                         "principalId": {"type": "string"},
                         "createdOn": {"type": "string"}
                    },
                    "description": "A contributor to an evaluation Submission"
               },
               "org.sagebionetworks.repo.model.table.RowReference": {
                    "type": "object",
                    "properties": {
                         "rowId": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "versionNumber": {
                              "type": "integer",
                              "format": "int32"
                         }
                    },
                    "description": "Reference for a single Row of a TableEntity"
               },
               "org.sagebionetworks.repo.model.table.QueryResult": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.table.QueryResult"]
                         },
                         "queryResults": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.RowSet",
                              "description": "Represents a set of row of a TableEntity"
                         },
                         "nextPageToken": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.QueryNextPageToken"}
                    },
                    "description": "A page of query result.",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.dataaccess.Renewal": {
                    "type": "object",
                    "properties": {
                         "id": {"type": "string"},
                         "accessRequirementId": {"type": "string"},
                         "researchProjectId": {"type": "string"},
                         "createdOn": {"type": "string"},
                         "modifiedOn": {"type": "string"},
                         "createdBy": {"type": "string"},
                         "modifiedBy": {"type": "string"},
                         "ducFileHandleId": {"type": "string"},
                         "irbFileHandleId": {"type": "string"},
                         "attachments": {
                              "type": "array",
                              "items": {"type": "string"},
                              "description": "The set of file handle ID of attached files to this request."
                         },
                         "accessorChanges": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.dataaccess.AccessorChange",
                                   "description": "Request for a single user change access to a resource."
                              },
                              "description": "List of user changes. A user can gain access, renew access or have access revoked."
                         },
                         "etag": {"type": "string"},
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.dataaccess.Renewal"]
                         },
                         "publication": {"type": "string"},
                         "summaryOfUse": {"type": "string"}
                    },
                    "description": "A Renewal contains information required by an AccessRequirement and additional information about renewing a request.",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.agent.SessionHistoryRequest": {
                    "type": "object",
                    "properties": {"nextPageToken": {"type": "string"}},
                    "description": "Request a single page of a session's history.  The history is ordered by the interaction time stamp descending."
               },
               "org.sagebionetworks.repo.model.drs.ChecksumType": {
                    "type": "string",
                    "enum": ["md5"]
               },
               "org.sagebionetworks.repo.model.download.ActionRequiredRequest": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.download.ActionRequiredRequest"]
                         },
                         "nextPageToken": {"type": "string"}
                    },
                    "description": "Request to get a single page of actions that the user must take to download one or more files from their download list.",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.dataaccess.AccessApprovalSearchRequest": {
                    "type": "object",
                    "properties": {
                         "accessorId": {"type": "string"},
                         "accessRequirementId": {"type": "string"},
                         "sort": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.dataaccess.AccessApprovalSearchSort",
                                   "description": "Identifies both the field and direction for a single sort operation"
                              }
                         },
                         "nextPageToken": {"type": "string"}
                    },
                    "description": "A request to search through the access approval history",
                    "required": ["accessorId"]
               },
               "org.sagebionetworks.repo.model.message.PublishResult": {
                    "type": "object",
                    "properties": {
                         "changeNumber": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "success": {"type": "boolean"}
                    },
                    "description": "JSON schema for a change message"
               },
               "org.sagebionetworks.repo.model.table.SnapshotResponse": {
                    "type": "object",
                    "properties": {"snapshotVersionNumber": {
                         "type": "integer",
                         "format": "int32"
                    }},
                    "description": "Response to creating a snapshot of a table of view."
               },
               "org.sagebionetworks.repo.model.principal.PrincipalAliasRequest": {
                    "type": "object",
                    "properties": {
                         "alias": {"type": "string"},
                         "type": {"type": "string"}
                    },
                    "description": "The request to look a principal alias up"
               },
               "org.sagebionetworks.repo.model.AccessRequirement": {
                    "type": "object",
                    "properties": {
                         "versionNumber": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "id": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "description": {"type": "string"},
                         "name": {"type": "string"},
                         "etag": {"type": "string"},
                         "createdOn": {"type": "string"},
                         "modifiedOn": {"type": "string"},
                         "createdBy": {"type": "string"},
                         "modifiedBy": {"type": "string"},
                         "subjectsDefinedByAnnotations": {"type": "boolean"},
                         "subjectIds": {
                              "type": "array",
                              "items": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.RestrictableObjectDescriptor"},
                              "description": "The IDs of the items controlled by this Access Requirement when 'subjectsDefinedByAnnotations=false'. This property is mutually exclusive with 'subjectsDefinedByAnnotations'.  When 'subjectsDefinedByAnnotations=true' then this property must be empty or excluded.  Required when creating or updating and 'subjectsDefinedByAnnotations=false' or 'subjectsDefinedByAnnotations' is excluded."
                         },
                         "accessType": {"type": "string"},
                         "concreteType": {"type": "string"}
                    },
                    "description": "Interface for JSON schema for AccessRequirement.  The Access Requirement mechanism is distinct from the access control list in that it is controlled not by the entity owner but by a separate authority:  Access Requirements are created and maintained by the Synapse Access and Compliance Team (ACT).  ACTAccessRequirements can only be approved by the ACT.  Self-sign Access Requirements can be approved by the user desiring access, but said user first has to meet 'terms of use' associated with the requirement.",
                    "oneOf": [
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.PostMessageContentAccessRequirement"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.TermsOfUseAccessRequirement"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.ManagedACTAccessRequirement"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.SelfSignAccessRequirement"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.ACTAccessRequirement"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.LockAccessRequirement"}
                    ],
                    "required": ["concreteType"],
                    "discriminator": {"propertyName": "concreteType"}
               },
               "org.sagebionetworks.repo.model.feature.FeatureStatus": {
                    "type": "object",
                    "properties": {
                         "feature": {"type": "string"},
                         "enabled": {"type": "boolean"}
                    },
                    "description": "The status of a particular feature"
               },
               "org.sagebionetworks.repo.model.file.MultipartUploadCopyRequest": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.file.MultipartUploadCopyRequest"]
                         },
                         "partSizeBytes": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "fileName": {"type": "string"},
                         "storageLocationId": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "generatePreview": {"type": "boolean"},
                         "sourceFileHandleAssociation": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.file.FileHandleAssociation",
                              "description": "Describes an association of a FileHandle with another object."
                         }
                    },
                    "description": "A multi-part upload that performs a copy of an existing file handle without data transfer from the client. Currently supports only copy from and to S3 buckets that live in the same region.",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.webhook.VerifyWebhookRequest": {
                    "type": "object",
                    "properties": {"verificationCode": {"type": "string"}},
                    "description": "Request body used to verify a webhook, the verification code is sent to the webhook endpoint when the webhook is created or when its endpoint is modified."
               },
               "org.sagebionetworks.repo.model.asynch.AsyncJobId": {
                    "type": "object",
                    "properties": {"token": {"type": "string"}},
                    "description": "Object used to track the status of an asynchronous job."
               },
               "org.sagebionetworks.repo.model.TeamMemberTypeFilterOptions": {
                    "type": "string",
                    "enum": [
                         "ADMIN",
                         "MEMBER",
                         "ALL"
                    ]
               },
               "org.sagebionetworks.repo.model.principal.AliasList": {
                    "type": "object",
                    "properties": {"list": {
                         "type": "array",
                         "items": {"type": "string"}
                    }},
                    "description": "List of principal aliases"
               },
               "org.sagebionetworks.repo.model.audit.FileHandleSnapshot": {
                    "type": "object",
                    "properties": {
                         "id": {"type": "string"},
                         "createdBy": {"type": "string"},
                         "createdOn": {"type": "string"},
                         "modifiedOn": {"type": "string"},
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.audit.FileHandleSnapshot"]
                         },
                         "contentMd5": {"type": "string"},
                         "contentType": {"type": "string"},
                         "fileName": {"type": "string"},
                         "storageLocationId": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "contentSize": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "key": {"type": "string"},
                         "bucket": {"type": "string"},
                         "previewId": {"type": "string"},
                         "isPreview": {"type": "boolean"},
                         "status": {"type": "string"}
                    },
                    "description": "The FileHandleSnapshot captures all of the fields that are common to all FileHandle implementations.",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.file.FileDownloadCode": {
                    "type": "string",
                    "enum": [
                         "NOT_FOUND",
                         "UNAUTHORIZED",
                         "DUPLICATE",
                         "EXCEEDS_SIZE_LIMIT",
                         "UNKNOWN_ERROR"
                    ]
               },
               "PaginatedResultsOfEvaluation": {
                    "type": "object",
                    "properties": {
                         "totalNumberOfResults": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "results": {
                              "type": "array",
                              "items": {"$ref": "#/components/schemas/org.sagebionetworks.evaluation.model.Evaluation"}
                         }
                    }
               },
               "org.sagebionetworks.repo.model.migration.IdRange": {
                    "type": "object",
                    "properties": {
                         "minimumId": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "maximumId": {
                              "type": "integer",
                              "format": "int32"
                         }
                    },
                    "description": "A range of IDs"
               },
               "org.sagebionetworks.repo.model.oauth.OAuthValidationRequest": {
                    "type": "object",
                    "properties": {
                         "provider": {"type": "string"},
                         "authenticationCode": {"type": "string"},
                         "redirectUrl": {"type": "string"}
                    },
                    "description": "Request for an OAuth2 user validation."
               },
               "PaginatedResultsOfMessageToUser": {
                    "type": "object",
                    "properties": {
                         "totalNumberOfResults": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "results": {
                              "type": "array",
                              "items": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.message.MessageToUser"}
                         }
                    }
               },
               "org.sagebionetworks.repo.model.BatchAccessApprovalInfoRequest": {
                    "type": "object",
                    "properties": {
                         "userId": {"type": "string"},
                         "accessRequirementIds": {
                              "type": "array",
                              "items": {"type": "string"},
                              "description": "The ID of the access requirements."
                         }
                    },
                    "description": "Request for a batch of AccessApprovalInfo."
               },
               "org.sagebionetworks.repo.model.daemon.BackupAliasType": {
                    "type": "string",
                    "enum": [
                         "TABLE_NAME",
                         "MIGRATION_TYPE_NAME"
                    ]
               },
               "org.sagebionetworks.repo.model.schema.GetValidationSchemaRequest": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.schema.GetValidationSchemaRequest"]
                         },
                         "$id": {"type": "string"}
                    },
                    "description": "To use a JSON schema for validation, the JSON schema plus all of its dependency schemas must be provided to a JSON schema validator.  The 'validation' schema is simply a JSON schema with all of its dependencies added to the 'definitions' section of the schema, making the schema self-contained.",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.file.FileHandleStatus": {
                    "type": "string",
                    "enum": [
                         "AVAILABLE",
                         "UNLINKED",
                         "ARCHIVED"
                    ]
               },
               "org.sagebionetworks.repo.model.EntityChildrenResponse": {
                    "type": "object",
                    "properties": {
                         "page": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.EntityHeader",
                                   "description": "JSON schema for EntityHeader POJO"
                              },
                              "description": "The headers of each child."
                         },
                         "nextPageToken": {"type": "string"},
                         "totalChildCount": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "sumFileSizesBytes": {
                              "type": "integer",
                              "format": "int32"
                         }
                    },
                    "description": "Response of EntityHeaders for the children of a given parent Entity"
               },
               "org.sagebionetworks.repo.model.auth.AccessTokenRecordList": {
                    "type": "object",
                    "properties": {
                         "results": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.auth.AccessTokenRecord",
                                   "description": "Metadata related to an issued personal access token. After the token has been generated, it cannot be retrieved."
                              }
                         },
                         "nextPageToken": {"type": "string"}
                    },
                    "description": "Metadata for a paginated list of personal access token records."
               },
               "PaginatedResultsOfSubmissionStatus": {
                    "type": "object",
                    "properties": {
                         "totalNumberOfResults": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "results": {
                              "type": "array",
                              "items": {"$ref": "#/components/schemas/org.sagebionetworks.evaluation.model.SubmissionStatus"}
                         }
                    }
               },
               "org.sagebionetworks.repo.model.file.DownloadOrder": {
                    "type": "object",
                    "properties": {
                         "files": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.file.FileHandleAssociation",
                                   "description": "Describes an association of a FileHandle with another object."
                              },
                              "description": "The list of files included in this order."
                         },
                         "orderId": {"type": "string"},
                         "createdBy": {"type": "string"},
                         "createdOn": {"type": "string"},
                         "zipFileName": {"type": "string"},
                         "totalSizeBytes": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "totalNumberOfFiles": {
                              "type": "integer",
                              "format": "int32"
                         }
                    },
                    "description": "The files of a download order."
               },
               "org.sagebionetworks.repo.model.form.SubmissionStatus": {
                    "type": "object",
                    "properties": {
                         "submittedOn": {"type": "string"},
                         "reviewedOn": {"type": "string"},
                         "reviewedBy": {"type": "string"},
                         "state": {"type": "string"},
                         "rejectionMessage": {"type": "string"}
                    },
                    "description": "The status of a a submitted FormData object."
               },
               "org.sagebionetworks.repo.model.UserPreference": {
                    "type": "object",
                    "properties": {
                         "name": {"type": "string"},
                         "concreteType": {"type": "string"}
                    },
                    "description": "User preferences",
                    "oneOf": [{"$ref": "#/components/schemas/org.sagebionetworks.repo.model.UserPreferenceBoolean"}],
                    "required": ["concreteType"],
                    "discriminator": {"propertyName": "concreteType"}
               },
               "org.sagebionetworks.repo.model.drs.Checksum": {
                    "type": "object",
                    "properties": {
                         "checksum": {"type": "string"},
                         "type": {"type": "string"}
                    },
                    "description": "The hex-string encoded checksum for the drs object. At least one checksum must be provided. For blobs, the checksum is computed over the bytes in the blob that is md5. For bundles, the checksum is computed over a sorted concatenation of the checksums of its top-level contained objects."
               },
               "org.sagebionetworks.repo.model.subscription.Subscription": {
                    "type": "object",
                    "properties": {
                         "subscriptionId": {"type": "string"},
                         "subscriberId": {"type": "string"},
                         "objectId": {"type": "string"},
                         "objectType": {"type": "string"},
                         "createdOn": {"type": "string"}
                    },
                    "description": "The model object represents a single Subscription."
               },
               "org.sagebionetworks.repo.model.search.query.FacetSortOptions": {
                    "type": "string",
                    "enum": [
                         "ALPHA",
                         "COUNT",
                         "MAX",
                         "SUM"
                    ]
               },
               "org.sagebionetworks.repo.model.file.AddFileToDownloadListRequest": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.file.AddFileToDownloadListRequest"]
                         },
                         "folderId": {"type": "string"},
                         "query": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.Query"}
                    },
                    "description": "Request to add either the children of a folder or the files of a view query to the user's download list.",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.RestrictionFulfillment": {
                    "type": "object",
                    "properties": {
                         "accessRequirementId": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "isApproved": {"type": "boolean"},
                         "isMet": {"type": "boolean"},
                         "isExempt": {"type": "boolean"}
                    },
                    "description": "Provides information about a restriction fulfillment for a user in the context of a restrictable object and access requirement"
               },
               "org.sagebionetworks.repo.model.Preview": {
                    "type": "object",
                    "properties": {
                         "name": {"type": "string"},
                         "description": {"type": "string"},
                         "id": {"type": "string"},
                         "etag": {"type": "string"},
                         "createdOn": {"type": "string"},
                         "modifiedOn": {"type": "string"},
                         "createdBy": {"type": "string"},
                         "modifiedBy": {"type": "string"},
                         "parentId": {"type": "string"},
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.Preview"]
                         },
                         "previewString": {"type": "string"},
                         "headers": {
                              "type": "array",
                              "items": {"type": "string"}
                         },
                         "rows": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.Row",
                                   "description": "JSON schema for Row POJO"
                              }
                         }
                    },
                    "description": "This object is deprecated and will be removed in future versions of Synapse.",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.PostMessageContentAccessRequirement": {
                    "type": "object",
                    "properties": {
                         "versionNumber": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "id": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "description": {"type": "string"},
                         "name": {"type": "string"},
                         "etag": {"type": "string"},
                         "createdOn": {"type": "string"},
                         "modifiedOn": {"type": "string"},
                         "createdBy": {"type": "string"},
                         "modifiedBy": {"type": "string"},
                         "subjectsDefinedByAnnotations": {"type": "boolean"},
                         "subjectIds": {
                              "type": "array",
                              "items": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.RestrictableObjectDescriptor"},
                              "description": "The IDs of the items controlled by this Access Requirement when 'subjectsDefinedByAnnotations=false'. This property is mutually exclusive with 'subjectsDefinedByAnnotations'.  When 'subjectsDefinedByAnnotations=true' then this property must be empty or excluded.  Required when creating or updating and 'subjectsDefinedByAnnotations=false' or 'subjectsDefinedByAnnotations' is excluded."
                         },
                         "accessType": {"type": "string"},
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.PostMessageContentAccessRequirement"]
                         },
                         "url": {"type": "string"}
                    },
                    "description": "This class is deprecated and should not being used.",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.UserGroup": {
                    "type": "object",
                    "properties": {
                         "id": {"type": "string"},
                         "isIndividual": {"type": "boolean"},
                         "etag": {"type": "string"},
                         "creationDate": {"type": "string"},
                         "uri": {"type": "string"}
                    },
                    "description": "JSON schema for UserGroup POJO"
               },
               "org.sagebionetworks.repo.model.IdList": {
                    "type": "object",
                    "properties": {"list": {
                         "type": "array",
                         "items": {
                              "type": "integer",
                              "format": "int32"
                         }
                    }},
                    "description": "List of IDs"
               },
               "org.sagebionetworks.repo.model.table.TableState": {
                    "type": "string",
                    "enum": [
                         "AVAILABLE",
                         "PROCESSING",
                         "PROCESSING_FAILED"
                    ]
               },
               "org.sagebionetworks.repo.model.ResourceAccess": {
                    "type": "object",
                    "properties": {
                         "principalId": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "accessType": {
                              "type": "array",
                              "items": {"type": "string"},
                              "description": "A list of types of access granted to the given principal",
                              "uniqueItems": true
                         }
                    },
                    "description": "JSON schema for a ResourceAccess POJO"
               },
               "org.sagebionetworks.repo.model.table.VirtualTable": {
                    "type": "object",
                    "properties": {
                         "name": {"type": "string"},
                         "description": {"type": "string"},
                         "id": {"type": "string"},
                         "etag": {"type": "string"},
                         "createdOn": {"type": "string"},
                         "modifiedOn": {"type": "string"},
                         "createdBy": {"type": "string"},
                         "modifiedBy": {"type": "string"},
                         "parentId": {"type": "string"},
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.table.VirtualTable"]
                         },
                         "versionNumber": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "versionLabel": {"type": "string"},
                         "versionComment": {"type": "string"},
                         "isLatestVersion": {"type": "boolean"},
                         "columnIds": {
                              "type": "array",
                              "items": {"type": "string"},
                              "description": "The columns of a virtual table are dynamic based on the select statement of the definingSQL. This list of columnIds is for read only, and will be ignored for create and update operations."
                         },
                         "isSearchEnabled": {"type": "boolean"},
                         "definingSQL": {"type": "string"}
                    },
                    "description": "A virtual table is a type of table whose content is defined by a synapse SQL query. Its content is NOT persisted and any query on a virtual table will run the defined SQL statement. The defining SQL of the virtual table CANNOT contain JOIN clauses on multiple tables.",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.search.FacetConstraint": {
                    "type": "object",
                    "properties": {
                         "value": {"type": "string"},
                         "count": {
                              "type": "integer",
                              "format": "int32"
                         }
                    },
                    "description": "JSON schema for a Facet Constraint for a particular facet in the search results."
               },
               "org.sagebionetworks.repo.model.TrashedEntity": {
                    "type": "object",
                    "properties": {
                         "entityId": {"type": "string"},
                         "entityName": {"type": "string"},
                         "entityType": {"type": "string"},
                         "deletedByPrincipalId": {"type": "string"},
                         "deletedOn": {"type": "string"},
                         "originalParentId": {"type": "string"}
                    },
                    "description": "JSON schema for the TrashEntity POJO. A trashed entity is an entity in the trash can."
               },
               "org.sagebionetworks.repo.model.dataaccess.AccessRequirementStatus": {
                    "type": "object",
                    "properties": {
                         "accessRequirementId": {"type": "string"},
                         "concreteType": {"type": "string"},
                         "isApproved": {"type": "boolean"},
                         "expiredOn": {"type": "string"}
                    },
                    "description": "The status of a user meeting an AccessRequirement.",
                    "oneOf": [
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.dataaccess.BasicAccessRequirementStatus"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.dataaccess.ManagedACTAccessRequirementStatus"}
                    ],
                    "required": ["concreteType"],
                    "discriminator": {"propertyName": "concreteType"}
               },
               "org.sagebionetworks.repo.model.report.DownloadStorageReportResponse": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.report.DownloadStorageReportResponse"]
                         },
                         "resultsFileHandleId": {"type": "string"}
                    },
                    "description": "The response body of an asynchronous storage report CSV download job.",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.dataaccess.AccessorGroupResponse": {
                    "type": "object",
                    "properties": {
                         "results": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.dataaccess.AccessorGroup",
                                   "description": "A group of accessors who gained access by the same submitter."
                              }
                         },
                         "nextPageToken": {"type": "string"}
                    },
                    "description": "A page of AccessorGroup."
               },
               "org.sagebionetworks.repo.model.agent.UpdateAgentSessionRequest": {
                    "type": "object",
                    "properties": {
                         "sessionId": {"type": "string"},
                         "agentAccessLevel": {"type": "string"}
                    },
                    "description": "Update the access level of an existing session."
               },
               "org.sagebionetworks.repo.model.table.FacetColumnResultValues": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.table.FacetColumnResultValues"]
                         },
                         "columnName": {"type": "string"},
                         "facetType": {"type": "string"},
                         "jsonPath": {"type": "string"},
                         "facetValues": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.FacetColumnResultValueCount",
                                   "description": "A pair containing the value of a column and the number of times that value appears"
                              },
                              "description": "The list of QueryFacetResultValue that contain frequency counts for its most frequent values "
                         }
                    },
                    "description": "Contains the name and type of the filtered column, and its most frequent values along with the counts of those values.",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.file.ExternalObjectStoreFileHandle": {
                    "type": "object",
                    "properties": {
                         "id": {"type": "string"},
                         "etag": {"type": "string"},
                         "createdBy": {"type": "string"},
                         "createdOn": {"type": "string"},
                         "modifiedOn": {"type": "string"},
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.file.ExternalObjectStoreFileHandle"]
                         },
                         "contentType": {"type": "string"},
                         "contentMd5": {"type": "string"},
                         "fileName": {"type": "string"},
                         "storageLocationId": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "contentSize": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "status": {"type": "string"},
                         "endpointUrl": {"type": "string"},
                         "bucket": {"type": "string"},
                         "fileKey": {"type": "string"}
                    },
                    "description": "Represents a file stored in an S3 Bucket to which Synapse cannot access. Together with ExternalObjectStorageLocationSetting, this object provides the information the client requires to access the S3 file.",
                    "required": [
                         "fileKey",
                         "concreteType"
                    ]
               },
               "org.sagebionetworks.repo.model.annotation.LongAnnotation": {
                    "type": "object",
                    "properties": {
                         "key": {"type": "string"},
                         "isPrivate": {"type": "boolean"},
                         "value": {
                              "type": "integer",
                              "format": "int32"
                         }
                    },
                    "description": "An Annotation containing a Long value"
               },
               "ListWrapperOfColumnModel": {
                    "type": "object",
                    "properties": {"list": {
                         "type": "array",
                         "items": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.ColumnModel"}
                    }}
               },
               "org.sagebionetworks.repo.model.table.EntityUpdateResults": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.table.EntityUpdateResults"]
                         },
                         "updateResults": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.EntityUpdateResult",
                                   "description": "Result of a single Entity Update."
                              },
                              "description": "List of Results"
                         }
                    },
                    "description": "A list of EntityUpdateResults",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.principal.PrincipalAliasResponse": {
                    "type": "object",
                    "properties": {"principalId": {
                         "type": "integer",
                         "format": "int32"
                    }},
                    "description": "The response of a principal alias lookup request"
               },
               "PaginatedResultsOfMembershipInvitation": {
                    "type": "object",
                    "properties": {
                         "totalNumberOfResults": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "results": {
                              "type": "array",
                              "items": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.MembershipInvitation"}
                         }
                    }
               },
               "org.sagebionetworks.repo.model.RSSFeed": {
                    "type": "object",
                    "properties": {
                         "title": {"type": "string"},
                         "uri": {"type": "string"},
                         "author": {"type": "string"},
                         "description": {"type": "string"},
                         "entries": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.RSSEntry",
                                   "description": "This contains items from an rss feed, and meta data about the rss feed itself"
                              },
                              "description": "The list of rss entries."
                         }
                    },
                    "description": "This contains items from an rss feed, and meta data about the rss feed itself"
               },
               "org.sagebionetworks.repo.model.dataaccess.NotificationType": {
                    "type": "string",
                    "enum": [
                         "REVOCATION",
                         "FIRST_RENEWAL_REMINDER",
                         "SECOND_RENEWAL_REMINDER"
                    ]
               },
               "org.sagebionetworks.repo.model.dataaccess.SubmissionSearchRequest": {
                    "type": "object",
                    "properties": {
                         "accessorId": {"type": "string"},
                         "accessRequirementId": {"type": "string"},
                         "submissionState": {"type": "string"},
                         "reviewerId": {"type": "string"},
                         "reviewerFilterType": {"type": "string"},
                         "sort": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.dataaccess.SubmissionSearchSort",
                                   "description": "Identifies both the field and direction for a single sort operation"
                              }
                         },
                         "nextPageToken": {"type": "string"}
                    },
                    "description": "A request to search through the data access submissions"
               },
               "org.sagebionetworks.repo.model.drs.DrsObject": {
                    "type": "object",
                    "properties": {
                         "id": {"type": "string"},
                         "name": {"type": "string"},
                         "self_uri": {"type": "string"},
                         "size": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "created_time": {"type": "string"},
                         "updated_time": {"type": "string"},
                         "version": {"type": "string"},
                         "mime_type": {"type": "string"},
                         "checksums": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.drs.Checksum",
                                   "description": "The hex-string encoded checksum for the drs object. At least one checksum must be provided. For blobs, the checksum is computed over the bytes in the blob that is md5. For bundles, the checksum is computed over a sorted concatenation of the checksums of its top-level contained objects."
                              },
                              "description": "The hex-string encoded checksum for the drs object. At least one checksum must be provided. For blobs, the checksum is computed over the bytes in the blob that is md5. For bundles, the checksum is computed over a sorted concatenation of the checksums of its top-level contained objects."
                         },
                         "contents": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.drs.Content",
                                   "description": "For blob there is no contents and for bundle its list of object inside the bundle."
                              },
                              "description": "For blob there is no contents and for bundle its list of object inside the bundle."
                         },
                         "access_methods": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.drs.AccessMethod",
                                   "description": "The list of access methods that can be used to fetch the DrsObject. Required for single blobs and bundles have no access method."
                              },
                              "description": "The list of access methods that can be used to fetch the DrsObject. Required for single blobs and bundles have no access method."
                         },
                         "description": {"type": "string"}
                    },
                    "description": "The drs object metadata, Currently supported type is blob(DrsObject without contents array) and bundle(DrsObject with contents array)."
               },
               "org.sagebionetworks.repo.model.file.FileHandleRestoreRequest": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.file.FileHandleRestoreRequest"]
                         },
                         "fileHandleIds": {
                              "type": "array",
                              "items": {"type": "string"},
                              "description": "The list of file handle ids to restore."
                         }
                    },
                    "description": "Request used to restore a batch of file handles that might be UNLINKED or ARCHIVED. Note that only the owner of the file handle can initiate its restore.",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.file.CloudProviderFileHandleInterface": {
                    "type": "object",
                    "properties": {
                         "id": {"type": "string"},
                         "etag": {"type": "string"},
                         "createdBy": {"type": "string"},
                         "createdOn": {"type": "string"},
                         "modifiedOn": {"type": "string"},
                         "concreteType": {"type": "string"},
                         "contentType": {"type": "string"},
                         "contentMd5": {"type": "string"},
                         "fileName": {"type": "string"},
                         "storageLocationId": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "contentSize": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "status": {"type": "string"},
                         "bucketName": {"type": "string"},
                         "key": {"type": "string"},
                         "previewId": {"type": "string"},
                         "isPreview": {"type": "boolean"}
                    },
                    "description": "Defines the common fields of FileHandles that are uploaded to cloud providers such as AWS S3 and Google Cloud Storage.",
                    "oneOf": [
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.file.GoogleCloudFileHandle"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.file.S3FileHandle"}
                    ],
                    "required": ["concreteType"],
                    "discriminator": {"propertyName": "concreteType"}
               },
               "org.sagebionetworks.repo.model.file.FileHandleAssociation": {
                    "type": "object",
                    "properties": {
                         "fileHandleId": {"type": "string"},
                         "associateObjectId": {"type": "string"},
                         "associateObjectType": {"type": "string"}
                    },
                    "description": "Describes an association of a FileHandle with another object."
               },
               "org.sagebionetworks.repo.model.file.FileDownloadRecord": {
                    "type": "object",
                    "properties": {
                         "userId": {"type": "string"},
                         "downloadedFile": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.file.FileHandleAssociation",
                              "description": "Describes an association of a FileHandle with another object."
                         }
                    },
                    "description": "Describes an association of a FileHandle with another object."
               },
               "org.sagebionetworks.evaluation.model.TeamSubmissionEligibility": {
                    "type": "object",
                    "properties": {
                         "teamId": {"type": "string"},
                         "evaluationId": {"type": "string"},
                         "teamEligibility": {
                              "$ref": "#/components/schemas/org.sagebionetworks.evaluation.model.SubmissionEligibility",
                              "description": "Describes the eligibility of a to submit to an Evaluation queue, reflecting the queue's submission quotas and current submissions."
                         },
                         "membersEligibility": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.evaluation.model.MemberSubmissionEligibility",
                                   "description": "Describes the eligibility of an indivdiual to submit to an Evaluation queue, reflecting the queue's submission quotas and current submissions."
                              },
                              "description": "Describes the submission eligibility of the contributors to the Submission."
                         },
                         "eligibilityStateHash": {
                              "type": "integer",
                              "format": "int32"
                         }
                    },
                    "description": "Describes the eligibility of a Challenge Team to submit to an Evalution queue, reflecting the queue's submission quotas and current submissions."
               },
               "org.sagebionetworks.repo.model.form.FormGroup": {
                    "type": "object",
                    "properties": {
                         "groupId": {"type": "string"},
                         "name": {"type": "string"},
                         "createdBy": {"type": "string"},
                         "createdOn": {"type": "string"}
                    },
                    "description": "All form data belongs to a form group.  Access to the group is managed via the ACL of the group."
               },
               "org.sagebionetworks.repo.model.oauth.OAuthClientIdAndSecret": {
                    "type": "object",
                    "properties": {
                         "client_id": {"type": "string"},
                         "client_secret": {"type": "string"}
                    },
                    "description": "OAuth 2.0 Client ID and secret, generated when a new client is created"
               },
               "org.sagebionetworks.repo.model.discussion.DiscussionSearchResponse": {
                    "type": "object",
                    "properties": {
                         "matches": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.discussion.Match",
                                   "description": "Represents a match for a search request in a forum, will include the forum and thread ids and if present the reply id matching a serch string"
                              },
                              "description": "A single page of results matching the original <a href=\"${org.sagebionetworks.repo.model.discussion.DiscussionSearchRequest}\">DiscussionSearchRequest<\/a>."
                         },
                         "nextPageToken": {"type": "string"}
                    },
                    "description": "The response to a <a href=\"${org.sagebionetworks.repo.model.discussion.DiscussionSearchRequest}\">DiscussionSearchRequest<\/a>."
               },
               "org.sagebionetworks.repo.model.auth.CallersContext": {
                    "type": "object",
                    "properties": {"sessionId": {"type": "string"}},
                    "description": "Contextual information about a web service call."
               },
               "org.sagebionetworks.repo.model.auth.NewUser": {
                    "type": "object",
                    "properties": {
                         "email": {"type": "string"},
                         "firstName": {"type": "string"},
                         "lastName": {"type": "string"},
                         "userName": {"type": "string"},
                         "oauthProvider": {"type": "string"},
                         "subject": {"type": "string"},
                         "encodedMembershipInvtnSignedToken": {"type": "string"}
                    },
                    "description": "Fields required to create a new user account"
               },
               "org.sagebionetworks.repo.model.ExampleEntity": {
                    "type": "object",
                    "properties": {
                         "name": {"type": "string"},
                         "description": {"type": "string"},
                         "id": {"type": "string"},
                         "etag": {"type": "string"},
                         "createdOn": {"type": "string"},
                         "modifiedOn": {"type": "string"},
                         "createdBy": {"type": "string"},
                         "modifiedBy": {"type": "string"},
                         "parentId": {"type": "string"},
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.ExampleEntity"]
                         },
                         "singleString": {"type": "string"},
                         "stringList": {
                              "type": "array",
                              "items": {"type": "string"},
                              "description": "This is an example of a list of strings"
                         },
                         "singleDate": {"type": "string"},
                         "dateList": {
                              "type": "array",
                              "items": {"type": "string"},
                              "description": "This is an example of a list of dates"
                         },
                         "singleDouble": {"type": "number"},
                         "doubleList": {
                              "type": "array",
                              "items": {"type": "number"},
                              "description": "This is an example of a double list"
                         },
                         "singleInteger": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "integerList": {
                              "type": "array",
                              "items": {
                                   "type": "integer",
                                   "format": "int32"
                              },
                              "description": "This is an example of an Integer List."
                         },
                         "concept": {"type": "string"},
                         "someEnum": {"type": "string"},
                         "references": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.Reference",
                                   "description": "JSON schema for Reference POJO"
                              },
                              "description": "References",
                              "uniqueItems": true
                         },
                         "environmentDescriptors": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.EnvironmentDescriptor",
                                   "description": "JSON schema for environment descriptor POJO"
                              },
                              "description": "The list of environment descriptors",
                              "uniqueItems": true
                         }
                    },
                    "description": "This object is deprecated and will be removed in future versions of Synapse.",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.subscription.SubscriberCount": {
                    "type": "object",
                    "properties": {"count": {
                         "type": "integer",
                         "format": "int32"
                    }}
               },
               "org.sagebionetworks.repo.model.dataaccess.AccessRequirementSearchSort": {
                    "type": "object",
                    "properties": {
                         "field": {"type": "string"},
                         "direction": {"type": "string"}
                    },
                    "description": "Identifies both the field and direction for a single sort operation"
               },
               "org.sagebionetworks.repo.model.schema.GetValidationSchemaResponse": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.schema.GetValidationSchemaResponse"]
                         },
                         "validationSchema": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.schema.JsonSchema",
                              "description": "The JSON schema is defined by: <a href=\"https://json-schema.org/\">json-schema.org<\/a>, specifically draft-07.  Only features listed here are currently supported."
                         }
                    },
                    "description": "Response body containing the resulting compiled validation schema.",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.table.PartialRowSet": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.table.PartialRowSet"]
                         },
                         "tableId": {"type": "string"},
                         "rows": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.PartialRow",
                                   "description": "Represents a single partial row of a TableEntity."
                              },
                              "description": "The partial rows of this set."
                         }
                    },
                    "description": "Represents a set of row of a TableEntity",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.table.ViewColumnModelRequest": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.table.ViewColumnModelRequest"]
                         },
                         "viewScope": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.ViewScope",
                              "description": "List of parent IDs that define a view scope."
                         },
                         "includeDerivedAnnotations": {"type": "boolean"},
                         "nextPageToken": {"type": "string"}
                    },
                    "description": "An asynchronous request to compute the column models from the annotations in a given scope, note that the result won't include the default column model.",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.table.TextMatchesQueryFilter": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.table.TextMatchesQueryFilter"]
                         },
                         "isDefiningCondition": {"type": "boolean"},
                         "searchExpression": {"type": "string"}
                    },
                    "description": "A filter to apply a TEXT_MATCHES predicate (full text search) to the query using the given searchExpression as value.",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.evaluation.model.EvaluationRoundListResponse": {
                    "type": "object",
                    "properties": {
                         "page": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.evaluation.model.EvaluationRound",
                                   "description": "Defines the duration of a round and sets limits for maximum submissions per round"
                              }
                         },
                         "nextPageToken": {"type": "string"}
                    },
                    "description": "A single page of the EvaluationRounds currently associated with an Evaluation"
               },
               "org.sagebionetworks.repo.model.TeamSortOrder": {
                    "type": "string",
                    "enum": ["TEAM_NAME"]
               },
               "org.sagebionetworks.repo.model.download.DownloadListPackageResponse": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.download.DownloadListPackageResponse"]
                         },
                         "resultFileHandleId": {"type": "string"}
                    },
                    "description": "Response of a job to package files from the user's download list.'",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.subscription.SortByType": {
                    "type": "string",
                    "enum": [
                         "SUBSCRIPTION_ID",
                         "SUBSCRIBER_ID",
                         "OBJECT_ID",
                         "OBJECT_TYPE",
                         "CREATED_ON"
                    ]
               },
               "org.sagebionetworks.repo.model.ErrorResponse": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.ErrorResponse"]
                         },
                         "reason": {"type": "string"},
                         "errorCode": {"type": "string"}
                    },
                    "description": "JSON schema for an error",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.discussion.Forum": {
                    "type": "object",
                    "properties": {
                         "id": {"type": "string"},
                         "projectId": {"type": "string"},
                         "etag": {"type": "string"}
                    }
               },
               "org.sagebionetworks.evaluation.model.SubmissionEligibilityInterface": {
                    "type": "object",
                    "properties": {
                         "isEligible": {"type": "boolean"},
                         "isRegistered": {"type": "boolean"},
                         "isQuotaFilled": {"type": "boolean"}
                    },
                    "description": "Describes the eligibility of a to submit to an Evaluation queue, reflecting the queue's submission quotas and current submissions.",
                    "oneOf": [
                         {"$ref": "#/components/schemas/org.sagebionetworks.evaluation.model.SubmissionEligibility"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.evaluation.model.MemberSubmissionEligibility"}
                    ],
                    "discriminator": {"propertyName": "concreteType"}
               },
               "org.sagebionetworks.repo.model.auth.ChangePasswordInterface": {
                    "type": "object",
                    "properties": {
                         "newPassword": {"type": "string"},
                         "concreteType": {"type": "string"}
                    },
                    "description": "Defines an interface for changing an user account's password",
                    "oneOf": [
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.auth.ChangePasswordWithToken"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.auth.ChangePasswordWithCurrentPassword"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.auth.ChangePasswordWithTwoFactorAuthToken"}
                    ],
                    "required": ["concreteType"],
                    "discriminator": {"propertyName": "concreteType"}
               },
               "org.sagebionetworks.repo.model.table.Query": {
                    "type": "object",
                    "properties": {
                         "sql": {"type": "string"},
                         "additionalFilters": {
                              "type": "array",
                              "items": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.QueryFilter"},
                              "description": "Appends additional filters to the SQL query. These are applied before facets. Filters within the list have an AND relationship. If a WHERE clause already exists on the SQL query or facets are selected, it will also be ANDed with the query generated by these additional filters."
                         },
                         "selectedFacets": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.FacetColumnRequest",
                                   "description": "A set of values that have been selected for filtering in a faceted column"
                              },
                              "description": "The selected facet filters."
                         },
                         "includeEntityEtag": {"type": "boolean"},
                         "selectFileColumn": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "selectFileVersionColumn": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "offset": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "limit": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "sort": {
                              "type": "array",
                              "items": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.SortItem"}
                         }
                    }
               },
               "org.sagebionetworks.repo.model.file.DownloadOrderSummaryRequest": {
                    "type": "object",
                    "properties": {"nextPageToken": {"type": "string"}},
                    "description": "Request for a single page of DownloadOrderSummary objects."
               },
               "org.sagebionetworks.repo.model.doi.v2.Doi": {
                    "type": "object",
                    "properties": {
                         "creators": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.doi.v2.DoiCreator",
                                   "description": "JSON schema for DOI Metadata Creator."
                              },
                              "description": "Required. The main researchers involved in producing the data, or the authors of the publication, in priority order."
                         },
                         "titles": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.doi.v2.DoiTitle",
                                   "description": "JSON schema for DOI Metadata Title."
                              },
                              "description": "Required. A name or title by which a resource is known."
                         },
                         "publicationYear": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "resourceType": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.doi.v2.DoiResourceType",
                              "description": "Required. Describes the type of media that the DOI Metadata refers to."
                         },
                         "associationId": {"type": "string"},
                         "etag": {"type": "string"},
                         "doiUri": {"type": "string"},
                         "doiUrl": {"type": "string"},
                         "objectId": {"type": "string"},
                         "objectType": {"type": "string"},
                         "objectVersion": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "associatedBy": {"type": "string"},
                         "associatedOn": {"type": "string"},
                         "updatedBy": {"type": "string"},
                         "updatedOn": {"type": "string"}
                    },
                    "description": "JSON schema for fields associated with a DOI and its metadata. This object contains fields from both <a href=\"${org.sagebionetworks.repo.model.doi.v2.DoiAssociation}\">DoiAssociation<\/a> and <a href=\"${org.sagebionetworks.repo.model.doi.v2.DataciteMetadata}\">DataciteMetadata<\/a>.<br>To mint a DOI, the following fields are required: <ul> <li>Information that uniquely identifies an object in Synapse <ul><li> The object ID <i>(e.g. \"syn12345\")<\/i><\/li><li>The object type <i>(Note: as of this writing, only ENTITY is supported)<\/i><\/li><li>The version number of the object <i>(Optional. A \"null\" version will mint a DOI that will point to the most recent version of the object, even if the object changes)<\/i><\/li><li>An eTag <i>(Necessary when updating an existing DOI)<\/i><\/li><\/ul><\/li> <li>Additional supplementary information to mint a DOI <ul><li>Creator(s)<\/li><li>Title(s)<\/li><li>The general resource type<\/li><li>A publication year (no later than one year after the current year)<\/li><\/ul><\/li> <\/ul><br>For more information, see the <a href=\"${org.sagebionetworks.repo.model.doi.v2.DoiAssociation}\">DoiAssociation<\/a> and <a href=\"${org.sagebionetworks.repo.model.doi.v2.DataciteMetadata}\">DataciteMetadata<\/a> objects."
               },
               "org.sagebionetworks.repo.model.migration.BackupTypeResponse": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.migration.BackupTypeResponse"]
                         },
                         "backupFileKey": {"type": "string"}
                    },
                    "description": "Results for a backup type job.",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.dataaccess.AccessRequirementSearchResult": {
                    "type": "object",
                    "properties": {
                         "id": {"type": "string"},
                         "type": {"type": "string"},
                         "createdOn": {"type": "string"},
                         "modifiedOn": {"type": "string"},
                         "name": {"type": "string"},
                         "version": {"type": "string"},
                         "relatedProjectIds": {
                              "type": "array",
                              "items": {"type": "string"},
                              "description": "List of project ids which the AR is direclty or indirectly applied to"
                         },
                         "reviewerIds": {
                              "type": "array",
                              "items": {"type": "string"},
                              "description": "List of principal ids that are allowed to review the AR submissions"
                         }
                    },
                    "description": "Result item of an Access Requirement search"
               },
               "org.sagebionetworks.repo.model.drs.PackageInformation": {
                    "type": "object",
                    "properties": {
                         "group": {"type": "string"},
                         "artifact": {"type": "string"},
                         "version": {"type": "string"}
                    },
                    "description": "The DRS package information follows GA4GH specification."
               },
               "org.sagebionetworks.repo.model.table.FacetColumnValuesRequest": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.table.FacetColumnValuesRequest"]
                         },
                         "columnName": {"type": "string"},
                         "jsonPath": {"type": "string"},
                         "facetValues": {
                              "type": "array",
                              "items": {"type": "string"},
                              "description": "The set of facet values that were selected",
                              "uniqueItems": true
                         }
                    },
                    "description": "Contains the name and type of the column to be filtered, and the facet values to filter on.",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.performance.PerformanceRecord": {
                    "type": "object",
                    "properties": {
                         "method": {"type": "string"},
                         "totalCount": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "totalTime": {
                              "type": "integer",
                              "format": "int32"
                         }
                    },
                    "description": "Data record for call performance."
               },
               "org.sagebionetworks.repo.model.dataaccess.AccessRequirementSearchRequest": {
                    "type": "object",
                    "properties": {
                         "nameContains": {"type": "string"},
                         "ids": {
                              "type": "array",
                              "items": {
                                   "type": "integer",
                                   "format": "int32"
                              },
                              "description": "Optional list of ids used to filter access requirements with specific ids."
                         },
                         "relatedProjectId": {"type": "string"},
                         "reviewerId": {"type": "string"},
                         "accessType": {"type": "string"},
                         "type": {"type": "string"},
                         "sort": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.dataaccess.AccessRequirementSearchSort",
                                   "description": "Identifies both the field and direction for a single sort operation"
                              }
                         },
                         "nextPageToken": {"type": "string"}
                    },
                    "description": "Describes the parameters for searching Access Requirements"
               },
               "org.sagebionetworks.repo.model.migration.TypeData": {
                    "type": "object",
                    "properties": {
                         "migrationType": {"type": "string"},
                         "backupIdColumnName": {"type": "string"}
                    },
                    "description": "Data about a migration type according to the migration source."
               },
               "PaginatedResultsOfV2WikiHistorySnapshot": {
                    "type": "object",
                    "properties": {
                         "totalNumberOfResults": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "results": {
                              "type": "array",
                              "items": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.v2.wiki.V2WikiHistorySnapshot"}
                         }
                    }
               },
               "org.sagebionetworks.repo.model.file.FileHandle": {
                    "type": "object",
                    "properties": {
                         "id": {"type": "string"},
                         "etag": {"type": "string"},
                         "createdBy": {"type": "string"},
                         "createdOn": {"type": "string"},
                         "modifiedOn": {"type": "string"},
                         "concreteType": {"type": "string"},
                         "contentType": {"type": "string"},
                         "contentMd5": {"type": "string"},
                         "fileName": {"type": "string"},
                         "storageLocationId": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "contentSize": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "status": {"type": "string"}
                    },
                    "description": "The FileHandle interface defines all of the fields that are common to all implementations.",
                    "oneOf": [
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.file.ExternalObjectStoreFileHandle"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.file.GoogleCloudFileHandle"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.file.ProxyFileHandle"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.file.ExternalFileHandle"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.file.S3FileHandle"}
                    ],
                    "required": ["concreteType"],
                    "discriminator": {"propertyName": "concreteType"}
               },
               "org.sagebionetworks.repo.model.Project": {
                    "type": "object",
                    "properties": {
                         "name": {"type": "string"},
                         "description": {"type": "string"},
                         "id": {"type": "string"},
                         "etag": {"type": "string"},
                         "createdOn": {"type": "string"},
                         "modifiedOn": {"type": "string"},
                         "createdBy": {"type": "string"},
                         "modifiedBy": {"type": "string"},
                         "parentId": {"type": "string"},
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.Project"]
                         },
                         "alias": {"type": "string"}
                    },
                    "description": "A Project is a top-level container for organizing data in Synapse.",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.webhook.WebhookSynapseEventMessage": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.webhook.WebhookSynapseEventMessage"]
                         },
                         "messageId": {"type": "string"},
                         "eventTimestamp": {"type": "string"},
                         "objectId": {"type": "string"},
                         "objectType": {"type": "string"},
                         "eventType": {"type": "string"}
                    },
                    "description": "A webhook message for an event in Synapse.",
                    "required": [
                         "messageId",
                         "eventTimestamp",
                         "concreteType"
                    ]
               },
               "org.sagebionetworks.repo.model.search.query.KeyValue": {
                    "type": "object",
                    "properties": {
                         "key": {"type": "string"},
                         "value": {"type": "string"},
                         "not": {"type": "boolean"}
                    },
                    "description": "JSON schema for a faceted key-value pair."
               },
               "org.sagebionetworks.repo.model.migration.BackupManifest": {
                    "type": "object",
                    "properties": {
                         "primaryType": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.migration.TypeData",
                              "description": "Data about a migration type according to the migration source."
                         },
                         "aliasType": {"type": "string"},
                         "batchSize": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "minimumId": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "maximumId": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "secondaryTypes": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.migration.TypeData",
                                   "description": "Data about a migration type according to the migration source."
                              },
                              "description": "The secondary types according to the source of the backup."
                         }
                    },
                    "description": "Manifest of all metadata associated with a single backup file"
               },
               "org.sagebionetworks.repo.model.dataaccess.Submission": {
                    "type": "object",
                    "properties": {
                         "id": {"type": "string"},
                         "accessRequirementId": {"type": "string"},
                         "accessRequirementVersion": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "requestId": {"type": "string"},
                         "ducFileHandleId": {"type": "string"},
                         "irbFileHandleId": {"type": "string"},
                         "attachments": {
                              "type": "array",
                              "items": {"type": "string"},
                              "description": "The set of file handle ID of attached files to this request."
                         },
                         "accessorChanges": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.dataaccess.AccessorChange",
                                   "description": "Request for a single user change access to a resource."
                              },
                              "description": "List of user changes. A user can gain access, renew access or have access revoked."
                         },
                         "researchProjectSnapshot": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.dataaccess.ResearchProject",
                              "description": "A research project describes a project at an institution that used a controlled data set for the purposes that are stated in the Intended Data Use Statement."
                         },
                         "isRenewalSubmission": {"type": "boolean"},
                         "publication": {"type": "string"},
                         "summaryOfUse": {"type": "string"},
                         "submittedOn": {"type": "string"},
                         "modifiedOn": {"type": "string"},
                         "submittedBy": {"type": "string"},
                         "modifiedBy": {"type": "string"},
                         "state": {"type": "string"},
                         "rejectedReason": {"type": "string"},
                         "etag": {"type": "string"},
                         "subjectId": {"type": "string"},
                         "subjectType": {"type": "string"}
                    },
                    "description": "A submission to request access to controlled data."
               },
               "org.sagebionetworks.repo.model.doi.DoiStatus": {
                    "type": "string",
                    "enum": [
                         "IN_PROCESS",
                         "CREATED",
                         "READY",
                         "ERROR"
                    ]
               },
               "org.sagebionetworks.repo.model.LogEntry": {
                    "type": "object",
                    "properties": {
                         "label": {"type": "string"},
                         "message": {"type": "string"},
                         "stacktrace": {"type": "string"}
                    },
                    "description": "JSON schema for a log entry"
               },
               "org.sagebionetworks.repo.model.file.UploadType": {
                    "type": "string",
                    "enum": [
                         "S3",
                         "GOOGLECLOUDSTORAGE",
                         "SFTP",
                         "HTTPS",
                         "PROXYLOCAL",
                         "NONE"
                    ]
               },
               "org.sagebionetworks.repo.model.Team": {
                    "type": "object",
                    "properties": {
                         "id": {"type": "string"},
                         "name": {"type": "string"},
                         "description": {"type": "string"},
                         "icon": {"type": "string"},
                         "canPublicJoin": {"type": "boolean"},
                         "canRequestMembership": {"type": "boolean"},
                         "etag": {"type": "string"},
                         "createdOn": {"type": "string"},
                         "modifiedOn": {"type": "string"},
                         "createdBy": {"type": "string"},
                         "modifiedBy": {"type": "string"}
                    },
                    "description": "JSON schema for Team POJO"
               },
               "ListWrapperOfTeamMember": {
                    "type": "object",
                    "properties": {"list": {
                         "type": "array",
                         "items": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.TeamMember"}
                    }}
               },
               "PaginatedResultsOfAccessRequirement": {
                    "type": "object",
                    "properties": {
                         "totalNumberOfResults": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "results": {
                              "type": "array",
                              "items": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.AccessRequirement"}
                         }
                    }
               },
               "org.sagebionetworks.repo.model.doi.v2.DoiResourceTypeGeneral": {
                    "type": "string",
                    "enum": [
                         "Audiovisual",
                         "Collection",
                         "DataPaper",
                         "Dataset",
                         "Event",
                         "Image",
                         "InteractiveResource",
                         "Model",
                         "PhysicalObject",
                         "Service",
                         "Software",
                         "Sound",
                         "Text",
                         "Workflow",
                         "Other"
                    ]
               },
               "org.sagebionetworks.repo.model.webhook.VerifyWebhookResponse": {
                    "type": "object",
                    "properties": {
                         "isValid": {"type": "boolean"},
                         "invalidReason": {"type": "string"}
                    },
                    "description": "Response body containg the result of a webhook verification reqeust."
               },
               "org.sagebionetworks.repo.model.SignedTokenInterface": {
                    "type": "object",
                    "properties": {
                         "concreteType": {"type": "string"},
                         "hmac": {"type": "string"},
                         "version": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "expiresOn": {"type": "string"},
                         "createdOn": {"type": "string"}
                    },
                    "description": "Interface for signed tokens",
                    "oneOf": [
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.auth.TwoFactorAuthToken"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.InviteeVerificationSignedToken"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.auth.TwoFactorAuthResetToken"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.auth.PasswordResetSignedToken"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.message.NotificationSettingsSignedToken"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.auth.AuthenticationReceiptToken"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.MembershipInvtnSignedToken"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.auth.NewUserSignedToken"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.JoinTeamSignedToken"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.principal.EmailValidationSignedToken"}
                    ],
                    "required": ["concreteType"],
                    "discriminator": {"propertyName": "concreteType"}
               },
               "org.sagebionetworks.repo.model.migration.AsyncMigrationTypeCountRequest": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.migration.AsyncMigrationTypeCountRequest"]
                         },
                         "type": {"type": "string"}
                    },
                    "description": "Request count for migration type.",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.search.query.KeyRange": {
                    "type": "object",
                    "properties": {
                         "key": {"type": "string"},
                         "min": {"type": "string"},
                         "max": {"type": "string"}
                    },
                    "description": "JSON schema for a faceted key-value-range. This filter will match for values where min<=value<=max. At least one of either 'min' or 'max' must be set for this range to be valid",
                    "required": ["key"]
               },
               "org.sagebionetworks.repo.model.migration.AsyncMigrationRangeChecksumRequest": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.migration.AsyncMigrationRangeChecksumRequest"]
                         },
                         "migrationType": {"type": "string"},
                         "type": {"type": "string"},
                         "salt": {"type": "string"},
                         "minId": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "maxId": {
                              "type": "integer",
                              "format": "int32"
                         }
                    },
                    "description": "Request checksum for range of given type.",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.file.UploadDestinationLocation": {
                    "type": "object",
                    "properties": {
                         "storageLocationId": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "description": {"type": "string"},
                         "uploadType": {"type": "string"}
                    },
                    "description": "An upload destination location contains the id of the StorageLocation where a file can be uploaded."
               },
               "org.sagebionetworks.repo.model.message.ChangeType": {
                    "type": "string",
                    "enum": [
                         "CREATE",
                         "UPDATE",
                         "DELETE"
                    ]
               },
               "org.sagebionetworks.repo.model.docker.RegistryEventTarget": {
                    "type": "object",
                    "properties": {
                         "mediaType": {"type": "string"},
                         "size": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "digest": {"type": "string"},
                         "length": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "repository": {"type": "string"},
                         "tag": {"type": "string"},
                         "url": {"type": "string"}
                    }
               },
               "org.sagebionetworks.repo.model.auth.SecretKey": {
                    "type": "object",
                    "properties": {"secretKey": {"type": "string"}},
                    "description": "Data transfer object for a secret key"
               },
               "org.sagebionetworks.repo.model.oauth.OAuthProvider": {
                    "type": "string",
                    "enum": [
                         "GOOGLE_OAUTH_2_0",
                         "ORCID"
                    ]
               },
               "org.sagebionetworks.repo.model.table.ColumnType": {
                    "type": "string",
                    "enum": [
                         "STRING",
                         "DOUBLE",
                         "INTEGER",
                         "BOOLEAN",
                         "DATE",
                         "FILEHANDLEID",
                         "ENTITYID",
                         "SUBMISSIONID",
                         "EVALUATIONID",
                         "LINK",
                         "MEDIUMTEXT",
                         "LARGETEXT",
                         "USERID",
                         "STRING_LIST",
                         "INTEGER_LIST",
                         "BOOLEAN_LIST",
                         "DATE_LIST",
                         "ENTITYID_LIST",
                         "USERID_LIST",
                         "JSON"
                    ]
               },
               "org.sagebionetworks.repo.model.SelfSignAccessRequirementInterface": {
                    "type": "object",
                    "properties": {
                         "versionNumber": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "id": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "description": {"type": "string"},
                         "name": {"type": "string"},
                         "etag": {"type": "string"},
                         "createdOn": {"type": "string"},
                         "modifiedOn": {"type": "string"},
                         "createdBy": {"type": "string"},
                         "modifiedBy": {"type": "string"},
                         "subjectsDefinedByAnnotations": {"type": "boolean"},
                         "subjectIds": {
                              "type": "array",
                              "items": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.RestrictableObjectDescriptor"},
                              "description": "The IDs of the items controlled by this Access Requirement when 'subjectsDefinedByAnnotations=false'. This property is mutually exclusive with 'subjectsDefinedByAnnotations'.  When 'subjectsDefinedByAnnotations=true' then this property must be empty or excluded.  Required when creating or updating and 'subjectsDefinedByAnnotations=false' or 'subjectsDefinedByAnnotations' is excluded."
                         },
                         "accessType": {"type": "string"},
                         "concreteType": {"type": "string"}
                    },
                    "description": "JSON schema for the super-type of requirements which a user may approve themselves.",
                    "oneOf": [
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.PostMessageContentAccessRequirement"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.TermsOfUseAccessRequirement"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.SelfSignAccessRequirement"}
                    ],
                    "required": ["concreteType"],
                    "discriminator": {"propertyName": "concreteType"}
               },
               "org.sagebionetworks.repo.model.attachment.URLStatus": {
                    "type": "string",
                    "enum": [
                         "DOES_NOT_EXIST",
                         "READ_FOR_DOWNLOAD"
                    ]
               },
               "org.sagebionetworks.repo.model.message.MessageToUser": {
                    "type": "object",
                    "properties": {
                         "id": {"type": "string"},
                         "createdBy": {"type": "string"},
                         "fileHandleId": {"type": "string"},
                         "createdOn": {"type": "string"},
                         "recipients": {
                              "type": "array",
                              "items": {"type": "string"},
                              "description": "The unique identifiers of the intended recipients of a message",
                              "uniqueItems": true
                         },
                         "subject": {"type": "string"},
                         "inReplyTo": {"type": "string"},
                         "inReplyToRoot": {"type": "string"},
                         "notificationUnsubscribeEndpoint": {"type": "string"},
                         "userProfileSettingEndpoint": {"type": "string"},
                         "withUnsubscribeLink": {"type": "boolean"},
                         "withProfileSettingLink": {"type": "boolean"},
                         "isNotificationMessage": {"type": "boolean"},
                         "to": {"type": "string"},
                         "cc": {"type": "string"},
                         "bcc": {"type": "string"}
                    },
                    "description": "JSON schema for a message to another user"
               },
               "org.sagebionetworks.repo.model.EntityPath": {
                    "type": "object",
                    "properties": {"path": {
                         "type": "array",
                         "items": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.EntityHeader",
                              "description": "JSON schema for EntityHeader POJO"
                         },
                         "description": "The list of all entities in this entites path.  The first element is the root parent and the last element (n) is the entity."
                    }},
                    "description": "All entities in this Entity's path"
               },
               "org.sagebionetworks.repo.model.auth.ChangePasswordWithToken": {
                    "type": "object",
                    "properties": {
                         "newPassword": {"type": "string"},
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.auth.ChangePasswordWithToken"]
                         },
                         "passwordChangeToken": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.auth.PasswordResetSignedToken",
                              "description": "Signed token containing the the information necessary to reset the password for a user."
                         }
                    },
                    "description": "Change user account's password by providing a token issued by the server",
                    "required": ["concreteType"]
               },
               "ListOfString": {
                    "type": "array",
                    "items": {"type": "string"}
               },
               "org.sagebionetworks.repo.model.principal.AliasType": {
                    "type": "string",
                    "enum": [
                         "USER_NAME",
                         "TEAM_NAME",
                         "USER_EMAIL",
                         "USER_OPEN_ID",
                         "USER_ORCID"
                    ]
               },
               "org.sagebionetworks.repo.model.dataaccess.SortDirection": {
                    "type": "string",
                    "enum": [
                         "ASC",
                         "DESC"
                    ]
               },
               "org.sagebionetworks.repo.model.file.BatchPresignedUploadUrlRequest": {
                    "type": "object",
                    "properties": {
                         "uploadId": {"type": "string"},
                         "partNumbers": {
                              "type": "array",
                              "items": {
                                   "type": "integer",
                                   "format": "int32"
                              },
                              "description": "The part numbers to get pre-signed URLs for."
                         },
                         "contentType": {"type": "string"}
                    },
                    "description": "Request a batch of multi-part upload or copy pre-signed URLs."
               },
               "org.sagebionetworks.repo.model.table.TableUpdateRequest": {
                    "type": "object",
                    "properties": {
                         "concreteType": {"type": "string"},
                         "entityId": {"type": "string"}
                    },
                    "description": "Abstraction for a request to update a table.",
                    "oneOf": [
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.TableSearchChangeRequest"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.AppendableRowSetRequest"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.UploadToTableRequest"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.TableSchemaChangeRequest"}
                    ],
                    "required": ["concreteType"],
                    "discriminator": {"propertyName": "concreteType"}
               },
               "org.sagebionetworks.repo.model.file.MultipartUploadStatus": {
                    "type": "object",
                    "properties": {
                         "uploadId": {"type": "string"},
                         "startedBy": {"type": "string"},
                         "startedOn": {"type": "string"},
                         "updatedOn": {"type": "string"},
                         "partsState": {"type": "string"},
                         "state": {"type": "string"},
                         "resultFileHandleId": {"type": "string"}
                    },
                    "description": "Describes the status of a multi-part file upload."
               },
               "org.sagebionetworks.repo.model.oauth.OAuthClientAuthorizationHistory": {
                    "type": "object",
                    "properties": {
                         "client": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.oauth.OAuthClient",
                              "description": "OAuth 2.0 Client metadata described in <a href=\"https://openid.net/specs/openid-connect-registration-1_0.html#ClientMetadata\">OpenID Connect Core 1.0 Client Metadata<\/a>"
                         },
                         "authorizedOn": {"type": "string"},
                         "lastUsed": {"type": "string"}
                    },
                    "description": "An object representing an OAuth 2.0 client that has been authorized to request a user's resources and identity"
               },
               "org.sagebionetworks.repo.model.auth.LoginRequest": {
                    "type": "object",
                    "properties": {
                         "username": {"type": "string"},
                         "password": {"type": "string"},
                         "authenticationReceipt": {"type": "string"}
                    },
                    "description": "Used to login via username, password, and previous authentication receipt."
               },
               "org.sagebionetworks.repo.model.download.FilesStatisticsResponse": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.download.FilesStatisticsResponse"]
                         },
                         "totalNumberOfFiles": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "numberOfFilesAvailableForDownload": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "numberOfFilesAvailableForDownloadAndEligibleForPackaging": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "numberOfFilesRequiringAction": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "sumOfFileSizesAvailableForDownload": {
                              "type": "integer",
                              "format": "int32"
                         }
                    },
                    "description": "The response of a FilesStatisticsRequest.",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.table.PartialRow": {
                    "type": "object",
                    "properties": {
                         "etag": {"type": "string"},
                         "rowId": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "values": {
                              "type": "object",
                              "description": "The values for columns of this row as a map. The key is the columnId and value is the cell value. To perform updates on a row inside of Views, a pair of {\"key\":\"etag\", \"value\":\"REPLACE-WITH-ETAG-OF-ENTITY-BEING-UPDATED\"} must be also included.",
                              "additionalProperties": {"type": "string"}
                         }
                    },
                    "description": "Represents a single partial row of a TableEntity."
               },
               "org.sagebionetworks.repo.model.quiz.MultichoiceQuestion": {
                    "type": "object",
                    "properties": {
                         "questionIndex": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "prompt": {"type": "string"},
                         "reference": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.dao.WikiPageKey",
                              "description": "Reference to a WikiPage"
                         },
                         "docLink": {"type": "string"},
                         "helpText": {"type": "string"},
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.quiz.MultichoiceQuestion"]
                         },
                         "exclusive": {"type": "boolean"},
                         "answers": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.quiz.MultichoiceAnswer",
                                   "description": "One of the multiple choices in a multiple choice question"
                              },
                              "description": "The possible answers for this question"
                         }
                    },
                    "description": "A multiple choice question",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.project.UploadDestinationListSetting": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.project.UploadDestinationListSetting"]
                         },
                         "id": {"type": "string"},
                         "projectId": {"type": "string"},
                         "settingsType": {"type": "string"},
                         "etag": {"type": "string"},
                         "locations": {
                              "type": "array",
                              "items": {
                                   "type": "integer",
                                   "format": "int32"
                              },
                              "description": "List of ids pointing to <a href=\"${org.sagebionetworks.repo.model.project.StorageLocationSetting}\">StorageLocationSetting<\/a>. The first one in the list is the default location; The maximum number of storage locations for a project is limited to 10."
                         }
                    },
                    "description": "This setting type contains the list of upload locations for files in a project. Each id in the locations attribute points to an existing <a href=\"${org.sagebionetworks.repo.model.project.StorageLocationSetting}\">StorageLocationSetting<\/a>. The maximum number of storage locations that can be stored for a project is 10.",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.download.EnableTwoFa": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.download.EnableTwoFa"]
                         },
                         "accessRequirementId": {
                              "type": "integer",
                              "format": "int32"
                         }
                    },
                    "description": "In order to download a file the user will need to enable two factor authentication.",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.RestrictableObjectDescriptorResponse": {
                    "type": "object",
                    "properties": {
                         "subjects": {
                              "type": "array",
                              "items": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.RestrictableObjectDescriptor"},
                              "description": "a page of subjects"
                         },
                         "nextPageToken": {"type": "string"}
                    }
               },
               "org.sagebionetworks.repo.model.v2.wiki.V2WikiOrderHint": {
                    "type": "object",
                    "properties": {
                         "ownerId": {"type": "string"},
                         "ownerObjectType": {"type": "string"},
                         "idList": {
                              "type": "array",
                              "items": {"type": "string"},
                              "description": "The list of sub wiki ids that in the order that they should be placed relative to their siblings."
                         },
                         "etag": {"type": "string"}
                    },
                    "description": "A V2WikiOrderHint contains the order hint for the root wiki that corresponds to the given owner ID and type."
               },
               "org.sagebionetworks.repo.model.auth.ChangePasswordWithCurrentPassword": {
                    "type": "object",
                    "properties": {
                         "newPassword": {"type": "string"},
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.auth.ChangePasswordWithCurrentPassword"]
                         },
                         "username": {"type": "string"},
                         "currentPassword": {"type": "string"},
                         "authenticationReceipt": {"type": "string"}
                    },
                    "description": "Change user account's password by verifying the current password",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.dataaccess.AccessApprovalNotificationRequest": {
                    "type": "object",
                    "properties": {
                         "requirementId": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "recipientIds": {
                              "type": "array",
                              "items": {
                                   "type": "integer",
                                   "format": "int32"
                              },
                              "description": "The list of recipient ids, max of 25 recipients allowed."
                         }
                    },
                    "description": "A request to retrieve the notifications for an access requirement and a list of recipients."
               },
               "org.sagebionetworks.repo.model.oauth.OAuthValidationRequestInterface": {
                    "type": "object",
                    "properties": {
                         "provider": {"type": "string"},
                         "authenticationCode": {"type": "string"},
                         "redirectUrl": {"type": "string"}
                    },
                    "description": "Request for an OAuth2 user validation.",
                    "oneOf": [
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.oauth.OAuthValidationRequest"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.oauth.OAuthAccountCreationRequest"}
                    ],
                    "discriminator": {"propertyName": "concreteType"}
               },
               "org.sagebionetworks.repo.model.migration.AsyncMigrationRequest": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.migration.AsyncMigrationRequest"]
                         },
                         "adminRequest": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.migration.AdminRequest",
                              "description": "Abstraction for Admin request"
                         }
                    },
                    "description": "Async Migration requests will implement this type of AsynchronousRequestBody",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.auth.TotpSecret": {
                    "type": "object",
                    "properties": {
                         "secretId": {"type": "string"},
                         "secret": {"type": "string"},
                         "alg": {"type": "string"},
                         "digits": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "period": {
                              "type": "integer",
                              "format": "int32"
                         }
                    },
                    "description": "The generated shared secret to enable two factor authentication with TOTP compatible authenticator app. The secret is not active."
               },
               "org.sagebionetworks.repo.model.quiz.QuestionVariety": {
                    "type": "object",
                    "properties": {"questionOptions": {
                         "type": "array",
                         "items": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.quiz.Question",
                              "description": "a single question in a Quiz"
                         },
                         "description": "A list of variations of a question"
                    }},
                    "description": "A list of variations of a question"
               },
               "org.sagebionetworks.repo.model.download.MeetAccessRequirement": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.download.MeetAccessRequirement"]
                         },
                         "accessRequirementId": {
                              "type": "integer",
                              "format": "int32"
                         }
                    },
                    "description": "In order to download a file the user will need to meet an access requirement associated with the file.",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.subscription.SubscriberPagedResults": {
                    "type": "object",
                    "properties": {
                         "subscribers": {
                              "type": "array",
                              "items": {"type": "string"},
                              "description": "The list of subscriberId for this page"
                         },
                         "nextPageToken": {"type": "string"}
                    },
                    "description": "A paginated list of subscribers"
               },
               "org.sagebionetworks.repo.model.table.QueryCacheHitEvent": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.table.QueryCacheHitEvent"]
                         },
                         "objectId": {"type": "string"},
                         "objectVersion": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "objectType": {"type": "string"},
                         "timestamp": {"type": "string"},
                         "queryRequestHash": {"type": "string"}
                    },
                    "description": "An event fired when a user runs a query that results in a cache hit.",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.form.FormRejection": {
                    "type": "object",
                    "properties": {"reason": {"type": "string"}},
                    "description": "Form reviewer rejection data"
               },
               "org.sagebionetworks.repo.model.VersionInfo": {
                    "type": "object",
                    "properties": {
                         "id": {"type": "string"},
                         "versionNumber": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "versionLabel": {"type": "string"},
                         "versionComment": {"type": "string"},
                         "isLatestVersion": {"type": "boolean"},
                         "modifiedBy": {"type": "string"},
                         "contentSize": {"type": "string"},
                         "contentMd5": {"type": "string"},
                         "modifiedByPrincipalId": {"type": "string"},
                         "modifiedOn": {"type": "string"}
                    },
                    "description": "JSON schema for VersionInfo POJO"
               },
               "org.sagebionetworks.repo.model.docker.DockerCommit": {
                    "type": "object",
                    "properties": {
                         "tag": {"type": "string"},
                         "digest": {"type": "string"},
                         "createdOn": {"type": "string"}
                    },
                    "description": "Metadata for an image in a Docker Repository:  A digest and optional tag."
               },
               "org.sagebionetworks.repo.model.SubmissionTeam": {
                    "type": "object",
                    "properties": {
                         "teamId": {"type": "string"},
                         "challengeId": {"type": "string"},
                         "isRegistered": {"type": "boolean"}
                    },
                    "description": "Record for a Team that can be used to submit to a challenge, including whether said Team is already registered."
               },
               "org.sagebionetworks.repo.model.auth.AuthenticationReceiptToken": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.auth.AuthenticationReceiptToken"]
                         },
                         "hmac": {"type": "string"},
                         "version": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "expiresOn": {"type": "string"},
                         "createdOn": {"type": "string"},
                         "userId": {
                              "type": "integer",
                              "format": "int32"
                         }
                    },
                    "description": "A token returned to the user upon successful authentication.",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.auth.AccessToken": {
                    "type": "object",
                    "properties": {"accessToken": {"type": "string"}},
                    "description": "Holds an access token used for short-term authentication with Synapse"
               },
               "org.sagebionetworks.repo.model.asynch.AsynchronousResponseBody": {
                    "type": "object",
                    "properties": {"concreteType": {"type": "string"}},
                    "description": "The body of an Asynchronous job response.",
                    "oneOf": [
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.EntityUpdateResults"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.schema.CreateSchemaResponse"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.RowReferenceSetResults"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.download.DownloadListQueryResponse"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.DownloadFromTableResult"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.file.BulkFileDownloadResponse"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.file.AddFileToDownloadListResponse"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.doi.v2.DoiResponse"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.TableSearchChangeResponse"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.download.DownloadListManifestResponse"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.file.FileHandleRestoreResponse"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.TableUpdateTransactionResponse"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.file.FileHandleArchivalResponse"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.agent.AgentChatResponse"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.UploadToTableResult"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.schema.GetValidationSchemaResponse"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.migration.AsyncMigrationResponse"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.report.DownloadStorageReportResponse"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.download.AddToDownloadListResponse"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.QueryResultBundle"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.UploadToTablePreviewResult"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.TableSchemaChangeResponse"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.download.DownloadListPackageResponse"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.ViewColumnModelResponse"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.QueryResult"}
                    ],
                    "required": ["concreteType"],
                    "discriminator": {"propertyName": "concreteType"}
               },
               "org.sagebionetworks.repo.model.PaginatedIds": {
                    "type": "object",
                    "properties": {
                         "results": {
                              "type": "array",
                              "items": {"type": "string"},
                              "description": "The list of Object Ids for this page"
                         },
                         "totalNumberOfResults": {
                              "type": "integer",
                              "format": "int32"
                         }
                    },
                    "description": "Paginated results of strings"
               },
               "org.sagebionetworks.repo.model.download.SortField": {
                    "type": "string",
                    "enum": [
                         "fileName",
                         "projectName",
                         "synId",
                         "versionNumber",
                         "addedOn",
                         "createdBy",
                         "createdOn",
                         "fileSize",
                         "isEligibleForPackaging"
                    ]
               },
               "org.sagebionetworks.repo.model.quiz.QuizGenerator": {
                    "type": "object",
                    "properties": {
                         "id": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "header": {"type": "string"},
                         "minimumScore": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "questions": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.quiz.QuestionVariety",
                                   "description": "A list of variations of a question"
                              },
                              "description": "The questions in the Quiz"
                         }
                    },
                    "description": "Schema for a quiz and, optionally, its answer key"
               },
               "org.sagebionetworks.repo.model.verification.AttachmentMetadata": {
                    "type": "object",
                    "properties": {
                         "fileName": {"type": "string"},
                         "id": {"type": "string"}
                    },
                    "description": "The metadata of a file attached to a Verification Submission"
               },
               "org.sagebionetworks.repo.model.file.FileResultFailureCode": {
                    "type": "string",
                    "enum": [
                         "NOT_FOUND",
                         "UNAUTHORIZED"
                    ]
               },
               "org.sagebionetworks.repo.model.agent.AgentChatRequest": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.agent.AgentChatRequest"]
                         },
                         "sessionId": {"type": "string"},
                         "chatText": {"type": "string"}
                    },
                    "description": "Send a chat message to the Synapse chat agent",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.table.ColumnModel": {
                    "type": "object",
                    "properties": {
                         "name": {"type": "string"},
                         "columnType": {"type": "string"},
                         "facetType": {"type": "string"},
                         "id": {"type": "string"},
                         "defaultValue": {"type": "string"},
                         "maximumSize": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "maximumListLength": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "enumValues": {
                              "type": "array",
                              "items": {"type": "string"},
                              "description": "Columns of type STRING can be constrained to an enumeration values set on this list. The maximum number of entries for an enum is 100"
                         },
                         "jsonSubColumns": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.JsonSubColumnModel",
                                   "description": "Defines a single sub-column of a column of type JSON.  This can be used to enable the faceting of the sub-columns."
                              },
                              "description": "For column of type JSON that represents the combination of multiple sub-columns, this property is used to define each sub-column."
                         }
                    },
                    "description": "A column model contains the metadata of a single column of a table or view."
               },
               "org.sagebionetworks.repo.model.search.query.SearchFacetSort": {
                    "type": "string",
                    "enum": [
                         "ALPHA",
                         "COUNT"
                    ]
               },
               "org.sagebionetworks.repo.model.dataaccess.DataAccessSubmissionEvent": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.dataaccess.DataAccessSubmissionEvent"]
                         },
                         "objectId": {"type": "string"},
                         "objectVersion": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "objectType": {"type": "string"},
                         "timestamp": {"type": "string"}
                    },
                    "description": "An envent that is fired after a user creates a data access submission",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.audit.DeletedNode": {
                    "type": "object",
                    "properties": {"id": {"type": "string"}},
                    "description": "Data record a deleted node."
               },
               "PaginatedResultsOfDiscussionThreadBundle": {
                    "type": "object",
                    "properties": {
                         "totalNumberOfResults": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "results": {
                              "type": "array",
                              "items": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.discussion.DiscussionThreadBundle"}
                         }
                    }
               },
               "org.sagebionetworks.repo.model.statistics.MonthlyFilesStatistics": {
                    "type": "object",
                    "properties": {
                         "lastUpdatedOn": {"type": "string"},
                         "months": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.statistics.FilesCountStatistics",
                                   "description": "Describes an aggregate of file actions (e.g. downloads/uploads) and (unique) users count for a specific time frame"
                              },
                              "description": "The file count buckets ordered by month, always contains the past 12 months (No matter if statistics are computed or not)"
                         }
                    },
                    "description": "Container for the statistics relative to file downloads or uploads for the past 12 months (Excluding the current month)."
               },
               "org.sagebionetworks.repo.model.sts.StsPermission": {
                    "type": "string",
                    "enum": [
                         "read_only",
                         "read_write"
                    ]
               },
               "org.sagebionetworks.repo.model.download.RemoveBatchOfFilesFromDownloadListResponse": {
                    "type": "object",
                    "properties": {"numberOfFilesRemoved": {
                         "type": "integer",
                         "format": "int32"
                    }},
                    "description": "Response to remove a single batch of files from the user's download list."
               },
               "org.sagebionetworks.repo.model.entity.query.Sort": {
                    "type": "object",
                    "properties": {
                         "columnName": {"type": "string"},
                         "direction": {"type": "string"}
                    },
                    "description": "Defines an entity query sort."
               },
               "org.sagebionetworks.repo.model.project.BucketOwnerStorageLocationSetting": {
                    "type": "object",
                    "properties": {
                         "concreteType": {"type": "string"},
                         "storageLocationId": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "uploadType": {"type": "string"},
                         "banner": {"type": "string"},
                         "description": {"type": "string"},
                         "etag": {"type": "string"},
                         "createdOn": {"type": "string"},
                         "createdBy": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "bucket": {"type": "string"},
                         "baseKey": {"type": "string"}
                    },
                    "description": "A storage location that defines an external bucket that needs to be verified for ownership. For this type of storage location, upon creation there is a process of verification that will check that a owner.txt file is uploaded to the bucket (and if present within the baseKey folder) and that contains a line separated list of user identifiers. Valid user identifiers for verifications are: user id or id of a team the user is part of.",
                    "oneOf": [
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.project.ExternalGoogleCloudStorageLocationSetting"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.project.ExternalS3StorageLocationSetting"}
                    ],
                    "required": [
                         "bucket",
                         "concreteType"
                    ],
                    "discriminator": {"propertyName": "concreteType"}
               },
               "org.sagebionetworks.repo.model.EntityIdList": {
                    "type": "object",
                    "properties": {"idList": {
                         "type": "array",
                         "items": {"type": "string"},
                         "description": "A list of entity IDs. Limit size 20."
                    }},
                    "description": "A list of entity IDs"
               },
               "org.sagebionetworks.repo.model.table.TableSearchChangeRequest": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.table.TableSearchChangeRequest"]
                         },
                         "entityId": {"type": "string"},
                         "searchEnabled": {"type": "boolean"}
                    },
                    "description": "An AsynchronousRequestBody to change the search configuration of a table.",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.status.StatusEnum": {
                    "type": "string",
                    "enum": [
                         "READ_WRITE",
                         "READ_ONLY",
                         "DOWN"
                    ]
               },
               "org.sagebionetworks.repo.model.entity.BindSchemaToEntityRequest": {
                    "type": "object",
                    "properties": {
                         "entityId": {"type": "string"},
                         "schema$id": {"type": "string"},
                         "enableDerivedAnnotations": {"type": "boolean"}
                    },
                    "description": "Request to bind an Entity to a JSON schema."
               },
               "org.sagebionetworks.repo.model.search.Document": {
                    "type": "object",
                    "properties": {
                         "type": {"type": "string"},
                         "id": {"type": "string"},
                         "fields": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.search.DocumentFields",
                              "description": "JSON schema for the fields of a search document.  Note that awesome search does not support camel case so we have to deviate from the usual naming scheme for properties."
                         }
                    },
                    "description": "JSON schema for a search document.",
                    "required": [
                         "type",
                         "id"
                    ]
               },
               "org.sagebionetworks.repo.model.table.ColumnChange": {
                    "type": "object",
                    "properties": {
                         "oldColumnId": {"type": "string"},
                         "newColumnId": {"type": "string"}
                    },
                    "description": "Describes a change from one column to another."
               },
               "org.sagebionetworks.repo.model.file.ExternalFileHandle": {
                    "type": "object",
                    "properties": {
                         "id": {"type": "string"},
                         "etag": {"type": "string"},
                         "createdBy": {"type": "string"},
                         "createdOn": {"type": "string"},
                         "modifiedOn": {"type": "string"},
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.file.ExternalFileHandle"]
                         },
                         "contentType": {"type": "string"},
                         "contentMd5": {"type": "string"},
                         "fileName": {"type": "string"},
                         "storageLocationId": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "contentSize": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "status": {"type": "string"},
                         "externalURL": {"type": "string"}
                    },
                    "description": "An ExternalFileHandle represents a file that is not stored in Synapse.  Instead, ExternalFileHandles reside somewhere accessible via a URL. Synapse will attempt to generate a preview for any external URL that can be publicly read.",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.principal.AccountSetupInfo": {
                    "type": "object",
                    "properties": {
                         "firstName": {"type": "string"},
                         "lastName": {"type": "string"},
                         "username": {"type": "string"},
                         "password": {"type": "string"},
                         "emailValidationSignedToken": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.principal.EmailValidationSignedToken",
                              "description": "Signed token containing the the information necessary to create a new account or add an email address to an existing account."
                         }
                    },
                    "description": "Information needed to establish a new user account, following email validation."
               },
               "org.sagebionetworks.repo.model.favorite.SortDirection": {
                    "type": "string",
                    "enum": [
                         "ASC",
                         "DESC"
                    ]
               },
               "org.sagebionetworks.repo.model.subscription.SubscriptionObjectType": {
                    "type": "string",
                    "enum": [
                         "FORUM",
                         "THREAD",
                         "DATA_ACCESS_SUBMISSION",
                         "DATA_ACCESS_SUBMISSION_STATUS"
                    ]
               },
               "org.sagebionetworks.repo.model.table.ViewType": {
                    "type": "string",
                    "enum": [
                         "file",
                         "project",
                         "file_and_table"
                    ]
               },
               "org.sagebionetworks.evaluation.model.EvaluationSubmissions": {
                    "type": "object",
                    "properties": {
                         "id": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "etag": {"type": "string"},
                         "evaluationId": {
                              "type": "integer",
                              "format": "int32"
                         }
                    },
                    "description": "This object holds the metadata for a collection of Submissions belonging to an Evaluation."
               },
               "org.sagebionetworks.repo.model.project.BaseKeyStorageLocationSetting": {
                    "type": "object",
                    "properties": {
                         "concreteType": {"type": "string"},
                         "storageLocationId": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "uploadType": {"type": "string"},
                         "banner": {"type": "string"},
                         "description": {"type": "string"},
                         "etag": {"type": "string"},
                         "createdOn": {"type": "string"},
                         "createdBy": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "baseKey": {"type": "string"}
                    },
                    "description": "A storage location with an optional base key",
                    "oneOf": [
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.project.S3StorageLocationSetting"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.project.ExternalGoogleCloudStorageLocationSetting"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.project.ExternalS3StorageLocationSetting"}
                    ],
                    "required": ["concreteType"],
                    "discriminator": {"propertyName": "concreteType"}
               },
               "org.sagebionetworks.repo.model.oauth.OIDCClaimName": {
                    "type": "string",
                    "enum": [
                         "iss",
                         "sub",
                         "aud",
                         "iat",
                         "nbf",
                         "exp",
                         "auth_time",
                         "email",
                         "email_verified",
                         "given_name",
                         "family_name",
                         "company",
                         "team",
                         "userid",
                         "user_name",
                         "orcid",
                         "is_certified",
                         "is_validated",
                         "validated_given_name",
                         "validated_family_name",
                         "validated_location",
                         "validated_email",
                         "validated_company",
                         "validated_orcid",
                         "validated_at",
                         "refresh_token_id",
                         "token_type"
                    ]
               },
               "org.sagebionetworks.repo.model.project.ProjectSetting": {
                    "type": "object",
                    "properties": {
                         "concreteType": {"type": "string"},
                         "id": {"type": "string"},
                         "projectId": {"type": "string"},
                         "settingsType": {"type": "string"},
                         "etag": {"type": "string"}
                    },
                    "description": "A project based setting",
                    "oneOf": [{"$ref": "#/components/schemas/org.sagebionetworks.repo.model.project.UploadDestinationListSetting"}],
                    "required": ["concreteType"],
                    "discriminator": {"propertyName": "concreteType"}
               },
               "org.sagebionetworks.repo.model.table.MaterializedView": {
                    "type": "object",
                    "properties": {
                         "name": {"type": "string"},
                         "description": {"type": "string"},
                         "id": {"type": "string"},
                         "etag": {"type": "string"},
                         "createdOn": {"type": "string"},
                         "modifiedOn": {"type": "string"},
                         "createdBy": {"type": "string"},
                         "modifiedBy": {"type": "string"},
                         "parentId": {"type": "string"},
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.table.MaterializedView"]
                         },
                         "versionNumber": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "versionLabel": {"type": "string"},
                         "versionComment": {"type": "string"},
                         "isLatestVersion": {"type": "boolean"},
                         "columnIds": {
                              "type": "array",
                              "items": {"type": "string"},
                              "description": "The columns of a materialized view are dynamic based on the select statement of the definingSQL. This list of columnIds is for read only, and will be ignored for create and update operations."
                         },
                         "isSearchEnabled": {"type": "boolean"},
                         "definingSQL": {"type": "string"}
                    },
                    "description": "A materialized view is a type of table that is automatically built from a Synapse SQL query. Its content is persisted. The SQL of the materialized view may contain JOIN clauses on multiple tables.",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.file.ExternalUploadDestination": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.file.ExternalUploadDestination"]
                         },
                         "storageLocationId": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "uploadType": {"type": "string"},
                         "banner": {"type": "string"},
                         "url": {"type": "string"}
                    },
                    "description": "This upload destination contains information to start an upload to an SFTP or HTTPS destination. The destination is mapped from an <a href=\"${org.sagebionetworks.repo.model.project.ExternalStorageLocationSetting}\">ExternalStorageLocationSetting<\/a>.",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.table.RowSet": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.table.RowSet"]
                         },
                         "tableId": {"type": "string"},
                         "etag": {"type": "string"},
                         "headers": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.SelectColumn",
                                   "description": "A column model contains the metadata of a single column of a TableEntity"
                              },
                              "description": "The list of SelectColumns that describes the rows of this set."
                         },
                         "rows": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.Row",
                                   "description": "Represents a single row of a TableEntity"
                              },
                              "description": "The Rows of this set.  The index of each row value aligns with the index of each header."
                         }
                    },
                    "description": "Represents a set of row of a TableEntity",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.file.UploadDestination": {
                    "type": "object",
                    "properties": {
                         "concreteType": {"type": "string"},
                         "storageLocationId": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "uploadType": {"type": "string"},
                         "banner": {"type": "string"}
                    },
                    "description": "The upload destination contains information to start an upload of a file generated according to the underlying <a href=\"${org.sagebionetworks.repo.model.project.StorageLocationSetting}\">StorageLocationSetting<\/a>.",
                    "oneOf": [
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.file.S3UploadDestination"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.file.ExternalObjectStoreUploadDestination"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.file.ExternalUploadDestination"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.file.ExternalS3UploadDestination"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.file.ExternalGoogleCloudUploadDestination"}
                    ],
                    "required": ["concreteType"],
                    "discriminator": {"propertyName": "concreteType"}
               },
               "org.sagebionetworks.repo.model.oauth.OAuthScopeList": {
                    "type": "object",
                    "properties": {"list": {
                         "type": "array",
                         "items": {"type": "string"}
                    }}
               },
               "org.sagebionetworks.repo.model.provenance.UsedEntity": {
                    "type": "object",
                    "properties": {
                         "wasExecuted": {"type": "boolean"},
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.provenance.UsedEntity"]
                         },
                         "reference": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.Reference",
                              "description": "JSON schema for Reference POJO"
                         }
                    },
                    "description": "Interface for JSON schema for UsedEntity POJO",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.subscription.SubscriptionRequest": {
                    "type": "object",
                    "properties": {
                         "objectType": {"type": "string"},
                         "idList": {
                              "type": "array",
                              "items": {"type": "string"},
                              "description": "The list of objectId"
                         },
                         "sortByType": {"type": "string"},
                         "sortDirection": {"type": "string"}
                    },
                    "description": "A object that is used to request a list of Subscription"
               },
               "org.sagebionetworks.repo.model.download.SortDirection": {
                    "type": "string",
                    "enum": [
                         "ASC",
                         "DESC"
                    ]
               },
               "org.sagebionetworks.repo.model.discussion.DiscussionReplyBundle": {
                    "type": "object",
                    "properties": {
                         "id": {"type": "string"},
                         "threadId": {"type": "string"},
                         "forumId": {"type": "string"},
                         "projectId": {"type": "string"},
                         "createdOn": {"type": "string"},
                         "createdBy": {"type": "string"},
                         "modifiedOn": {"type": "string"},
                         "etag": {"type": "string"},
                         "messageKey": {"type": "string"},
                         "isEdited": {"type": "boolean"},
                         "isDeleted": {"type": "boolean"}
                    },
                    "description": "The Reply model object represents a single reply in a thread."
               },
               "org.sagebionetworks.repo.model.file.MultipartUploadRequest": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.file.MultipartUploadRequest"]
                         },
                         "partSizeBytes": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "fileName": {"type": "string"},
                         "storageLocationId": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "generatePreview": {"type": "boolean"},
                         "contentMD5Hex": {"type": "string"},
                         "contentType": {"type": "string"},
                         "fileSizeBytes": {
                              "type": "integer",
                              "format": "int32"
                         }
                    },
                    "description": "Request to start or continue a multi-part file upload.",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.discussion.CreateDiscussionReply": {
                    "type": "object",
                    "properties": {
                         "threadId": {"type": "string"},
                         "messageMarkdown": {"type": "string"}
                    },
                    "description": "The model object represents a single Reply creation."
               },
               "org.sagebionetworks.repo.model.search.DocumentBatch": {
                    "type": "object",
                    "properties": {"documents": {
                         "type": "array",
                         "items": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.search.Document",
                              "description": "JSON schema for a search document."
                         },
                         "description": "The set of search documents."
                    }},
                    "description": "JSON schema for a batch of search documents."
               },
               "org.sagebionetworks.repo.model.RestResourceList": {
                    "type": "object",
                    "properties": {"list": {
                         "type": "array",
                         "items": {"type": "string"},
                         "description": "The List of Rest Resources"
                    }},
                    "description": "JSON schema for the REST Resource List POJO"
               },
               "PaginatedResultsOfReference": {
                    "type": "object",
                    "properties": {
                         "totalNumberOfResults": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "results": {
                              "type": "array",
                              "items": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.Reference"}
                         }
                    }
               },
               "PaginatedResultsOfV2WikiHeader": {
                    "type": "object",
                    "properties": {
                         "totalNumberOfResults": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "results": {
                              "type": "array",
                              "items": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.v2.wiki.V2WikiHeader"}
                         }
                    }
               },
               "org.sagebionetworks.repo.model.schema.JsonSchemaVersionInfo": {
                    "type": "object",
                    "properties": {
                         "organizationId": {"type": "string"},
                         "organizationName": {"type": "string"},
                         "schemaId": {"type": "string"},
                         "schemaName": {"type": "string"},
                         "versionId": {"type": "string"},
                         "$id": {"type": "string"},
                         "semanticVersion": {"type": "string"},
                         "jsonSHA256Hex": {"type": "string"},
                         "createdOn": {"type": "string"},
                         "createdBy": {"type": "string"}
                    },
                    "description": "Information about a single version of a JSON schema."
               },
               "org.sagebionetworks.repo.model.file.BulkFileDownloadResponse": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.file.BulkFileDownloadResponse"]
                         },
                         "resultZipFileHandleId": {"type": "string"},
                         "fileSummary": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.file.FileDownloadSummary",
                                   "description": "Summary of a requested file download."
                              },
                              "description": "The summary of each requested file."
                         },
                         "userId": {"type": "string"}
                    },
                    "description": "Response for a bulk file download.",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.annotation.AnnotationBase": {
                    "type": "object",
                    "properties": {
                         "key": {"type": "string"},
                         "isPrivate": {"type": "boolean"}
                    },
                    "description": "Generic interface for a key-value Annotation pair",
                    "oneOf": [
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.annotation.StringAnnotation"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.annotation.LongAnnotation"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.annotation.DoubleAnnotation"}
                    ],
                    "discriminator": {"propertyName": "concreteType"}
               },
               "org.sagebionetworks.repo.model.asynch.AsynchronousAdminRequestBody": {
                    "type": "object",
                    "properties": {"concreteType": {"type": "string"}},
                    "description": "Jobs that that implement this type of AsynchronousRequestBody will only be executable by administrators",
                    "oneOf": [
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.file.FileHandleArchivalRequest"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.migration.AsyncMigrationRequest"}
                    ],
                    "required": ["concreteType"],
                    "discriminator": {"propertyName": "concreteType"}
               },
               "org.sagebionetworks.repo.model.UserPreferenceBoolean": {
                    "type": "object",
                    "properties": {
                         "name": {"type": "string"},
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.UserPreferenceBoolean"]
                         },
                         "value": {"type": "boolean"}
                    },
                    "description": "A user preference of type boolean",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.quiz.QuestionResponse": {
                    "type": "object",
                    "properties": {
                         "questionIndex": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "concreteType": {"type": "string"}
                    },
                    "description": "The response to a question",
                    "oneOf": [
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.quiz.MultichoiceResponse"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.quiz.TextFieldResponse"}
                    ],
                    "required": ["concreteType"],
                    "discriminator": {"propertyName": "concreteType"}
               },
               "org.sagebionetworks.repo.model.migration.CalculateOptimalRangeRequest": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.migration.CalculateOptimalRangeRequest"]
                         },
                         "migrationType": {"type": "string"},
                         "minimumId": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "maximumId": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "optimalRowsPerRange": {
                              "type": "integer",
                              "format": "int32"
                         }
                    },
                    "description": "Request to calculate the ID ranges with the optimal number of rows.",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.schema.JsonSchemaInfo": {
                    "type": "object",
                    "properties": {
                         "organizationId": {"type": "string"},
                         "organizationName": {"type": "string"},
                         "schemaId": {"type": "string"},
                         "schemaName": {"type": "string"},
                         "createdOn": {"type": "string"},
                         "createdBy": {"type": "string"}
                    },
                    "description": "Information about a single JSON schema."
               },
               "org.sagebionetworks.evaluation.model.SubmissionBundle": {
                    "type": "object",
                    "properties": {
                         "submission": {
                              "$ref": "#/components/schemas/org.sagebionetworks.evaluation.model.Submission",
                              "description": "A Submission to a Synapse Evaluation is a pointer to a versioned Entity. Submissions are immutable, so we archive a copy of the EntityBundle at the time of submission."
                         },
                         "submissionStatus": {
                              "$ref": "#/components/schemas/org.sagebionetworks.evaluation.model.SubmissionStatus",
                              "description": "A SubmissionStatus is a secondary, mutable object associated with a Submission. This object should be used to contain scoring data about the Submission."
                         }
                    },
                    "description": "A bundle object to contain a Submission and its accompanying SubmissionStatus."
               },
               "org.sagebionetworks.repo.model.message.MessageRecipientSet": {
                    "type": "object",
                    "properties": {"recipients": {
                         "type": "array",
                         "items": {"type": "string"},
                         "description": "The unique identifiers of the intended recipients of a message",
                         "uniqueItems": true
                    }},
                    "description": "Contains a set of IDs of the intended recipients of a message"
               },
               "org.sagebionetworks.repo.model.file.StsUploadDestination": {
                    "type": "object",
                    "properties": {
                         "concreteType": {"type": "string"},
                         "storageLocationId": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "uploadType": {"type": "string"},
                         "banner": {"type": "string"},
                         "baseKey": {"type": "string"},
                         "stsEnabled": {"type": "boolean"}
                    },
                    "description": "An StsUploadDestination provides settings to enable Synapse to call AWS Security Token Service (STS) to get temporary AWS credentials",
                    "oneOf": [
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.file.S3UploadDestination"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.file.ExternalS3UploadDestination"}
                    ],
                    "required": ["concreteType"],
                    "discriminator": {"propertyName": "concreteType"}
               },
               "org.sagebionetworks.repo.model.webhook.SynapseEventType": {
                    "type": "string",
                    "enum": [
                         "CREATE",
                         "UPDATE",
                         "DELETE"
                    ]
               },
               "org.sagebionetworks.repo.model.table.DownloadFromTableResult": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.table.DownloadFromTableResult"]
                         },
                         "resultsFileHandleId": {"type": "string"},
                         "tableId": {"type": "string"},
                         "etag": {"type": "string"},
                         "headers": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.SelectColumn",
                                   "description": "A column model contains the metadata of a single column of a TableEntity"
                              },
                              "description": "The list of SelectColumns that describes the rows of this set."
                         }
                    },
                    "description": "The response body of an asynchronous CSV table download job.",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.SubmissionTeamPagedResults": {
                    "type": "object",
                    "properties": {
                         "results": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.SubmissionTeam",
                                   "description": "Record for a Team that can be used to submit to a challenge, including whether said Team is already registered."
                              },
                              "description": "The list of results for this page"
                         },
                         "totalNumberOfResults": {
                              "type": "integer",
                              "format": "int32"
                         }
                    },
                    "description": "A paginated list of SubmissionTeam objects"
               },
               "org.sagebionetworks.repo.model.message.Message": {
                    "type": "object",
                    "properties": {
                         "concreteType": {"type": "string"},
                         "objectId": {"type": "string"},
                         "objectVersion": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "objectType": {"type": "string"},
                         "timestamp": {"type": "string"}
                    },
                    "description": "JSON schema for a message",
                    "oneOf": [
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.QueryCacheHitEvent"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.message.ChangeMessage"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.dataaccess.DataAccessSubmissionEvent"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.file.FileEvent"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.TableStatusChangeEvent"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.message.LocalStackChangeMesssage"}
                    ],
                    "required": ["concreteType"],
                    "discriminator": {"propertyName": "concreteType"}
               },
               "org.sagebionetworks.repo.model.webhook.ListUserWebhooksResponse": {
                    "type": "object",
                    "properties": {
                         "page": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.webhook.Webhook",
                                   "description": "An object that serves as registration for a Synapse user to receive events for the specified event."
                              },
                              "description": "The Webhooks belonging to a given user."
                         },
                         "nextPageToken": {"type": "string"}
                    },
                    "description": "Response body containing the list of webhook for a user."
               },
               "org.sagebionetworks.repo.model.StatusHistoryRecord": {
                    "type": "object",
                    "properties": {
                         "statusName": {"type": "string"},
                         "date": {"type": "string"}
                    },
                    "description": "JSON schema for StatusHistoryRecord POJO"
               },
               "org.sagebionetworks.repo.model.webhook.SynapseObjectType": {
                    "type": "string",
                    "enum": ["ENTITY"]
               },
               "org.sagebionetworks.repo.model.EntityId": {
                    "type": "object",
                    "properties": {"id": {"type": "string"}},
                    "description": "JSON schema for EntityId POJO"
               },
               "org.sagebionetworks.repo.model.dataaccess.SubmissionPage": {
                    "type": "object",
                    "properties": {
                         "results": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.dataaccess.Submission",
                                   "description": "A submission to request access to controlled data."
                              }
                         },
                         "nextPageToken": {"type": "string"}
                    },
                    "description": "A page of Submission."
               },
               "org.sagebionetworks.repo.model.subscription.Topic": {
                    "type": "object",
                    "properties": {
                         "objectId": {"type": "string"},
                         "objectType": {"type": "string"}
                    },
                    "description": "The model object represents a topic of subscription."
               },
               "org.sagebionetworks.repo.model.message.LocalStackMessage": {
                    "type": "object",
                    "properties": {
                         "concreteType": {"type": "string"},
                         "objectId": {"type": "string"},
                         "objectVersion": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "objectType": {"type": "string"},
                         "timestamp": {"type": "string"}
                    },
                    "description": "JSON schema for a message that can be sent to the local stack and does not migrate.",
                    "oneOf": [
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.QueryCacheHitEvent"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.dataaccess.DataAccessSubmissionEvent"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.file.FileEvent"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.TableStatusChangeEvent"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.message.LocalStackChangeMesssage"}
                    ],
                    "required": ["concreteType"],
                    "discriminator": {"propertyName": "concreteType"}
               },
               "org.sagebionetworks.repo.model.auth.ChangePasswordRequest": {
                    "type": "object",
                    "properties": {
                         "sessionToken": {"type": "string"},
                         "password": {"type": "string"}
                    },
                    "description": "DEPRECATED. Please use an implementation of ChangePasswordInterface instead. Contains fields required to change a user's password"
               },
               "org.sagebionetworks.repo.model.discussion.CreateDiscussionThread": {
                    "type": "object",
                    "properties": {
                         "forumId": {"type": "string"},
                         "title": {"type": "string"},
                         "messageMarkdown": {"type": "string"}
                    },
                    "description": "The model object represents a single Thread creation."
               },
               "org.sagebionetworks.repo.model.file.AddPartResponse": {
                    "type": "object",
                    "properties": {
                         "uploadId": {"type": "string"},
                         "partNumber": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "addPartState": {"type": "string"},
                         "errorMessage": {"type": "string"}
                    },
                    "description": "Response from adding a part to multi-part upload or copy."
               },
               "org.sagebionetworks.repo.model.principal.AccountCreationToken": {
                    "type": "object",
                    "properties": {
                         "emailValidationSignedToken": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.principal.EmailValidationSignedToken",
                              "description": "Signed token containing the the information necessary to create a new account or add an email address to an existing account."
                         },
                         "encodedMembershipInvtnSignedToken": {"type": "string"}
                    },
                    "description": "Information needed to start the process of creating a new account."
               },
               "org.sagebionetworks.repo.model.search.query.SearchFieldName": {
                    "type": "string",
                    "enum": [
                         "Id",
                         "Name",
                         "Description",
                         "EntityType",
                         "ModifiedBy",
                         "ModifiedOn",
                         "CreatedBy",
                         "CreatedOn",
                         "Consortium",
                         "Diagnosis",
                         "Organ",
                         "Tissue"
                    ]
               },
               "org.sagebionetworks.repo.model.file.FileDownloadSummary": {
                    "type": "object",
                    "properties": {
                         "fileHandleId": {"type": "string"},
                         "associateObjectId": {"type": "string"},
                         "associateObjectType": {"type": "string"},
                         "zipEntryName": {"type": "string"},
                         "status": {"type": "string"},
                         "failureMessage": {"type": "string"},
                         "failureCode": {"type": "string"}
                    },
                    "description": "Summary of a requested file download."
               },
               "org.sagebionetworks.repo.model.registry.EntityMigration": {
                    "type": "object",
                    "properties": {"toRename": {
                         "type": "array",
                         "items": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.registry.RenameData",
                              "description": "Rename datat"
                         },
                         "description": "The full path of the entity schema."
                    }},
                    "description": "Metadata about migrating entities"
               },
               "org.sagebionetworks.repo.model.dataaccess.SubmissionStateChangeRequest": {
                    "type": "object",
                    "properties": {
                         "submissionId": {"type": "string"},
                         "newState": {"type": "string"},
                         "rejectedReason": {"type": "string"}
                    },
                    "description": "A request to change the state of a Submission."
               },
               "org.sagebionetworks.repo.model.schema.ObjectType": {
                    "type": "string",
                    "enum": ["entity"]
               },
               "org.sagebionetworks.repo.model.webhook.WebhookMessage": {
                    "type": "object",
                    "properties": {
                         "concreteType": {"type": "string"},
                         "messageId": {"type": "string"},
                         "eventTimestamp": {"type": "string"}
                    },
                    "description": "Data transfer object for messages to be sent to webhook endpoints.",
                    "oneOf": [
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.webhook.WebhookSynapseEventMessage"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.webhook.WebhookVerificationMessage"}
                    ],
                    "required": [
                         "messageId",
                         "eventTimestamp",
                         "concreteType"
                    ],
                    "discriminator": {"propertyName": "concreteType"}
               },
               "org.sagebionetworks.repo.model.dataaccess.SubmissionInfoPage": {
                    "type": "object",
                    "properties": {
                         "results": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.dataaccess.SubmissionInfo",
                                   "description": "Information about a request to access controlled data and its related Research Project"
                              }
                         },
                         "nextPageToken": {"type": "string"}
                    },
                    "description": "A page of Submission Information"
               },
               "org.sagebionetworks.repo.model.doi.v2.NameIdentifierScheme": {
                    "type": "string",
                    "enum": [
                         "ORCID",
                         "ISNI"
                    ]
               },
               "org.sagebionetworks.repo.model.entity.FileHandleUpdateRequest": {
                    "type": "object",
                    "properties": {
                         "oldFileHandleId": {"type": "string"},
                         "newFileHandleId": {"type": "string"}
                    },
                    "description": "Reuqest that can be used to update the file handle of an <a href=\"org.sagebionetworks.repo.model.FileEntity>FileEntity<\/a>\". The MD5 of new file handle should match the MD5 of the current file handle."
               },
               "org.sagebionetworks.repo.model.attachment.UploadResult": {
                    "type": "object",
                    "properties": {
                         "message": {"type": "string"},
                         "uploadStatus": {"type": "string"}
                    },
                    "description": "This object is deprecated and will be removed in future versions of Synapse."
               },
               "org.sagebionetworks.repo.model.discussion.MessageURL": {
                    "type": "object",
                    "properties": {"messageUrl": {"type": "string"}}
               },
               "org.sagebionetworks.repo.model.message.cloudmailin.Envelope": {
                    "type": "object",
                    "properties": {
                         "to": {"type": "string"},
                         "recipients": {
                              "type": "array",
                              "items": {"type": "string"},
                              "description": "The full list of recipients that the remote server is attempting to send to in this transaction."
                         },
                         "from": {"type": "string"},
                         "helo_domain": {"type": "string"},
                         "remote_ip": {"type": "string"},
                         "spf": {"type": "string"}
                    },
                    "description": "Message Envelope"
               },
               "org.sagebionetworks.repo.model.table.TableStatusChangeEvent": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.table.TableStatusChangeEvent"]
                         },
                         "objectId": {"type": "string"},
                         "objectVersion": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "objectType": {"type": "string"},
                         "timestamp": {"type": "string"},
                         "state": {"type": "string"}
                    },
                    "description": "Object used to propagate table status changes",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.RestrictionInformationBatchResponse": {
                    "type": "object",
                    "properties": {"restrictionInformation": {
                         "type": "array",
                         "items": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.RestrictionInformationResponse",
                              "description": "The information about restriction level on a restrict-able object."
                         },
                         "description": "The list of RestrictionInformationResponse for each of the object ids included in the request."
                    }},
                    "description": "The information about restriction level on a list of restrict-able objects."
               },
               "org.sagebionetworks.evaluation.model.BatchUploadResponse": {
                    "type": "object",
                    "properties": {"nextUploadToken": {"type": "string"}},
                    "description": "The response for a batch SubmissionStatus upload."
               },
               "org.sagebionetworks.repo.model.Link": {
                    "type": "object",
                    "properties": {
                         "name": {"type": "string"},
                         "description": {"type": "string"},
                         "id": {"type": "string"},
                         "etag": {"type": "string"},
                         "createdOn": {"type": "string"},
                         "modifiedOn": {"type": "string"},
                         "createdBy": {"type": "string"},
                         "modifiedBy": {"type": "string"},
                         "parentId": {"type": "string"},
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.Link"]
                         },
                         "linksTo": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.Reference",
                              "description": "JSON schema for Reference POJO"
                         },
                         "linksToClassName": {"type": "string"}
                    },
                    "description": "JSON schema for a Link",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.auth.AccessTokenGenerationResponse": {
                    "type": "object",
                    "properties": {"token": {"type": "string"}},
                    "description": "Response body generated when creating a personal access token."
               },
               "org.sagebionetworks.repo.model.dataaccess.AccessRequirementSearchResponse": {
                    "type": "object",
                    "properties": {
                         "results": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.dataaccess.AccessRequirementSearchResult",
                                   "description": "Result item of an Access Requirement search"
                              },
                              "description": "The results of an access requirement search"
                         },
                         "nextPageToken": {"type": "string"}
                    },
                    "description": "Describes the response object for an Access Requirement search"
               },
               "org.sagebionetworks.repo.model.wiki.WikiPage": {
                    "type": "object",
                    "properties": {
                         "id": {"type": "string"},
                         "etag": {"type": "string"},
                         "createdOn": {"type": "string"},
                         "createdBy": {"type": "string"},
                         "modifiedOn": {"type": "string"},
                         "modifiedBy": {"type": "string"},
                         "parentWikiId": {"type": "string"},
                         "title": {"type": "string"},
                         "markdown": {"type": "string"},
                         "attachmentFileHandleIds": {
                              "type": "array",
                              "items": {"type": "string"},
                              "description": "The list of attachment file handle ids of this page."
                         }
                    },
                    "description": "The WikiPage model object represent a single user managed wiki page."
               },
               "org.sagebionetworks.repo.model.oauth.OAuthGrantType": {
                    "type": "string",
                    "enum": [
                         "authorization_code",
                         "refresh_token"
                    ]
               },
               "org.sagebionetworks.repo.model.file.FileDownloadStatus": {
                    "type": "string",
                    "enum": [
                         "SUCCESS",
                         "FAILURE"
                    ]
               },
               "org.sagebionetworks.repo.model.AccessApprovalInfo": {
                    "type": "object",
                    "properties": {
                         "userId": {"type": "string"},
                         "accessRequirementId": {"type": "string"},
                         "hasAccessApproval": {"type": "boolean"}
                    },
                    "description": "Information about whether or not a user has an AccessApproval for an AccessRequirement."
               },
               "org.sagebionetworks.repo.model.table.ValidateDefiningSqlResponse": {
                    "type": "object",
                    "properties": {
                         "isValid": {"type": "boolean"},
                         "invalidReason": {"type": "string"}
                    },
                    "description": "The response body from validateDefiningSql"
               },
               "org.sagebionetworks.repo.model.dataaccess.AccessApprovalSearchResponse": {
                    "type": "object",
                    "properties": {
                         "results": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.dataaccess.AccessApprovalSearchResult",
                                   "description": "The result item in an Access Approval search"
                              },
                              "description": "The matching Access Approval information corresponding to the search parameters"
                         },
                         "nextPageToken": {"type": "string"}
                    },
                    "description": "Response for the request to search through the access approval history"
               },
               "org.sagebionetworks.repo.model.migration.AdminResponse": {
                    "type": "object",
                    "properties": {"concreteType": {"type": "string"}},
                    "description": "Abstraction for Admin response",
                    "oneOf": [
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.migration.BackupTypeResponse"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.migration.MigrationTypeChecksum"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.migration.CalculateOptimalRangeResponse"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.migration.RestoreTypeResponse"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.migration.MigrationTypeCounts"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.migration.DatasetBackfillResponse"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.migration.MigrationRangeChecksum"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.migration.MigrationTypeCount"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.migration.BatchChecksumResponse"}
                    ],
                    "required": ["concreteType"],
                    "discriminator": {"propertyName": "concreteType"}
               },
               "org.sagebionetworks.repo.model.table.EntityRefCollectionView": {
                    "type": "object",
                    "properties": {
                         "name": {"type": "string"},
                         "description": {"type": "string"},
                         "id": {"type": "string"},
                         "etag": {"type": "string"},
                         "createdOn": {"type": "string"},
                         "modifiedOn": {"type": "string"},
                         "createdBy": {"type": "string"},
                         "modifiedBy": {"type": "string"},
                         "parentId": {"type": "string"},
                         "concreteType": {"type": "string"},
                         "versionNumber": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "versionLabel": {"type": "string"},
                         "versionComment": {"type": "string"},
                         "isLatestVersion": {"type": "boolean"},
                         "columnIds": {
                              "type": "array",
                              "items": {"type": "string"},
                              "description": "The list of ColumnModel IDs that define the schema of the object."
                         },
                         "isSearchEnabled": {"type": "boolean"},
                         "items": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.EntityRef",
                                   "description": "Represents a reference to the id and version of an entity to be used in collections."
                              },
                              "description": "The flat list of entities referenced by this view.  Limit: 30K items."
                         }
                    },
                    "description": "A view referencing a fixed collections of entities",
                    "oneOf": [
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.DatasetCollection"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.Dataset"}
                    ],
                    "required": ["concreteType"],
                    "discriminator": {"propertyName": "concreteType"}
               },
               "org.sagebionetworks.repo.model.annotation.v2.Annotations": {
                    "type": "object",
                    "properties": {
                         "id": {"type": "string"},
                         "etag": {"type": "string"},
                         "annotations": {
                              "type": "object",
                              "description": "Additional metadata associated with the object. The key is the name of your desired annotations. The value is an object containing a list of string values (use empty list to represent no values for key) and the value type associated with all values in the list",
                              "additionalProperties": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.annotation.v2.AnnotationsValue",
                                   "description": "Contains a AnnotationV2's value and its type"
                              }
                         }
                    },
                    "description": "Annotations are additional key-value pair metadata that are associated with an object."
               },
               "org.sagebionetworks.repo.model.agent.SessionHistoryResponse": {
                    "type": "object",
                    "properties": {
                         "sessionId": {"type": "string"},
                         "page": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.agent.Interaction",
                                   "description": "Represents a single interaction between the user and an agent."
                              },
                              "description": "A single page of a session's history.  The history is ordered by the interaction time stamp descending."
                         },
                         "nextPageToken": {"type": "string"}
                    },
                    "description": "A single page of an agent session history"
               },
               "org.sagebionetworks.repo.model.principal.PrincipalAlias": {
                    "type": "object",
                    "properties": {
                         "aliasId": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "etag": {"type": "string"},
                         "principalId": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "alias": {"type": "string"},
                         "type": {"type": "string"}
                    },
                    "description": "Alias binding of a principal"
               },
               "org.sagebionetworks.repo.model.message.ChangeMessages": {
                    "type": "object",
                    "properties": {"list": {
                         "type": "array",
                         "items": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.message.ChangeMessage",
                              "description": "JSON schema for a change message"
                         }
                    }},
                    "description": "JSON schema for list of ChangeMessages."
               },
               "org.sagebionetworks.repo.model.principal.UserGroupHeaderResponse": {
                    "type": "object",
                    "properties": {"list": {
                         "type": "array",
                         "items": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.UserGroupHeader",
                              "description": "JSON schema for UserHeader POJO"
                         },
                         "description": "The list of UserGroupHeaders."
                    }},
                    "description": "A list of UserGroupHeaders."
               },
               "org.sagebionetworks.repo.model.auth.Username": {
                    "type": "object",
                    "properties": {"email": {"type": "string"}},
                    "description": "Contains the user's email"
               },
               "org.sagebionetworks.repo.model.dataaccess.AccessType": {
                    "type": "string",
                    "enum": [
                         "GAIN_ACCESS",
                         "RENEW_ACCESS",
                         "REVOKE_ACCESS"
                    ]
               },
               "org.sagebionetworks.repo.model.table.HasEntityId": {
                    "type": "object",
                    "properties": {"entityId": {"type": "string"}},
                    "description": "The object that implements this interface contains an entityId.",
                    "oneOf": [
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.QueryBundleRequest"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.TableSearchChangeRequest"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.TableUpdateTransactionRequest"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.DownloadFromTableRequest"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.AppendableRowSetRequest"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.UploadToTableRequest"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.QueryNextPageToken"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.TableSchemaChangeRequest"}
                    ],
                    "discriminator": {"propertyName": "concreteType"}
               },
               "org.sagebionetworks.repo.model.message.Settings": {
                    "type": "object",
                    "properties": {
                         "sendEmailNotifications": {"type": "boolean"},
                         "markEmailedMessagesAsRead": {"type": "boolean"}
                    },
                    "description": "Contains a user's notification settings"
               },
               "org.sagebionetworks.repo.model.registry.FieldMigrationSpec": {
                    "type": "object",
                    "properties": {
                         "source": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.registry.FieldDescription"},
                         "destination": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.registry.FieldDescription"}
                    },
                    "description": "Metadata to describe the migration of a generic field"
               },
               "org.sagebionetworks.repo.model.Entity": {
                    "type": "object",
                    "properties": {
                         "name": {"type": "string"},
                         "description": {"type": "string"},
                         "id": {"type": "string"},
                         "etag": {"type": "string"},
                         "createdOn": {"type": "string"},
                         "modifiedOn": {"type": "string"},
                         "createdBy": {"type": "string"},
                         "modifiedBy": {"type": "string"},
                         "parentId": {"type": "string"},
                         "concreteType": {"type": "string"}
                    },
                    "description": "This is the base interface that all Entities implement.",
                    "oneOf": [
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.docker.DockerRepository"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.DatasetCollection"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.EntityView"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.VirtualTable"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.Preview"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.Link"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.FileEntity"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.TableEntity"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.Folder"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.SubmissionView"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.MaterializedView"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.Project"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.ExampleEntity"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.Dataset"}
                    ],
                    "required": ["concreteType"],
                    "discriminator": {"propertyName": "concreteType"}
               },
               "org.sagebionetworks.repo.model.file.FileHandleAssociateType": {
                    "type": "string",
                    "enum": [
                         "FileEntity",
                         "TableEntity",
                         "WikiAttachment",
                         "WikiMarkdown",
                         "UserProfileAttachment",
                         "MessageAttachment",
                         "TeamAttachment",
                         "SubmissionAttachment",
                         "VerificationSubmission",
                         "AccessRequirementAttachment",
                         "DataAccessRequestAttachment",
                         "DataAccessSubmissionAttachment",
                         "FormData"
                    ]
               },
               "org.sagebionetworks.repo.model.migration.MigrationRangeChecksum": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.migration.MigrationRangeChecksum"]
                         },
                         "type": {"type": "string"},
                         "checksum": {"type": "string"},
                         "minid": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "maxid": {
                              "type": "integer",
                              "format": "int32"
                         }
                    },
                    "description": "Checksum (aggregate) for record range from minId to maxId of migration type 'type'",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.table.HasValues": {
                    "type": "object",
                    "properties": {"values": {
                         "type": "array",
                         "items": {"type": "string"},
                         "description": "Values to be used with the filter."
                    }},
                    "oneOf": [
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.ColumnMultiValueFunctionQueryFilter"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.ColumnSingleValueQueryFilter"}
                    ],
                    "discriminator": {"propertyName": "concreteType"}
               },
               "org.sagebionetworks.repo.model.HasAccessorRequirement": {
                    "type": "object",
                    "properties": {
                         "isCertifiedUserRequired": {"type": "boolean"},
                         "isValidatedProfileRequired": {"type": "boolean"}
                    },
                    "description": "Include requirements that may or may not require from an accessor.",
                    "oneOf": [
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.ManagedACTAccessRequirement"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.SelfSignAccessRequirement"}
                    ],
                    "discriminator": {"propertyName": "concreteType"}
               },
               "org.sagebionetworks.repo.model.oauth.OAuthUrlRequest": {
                    "type": "object",
                    "properties": {
                         "provider": {"type": "string"},
                         "redirectUrl": {"type": "string"},
                         "state": {"type": "string"}
                    },
                    "description": "Request for an OAuth2 authorization url."
               },
               "org.sagebionetworks.repo.model.ObjectType": {
                    "type": "string",
                    "enum": [
                         "ENTITY",
                         "ENTITY_CONTAINER",
                         "PRINCIPAL",
                         "ACTIVITY",
                         "EVALUATION",
                         "EVALUATION_ROUND",
                         "SUBMISSION",
                         "EVALUATION_SUBMISSIONS",
                         "FILE",
                         "MESSAGE",
                         "WIKI",
                         "FAVORITE",
                         "ACCESS_REQUIREMENT",
                         "ACCESS_APPROVAL",
                         "TEAM",
                         "TABLE",
                         "ACCESS_CONTROL_LIST",
                         "PROJECT_SETTING",
                         "VERIFICATION_SUBMISSION",
                         "CERTIFIED_USER_PASSING_RECORD",
                         "FORUM",
                         "THREAD",
                         "REPLY",
                         "FORM_GROUP",
                         "ORGANIZATION",
                         "FORM_DATA",
                         "ENTITY_VIEW",
                         "USER_PROFILE",
                         "DATA_ACCESS_REQUEST",
                         "DATA_ACCESS_SUBMISSION",
                         "DATA_ACCESS_SUBMISSION_STATUS",
                         "MEMBERSHIP_INVITATION",
                         "JSON_SCHEMA",
                         "JSON_SCHEMA_DEPENDANT",
                         "DATASET",
                         "DATASET_COLLECTION",
                         "THREAD_VIEW",
                         "MATERIALIZED_VIEW",
                         "VIRTUAL_TABLE",
                         "TABLE_STATUS_EVENT",
                         "DATA_ACCESS_SUBMISSION_EVENT",
                         "FILE_EVENT",
                         "QUERY_CACHE_HIT"
                    ]
               },
               "org.sagebionetworks.repo.model.InviteeVerificationSignedToken": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.InviteeVerificationSignedToken"]
                         },
                         "hmac": {"type": "string"},
                         "version": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "expiresOn": {"type": "string"},
                         "createdOn": {"type": "string"},
                         "inviteeId": {"type": "string"},
                         "membershipInvitationId": {"type": "string"}
                    },
                    "description": "Signed token containing the information needed to update the inviteeId of a MembershipInvitation.",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.table.SortDirection": {
                    "type": "string",
                    "enum": [
                         "ASC",
                         "DESC"
                    ]
               },
               "org.sagebionetworks.repo.model.table.DefiningSqlEntityType": {
                    "type": "string",
                    "enum": [
                         "materializedview",
                         "virtualtable"
                    ]
               },
               "org.sagebionetworks.repo.model.dataaccess.AccessorChange": {
                    "type": "object",
                    "properties": {
                         "userId": {"type": "string"},
                         "type": {"type": "string"}
                    },
                    "description": "Request for a single user change access to a resource."
               },
               "org.sagebionetworks.repo.model.download.DownloadListQueryRequest": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.download.DownloadListQueryRequest"]
                         },
                         "requestDetails": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.download.QueryRequestDetails",
                              "description": "Required.  Must be one of the implementations of QueryRequestDetails."
                         }
                    },
                    "description": "A request to start an asynchronous job to query a user's download list.  The type of query is defined by provided requestDetails.",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.asynch.AsynchronousJobStatus": {
                    "type": "object",
                    "properties": {
                         "jobState": {"type": "string"},
                         "jobCanceling": {"type": "boolean"},
                         "requestBody": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.asynch.AsynchronousRequestBody",
                              "description": "The body of an Asynchronous job request."
                         },
                         "responseBody": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.asynch.AsynchronousResponseBody",
                              "description": "The body of an Asynchronous job response."
                         },
                         "etag": {"type": "string"},
                         "jobId": {"type": "string"},
                         "startedByUserId": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "startedOn": {"type": "string"},
                         "changedOn": {"type": "string"},
                         "progressMessage": {"type": "string"},
                         "progressCurrent": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "progressTotal": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "exception": {"type": "string"},
                         "errorMessage": {"type": "string"},
                         "errorDetails": {"type": "string"},
                         "runtimeMS": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "callersContext": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.auth.CallersContext",
                              "description": "Contextual information about a web service call."
                         }
                    },
                    "description": "Object used to track the status of an Asynchronous Job."
               },
               "org.sagebionetworks.repo.model.auth.TwoFactorState": {
                    "type": "string",
                    "enum": [
                         "ENABLED",
                         "DISABLED"
                    ]
               },
               "org.sagebionetworks.repo.model.search.DocumentTypeNames": {
                    "type": "string",
                    "enum": [
                         "add",
                         "delete"
                    ]
               },
               "org.sagebionetworks.repo.model.file.AddFileToDownloadListResponse": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.file.AddFileToDownloadListResponse"]
                         },
                         "downloadList": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.file.DownloadList",
                              "description": "User's list of files they wish to download."
                         }
                    },
                    "description": "Response for a request to add files to a user's download list.",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.favorite.SortBy": {
                    "type": "string",
                    "enum": [
                         "FAVORITED_ON",
                         "NAME"
                    ]
               },
               "org.sagebionetworks.repo.model.statistics.ProjectFilesStatisticsRequest": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.statistics.ProjectFilesStatisticsRequest"]
                         },
                         "objectId": {"type": "string"},
                         "fileDownloads": {"type": "boolean"},
                         "fileUploads": {"type": "boolean"}
                    },
                    "description": "Request body for retrieving the statistics relative to files for a specific project. Allows to retrieve the monthly count of files downloaded and/or uploaded as well as the (unique) number of users that performed a download/upload for the past 12 months (excluding the current month). The response type for this request is <a href=\"${org.sagebionetworks.repo.model.statistics.ProjectFilesStatisticsResponse}\">ProjectFilesStatisticsResponse<\/a>",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.auth.TwoFactorAuthOtpType": {
                    "type": "string",
                    "enum": [
                         "TOTP",
                         "RECOVERY_CODE"
                    ]
               },
               "org.sagebionetworks.repo.model.request.ReferenceList": {
                    "type": "object",
                    "properties": {"references": {
                         "type": "array",
                         "items": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.Reference",
                              "description": "JSON schema for Reference POJO"
                         },
                         "description": "The list of references"
                    }},
                    "description": "An array of Reference objects"
               },
               "org.sagebionetworks.repo.model.project.ProjectSettingsType": {
                    "type": "string",
                    "enum": ["upload"]
               },
               "org.sagebionetworks.repo.model.registry.FieldDescription": {
                    "type": "object",
                    "properties": {
                         "name": {"type": "string"},
                         "type": {"type": "string"},
                         "bucket": {"type": "string"}
                    }
               },
               "org.sagebionetworks.repo.model.RestrictionInformationBatchRequest": {
                    "type": "object",
                    "properties": {
                         "restrictableObjectType": {"type": "string"},
                         "objectIds": {
                              "type": "array",
                              "items": {"type": "string"},
                              "description": "The list of IDs to request restriction information about. Limited to a max of 50 object ids."
                         }
                    },
                    "description": "A batch request to retrieve the information about restriction level on a list of restrict-able objects."
               },
               "PaginatedResultsOfDockerCommit": {
                    "type": "object",
                    "properties": {
                         "totalNumberOfResults": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "results": {
                              "type": "array",
                              "items": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.docker.DockerCommit"}
                         }
                    }
               },
               "org.sagebionetworks.repo.model.docker.DockerRepository": {
                    "type": "object",
                    "properties": {
                         "name": {"type": "string"},
                         "description": {"type": "string"},
                         "id": {"type": "string"},
                         "etag": {"type": "string"},
                         "createdOn": {"type": "string"},
                         "modifiedOn": {"type": "string"},
                         "createdBy": {"type": "string"},
                         "modifiedBy": {"type": "string"},
                         "parentId": {"type": "string"},
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.docker.DockerRepository"]
                         },
                         "repositoryName": {"type": "string"},
                         "isManaged": {"type": "boolean"}
                    },
                    "description": "A Docker repository is a lightweight virtual machine image.",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.form.ListRequest": {
                    "type": "object",
                    "properties": {
                         "filterByState": {
                              "type": "array",
                              "items": {"type": "string"},
                              "description": "Only return results with a state that matches elements from this set.  Required. Must include at least one element.",
                              "uniqueItems": true
                         },
                         "groupId": {"type": "string"},
                         "nextPageToken": {"type": "string"}
                    },
                    "description": "Request for a list of FormData matching the provided filters."
               },
               "org.sagebionetworks.repo.model.dataaccess.AccessApprovalNotification": {
                    "type": "object",
                    "properties": {
                         "notificationType": {"type": "string"},
                         "requirementId": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "recipientId": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "sentOn": {"type": "string"}
                    },
                    "description": "Information about the a notification for an access approval."
               },
               "org.sagebionetworks.repo.model.file.DownloadOrderSummaryResponse": {
                    "type": "object",
                    "properties": {
                         "page": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.file.DownloadOrderSummary",
                                   "description": "Summary of files included in a download order."
                              },
                              "description": "A single page of DownloadOrderSummary objects."
                         },
                         "nextPageToken": {"type": "string"}
                    },
                    "description": "Response for a DownloadOrderSummaryRequest."
               },
               "org.sagebionetworks.repo.model.webhook.ListUserWebhooksRequest": {
                    "type": "object",
                    "properties": {"nextPageToken": {"type": "string"}},
                    "description": "Request body for listing the user webhooks."
               },
               "org.sagebionetworks.repo.model.dataaccess.AccessApprovalSortField": {
                    "type": "string",
                    "enum": [
                         "MODIFIED_ON",
                         "EXPIRED_ON"
                    ]
               },
               "org.sagebionetworks.repo.model.file.DownloadList": {
                    "type": "object",
                    "properties": {
                         "ownerId": {"type": "string"},
                         "updatedOn": {"type": "string"},
                         "etag": {"type": "string"},
                         "filesToDownload": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.file.FileHandleAssociation",
                                   "description": "Describes an association of a FileHandle with another object."
                              },
                              "description": "The list of files to download."
                         }
                    },
                    "description": "User's list of files they wish to download."
               },
               "org.sagebionetworks.repo.model.doi.v2.DoiAssociation": {
                    "type": "object",
                    "properties": {
                         "associationId": {"type": "string"},
                         "etag": {"type": "string"},
                         "doiUri": {"type": "string"},
                         "doiUrl": {"type": "string"},
                         "objectId": {"type": "string"},
                         "objectType": {"type": "string"},
                         "objectVersion": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "associatedBy": {"type": "string"},
                         "associatedOn": {"type": "string"},
                         "updatedBy": {"type": "string"},
                         "updatedOn": {"type": "string"}
                    },
                    "description": "All fields that associate a Synapse object with a DOI. The objectId and objectType are required to create or mint a DOI in all circumstances."
               },
               "org.sagebionetworks.repo.model.form.FormChangeRequest": {
                    "type": "object",
                    "properties": {
                         "name": {"type": "string"},
                         "fileHandleId": {"type": "string"}
                    },
                    "description": "Request changes to a FormData object."
               },
               "org.sagebionetworks.repo.model.table.TableStatus": {
                    "type": "object",
                    "properties": {
                         "state": {"type": "string"},
                         "tableId": {"type": "string"},
                         "version": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "startedOn": {"type": "string"},
                         "changedOn": {"type": "string"},
                         "resetToken": {"type": "string"},
                         "lastTableChangeEtag": {"type": "string"},
                         "progressMessage": {"type": "string"},
                         "progressCurrent": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "progressTotal": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "errorMessage": {"type": "string"},
                         "errorDetails": {"type": "string"},
                         "totalTimeMS": {
                              "type": "integer",
                              "format": "int32"
                         }
                    },
                    "description": "Object used to track the status of a Table."
               },
               "org.sagebionetworks.repo.model.download.DownloadListManifestResponse": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.download.DownloadListManifestResponse"]
                         },
                         "resultFileHandleId": {"type": "string"}
                    },
                    "description": "The results of a job to generate a metadata manifest CSV of the available files from the user's download list.",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.oauth.OIDCSubjectIdentifierType": {
                    "type": "string",
                    "enum": ["pairwise"]
               },
               "org.sagebionetworks.repo.model.file.ExternalObjectStoreUploadDestination": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.file.ExternalObjectStoreUploadDestination"]
                         },
                         "storageLocationId": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "uploadType": {"type": "string"},
                         "banner": {"type": "string"},
                         "endpointUrl": {"type": "string"},
                         "bucket": {"type": "string"},
                         "keyPrefixUUID": {"type": "string"}
                    },
                    "description": "The upload destination contains information necessary to start an upload to an S3 bucket not managed by Synapse. This destination is mapped from an <a href=\"${org.sagebionetworks.repo.model.project.ExternalObjectStorageLocationSetting}\">ExternalObjectStorageLocationSetting<\/a>.",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.table.Row": {
                    "type": "object",
                    "properties": {
                         "rowId": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "versionNumber": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "etag": {"type": "string"},
                         "values": {
                              "type": "array",
                              "items": {"type": "string"},
                              "description": "The values for each column of this row. To delete a row, set this to an empty list: []"
                         }
                    },
                    "description": "Represents a single row of a TableEntity"
               },
               "org.sagebionetworks.repo.model.file.ExternalGoogleCloudUploadDestination": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.file.ExternalGoogleCloudUploadDestination"]
                         },
                         "storageLocationId": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "uploadType": {"type": "string"},
                         "banner": {"type": "string"},
                         "baseKey": {"type": "string"},
                         "bucket": {"type": "string"}
                    },
                    "description": "This upload destination contains information to start an upload to an external Google Cloud Storage bucket connected with synapse. The destination is mapped from an <a href=\"${org.sagebionetworks.repo.model.project.ExternalGoogleCloudStorageLocationSetting}\">ExternalGoogleCloudStorageLocationSetting<\/a>.",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.download.DownloadListQueryResponse": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.download.DownloadListQueryResponse"]
                         },
                         "responseDetails": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.download.QueryResponseDetails",
                              "description": "Base interface that all download lists query response types implement."
                         }
                    },
                    "description": "The results of an asynchronous job to query a user's download list.",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.discussion.DiscussionReplyOrder": {
                    "type": "string",
                    "enum": ["CREATED_ON"]
               },
               "org.sagebionetworks.repo.model.AcquisitionStatusNames": {
                    "type": "string",
                    "enum": [
                         "requested",
                         "approved",
                         "denied",
                         "pending",
                         "acquired"
                    ]
               },
               "org.sagebionetworks.repo.model.download.DownloadListItem": {
                    "type": "object",
                    "properties": {
                         "fileEntityId": {"type": "string"},
                         "versionNumber": {
                              "type": "integer",
                              "format": "int32"
                         }
                    },
                    "description": "A single item for a user's download list."
               },
               "org.sagebionetworks.repo.model.message.Comment": {
                    "type": "object",
                    "properties": {
                         "id": {"type": "string"},
                         "createdBy": {"type": "string"},
                         "fileHandleId": {"type": "string"},
                         "createdOn": {"type": "string"},
                         "targetType": {"type": "string"},
                         "targetId": {"type": "string"}
                    },
                    "description": "JSON schema for a comment on a Synapse object"
               },
               "org.sagebionetworks.repo.model.auth.HasTwoFactorAuthToken": {
                    "type": "object",
                    "properties": {
                         "userId": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "twoFaToken": {"type": "string"},
                         "otpCode": {"type": "string"},
                         "otpType": {"type": "string"}
                    },
                    "description": "Used to perform operations that require two factor authentication.",
                    "oneOf": [
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.auth.TwoFactorAuthLoginRequest"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.auth.ChangePasswordWithTwoFactorAuthToken"}
                    ],
                    "discriminator": {"propertyName": "concreteType"}
               },
               "org.sagebionetworks.repo.model.table.JsonSubColumnModel": {
                    "type": "object",
                    "properties": {
                         "name": {"type": "string"},
                         "columnType": {"type": "string"},
                         "facetType": {"type": "string"},
                         "jsonPath": {"type": "string"}
                    },
                    "description": "Defines a single sub-column of a column of type JSON.  This can be used to enable the faceting of the sub-columns."
               },
               "org.sagebionetworks.repo.model.TeamMembershipStatus": {
                    "type": "object",
                    "properties": {
                         "teamId": {"type": "string"},
                         "userId": {"type": "string"},
                         "isMember": {"type": "boolean"},
                         "hasOpenInvitation": {"type": "boolean"},
                         "hasOpenRequest": {"type": "boolean"},
                         "canJoin": {"type": "boolean"},
                         "membershipApprovalRequired": {"type": "boolean"},
                         "hasUnmetAccessRequirement": {"type": "boolean"},
                         "canSendEmail": {"type": "boolean"}
                    },
                    "description": "JSON schema for the possible status of a User with respect to Team membership."
               },
               "org.sagebionetworks.repo.model.discussion.DiscussionThreadOrder": {
                    "type": "string",
                    "enum": [
                         "NUMBER_OF_REPLIES",
                         "NUMBER_OF_VIEWS",
                         "PINNED_AND_LAST_ACTIVITY",
                         "THREAD_TITLE"
                    ]
               },
               "org.sagebionetworks.repo.model.form.ListResponse": {
                    "type": "object",
                    "properties": {
                         "page": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.form.FormData",
                                   "description": "User's data gathered from a form template. All FormData belongs to a single FormGroup."
                              },
                              "description": "A single page of results matching the request."
                         },
                         "nextPageToken": {"type": "string"}
                    },
                    "description": "A single page of results from a ListRequest."
               },
               "org.sagebionetworks.repo.model.quiz.Question": {
                    "type": "object",
                    "properties": {
                         "questionIndex": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "prompt": {"type": "string"},
                         "reference": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.dao.WikiPageKey",
                              "description": "Reference to a WikiPage"
                         },
                         "docLink": {"type": "string"},
                         "helpText": {"type": "string"},
                         "concreteType": {"type": "string"}
                    },
                    "description": "a single question in a Quiz",
                    "oneOf": [
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.quiz.MultichoiceQuestion"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.quiz.TextFieldQuestion"}
                    ],
                    "required": ["concreteType"],
                    "discriminator": {"propertyName": "concreteType"}
               },
               "org.sagebionetworks.repo.model.migration.IdGeneratorExport": {
                    "type": "object",
                    "properties": {"exportScript": {"type": "string"}},
                    "description": "Export script for the ID generator."
               },
               "org.sagebionetworks.repo.model.ProjectListType": {
                    "type": "string",
                    "enum": [
                         "ALL",
                         "CREATED",
                         "PARTICIPATED",
                         "TEAM"
                    ]
               },
               "org.sagebionetworks.repo.model.docker.RegistryEventRequest": {
                    "type": "object",
                    "properties": {
                         "id": {"type": "string"},
                         "addr": {"type": "string"},
                         "host": {"type": "string"},
                         "method": {"type": "string"},
                         "useragent": {"type": "string"}
                    }
               },
               "PaginatedResultsOfSubmission": {
                    "type": "object",
                    "properties": {
                         "totalNumberOfResults": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "results": {
                              "type": "array",
                              "items": {"$ref": "#/components/schemas/org.sagebionetworks.evaluation.model.Submission"}
                         }
                    }
               },
               "org.sagebionetworks.repo.model.entitybundle.v2.EntityBundle": {
                    "type": "object",
                    "properties": {
                         "entity": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.Entity",
                              "description": "This is the base interface that all Entities implement."
                         },
                         "entityType": {"type": "string"},
                         "annotations": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.annotation.v2.Annotations",
                              "description": "Annotations are additional key-value pair metadata that are associated with an object."
                         },
                         "permissions": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.auth.UserEntityPermissions",
                              "description": "The permission a User has for a given Entity"
                         },
                         "path": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.EntityPath",
                              "description": "All entities in this Entity's path"
                         },
                         "hasChildren": {"type": "boolean"},
                         "accessControlList": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.AccessControlList",
                              "description": "Contains list of principals who can access the data with the allowed types of access for each."
                         },
                         "fileHandles": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.file.FileHandle",
                                   "description": "The FileHandle interface defines all of the fields that are common to all implementations."
                              },
                              "description": "FileHandles associated with this Entity"
                         },
                         "tableBundle": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.TableBundle",
                              "description": "Metadata about a TableEntity that can be included in an EntityBundle"
                         },
                         "rootWikiId": {"type": "string"},
                         "benefactorAcl": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.AccessControlList",
                              "description": "Contains list of principals who can access the data with the allowed types of access for each."
                         },
                         "doiAssociation": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.doi.v2.DoiAssociation",
                              "description": "All fields that associate a Synapse object with a DOI. The objectId and objectType are required to create or mint a DOI in all circumstances."
                         },
                         "fileName": {"type": "string"},
                         "threadCount": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "restrictionInformation": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.RestrictionInformationResponse",
                              "description": "The information about restriction level on a restrict-able object."
                         },
                         "activity": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.provenance.Activity",
                              "description": "Interface for JSON schema for Activity POJO."
                         }
                    },
                    "description": "Bundle to transport an Entity and related data objects"
               },
               "org.sagebionetworks.repo.model.auth.TwoFactorAuthTokenContext": {
                    "type": "string",
                    "enum": [
                         "AUTHENTICATION",
                         "PASSWORD_CHANGE"
                    ]
               },
               "org.sagebionetworks.repo.model.download.AvailableFilter": {
                    "type": "string",
                    "enum": [
                         "eligibleForPackaging",
                         "ineligibleForPackaging"
                    ]
               },
               "org.sagebionetworks.repo.model.file.FileEventType": {
                    "type": "string",
                    "enum": [
                         "FILE_DOWNLOAD",
                         "FILE_UPLOAD"
                    ]
               },
               "org.sagebionetworks.repo.model.auth.TwoFactorAuthResetToken": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.auth.TwoFactorAuthResetToken"]
                         },
                         "hmac": {"type": "string"},
                         "version": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "expiresOn": {"type": "string"},
                         "createdOn": {"type": "string"},
                         "userId": {
                              "type": "integer",
                              "format": "int32"
                         }
                    },
                    "description": "Signed token containing the the information necessary to reset 2fa for a user.",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.schema.JsonSchema": {
                    "type": "object",
                    "properties": {
                         "$schema": {"type": "string"},
                         "$id": {"type": "string"},
                         "$ref": {"type": "string"},
                         "type": {"type": "string"},
                         "items": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.schema.JsonSchema"},
                         "properties": {
                              "type": "object",
                              "description": "See: <a href=\"https://json-schema.org/draft/2019-09/json-schema-core.html#rfc.section.9.3.2.1\">properties<\/a>",
                              "additionalProperties": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.schema.JsonSchema"}
                         },
                         "title": {"type": "string"},
                         "description": {"type": "string"},
                         "allOf": {
                              "type": "array",
                              "items": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.schema.JsonSchema"},
                              "description": "Use allOf to 'extend' or 'implement' one or more schemas.  See: <a href=\"https://json-schema.org/draft/2019-09/json-schema-core.html#rfc.section.9.2.1.1\">allOf<\/a>"
                         },
                         "anyOf": {
                              "type": "array",
                              "items": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.schema.JsonSchema"},
                              "description": "See: <a href=\"https://json-schema.org/draft/2019-09/json-schema-core.html#rfc.section.9.2.1.2\">anyOf<\/a>"
                         },
                         "oneOf": {
                              "type": "array",
                              "items": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.schema.JsonSchema"},
                              "description": "See: <a href=\"https://json-schema.org/draft/2019-09/json-schema-core.html#rfc.section.9.2.1.3\">oneOf<\/a>"
                         },
                         "not": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.schema.JsonSchema"},
                         "format": {"type": "string"},
                         "definitions": {
                              "type": "object",
                              "description": "In an effor to support draft-07 implementations, we are using 'definitions' instead of '$defs'.  See: <a href=\"https://json-schema.org/draft/2019-09/json-schema-validation.html#rfc.appendix.A\">Appendix A<\/a>",
                              "additionalProperties": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.schema.JsonSchema"}
                         },
                         "enum": {
                              "type": "array",
                              "items": {},
                              "description": "See: <a href=\"https://json-schema.org/draft/2019-09/json-schema-validation.html#rfc.section.6.1.2\">enum<\/a>"
                         },
                         "const": {"description": "See: <a href=\"https://json-schema.org/draft/2019-09/json-schema-validation.html#rfc.section.6.1.3\">const<\/a>"},
                         "source": {"type": "string"},
                         "required": {
                              "type": "array",
                              "items": {"type": "string"},
                              "description": "See: <a href=\"https://json-schema.org/draft/2019-09/json-schema-validation.html#rfc.section.6.5.3\">required<\/a>"
                         },
                         "maxLength": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "minLength": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "uniqueItems": {"type": "boolean"},
                         "pattern": {"type": "string"},
                         "if": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.schema.JsonSchema"},
                         "then": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.schema.JsonSchema"},
                         "else": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.schema.JsonSchema"},
                         "maximum": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "minimum": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "default": {"description": "See: <a href=\"https://json-schema.org/draft/2019-09/json-schema-validation.html#rfc.section.9.2\">default<\/a>"},
                         "contains": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.schema.JsonSchema"},
                         "additionalProperties": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.schema.JsonSchema"}
                    },
                    "description": "The JSON schema is defined by: <a href=\"https://json-schema.org/\">json-schema.org<\/a>, specifically draft-07.  Only features listed here are currently supported."
               },
               "org.sagebionetworks.repo.model.table.PaginatedColumnModels": {
                    "type": "object",
                    "properties": {
                         "results": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.ColumnModel",
                                   "description": "A column model contains the metadata of a single column of a table or view."
                              },
                              "description": "The list of ColumnModels for this page"
                         },
                         "totalNumberOfResults": {
                              "type": "integer",
                              "format": "int32"
                         }
                    },
                    "description": "Paginated results of a ColumnModel"
               },
               "org.sagebionetworks.repo.model.message.FireMessagesResult": {
                    "type": "object",
                    "properties": {"nextChangeNumber": {
                         "type": "integer",
                         "format": "int32"
                    }},
                    "description": "JSON schema for a change message"
               },
               "org.sagebionetworks.repo.model.CurationTrackingData": {
                    "type": "object",
                    "properties": {
                         "status": {"type": "string"},
                         "curator": {"type": "string"},
                         "history": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.StatusHistoryRecord",
                                   "description": "JSON schema for StatusHistoryRecord POJO"
                              },
                              "description": "Status history"
                         }
                    },
                    "description": "JSON schema for CurationTrackingData"
               },
               "org.sagebionetworks.repo.model.message.PublishResults": {
                    "type": "object",
                    "properties": {"list": {
                         "type": "array",
                         "items": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.message.PublishResult",
                              "description": "JSON schema for a change message"
                         }
                    }},
                    "description": "JSON schema for list of PublishResult."
               },
               "org.sagebionetworks.repo.model.MembershipInvitation": {
                    "type": "object",
                    "properties": {
                         "id": {"type": "string"},
                         "teamId": {"type": "string"},
                         "inviteeId": {"type": "string"},
                         "inviteeEmail": {"type": "string"},
                         "message": {"type": "string"},
                         "expiresOn": {"type": "string"},
                         "createdOn": {"type": "string"},
                         "createdBy": {"type": "string"}
                    },
                    "description": "JSON schema for MembershipInvitation POJO. \\nNote: certain fields may be omitted when returned if the field value is null."
               },
               "org.sagebionetworks.repo.model.provenance.Used": {
                    "type": "object",
                    "properties": {
                         "wasExecuted": {"type": "boolean"},
                         "concreteType": {"type": "string"}
                    },
                    "description": "Interface for JSON schema for a Used record in Provenance",
                    "oneOf": [
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.provenance.UsedURL"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.provenance.UsedEntity"}
                    ],
                    "required": ["concreteType"],
                    "discriminator": {"propertyName": "concreteType"}
               },
               "org.sagebionetworks.repo.model.table.TableUpdateTransactionRequest": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.table.TableUpdateTransactionRequest"]
                         },
                         "entityId": {"type": "string"},
                         "changes": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.TableUpdateRequest",
                                   "description": "Abstraction for a request to update a table."
                              },
                              "description": "List of changes that describes schema and/or row changes to a table. For a view the changes are eventually consistent."
                         },
                         "createSnapshot": {"type": "boolean"},
                         "snapshotOptions": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.SnapshotRequest",
                              "description": "Request to create a new snapshot of a table or view.  The provided comment, label, and activity ID will be applied to the current version thereby creating a snapshot and locking the current version.  After the snapshot is created a new version will be started with an 'in-progress' label."
                         }
                    },
                    "description": "An AsynchronousRequestBody to used make multiple changes to a table or view as a single 'transaction'. All changes will either succeed or fail as a unit.",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.project.ExternalStorageLocationSetting": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.project.ExternalStorageLocationSetting"]
                         },
                         "storageLocationId": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "uploadType": {"type": "string"},
                         "banner": {"type": "string"},
                         "description": {"type": "string"},
                         "etag": {"type": "string"},
                         "createdOn": {"type": "string"},
                         "createdBy": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "url": {"type": "string"},
                         "supportsSubfolders": {"type": "boolean"}
                    },
                    "description": "The external upload destination setting contains information to generate an SFTP or HTTPS upload destination.",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.download.RemoveBatchOfFilesFromDownloadListRequest": {
                    "type": "object",
                    "properties": {"batchToRemove": {
                         "type": "array",
                         "items": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.download.DownloadListItem",
                              "description": "A single item for a user's download list."
                         },
                         "description": "The batch of files to remove from the user's download list. Note: There is a limit of 1000 files per batch."
                    }},
                    "description": "Request to remove a single batch of files to the user's download list."
               },
               "org.sagebionetworks.repo.model.discussion.ThreadCount": {
                    "type": "object",
                    "properties": {"count": {
                         "type": "integer",
                         "format": "int32"
                    }}
               },
               "org.sagebionetworks.repo.model.file.ExternalFileHandleInterface": {
                    "type": "object",
                    "properties": {
                         "id": {"type": "string"},
                         "etag": {"type": "string"},
                         "createdBy": {"type": "string"},
                         "createdOn": {"type": "string"},
                         "modifiedOn": {"type": "string"},
                         "concreteType": {"type": "string"},
                         "contentType": {"type": "string"},
                         "contentMd5": {"type": "string"},
                         "fileName": {"type": "string"},
                         "storageLocationId": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "contentSize": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "status": {"type": "string"}
                    },
                    "description": "Defines FileHandles for files that are stored externally and can not be controlled by Synapse. All file access authentication and download/upload/delete operations are delegated the client.",
                    "oneOf": [
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.file.ExternalObjectStoreFileHandle"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.file.ProxyFileHandle"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.file.ExternalFileHandle"}
                    ],
                    "required": ["concreteType"],
                    "discriminator": {"propertyName": "concreteType"}
               },
               "org.sagebionetworks.repo.model.principal.AliasCheckResponse": {
                    "type": "object",
                    "properties": {
                         "available": {"type": "boolean"},
                         "valid": {"type": "boolean"}
                    },
                    "description": "Response to an alias check request."
               },
               "org.sagebionetworks.repo.model.dataaccess.AccessorGroupRequest": {
                    "type": "object",
                    "properties": {
                         "accessRequirementId": {"type": "string"},
                         "submitterId": {"type": "string"},
                         "accessorId": {"type": "string"},
                         "expireBefore": {"type": "string"},
                         "nextPageToken": {"type": "string"}
                    },
                    "description": "A request to retrieve a page of accessor groups. Accessors will be group by submitter and access requirement."
               },
               "org.sagebionetworks.repo.model.migration.MigrationTypeList": {
                    "type": "object",
                    "properties": {"list": {
                         "type": "array",
                         "items": {"type": "string"}
                    }},
                    "description": "List of Migration types."
               },
               "org.sagebionetworks.repo.model.TermsOfUseAccessRequirement": {
                    "type": "object",
                    "properties": {
                         "versionNumber": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "id": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "description": {"type": "string"},
                         "name": {"type": "string"},
                         "etag": {"type": "string"},
                         "createdOn": {"type": "string"},
                         "modifiedOn": {"type": "string"},
                         "createdBy": {"type": "string"},
                         "modifiedBy": {"type": "string"},
                         "subjectsDefinedByAnnotations": {"type": "boolean"},
                         "subjectIds": {
                              "type": "array",
                              "items": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.RestrictableObjectDescriptor"},
                              "description": "The IDs of the items controlled by this Access Requirement when 'subjectsDefinedByAnnotations=false'. This property is mutually exclusive with 'subjectsDefinedByAnnotations'.  When 'subjectsDefinedByAnnotations=true' then this property must be empty or excluded.  Required when creating or updating and 'subjectsDefinedByAnnotations=false' or 'subjectsDefinedByAnnotations' is excluded."
                         },
                         "accessType": {"type": "string"},
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.TermsOfUseAccessRequirement"]
                         },
                         "termsOfUse": {"type": "string"}
                    },
                    "description": "JSON schema for Terms of Use Access Requirement, used for a 'tier 2' Access Requirement",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.discussion.UpdateThreadMessage": {
                    "type": "object",
                    "properties": {"messageMarkdown": {"type": "string"}}
               },
               "org.sagebionetworks.repo.model.schema.ValidationResults": {
                    "type": "object",
                    "properties": {
                         "objectId": {"type": "string"},
                         "objectType": {"type": "string"},
                         "objectEtag": {"type": "string"},
                         "schema$id": {"type": "string"},
                         "isValid": {"type": "boolean"},
                         "validatedOn": {"type": "string"},
                         "validationErrorMessage": {"type": "string"},
                         "allValidationMessages": {
                              "type": "array",
                              "items": {"type": "string"},
                              "description": "If the object is not valid according to the schema, a the flat list of error messages will be provided with one error message per sub-schema."
                         },
                         "validationException": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.schema.ValidationException",
                              "description": "A recursive ValidationException that describes all schema violations for an entire schema tree."
                         }
                    },
                    "description": "Results of validating an object against a schema"
               },
               "org.sagebionetworks.repo.model.RestrictableObjectDescriptor": {
                    "type": "object",
                    "properties": {
                         "id": {"type": "string"},
                         "type": {"type": "string"}
                    }
               },
               "org.sagebionetworks.repo.model.drs.AccessMethodType": {
                    "type": "string",
                    "enum": ["https"]
               },
               "org.sagebionetworks.repo.model.project.ExternalS3StorageLocationSetting": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.project.ExternalS3StorageLocationSetting"]
                         },
                         "storageLocationId": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "uploadType": {"type": "string"},
                         "banner": {"type": "string"},
                         "description": {"type": "string"},
                         "etag": {"type": "string"},
                         "createdOn": {"type": "string"},
                         "createdBy": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "bucket": {"type": "string"},
                         "baseKey": {"type": "string"},
                         "stsEnabled": {"type": "boolean"},
                         "endpointUrl": {"type": "string"}
                    },
                    "description": "The external upload destination setting contains information to generate an external S3 upload destination connected with Synapse. For details on how to create a custom S3 storage location in the web client, see <a href=\"https://help.synapse.org/docs/Custom-Storage-Locations.2048327803.html\">Custom Storage Locations<\/a>",
                    "required": [
                         "bucket",
                         "concreteType"
                    ]
               },
               "org.sagebionetworks.repo.model.table.EntityUpdateFailureCode": {
                    "type": "string",
                    "enum": [
                         "NOT_FOUND",
                         "UNAUTHORIZED",
                         "CONCURRENT_UPDATE",
                         "ILLEGAL_ARGUMENT",
                         "UNKNOWN"
                    ]
               },
               "org.sagebionetworks.repo.model.migration.MigrationTypeCounts": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.migration.MigrationTypeCounts"]
                         },
                         "list": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.migration.MigrationTypeCount",
                                   "description": "A record containing count of instances, minimum id and maximum id for a migration type"
                              }
                         }
                    },
                    "description": "List of MigrationTypeCount records",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.file.FileHandleCopyResult": {
                    "type": "object",
                    "properties": {
                         "newFileHandle": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.file.FileHandle",
                              "description": "The FileHandle interface defines all of the fields that are common to all implementations."
                         },
                         "originalFileHandleId": {"type": "string"},
                         "failureCode": {"type": "string"}
                    },
                    "description": "Result of a FileHandleCopyRequest."
               },
               "org.sagebionetworks.repo.model.file.BatchFileResult": {
                    "type": "object",
                    "properties": {"requestedFiles": {
                         "type": "array",
                         "items": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.file.FileResult",
                              "description": "Result of a single File request."
                         },
                         "description": "Defines the files to get."
                    }},
                    "description": "Batch of results for file pre-signed-URLs and/or FileHandles requests."
               },
               "org.sagebionetworks.repo.model.search.query.FacetTopN": {
                    "type": "object",
                    "properties": {
                         "key": {"type": "string"},
                         "value": {
                              "type": "integer",
                              "format": "int32"
                         }
                    },
                    "description": "JSON schema for a faceted key-value pair."
               },
               "PaginatedResultsOfWikiHeader": {
                    "type": "object",
                    "properties": {
                         "totalNumberOfResults": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "results": {
                              "type": "array",
                              "items": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.wiki.WikiHeader"}
                         }
                    }
               },
               "org.sagebionetworks.repo.model.message.MessageStatus": {
                    "type": "object",
                    "properties": {
                         "messageId": {"type": "string"},
                         "recipientId": {"type": "string"},
                         "status": {"type": "string"}
                    },
                    "description": "JSON schema for message status from the RECIPIENT'S standpoint"
               },
               "org.sagebionetworks.repo.model.drs.DrsErrorResponse": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.drs.DrsErrorResponse"]
                         },
                         "msg": {"type": "string"},
                         "status_code": {
                              "type": "integer",
                              "format": "int32"
                         }
                    },
                    "description": "JSON schema for an error returned by Drs Services. Used to align error messages with <a href=\"https://ga4gh.github.io/data-repository-service-schemas/preview/release/drs-1.2.0/docs/#tag/ErrorModel\">Error<\/a>",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.ACTAccessRequirementInterface": {
                    "type": "object",
                    "properties": {
                         "versionNumber": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "id": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "description": {"type": "string"},
                         "name": {"type": "string"},
                         "etag": {"type": "string"},
                         "createdOn": {"type": "string"},
                         "modifiedOn": {"type": "string"},
                         "createdBy": {"type": "string"},
                         "modifiedBy": {"type": "string"},
                         "subjectsDefinedByAnnotations": {"type": "boolean"},
                         "subjectIds": {
                              "type": "array",
                              "items": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.RestrictableObjectDescriptor"},
                              "description": "The IDs of the items controlled by this Access Requirement when 'subjectsDefinedByAnnotations=false'. This property is mutually exclusive with 'subjectsDefinedByAnnotations'.  When 'subjectsDefinedByAnnotations=true' then this property must be empty or excluded.  Required when creating or updating and 'subjectsDefinedByAnnotations=false' or 'subjectsDefinedByAnnotations' is excluded."
                         },
                         "accessType": {"type": "string"},
                         "concreteType": {"type": "string"}
                    },
                    "description": "JSON schema for 'Access Control Team' controlled Access Requirement, a 'tier 3' Access Requirement",
                    "oneOf": [
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.ManagedACTAccessRequirement"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.ACTAccessRequirement"}
                    ],
                    "required": ["concreteType"],
                    "discriminator": {"propertyName": "concreteType"}
               },
               "org.sagebionetworks.repo.model.oauth.OAuthConsentGrantedResponse": {
                    "type": "object",
                    "properties": {"granted": {"type": "boolean"}},
                    "description": "Response to the check of whether consent was already granted."
               },
               "PaginatedResultsOfMembershipRequest": {
                    "type": "object",
                    "properties": {
                         "totalNumberOfResults": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "results": {
                              "type": "array",
                              "items": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.MembershipRequest"}
                         }
                    }
               },
               "org.sagebionetworks.repo.model.table.FacetColumnRangeRequest": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.table.FacetColumnRangeRequest"]
                         },
                         "columnName": {"type": "string"},
                         "jsonPath": {"type": "string"},
                         "min": {"type": "string"},
                         "max": {"type": "string"}
                    },
                    "description": "Selected minimum and maximum values for a range type facet",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.Count": {
                    "type": "object",
                    "properties": {"count": {
                         "type": "integer",
                         "format": "int32"
                    }}
               },
               "org.sagebionetworks.repo.model.file.AddPartState": {
                    "type": "string",
                    "enum": [
                         "ADD_SUCCESS",
                         "ADD_FAILED"
                    ]
               },
               "org.sagebionetworks.repo.model.dataaccess.AccessRequirementConversionRequest": {
                    "type": "object",
                    "properties": {
                         "accessRequirementId": {"type": "string"},
                         "etag": {"type": "string"},
                         "currentVersion": {
                              "type": "integer",
                              "format": "int32"
                         }
                    },
                    "description": "A request to convert an ACTAccessRequirement to a ManagedACTAccessRequirement."
               },
               "org.sagebionetworks.repo.model.principal.EmailQuarantineStatus": {
                    "type": "object",
                    "properties": {
                         "reason": {"type": "string"},
                         "reasonDetails": {"type": "string"},
                         "expiration": {"type": "string"}
                    },
                    "description": "Information about the quarantine status of a notification email"
               },
               "org.sagebionetworks.repo.model.entity.EntityLookupRequest": {
                    "type": "object",
                    "properties": {
                         "parentId": {"type": "string"},
                         "entityName": {"type": "string"}
                    },
                    "description": "A request to look up an entity given parentId and the entity name."
               },
               "org.sagebionetworks.repo.model.table.TableUpdateTransactionResponse": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.table.TableUpdateTransactionResponse"]
                         },
                         "results": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.TableUpdateResponse",
                                   "description": "Abstraction for a response to update a table."
                              },
                              "description": "List of responses. There will be one response for each request in the transaction."
                         },
                         "snapshotVersionNumber": {
                              "type": "integer",
                              "format": "int32"
                         }
                    },
                    "description": "An AsynchronousResponseBody returned from a table update transaction.",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.download.AvailableFilesResponse": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.download.AvailableFilesResponse"]
                         },
                         "page": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.download.DownloadListItemResult",
                                   "description": "The results of a single item on a user's download list."
                              },
                              "description": "The page of download list items"
                         },
                         "nextPageToken": {"type": "string"}
                    },
                    "description": "Represents a single page of files that are available for download from the user's download list.",
                    "required": ["concreteType"]
               },
               "PaginatedResultsOfDiscussionReplyBundle": {
                    "type": "object",
                    "properties": {
                         "totalNumberOfResults": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "results": {
                              "type": "array",
                              "items": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.discussion.DiscussionReplyBundle"}
                         }
                    }
               },
               "org.sagebionetworks.repo.model.message.NotificationSettingsSignedToken": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.message.NotificationSettingsSignedToken"]
                         },
                         "hmac": {"type": "string"},
                         "version": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "expiresOn": {"type": "string"},
                         "createdOn": {"type": "string"},
                         "userId": {"type": "string"},
                         "settings": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.message.Settings",
                              "description": "Contains a user's notification settings"
                         }
                    },
                    "description": "Signed token supporting one-click email suppression.",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.search.DocumentFields": {
                    "type": "object",
                    "properties": {
                         "name": {"type": "string"},
                         "description": {"type": "string"},
                         "parent_id": {"type": "string"},
                         "node_type": {"type": "string"},
                         "etag": {"type": "string"},
                         "created_on": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "modified_on": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "created_by": {"type": "string"},
                         "modified_by": {"type": "string"},
                         "acl": {
                              "type": "array",
                              "items": {"type": "string"},
                              "description": "All group names with READ access to this entity"
                         },
                         "update_acl": {
                              "type": "array",
                              "items": {"type": "string"},
                              "description": "All group names with UPDATE access to this entity"
                         },
                         "diagnosis": {"type": "string"},
                         "tissue": {"type": "string"},
                         "consortium": {"type": "string"},
                         "organ": {"type": "string"}
                    },
                    "description": "JSON schema for the fields of a search document.  Note that awesome search does not support camel case so we have to deviate from the usual naming scheme for properties."
               },
               "org.sagebionetworks.repo.model.schema.ValidationSummaryStatistics": {
                    "type": "object",
                    "properties": {
                         "containerId": {"type": "string"},
                         "totalNumberOfChildren": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "numberOfValidChildren": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "numberOfInvalidChildren": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "numberOfUnknownChildren": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "generatedOn": {"type": "string"}
                    },
                    "description": "Summary statistics for the JSON schema validation results for the children of an Entity container (Project or Folder)"
               },
               "org.sagebionetworks.repo.model.oauth.OIDCClaimsRequestDetails": {
                    "type": "object",
                    "properties": {
                         "essential": {"type": "boolean"},
                         "value": {"type": "string"},
                         "values": {
                              "type": "array",
                              "items": {"type": "string"}
                         }
                    },
                    "description": "<a href=\"https://openid.net/specs/openid-connect-core-1_0.html#ClaimsParameter\">OIDC Core 1.0 Claims Request<\/a> value"
               },
               "org.sagebionetworks.repo.model.message.MessageBundle": {
                    "type": "object",
                    "properties": {
                         "message": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.message.MessageToUser",
                              "description": "JSON schema for a message to another user"
                         },
                         "status": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.message.MessageStatus",
                              "description": "JSON schema for message status from the RECIPIENT'S standpoint"
                         }
                    },
                    "description": "JSON schema for a user message bundled with a status"
               },
               "org.sagebionetworks.repo.model.file.FileHandleRestoreStatus": {
                    "type": "string",
                    "enum": [
                         "NOT_FOUND",
                         "UNAUTHORIZED",
                         "FAILED",
                         "NO_ACTION",
                         "RESTORED",
                         "RESTORING"
                    ]
               },
               "org.sagebionetworks.repo.model.auth.Session": {
                    "type": "object",
                    "properties": {
                         "sessionToken": {"type": "string"},
                         "acceptsTermsOfUse": {"type": "boolean"}
                    },
                    "description": "Holds a session token used for short-term authentication with Synapse"
               },
               "org.sagebionetworks.repo.model.dataaccess.SubmissionInfoPageRequest": {
                    "type": "object",
                    "properties": {
                         "accessRequirementId": {"type": "string"},
                         "nextPageToken": {"type": "string"}
                    },
                    "description": "A request to retrieve a page of Submission Information"
               },
               "org.sagebionetworks.repo.model.auth.TwoFactorAuthLoginRequest": {
                    "type": "object",
                    "properties": {
                         "userId": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "twoFaToken": {"type": "string"},
                         "otpCode": {"type": "string"},
                         "otpType": {"type": "string"}
                    },
                    "description": "Used to login when two factor authentication is enabled."
               },
               "org.sagebionetworks.repo.model.table.UploadToTablePreviewRequest": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.table.UploadToTablePreviewRequest"]
                         },
                         "uploadFileHandleId": {"type": "string"},
                         "linesToSkip": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "csvTableDescriptor": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.CsvTableDescriptor",
                              "description": "The description of a csv for upload or download."
                         },
                         "doFullFileScan": {"type": "boolean"}
                    },
                    "description": "Request for a preview of an upload to a Table. ",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.file.RemoteFilePreviewGenerationRequest": {
                    "type": "object",
                    "properties": {
                         "source": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.file.S3FileHandle",
                              "description": "An S3FileHandle represents a file stored in AWS S3."
                         },
                         "destination": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.file.S3FileHandle",
                              "description": "An S3FileHandle represents a file stored in AWS S3."
                         }
                    },
                    "description": "Request remote preview generation from an S3 file handle into an S3 file handle."
               },
               "org.sagebionetworks.repo.model.verification.VerificationStateEnum": {
                    "type": "string",
                    "enum": [
                         "SUBMITTED",
                         "APPROVED",
                         "REJECTED",
                         "SUSPENDED"
                    ]
               },
               "org.sagebionetworks.repo.model.AcquisitionTrackingData": {
                    "type": "object",
                    "properties": {
                         "status": {"type": "string"},
                         "dataAcquisitionReference": {"type": "string"},
                         "requestor": {"type": "string"},
                         "followupRequirements": {"type": "string"},
                         "comments": {"type": "string"},
                         "history": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.StatusHistoryRecord",
                                   "description": "JSON schema for StatusHistoryRecord POJO"
                              },
                              "description": "Status history"
                         }
                    },
                    "description": "JSON schema for AcquisitionTrackingData"
               },
               "org.sagebionetworks.repo.model.discussion.EntityThreadCount": {
                    "type": "object",
                    "properties": {
                         "entityId": {"type": "string"},
                         "count": {
                              "type": "integer",
                              "format": "int32"
                         }
                    },
                    "description": "The model object represents the number of threads that mentioned a particular entity."
               },
               "org.sagebionetworks.repo.model.discussion.Match": {
                    "type": "object",
                    "properties": {
                         "forumId": {"type": "string"},
                         "threadId": {"type": "string"},
                         "replyId": {"type": "string"}
                    },
                    "description": "Represents a match for a search request in a forum, will include the forum and thread ids and if present the reply id matching a serch string"
               },
               "org.sagebionetworks.repo.model.dataaccess.SubmissionSearchResult": {
                    "type": "object",
                    "properties": {
                         "id": {"type": "string"},
                         "createdOn": {"type": "string"},
                         "modifiedOn": {"type": "string"},
                         "accessRequirementId": {"type": "string"},
                         "accessRequirementVersion": {"type": "string"},
                         "accessRequirementName": {"type": "string"},
                         "accessRequirementReviewerIds": {
                              "type": "array",
                              "items": {"type": "string"},
                              "description": "The list of principal ids that are allowed to review the submission"
                         },
                         "submitterId": {"type": "string"},
                         "accessorChanges": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.dataaccess.AccessorChange",
                                   "description": "Request for a single user change access to a resource."
                              },
                              "description": "List of user changes. A user can gain access, renew access or have access revoked."
                         },
                         "state": {"type": "string"}
                    },
                    "description": ""
               },
               "org.sagebionetworks.repo.model.DatasetTrackingData": {
                    "type": "object",
                    "properties": {
                         "acquisitionTrackingData": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.AcquisitionTrackingData",
                              "description": "JSON schema for AcquisitionTrackingData"
                         },
                         "curationTrackingData": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.CurationTrackingData",
                              "description": "JSON schema for CurationTrackingData"
                         }
                    },
                    "description": "JSON schema for DatasetTrackingData POJO"
               },
               "org.sagebionetworks.repo.model.agent.Interaction": {
                    "type": "object",
                    "properties": {
                         "requestText": {"type": "string"},
                         "requestTimestamp": {"type": "string"},
                         "responseText": {"type": "string"},
                         "responseTimestamp": {"type": "string"}
                    },
                    "description": "Represents a single interaction between the user and an agent."
               },
               "org.sagebionetworks.repo.model.ResponseMessage": {
                    "type": "object",
                    "properties": {"message": {"type": "string"}},
                    "description": "JSON schema for a user-readable message describing the response to a request."
               },
               "org.sagebionetworks.repo.model.EntityGroupRecord": {
                    "type": "object",
                    "properties": {
                         "entityReference": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.Reference",
                              "description": "JSON schema for Reference POJO"
                         },
                         "note": {"type": "string"}
                    },
                    "description": "JSON schema for Entity Group Record POJO"
               },
               "org.sagebionetworks.repo.model.oauth.OAuthRefreshTokenInformation": {
                    "type": "object",
                    "properties": {
                         "tokenId": {"type": "string"},
                         "clientId": {"type": "string"},
                         "principalId": {"type": "string"},
                         "name": {"type": "string"},
                         "scopes": {
                              "type": "array",
                              "items": {"type": "string"},
                              "description": "An array containing each scope that this refresh token grants access to."
                         },
                         "claims": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.oauth.OIDCClaimsRequest",
                              "description": "Stores OIDC claims and details in accordance with <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#ClaimsParameter\">OIDC Core 1.0 Claims Request<\/a>. The keys used in these maps are <a href=\"${org.sagebionetworks.repo.model.oauth.OIDCClaimName}\">OIDCClaimName<\/a>s"
                         },
                         "authorizedOn": {"type": "string"},
                         "lastUsed": {"type": "string"},
                         "modifiedOn": {"type": "string"},
                         "etag": {"type": "string"}
                    },
                    "description": "OAuth 2.0 refresh token metadata. Note that the token itself may not be retrieved after it is issued to a client."
               },
               "org.sagebionetworks.repo.model.annotation.v2.AnnotationsValue": {
                    "type": "object",
                    "properties": {
                         "type": {"type": "string"},
                         "value": {
                              "type": "array",
                              "items": {"type": "string"},
                              "description": "List of values as strings. Clients should use the \"type\" field to determine how to interpret the strings. Single values Annotations are represented as a list of size 1, and multiple values size > 1. Empty list or null is not allowed"
                         }
                    },
                    "description": "Contains a AnnotationV2's value and its type",
                    "required": ["value"]
               },
               "org.sagebionetworks.repo.model.table.SortItem": {
                    "type": "object",
                    "properties": {
                         "column": {"type": "string"},
                         "direction": {"type": "string"}
                    }
               },
               "org.sagebionetworks.repo.model.doi.v2.DoiResponse": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.doi.v2.DoiResponse"]
                         },
                         "doi": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.doi.v2.Doi",
                              "description": "JSON schema for fields associated with a DOI and its metadata. This object contains fields from both <a href=\"${org.sagebionetworks.repo.model.doi.v2.DoiAssociation}\">DoiAssociation<\/a> and <a href=\"${org.sagebionetworks.repo.model.doi.v2.DataciteMetadata}\">DataciteMetadata<\/a>.<br>To mint a DOI, the following fields are required: <ul> <li>Information that uniquely identifies an object in Synapse <ul><li> The object ID <i>(e.g. \"syn12345\")<\/i><\/li><li>The object type <i>(Note: as of this writing, only ENTITY is supported)<\/i><\/li><li>The version number of the object <i>(Optional. A \"null\" version will mint a DOI that will point to the most recent version of the object, even if the object changes)<\/i><\/li><li>An eTag <i>(Necessary when updating an existing DOI)<\/i><\/li><\/ul><\/li> <li>Additional supplementary information to mint a DOI <ul><li>Creator(s)<\/li><li>Title(s)<\/li><li>The general resource type<\/li><li>A publication year (no later than one year after the current year)<\/li><\/ul><\/li> <\/ul><br>For more information, see the <a href=\"${org.sagebionetworks.repo.model.doi.v2.DoiAssociation}\">DoiAssociation<\/a> and <a href=\"${org.sagebionetworks.repo.model.doi.v2.DataciteMetadata}\">DataciteMetadata<\/a> objects."
                         }
                    },
                    "description": "An response to a DOI mint or update request.",
                    "required": ["concreteType"]
               },
               "PaginatedResultsOfUserGroup": {
                    "type": "object",
                    "properties": {
                         "totalNumberOfResults": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "results": {
                              "type": "array",
                              "items": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.UserGroup"}
                         }
                    }
               },
               "org.sagebionetworks.repo.model.project.ExternalObjectStorageLocationSetting": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.project.ExternalObjectStorageLocationSetting"]
                         },
                         "storageLocationId": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "uploadType": {"type": "string"},
                         "banner": {"type": "string"},
                         "description": {"type": "string"},
                         "etag": {"type": "string"},
                         "createdOn": {"type": "string"},
                         "createdBy": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "bucket": {"type": "string"},
                         "endpointUrl": {"type": "string"}
                    },
                    "description": "The external upload destination setting contains information to generate an upload destination for an S3 object storage NOT managed by Synapse. This is different from ExternalS3StorageLocationSetting, which contains information about an external S3 storage that is managed by Synapse",
                    "required": [
                         "bucket",
                         "endpointUrl",
                         "concreteType"
                    ]
               },
               "org.sagebionetworks.repo.model.migration.DatasetBackfillResponse": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.migration.DatasetBackfillResponse"]
                         },
                         "count": {
                              "type": "integer",
                              "format": "int32"
                         }
                    },
                    "description": "Response of DatasetBackfillingRequest.",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.table.AppendableRowSetRequest": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.table.AppendableRowSetRequest"]
                         },
                         "entityId": {"type": "string"},
                         "toAppend": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.AppendableRowSet",
                              "description": "Abstraction for a set of rows that can be appended to a table."
                         }
                    },
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.dao.WikiPageKey": {
                    "type": "object",
                    "properties": {
                         "wikiPageId": {"type": "string"},
                         "ownerObjectId": {"type": "string"},
                         "ownerObjectType": {"type": "string"}
                    },
                    "description": "Reference to a WikiPage"
               },
               "org.sagebionetworks.repo.model.audit.AclRecord": {
                    "type": "object",
                    "properties": {
                         "ownerType": {"type": "string"},
                         "id": {"type": "string"},
                         "createdBy": {"type": "string"},
                         "creationDate": {"type": "string"},
                         "modifiedBy": {"type": "string"},
                         "modifiedOn": {"type": "string"},
                         "etag": {"type": "string"},
                         "resourceAccess": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.ResourceAccess",
                                   "description": "JSON schema for a ResourceAccess POJO"
                              },
                              "description": "The list of principals who can access the data with the allowed types of access for each.",
                              "uniqueItems": true
                         }
                    },
                    "description": "Data record from an access control list."
               },
               "org.sagebionetworks.repo.model.doi.Doi": {
                    "type": "object",
                    "properties": {
                         "id": {"type": "string"},
                         "etag": {"type": "string"},
                         "doiStatus": {"type": "string"},
                         "objectId": {"type": "string"},
                         "objectType": {"type": "string"},
                         "objectVersion": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "createdBy": {"type": "string"},
                         "createdOn": {"type": "string"},
                         "updatedOn": {"type": "string"}
                    },
                    "description": "JSON schema for DOI.",
                    "required": [
                         "id",
                         "objectId",
                         "createdBy"
                    ]
               },
               "org.sagebionetworks.repo.model.drs.ServiceInformation": {
                    "type": "object",
                    "properties": {
                         "id": {"type": "string"},
                         "name": {"type": "string"},
                         "type": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.drs.PackageInformation",
                              "description": "The DRS package information follows GA4GH specification."
                         },
                         "description": {"type": "string"},
                         "organization": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.drs.OrganizationInformation",
                              "description": "The information of the organization, which provides DRS API implementation."
                         },
                         "contactUrl": {"type": "string"},
                         "documentationUrl": {"type": "string"},
                         "createdAt": {"type": "string"},
                         "updatedAt": {"type": "string"},
                         "environment": {"type": "string"},
                         "version": {"type": "string"}
                    },
                    "description": "Drs service information"
               },
               "org.sagebionetworks.repo.model.report.StorageReportType": {
                    "type": "string",
                    "enum": ["ALL_PROJECTS"]
               },
               "org.sagebionetworks.repo.model.schema.CreateOrganizationRequest": {
                    "type": "object",
                    "properties": {"organizationName": {"type": "string"}},
                    "description": "Request to create a new Organization."
               },
               "org.sagebionetworks.repo.model.ManagedACTAccessRequirement": {
                    "type": "object",
                    "properties": {
                         "versionNumber": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "id": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "description": {"type": "string"},
                         "name": {"type": "string"},
                         "etag": {"type": "string"},
                         "createdOn": {"type": "string"},
                         "modifiedOn": {"type": "string"},
                         "createdBy": {"type": "string"},
                         "modifiedBy": {"type": "string"},
                         "subjectsDefinedByAnnotations": {"type": "boolean"},
                         "subjectIds": {
                              "type": "array",
                              "items": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.RestrictableObjectDescriptor"},
                              "description": "The IDs of the items controlled by this Access Requirement when 'subjectsDefinedByAnnotations=false'. This property is mutually exclusive with 'subjectsDefinedByAnnotations'.  When 'subjectsDefinedByAnnotations=true' then this property must be empty or excluded.  Required when creating or updating and 'subjectsDefinedByAnnotations=false' or 'subjectsDefinedByAnnotations' is excluded."
                         },
                         "accessType": {"type": "string"},
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.ManagedACTAccessRequirement"]
                         },
                         "isCertifiedUserRequired": {"type": "boolean"},
                         "isValidatedProfileRequired": {"type": "boolean"},
                         "isDUCRequired": {"type": "boolean"},
                         "ducTemplateFileHandleId": {"type": "string"},
                         "isIRBApprovalRequired": {"type": "boolean"},
                         "areOtherAttachmentsRequired": {"type": "boolean"},
                         "expirationPeriod": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "isIDUPublic": {"type": "boolean"},
                         "isIDURequired": {"type": "boolean"},
                         "isTwoFaRequired": {"type": "boolean"}
                    },
                    "description": "JSON schema for in-Synapse 'Access Control Team' controlled Access Requirement, a 'tier 3' Access Requirement. This access requirement allows the ACT managing the detail requirements, and submissions within Synapse.",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.migration.AdminRequest": {
                    "type": "object",
                    "properties": {"concreteType": {"type": "string"}},
                    "description": "Abstraction for Admin request",
                    "oneOf": [
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.migration.AsyncMigrationTypeChecksumRequest"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.migration.AsyncMigrationTypeCountsRequest"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.migration.DatasetBackfillRequest"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.migration.AsyncMigrationRangeChecksumRequest"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.migration.CalculateOptimalRangeRequest"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.migration.RestoreTypeRequest"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.migration.BatchChecksumRequest"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.migration.BackupTypeRangeRequest"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.migration.AsyncMigrationTypeCountRequest"}
                    ],
                    "required": ["concreteType"],
                    "discriminator": {"propertyName": "concreteType"}
               },
               "org.sagebionetworks.repo.model.dataaccess.SubmissionPageRequest": {
                    "type": "object",
                    "properties": {
                         "accessRequirementId": {"type": "string"},
                         "nextPageToken": {"type": "string"},
                         "filterBy": {"type": "string"},
                         "accessorId": {"type": "string"},
                         "orderBy": {"type": "string"},
                         "isAscending": {"type": "boolean"}
                    },
                    "description": "A request to retrieve a page of a Submission."
               },
               "org.sagebionetworks.repo.model.doi.v2.DoiCreator": {
                    "type": "object",
                    "properties": {
                         "creatorName": {"type": "string"},
                         "nameIdentifiers": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.doi.v2.DoiNameIdentifier",
                                   "description": "Uniquely identifies an individual or legal entity, according to various schemas."
                              },
                              "description": "Optional. Uniquely identifies an individual or legal entity, according to various schemas."
                         }
                    },
                    "description": "JSON schema for DOI Metadata Creator."
               },
               "org.sagebionetworks.repo.model.file.FileEventRecord": {
                    "type": "object",
                    "properties": {
                         "userId": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "projectId": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "fileHandleId": {"type": "string"},
                         "downloadedFileHandleId": {"type": "string"},
                         "associateType": {"type": "string"},
                         "associateId": {"type": "string"},
                         "sessionId": {"type": "string"}
                    },
                    "description": "File record for file upload and download events",
                    "required": [
                         "userId",
                         "fileHandleId",
                         "associateId"
                    ]
               },
               "org.sagebionetworks.repo.model.UserGroupHeaderResponsePage": {
                    "type": "object",
                    "properties": {
                         "children": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.UserGroupHeader",
                                   "description": "JSON schema for UserHeader POJO"
                              },
                              "description": "The list of children that match the requested concept."
                         },
                         "prefixFilter": {"type": "string"},
                         "totalNumberOfResults": {
                              "type": "integer",
                              "format": "int32"
                         }
                    },
                    "description": "A single page of a users/groups info query response."
               },
               "org.sagebionetworks.repo.model.oauth.JsonWebKeyRSA": {
                    "type": "object",
                    "properties": {
                         "kid": {"type": "string"},
                         "kty": {"type": "string"},
                         "use": {"type": "string"},
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.oauth.JsonWebKeyRSA"]
                         },
                         "e": {"type": "string"},
                         "n": {"type": "string"}
                    },
                    "description": "JSON Web Key for the RSA algorithm",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.project.S3StorageLocationSetting": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.project.S3StorageLocationSetting"]
                         },
                         "storageLocationId": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "uploadType": {"type": "string"},
                         "banner": {"type": "string"},
                         "description": {"type": "string"},
                         "etag": {"type": "string"},
                         "createdOn": {"type": "string"},
                         "createdBy": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "baseKey": {"type": "string"},
                         "stsEnabled": {"type": "boolean"}
                    },
                    "description": "This class refers only to the default Synapse storage location(s) that exist on Amazon S3. To create a storage location that refers to a private S3 bucket, see <a href=\"${org.sagebionetworks.repo.model.project.ExternalS3StorageLocationSetting}\">ExternalS3StorageLocationSetting<\/a>.",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.status.StackStatus": {
                    "type": "object",
                    "properties": {
                         "status": {"type": "string"},
                         "currentMessage": {"type": "string"},
                         "pendingMaintenanceMessage": {"type": "string"}
                    },
                    "description": "The Status of the stack"
               },
               "org.sagebionetworks.repo.model.discussion.ReplyCount": {
                    "type": "object",
                    "properties": {"count": {
                         "type": "integer",
                         "format": "int32"
                    }}
               },
               "org.sagebionetworks.repo.model.webhook.WebhookVerificationStatus": {
                    "type": "string",
                    "enum": [
                         "PENDING",
                         "CODE_SENT",
                         "FAILED",
                         "REVOKED",
                         "VERIFIED"
                    ]
               },
               "org.sagebionetworks.repo.model.annotation.v2.Keys": {
                    "type": "object",
                    "properties": {"keys": {
                         "type": "array",
                         "items": {"type": "string"},
                         "description": "Array of annotation keys"
                    }},
                    "description": "Array of annotation keys",
                    "required": ["keys"]
               },
               "org.sagebionetworks.repo.model.schema.ListJsonSchemaInfoRequest": {
                    "type": "object",
                    "properties": {
                         "organizationName": {"type": "string"},
                         "nextPageToken": {"type": "string"}
                    },
                    "description": "Request to list a single page of JsonSchemaInfo for the given organization name."
               },
               "org.sagebionetworks.repo.model.table.SparseChangeSetDto": {
                    "type": "object",
                    "properties": {
                         "tableId": {"type": "string"},
                         "etag": {"type": "string"},
                         "columnIds": {
                              "type": "array",
                              "items": {"type": "string"},
                              "description": "The column IDs that define the schema of this change set."
                         },
                         "rows": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.SparseRowDto",
                                   "description": "Represents a single partial row of a TableEntity"
                              },
                              "description": "The partial rows of this set."
                         }
                    },
                    "description": "Data Transfer Object (DTO) for a SparseChangeSet"
               },
               "org.sagebionetworks.repo.model.table.ViewEntityType": {
                    "type": "string",
                    "enum": [
                         "entityview",
                         "submissionview",
                         "dataset",
                         "datasetcollection"
                    ]
               },
               "org.sagebionetworks.repo.model.auth.AccessTokenRecord": {
                    "type": "object",
                    "properties": {
                         "id": {"type": "string"},
                         "userId": {"type": "string"},
                         "scopes": {
                              "type": "array",
                              "items": {"type": "string"},
                              "description": "The scopes that have been granted to this token"
                         },
                         "userInfoClaims": {
                              "type": "object",
                              "description": "The OIDC claims that can be accessed using this token.",
                              "additionalProperties": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.oauth.OIDCClaimsRequestDetails",
                                   "description": "<a href=\"https://openid.net/specs/openid-connect-core-1_0.html#ClaimsParameter\">OIDC Core 1.0 Claims Request<\/a> value"
                              }
                         },
                         "name": {"type": "string"},
                         "createdOn": {"type": "string"},
                         "lastUsed": {"type": "string"},
                         "state": {"type": "string"}
                    },
                    "description": "Metadata related to an issued personal access token. After the token has been generated, it cannot be retrieved."
               },
               "org.sagebionetworks.repo.model.doi.v2.DoiTitle": {
                    "type": "object",
                    "properties": {"title": {"type": "string"}},
                    "description": "JSON schema for DOI Metadata Title."
               },
               "org.sagebionetworks.repo.model.ErrorResponseCode": {
                    "type": "string",
                    "enum": [
                         "PASSWORD_RESET_VIA_EMAIL_REQUIRED",
                         "USER_CERTIFICATION_REQUIRED",
                         "INVALID_TABLE_QUERY_FACET_COLUMN_REQUEST",
                         "OAUTH_CLIENT_NOT_VERIFIED",
                         "TWO_FA_REQUIRED",
                         "UNSUPPORTED_WEBHOOK_DOMAIN"
                    ]
               },
               "org.sagebionetworks.repo.model.download.Action": {
                    "type": "object",
                    "properties": {"concreteType": {"type": "string"}},
                    "description": "An action that the user must take in order to download a file.",
                    "oneOf": [
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.download.RequestDownload"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.download.MeetAccessRequirement"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.download.EnableTwoFa"}
                    ],
                    "required": ["concreteType"],
                    "discriminator": {"propertyName": "concreteType"}
               },
               "org.sagebionetworks.repo.model.VersionableEntity": {
                    "type": "object",
                    "properties": {
                         "name": {"type": "string"},
                         "description": {"type": "string"},
                         "id": {"type": "string"},
                         "etag": {"type": "string"},
                         "createdOn": {"type": "string"},
                         "modifiedOn": {"type": "string"},
                         "createdBy": {"type": "string"},
                         "modifiedBy": {"type": "string"},
                         "parentId": {"type": "string"},
                         "concreteType": {"type": "string"},
                         "versionNumber": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "versionLabel": {"type": "string"},
                         "versionComment": {"type": "string"},
                         "isLatestVersion": {"type": "boolean"}
                    },
                    "description": "JSON schema for Versionable interface",
                    "oneOf": [
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.SubmissionView"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.DatasetCollection"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.EntityView"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.VirtualTable"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.MaterializedView"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.FileEntity"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.Dataset"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.TableEntity"}
                    ],
                    "required": ["concreteType"],
                    "discriminator": {"propertyName": "concreteType"}
               },
               "org.sagebionetworks.repo.model.entity.SortBy": {
                    "type": "string",
                    "enum": [
                         "NAME",
                         "CREATED_ON",
                         "MODIFIED_ON"
                    ]
               },
               "org.sagebionetworks.repo.model.table.TableSearchChangeResponse": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.table.TableSearchChangeResponse"]
                         },
                         "searchEnabled": {"type": "boolean"}
                    },
                    "description": "A response to a table search change request.",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.dataaccess.SubmissionInfo": {
                    "type": "object",
                    "properties": {
                         "institution": {"type": "string"},
                         "projectLead": {"type": "string"},
                         "intendedDataUseStatement": {"type": "string"},
                         "modifiedOn": {"type": "string"},
                         "submittedBy": {"type": "string"},
                         "accessorChanges": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.dataaccess.AccessorChange",
                                   "description": "Request for a single user change access to a resource."
                              },
                              "description": "List of user changes. A user can gain access, renew access or have access revoked."
                         }
                    },
                    "description": "Information about a request to access controlled data and its related Research Project"
               },
               "org.sagebionetworks.repo.model.annotation.Annotations": {
                    "type": "object",
                    "properties": {
                         "objectId": {"type": "string"},
                         "scopeId": {"type": "string"},
                         "version": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "stringAnnos": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.annotation.StringAnnotation",
                                   "description": "An Annotation containing a String value"
                              },
                              "description": "A list of StringAnnnotations"
                         },
                         "longAnnos": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.annotation.LongAnnotation",
                                   "description": "An Annotation containing a Long value"
                              },
                              "description": "A list of LongAnnnotations"
                         },
                         "doubleAnnos": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.annotation.DoubleAnnotation",
                                   "description": "An Annotation containing a Double value"
                              },
                              "description": "A list of DoubleAnnnotations"
                         }
                    },
                    "description": "Primary container object for Annotations on a Synapse object"
               },
               "org.sagebionetworks.repo.model.table.HasDefiningSql": {
                    "type": "object",
                    "properties": {"definingSQL": {"type": "string"}},
                    "description": "The object that implements this interface contains an SQL query that defines its content.",
                    "oneOf": [
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.VirtualTable"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.MaterializedView"}
                    ],
                    "discriminator": {"propertyName": "concreteType"}
               },
               "org.sagebionetworks.repo.model.schema.ListJsonSchemaInfoResponse": {
                    "type": "object",
                    "properties": {
                         "page": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.schema.JsonSchemaInfo",
                                   "description": "Information about a single JSON schema."
                              }
                         },
                         "nextPageToken": {"type": "string"}
                    },
                    "description": "A single page of the currently registered Organizations"
               },
               "org.sagebionetworks.repo.model.discussion.DiscussionFilter": {
                    "type": "string",
                    "enum": [
                         "NO_FILTER",
                         "DELETED_ONLY",
                         "EXCLUDE_DELETED"
                    ]
               },
               "org.sagebionetworks.repo.model.provenance.UsedURL": {
                    "type": "object",
                    "properties": {
                         "wasExecuted": {"type": "boolean"},
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.provenance.UsedURL"]
                         },
                         "name": {"type": "string"},
                         "url": {"type": "string"}
                    },
                    "description": "Interface for JSON schema for UsedEntity POJO",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.EntityType": {
                    "type": "string",
                    "enum": [
                         "project",
                         "folder",
                         "file",
                         "table",
                         "link",
                         "entityview",
                         "dockerrepo",
                         "submissionview",
                         "dataset",
                         "datasetcollection",
                         "materializedview",
                         "virtualtable"
                    ]
               },
               "org.sagebionetworks.evaluation.model.MemberSubmissionEligibility": {
                    "type": "object",
                    "properties": {
                         "isEligible": {"type": "boolean"},
                         "isRegistered": {"type": "boolean"},
                         "isQuotaFilled": {"type": "boolean"},
                         "principalId": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "hasConflictingSubmission": {"type": "boolean"}
                    },
                    "description": "Describes the eligibility of an indivdiual to submit to an Evaluation queue, reflecting the queue's submission quotas and current submissions."
               },
               "org.sagebionetworks.repo.model.oauth.OAuthUrlResponse": {
                    "type": "object",
                    "properties": {"authorizationUrl": {"type": "string"}},
                    "description": "Response for an OAuth2 authorization url."
               },
               "org.sagebionetworks.repo.model.file.BatchFileHandleCopyResult": {
                    "type": "object",
                    "properties": {"copyResults": {
                         "type": "array",
                         "items": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.file.FileHandleCopyResult",
                              "description": "Result of a FileHandleCopyRequest."
                         },
                         "description": "The results of each individual requests."
                    }},
                    "description": "Batch Result for copying FileHandles."
               },
               "org.sagebionetworks.repo.model.table.RowReferenceSetResults": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.table.RowReferenceSetResults"]
                         },
                         "rowReferenceSet": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.RowReferenceSet",
                              "description": "Represents a set of RowReferences of a TableEntity"
                         }
                    },
                    "description": "Response of an asynchronous that returns RowReferenceSet.",
                    "required": ["concreteType"]
               },
               "PaginatedResultsOfEntityHeader": {
                    "type": "object",
                    "properties": {
                         "totalNumberOfResults": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "results": {
                              "type": "array",
                              "items": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.EntityHeader"}
                         }
                    }
               },
               "PaginatedResultsOfTrashedEntity": {
                    "type": "object",
                    "properties": {
                         "totalNumberOfResults": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "results": {
                              "type": "array",
                              "items": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.TrashedEntity"}
                         }
                    }
               },
               "org.sagebionetworks.repo.model.statistics.ProjectFilesStatisticsResponse": {
                    "type": "object",
                    "properties": {
                         "objectId": {"type": "string"},
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.statistics.ProjectFilesStatisticsResponse"]
                         },
                         "fileDownloads": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.statistics.MonthlyFilesStatistics",
                              "description": "Container for the statistics relative to file downloads or uploads for the past 12 months (Excluding the current month)."
                         },
                         "fileUploads": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.statistics.MonthlyFilesStatistics",
                              "description": "Container for the statistics relative to file downloads or uploads for the past 12 months (Excluding the current month)."
                         }
                    },
                    "description": "Container for statistics related to project files. Exposes the monthly aggregates of files and (unique) users that downloaded/uploaded for the past 12 months (excluding the current month).",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.migration.AsyncMigrationTypeChecksumRequest": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.migration.AsyncMigrationTypeChecksumRequest"]
                         },
                         "migrationType": {"type": "string"},
                         "type": {"type": "string"}
                    },
                    "description": "Request checksum for given type.",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.discussion.EntityThreadCounts": {
                    "type": "object",
                    "properties": {"list": {
                         "type": "array",
                         "items": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.discussion.EntityThreadCount",
                              "description": "The model object represents the number of threads that mentioned a particular entity."
                         }
                    }},
                    "description": "The model object represents a list of EntityThreadCounts"
               },
               "org.sagebionetworks.repo.model.Node": {
                    "type": "object",
                    "properties": {
                         "id": {"type": "string"},
                         "name": {"type": "string"},
                         "description": {"type": "string"},
                         "parentId": {"type": "string"},
                         "createdByPrincipalId": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "createdOn": {"type": "string"},
                         "modifiedByPrincipalId": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "modifiedOn": {"type": "string"},
                         "nodeType": {"type": "string"},
                         "eTag": {"type": "string"},
                         "versionNumber": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "versionComment": {"type": "string"},
                         "versionLabel": {"type": "string"},
                         "isLatestVersion": {"type": "boolean"},
                         "activityId": {"type": "string"},
                         "fileHandleId": {"type": "string"},
                         "columnModelIds": {
                              "type": "array",
                              "items": {"type": "string"}
                         },
                         "scopeIds": {
                              "type": "array",
                              "items": {"type": "string"},
                              "description": "For FileVeiws, the list of IDs the define the scope of the view."
                         },
                         "items": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.EntityRef",
                                   "description": "Represents a reference to the id and version of an entity to be used in collections."
                              },
                              "description": "For Datasets and Dataset Collections, the list of entity references the define the view."
                         },
                         "reference": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.Reference",
                              "description": "JSON schema for Reference POJO"
                         },
                         "alias": {"type": "string"},
                         "isSearchEnabled": {"type": "boolean"},
                         "definingSQL": {"type": "string"}
                    },
                    "description": "This is the DTO of a node."
               },
               "org.sagebionetworks.repo.model.file.BatchFileRequest": {
                    "type": "object",
                    "properties": {
                         "requestedFiles": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.file.FileHandleAssociation",
                                   "description": "Describes an association of a FileHandle with another object."
                              },
                              "description": "Defines the files to get."
                         },
                         "includePreSignedURLs": {"type": "boolean"},
                         "includeFileHandles": {"type": "boolean"},
                         "includePreviewPreSignedURLs": {"type": "boolean"}
                    },
                    "description": "Batch Request for file pre-signed-URLs and/or FileHandles."
               },
               "org.sagebionetworks.repo.model.schema.ListValidationResultsResponse": {
                    "type": "object",
                    "properties": {
                         "page": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.schema.ValidationResults",
                                   "description": "Results of validating an object against a schema"
                              }
                         },
                         "nextPageToken": {"type": "string"}
                    },
                    "description": "A single page of the JSON schema validation results."
               },
               "org.sagebionetworks.repo.model.schema.BoundObjectType": {
                    "type": "string",
                    "enum": ["entity"]
               },
               "org.sagebionetworks.repo.model.file.FileHandleArchivalResponse": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.file.FileHandleArchivalResponse"]
                         },
                         "count": {
                              "type": "integer",
                              "format": "int32"
                         }
                    },
                    "description": "Response for a request to tag file handles for archival.",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.doi.v2.DoiNameIdentifier": {
                    "type": "object",
                    "properties": {
                         "identifier": {"type": "string"},
                         "nameIdentifierScheme": {"type": "string"}
                    },
                    "description": "Uniquely identifies an individual or legal entity, according to various schemas."
               },
               "org.sagebionetworks.repo.model.webhook.Webhook": {
                    "type": "object",
                    "properties": {
                         "id": {"type": "string"},
                         "createdBy": {"type": "string"},
                         "createdOn": {"type": "string"},
                         "modifiedOn": {"type": "string"},
                         "objectId": {"type": "string"},
                         "objectType": {"type": "string"},
                         "eventTypes": {
                              "type": "array",
                              "items": {"type": "string"},
                              "description": "The set of event types to subscribe to.",
                              "uniqueItems": true
                         },
                         "invokeEndpoint": {"type": "string"},
                         "isEnabled": {"type": "boolean"},
                         "verificationStatus": {"type": "string"},
                         "verificationMsg": {"type": "string"}
                    },
                    "description": "An object that serves as registration for a Synapse user to receive events for the specified event."
               },
               "org.sagebionetworks.repo.model.dataaccess.SubmissionStatus": {
                    "type": "object",
                    "properties": {
                         "submissionId": {"type": "string"},
                         "submittedBy": {"type": "string"},
                         "rejectedReason": {"type": "string"},
                         "state": {"type": "string"},
                         "modifiedOn": {"type": "string"}
                    },
                    "description": "The status of a Submission."
               },
               "org.sagebionetworks.repo.model.search.SearchResults": {
                    "type": "object",
                    "properties": {
                         "found": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "start": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "matchExpression": {"type": "string"},
                         "hits": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.search.Hit",
                                   "description": "JSON schema for a Hit in the search results.  Each Hit contains a subset of entity data."
                              },
                              "description": "The hits in this page of search results"
                         },
                         "facets": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.search.Facet",
                                   "description": "JSON schema for a continuous or literal value Facet found in the search results."
                              },
                              "description": "The facets found in all results of this search."
                         }
                    },
                    "description": "JSON schema for a the result of a search."
               },
               "org.sagebionetworks.repo.model.download.DownloadListItemResult": {
                    "type": "object",
                    "properties": {
                         "fileName": {"type": "string"},
                         "addedOn": {"type": "string"},
                         "projectId": {"type": "string"},
                         "projectName": {"type": "string"},
                         "createdBy": {"type": "string"},
                         "createdOn": {"type": "string"},
                         "fileSizeBytes": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "isEligibleForPackaging": {"type": "boolean"},
                         "fileHandleId": {"type": "string"},
                         "fileEntityId": {"type": "string"},
                         "versionNumber": {
                              "type": "integer",
                              "format": "int32"
                         }
                    },
                    "description": "The results of a single item on a user's download list."
               },
               "org.sagebionetworks.repo.model.EntityChildrenRequest": {
                    "type": "object",
                    "properties": {
                         "parentId": {"type": "string"},
                         "nextPageToken": {"type": "string"},
                         "includeTypes": {
                              "type": "array",
                              "items": {"type": "string"},
                              "description": "The types of children to be include. Must include at least one type."
                         },
                         "sortBy": {"type": "string"},
                         "sortDirection": {"type": "string"},
                         "includeTotalChildCount": {"type": "boolean"},
                         "includeSumFileSizes": {"type": "boolean"}
                    },
                    "description": "Request for EntityHeaders of the children of a given parent Entity"
               },
               "org.sagebionetworks.repo.model.download.AddToDownloadListRequest": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.download.AddToDownloadListRequest"]
                         },
                         "query": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.Query"},
                         "parentId": {"type": "string"},
                         "useVersionNumber": {"type": "boolean"}
                    },
                    "description": "Start an asynchronous job to add files from the given view query or folder to the user's download list,",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.discussion.UpdateThreadTitle": {
                    "type": "object",
                    "properties": {"title": {"type": "string"}}
               },
               "org.sagebionetworks.repo.model.migration.MigrationTypeCount": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.migration.MigrationTypeCount"]
                         },
                         "type": {"type": "string"},
                         "count": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "maxid": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "minid": {
                              "type": "integer",
                              "format": "int32"
                         }
                    },
                    "description": "A record containing count of instances, minimum id and maximum id for a migration type",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.migration.HasMigrationType": {
                    "type": "object",
                    "properties": {"migrationType": {"type": "string"}},
                    "description": "Abstraction for Admin request",
                    "oneOf": [
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.migration.AsyncMigrationTypeChecksumRequest"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.migration.MigrationTypeChecksum"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.migration.CalculateOptimalRangeResponse"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.migration.AsyncMigrationRangeChecksumRequest"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.migration.CalculateOptimalRangeRequest"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.migration.RestoreTypeRequest"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.migration.BatchChecksumRequest"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.migration.BackupTypeRangeRequest"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.migration.BatchChecksumResponse"}
                    ],
                    "discriminator": {"propertyName": "concreteType"}
               },
               "org.sagebionetworks.repo.model.annotation.StringAnnotation": {
                    "type": "object",
                    "properties": {
                         "key": {"type": "string"},
                         "isPrivate": {"type": "boolean"},
                         "value": {"type": "string"}
                    },
                    "description": "An Annotation containing a String value"
               },
               "org.sagebionetworks.repo.model.schema.JsonSchemaObjectBinding": {
                    "type": "object",
                    "properties": {
                         "jsonSchemaVersionInfo": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.schema.JsonSchemaVersionInfo",
                              "description": "Information about a single version of a JSON schema."
                         },
                         "objectId": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "objectType": {"type": "string"},
                         "createdOn": {"type": "string"},
                         "createdBy": {"type": "string"},
                         "enableDerivedAnnotations": {"type": "boolean"}
                    },
                    "description": "Describes the binding of a JSON schema to an object"
               },
               "org.sagebionetworks.repo.model.schema.ListOrganizationsResponse": {
                    "type": "object",
                    "properties": {
                         "page": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.schema.Organization",
                                   "description": "The first step in creating new type schema in Synapse is to setup and configure an organization. The name of the organization serves as the root for each schema's $id managed by that organization.  The organization name 'org.sagebionetworks' is reserved for the core Synapse model objects.   Each organization also has an Access Control List (ACL) that controls who can add schemas to an organization.  All schemas created under an Organization will be considered publicly readable and reference-able. Organizations are immutable"
                              }
                         },
                         "nextPageToken": {"type": "string"}
                    },
                    "description": "A single page of the currently registered Organizations"
               },
               "org.sagebionetworks.repo.model.message.ChangeMessage": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.message.ChangeMessage"]
                         },
                         "objectId": {"type": "string"},
                         "objectVersion": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "objectType": {"type": "string"},
                         "timestamp": {"type": "string"},
                         "changeNumber": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "changeType": {"type": "string"},
                         "userId": {
                              "type": "integer",
                              "format": "int32"
                         }
                    },
                    "description": "JSON schema for a change message",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.download.FilesStatisticsRequest": {
                    "type": "object",
                    "properties": {"concreteType": {
                         "type": "string",
                         "enum": ["org.sagebionetworks.repo.model.download.FilesStatisticsRequest"]
                    }},
                    "description": "Request to get statistics about the files currently on the user's download list.",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.oauth.OAuthClientAuthorizationHistoryList": {
                    "type": "object",
                    "properties": {
                         "results": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.oauth.OAuthClientAuthorizationHistory",
                                   "description": "An object representing an OAuth 2.0 client that has been authorized to request a user's resources and identity"
                              }
                         },
                         "nextPageToken": {"type": "string"}
                    },
                    "description": "Metadata for a paginated list of OAuth 2.0 clients authorized to access a user's resources in Synapse."
               },
               "org.sagebionetworks.repo.model.auth.NewIntegrationTestUser": {
                    "type": "object",
                    "properties": {
                         "username": {"type": "string"},
                         "email": {"type": "string"},
                         "password": {"type": "string"},
                         "tou": {"type": "boolean"},
                         "validatedUser": {"type": "boolean"}
                    },
                    "description": "Administrative object.  Used to create users for integration tests.  All fields besides username can be null"
               },
               "org.sagebionetworks.repo.model.table.SnapshotRequest": {
                    "type": "object",
                    "properties": {
                         "snapshotComment": {"type": "string"},
                         "snapshotLabel": {"type": "string"},
                         "snapshotActivityId": {"type": "string"}
                    },
                    "description": "Request to create a new snapshot of a table or view.  The provided comment, label, and activity ID will be applied to the current version thereby creating a snapshot and locking the current version.  After the snapshot is created a new version will be started with an 'in-progress' label."
               },
               "org.sagebionetworks.repo.model.file.MultipartUploadState": {
                    "type": "string",
                    "enum": [
                         "UPLOADING",
                         "COMPLETED"
                    ]
               },
               "org.sagebionetworks.repo.model.AccessControlList": {
                    "type": "object",
                    "properties": {
                         "id": {"type": "string"},
                         "createdBy": {"type": "string"},
                         "creationDate": {"type": "string"},
                         "modifiedBy": {"type": "string"},
                         "modifiedOn": {"type": "string"},
                         "etag": {"type": "string"},
                         "resourceAccess": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.ResourceAccess",
                                   "description": "JSON schema for a ResourceAccess POJO"
                              },
                              "description": "The list of principals who can access the data with the allowed types of access for each.",
                              "uniqueItems": true
                         }
                    },
                    "description": "Contains list of principals who can access the data with the allowed types of access for each."
               },
               "org.sagebionetworks.repo.model.table.ColumnMultiValueFunctionQueryFilter": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.table.ColumnMultiValueFunctionQueryFilter"]
                         },
                         "isDefiningCondition": {"type": "boolean"},
                         "values": {
                              "type": "array",
                              "items": {"type": "string"},
                              "description": "Values to be used with the filter."
                         },
                         "columnName": {"type": "string"},
                         "function": {"type": "string"}
                    },
                    "description": "A filter that applies multi-value columns functions.",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.RestrictionInformationResponse": {
                    "type": "object",
                    "properties": {
                         "objectId": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "restrictionLevel": {"type": "string"},
                         "hasUnmetAccessRequirement": {"type": "boolean"},
                         "userEntityPermissions": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.auth.UserEntityPermissions",
                              "description": "The permission a User has for a given Entity"
                         },
                         "restrictionDetails": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.RestrictionFulfillment",
                                   "description": "Provides information about a restriction fulfillment for a user in the context of a restrictable object and access requirement"
                              },
                              "description": "The list of restriction fulfillment information for each access requirement that applies to the restrictable object."
                         }
                    },
                    "description": "The information about restriction level on a restrict-able object."
               },
               "org.sagebionetworks.repo.model.ChallengePagedResults": {
                    "type": "object",
                    "properties": {
                         "results": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.Challenge",
                                   "description": "Settings for a Challenge Project."
                              },
                              "description": "The list of results for this page"
                         },
                         "totalNumberOfResults": {
                              "type": "integer",
                              "format": "int32"
                         }
                    },
                    "description": "A paginated list of Challenge objects"
               },
               "org.sagebionetworks.repo.model.oauth.OIDCAuthorizationRequestDescription": {
                    "type": "object",
                    "properties": {
                         "clientId": {"type": "string"},
                         "redirect_uri": {"type": "string"},
                         "scope": {
                              "type": "array",
                              "items": {"type": "string"},
                              "description": "Scopes and claims requested by client"
                         }
                    },
                    "description": "Human readable description / details about an authorization request"
               },
               "org.sagebionetworks.repo.model.webhook.WebhookVerificationMessage": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.webhook.WebhookVerificationMessage"]
                         },
                         "messageId": {"type": "string"},
                         "eventTimestamp": {"type": "string"},
                         "verificationCode": {"type": "string"}
                    },
                    "description": "A special webhook message that is sent to verify a webhook",
                    "required": [
                         "messageId",
                         "eventTimestamp",
                         "concreteType"
                    ]
               },
               "org.sagebionetworks.repo.model.download.DownloadListPageRequest": {
                    "type": "object",
                    "properties": {
                         "nextPageToken": {"type": "string"},
                         "sort": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.download.Sort",
                                   "description": "Identifies both the field and direction for a single sort operation"
                              },
                              "description": "Optional: Defines how the results should be sorted. Up to three fields can be sorted at a time.  The order of this array determines the sort priority."
                         },
                         "nameContains": {"type": "string"}
                    },
                    "description": "Request to get a single page of files from the user's download list for files that are currently available for download."
               },
               "org.sagebionetworks.repo.model.dataaccess.SubmissionState": {
                    "type": "string",
                    "enum": [
                         "SUBMITTED",
                         "APPROVED",
                         "REJECTED",
                         "CANCELLED"
                    ]
               },
               "org.sagebionetworks.repo.model.Folder": {
                    "type": "object",
                    "properties": {
                         "name": {"type": "string"},
                         "description": {"type": "string"},
                         "id": {"type": "string"},
                         "etag": {"type": "string"},
                         "createdOn": {"type": "string"},
                         "modifiedOn": {"type": "string"},
                         "createdBy": {"type": "string"},
                         "modifiedBy": {"type": "string"},
                         "parentId": {"type": "string"},
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.Folder"]
                         }
                    },
                    "description": "Folder is a hierarchical container for organizing data in Synapse.",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.migration.RestoreTypeResponse": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.migration.RestoreTypeResponse"]
                         },
                         "restoredRowCount": {
                              "type": "integer",
                              "format": "int32"
                         }
                    },
                    "description": "Results for a backup type job.",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.message.MessageStatusType": {
                    "type": "string",
                    "enum": [
                         "READ",
                         "UNREAD",
                         "ARCHIVED"
                    ]
               },
               "org.sagebionetworks.repo.model.discussion.UpdateReplyMessage": {
                    "type": "object",
                    "properties": {"messageMarkdown": {"type": "string"}}
               },
               "ListWrapperOfUserProfile": {
                    "type": "object",
                    "properties": {"list": {
                         "type": "array",
                         "items": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.UserProfile"}
                    }}
               },
               "org.sagebionetworks.repo.model.migration.RestoreTypeRequest": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.migration.RestoreTypeRequest"]
                         },
                         "migrationType": {"type": "string"},
                         "aliasType": {"type": "string"},
                         "backupFileKey": {"type": "string"},
                         "batchSize": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "minimumRowId": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "maximumRowId": {
                              "type": "integer",
                              "format": "int32"
                         }
                    },
                    "description": "Request to restore a migration backup file for a given MigrationType.",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.download.AddBatchOfFilesToDownloadListResponse": {
                    "type": "object",
                    "properties": {"numberOfFilesAdded": {
                         "type": "integer",
                         "format": "int32"
                    }},
                    "description": "Response to add a single batch of files to a user's download list."
               },
               "org.sagebionetworks.repo.model.quiz.TextFieldResponse": {
                    "type": "object",
                    "properties": {
                         "questionIndex": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.quiz.TextFieldResponse"]
                         },
                         "response": {"type": "string"}
                    },
                    "description": "The text response to a TextFieldQuestion",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.search.query.SearchFacetOption": {
                    "type": "object",
                    "properties": {
                         "name": {"type": "string"},
                         "maxResultCount": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "sortType": {"type": "string"}
                    },
                    "description": "Specify which field should be returned as facets and the format of the results for each field"
               },
               "org.sagebionetworks.repo.model.statistics.FilesCountStatistics": {
                    "type": "object",
                    "properties": {
                         "rangeStart": {"type": "string"},
                         "rangeEnd": {"type": "string"},
                         "filesCount": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "usersCount": {
                              "type": "integer",
                              "format": "int32"
                         }
                    },
                    "description": "Describes an aggregate of file actions (e.g. downloads/uploads) and (unique) users count for a specific time frame"
               },
               "org.sagebionetworks.repo.model.oauth.OAuthAuthorizationResponse": {
                    "type": "object",
                    "properties": {"access_code": {"type": "string"}},
                    "description": "OAuth 2.0 Authorization Response"
               },
               "org.sagebionetworks.repo.model.oauth.OAuthTokenRevocationRequest": {
                    "type": "object",
                    "properties": {
                         "token": {"type": "string"},
                         "token_type_hint": {"type": "string"}
                    },
                    "description": "Request body used by OAuth 2.0 clients to revoke an OAuth 2.0 token. Defined by <a href=\"https://tools.ietf.org/html/rfc7009#section-2.1\">RFC 7009 Section 2.1<\/a>"
               },
               "org.sagebionetworks.evaluation.model.CancelControl": {
                    "type": "object",
                    "properties": {
                         "submissionId": {"type": "string"},
                         "userId": {"type": "string"},
                         "canCancel": {"type": "boolean"},
                         "cancelRequested": {"type": "boolean"}
                    },
                    "description": "This object contains information that is used to control if a submission could be cancelled."
               },
               "org.sagebionetworks.repo.model.migration.RangeChecksum": {
                    "type": "object",
                    "properties": {
                         "binNumber": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "count": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "checksum": {"type": "string"},
                         "minimumId": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "maximumId": {
                              "type": "integer",
                              "format": "int32"
                         }
                    },
                    "description": "The calculated checksum for a single batch of rows."
               },
               "org.sagebionetworks.repo.model.registry.MigrationSpec": {
                    "type": "object",
                    "properties": {"migrationMetadata": {
                         "type": "array",
                         "items": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.registry.EntityTypeMigrationSpec",
                              "description": "Metadata to describe the migration of an entity type"
                         }
                    }},
                    "description": "Metadata to describe the migration of nodes"
               },
               "org.sagebionetworks.repo.model.CurationStatusNames": {
                    "type": "string",
                    "enum": [
                         "loaded",
                         "processed",
                         "published"
                    ]
               },
               "org.sagebionetworks.repo.model.webhook.CreateOrUpdateWebhookRequest": {
                    "type": "object",
                    "properties": {
                         "objectId": {"type": "string"},
                         "objectType": {"type": "string"},
                         "eventTypes": {
                              "type": "array",
                              "items": {"type": "string"},
                              "description": "The list of event types to subscribe to.",
                              "uniqueItems": true
                         },
                         "invokeEndpoint": {"type": "string"},
                         "isEnabled": {"type": "boolean"}
                    },
                    "description": "Request used to create or update a webhook"
               },
               "org.sagebionetworks.repo.model.table.HasViewTypeMask": {
                    "type": "object",
                    "properties": {"viewTypeMask": {
                         "type": "integer",
                         "format": "int32"
                    }},
                    "description": "Common definition of the ViewTypeMask",
                    "oneOf": [
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.ViewScope"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.EntityView"}
                    ],
                    "discriminator": {"propertyName": "concreteType"}
               },
               "org.sagebionetworks.repo.model.message.LocalStackChangeMesssage": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.message.LocalStackChangeMesssage"]
                         },
                         "objectId": {"type": "string"},
                         "objectVersion": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "objectType": {"type": "string"},
                         "timestamp": {"type": "string"},
                         "changeNumber": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "changeType": {"type": "string"},
                         "userId": {
                              "type": "integer",
                              "format": "int32"
                         }
                    },
                    "description": "Local stack object that can be used in place of a change message (e.g. this won't migrate through stacks)",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.table.FacetType": {
                    "type": "string",
                    "enum": [
                         "enumeration",
                         "range"
                    ]
               },
               "org.sagebionetworks.repo.model.table.ViewColumnModelResponse": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.table.ViewColumnModelResponse"]
                         },
                         "results": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.ColumnModel",
                                   "description": "A column model contains the metadata of a single column of a table or view."
                              },
                              "description": "A page of <a href=\"${org.sagebionetworks.repo.model.table.ColumnModel}\">ColumnModels<\/a>"
                         },
                         "nextPageToken": {"type": "string"}
                    },
                    "description": "Response for the <a href=\"${org.sagebionetworks.repo.model.table.ViewColumnModelRequest}\">ViewColumnModelRequest<\/a> containing a page of suggested column models",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.download.QueryResponseDetails": {
                    "type": "object",
                    "properties": {"concreteType": {"type": "string"}},
                    "description": "Base interface that all download lists query response types implement.",
                    "oneOf": [
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.download.ActionRequiredResponse"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.download.FilesStatisticsResponse"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.download.AvailableFilesResponse"}
                    ],
                    "required": ["concreteType"],
                    "discriminator": {"propertyName": "concreteType"}
               },
               "org.sagebionetworks.repo.model.agent.AgentAccessLevel": {
                    "type": "string",
                    "enum": [
                         "PUBLICLY_ACCESSIBLE",
                         "READ_YOUR_PRIVATE_DATA",
                         "WRITE_YOUR_PRIVATE_DATA"
                    ]
               },
               "org.sagebionetworks.repo.model.oauth.OIDCTokenResponse": {
                    "type": "object",
                    "properties": {
                         "access_token": {"type": "string"},
                         "refresh_token": {"type": "string"},
                         "id_token": {"type": "string"},
                         "token_type": {"type": "string"},
                         "expires_in": {
                              "type": "integer",
                              "format": "int32"
                         }
                    },
                    "description": "Oauth 2.0 Token Response"
               },
               "org.sagebionetworks.repo.model.schema.ListJsonSchemaVersionInfoResponse": {
                    "type": "object",
                    "properties": {
                         "page": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.schema.JsonSchemaVersionInfo",
                                   "description": "Information about a single version of a JSON schema."
                              }
                         },
                         "nextPageToken": {"type": "string"}
                    },
                    "description": "A single page of schema version metadata for the provided organization and schema name"
               },
               "org.sagebionetworks.repo.model.entitybundle.v2.EntityBundleRequest": {
                    "type": "object",
                    "properties": {
                         "includeEntity": {"type": "boolean"},
                         "includeAnnotations": {"type": "boolean"},
                         "includePermissions": {"type": "boolean"},
                         "includeEntityPath": {"type": "boolean"},
                         "includeHasChildren": {"type": "boolean"},
                         "includeAccessControlList": {"type": "boolean"},
                         "includeFileHandles": {"type": "boolean"},
                         "includeTableBundle": {"type": "boolean"},
                         "includeRootWikiId": {"type": "boolean"},
                         "includeBenefactorACL": {"type": "boolean"},
                         "includeDOIAssociation": {"type": "boolean"},
                         "includeFileName": {"type": "boolean"},
                         "includeThreadCount": {"type": "boolean"},
                         "includeRestrictionInformation": {"type": "boolean"},
                         "includeActivity": {"type": "boolean"}
                    },
                    "description": "Specifies what fields to include in an EntityBundle"
               },
               "org.sagebionetworks.repo.model.auth.UserEntityPermissions": {
                    "type": "object",
                    "properties": {
                         "canView": {"type": "boolean"},
                         "canEdit": {"type": "boolean"},
                         "canMove": {"type": "boolean"},
                         "canAddChild": {"type": "boolean"},
                         "canCertifiedUserEdit": {"type": "boolean"},
                         "canCertifiedUserAddChild": {"type": "boolean"},
                         "isCertifiedUser": {"type": "boolean"},
                         "canChangePermissions": {"type": "boolean"},
                         "canChangeSettings": {"type": "boolean"},
                         "canDelete": {"type": "boolean"},
                         "canDownload": {"type": "boolean"},
                         "canUpload": {"type": "boolean"},
                         "canEnableInheritance": {"type": "boolean"},
                         "ownerPrincipalId": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "canPublicRead": {"type": "boolean"},
                         "canModerate": {"type": "boolean"},
                         "isCertificationRequired": {"type": "boolean"},
                         "isEntityOpenData": {"type": "boolean"},
                         "isDataContributor": {"type": "boolean"}
                    },
                    "description": "The permission a User has for a given Entity"
               },
               "org.sagebionetworks.repo.model.verification.VerificationState": {
                    "type": "object",
                    "properties": {
                         "createdOn": {"type": "string"},
                         "createdBy": {"type": "string"},
                         "state": {"type": "string"},
                         "reason": {"type": "string"},
                         "notes": {"type": "string"}
                    },
                    "description": "The state of a verification submission"
               },
               "org.sagebionetworks.repo.model.agent.ListAgentSessionsRequest": {
                    "type": "object",
                    "properties": {"nextPageToken": {"type": "string"}},
                    "description": "Request a single page agent sessions for the current user.  The session are ordered by 'startedOn' descending."
               },
               "org.sagebionetworks.repo.model.principal.TypeFilter": {
                    "type": "string",
                    "enum": [
                         "USERS_ONLY",
                         "TEAMS_ONLY",
                         "ALL"
                    ]
               },
               "org.sagebionetworks.repo.model.auth.TwoFactorAuthStatus": {
                    "type": "object",
                    "properties": {"status": {"type": "string"}},
                    "description": "Status of 2FA for the user"
               },
               "org.sagebionetworks.repo.model.schema.ValidationException": {
                    "type": "object",
                    "properties": {
                         "keyword": {"type": "string"},
                         "pointerToViolation": {"type": "string"},
                         "message": {"type": "string"},
                         "schemaLocation": {"type": "string"},
                         "causingExceptions": {
                              "type": "array",
                              "items": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.schema.ValidationException"},
                              "description": "An array of sub-exceptions."
                         }
                    },
                    "description": "A recursive ValidationException that describes all schema violations for an entire schema tree."
               },
               "org.sagebionetworks.repo.model.auth.TwoFactorAuthRecoveryCodes": {
                    "type": "object",
                    "properties": {"codes": {
                         "type": "array",
                         "items": {"type": "string"}
                    }},
                    "description": "A list of recovery codes that can be used as a backup in place of TOTPs when performing two factor authentication"
               },
               "org.sagebionetworks.repo.model.quiz.PassingRecord": {
                    "type": "object",
                    "properties": {
                         "userId": {"type": "string"},
                         "quizId": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "responseId": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "score": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "passed": {"type": "boolean"},
                         "passedOn": {"type": "string"},
                         "revokedOn": {"type": "string"},
                         "revoked": {"type": "boolean"},
                         "certified": {"type": "boolean"},
                         "corrections": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.quiz.ResponseCorrectness",
                                   "description": "A user response and whether it is correct."
                              },
                              "description": "For each response, whether it was correct"
                         }
                    },
                    "description": "A record of whether a given user passed a given test"
               },
               "org.sagebionetworks.repo.model.provenance.WasExecuted": {"type": "boolean"},
               "org.sagebionetworks.repo.model.auth.LoginCredentials": {
                    "type": "object",
                    "properties": {
                         "email": {"type": "string"},
                         "password": {"type": "string"}
                    },
                    "description": "Used to login via username and password"
               },
               "org.sagebionetworks.repo.model.table.ColumnSingleValueQueryFilter": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.table.ColumnSingleValueQueryFilter"]
                         },
                         "isDefiningCondition": {"type": "boolean"},
                         "values": {
                              "type": "array",
                              "items": {"type": "string"},
                              "description": "Values to be used with the filter."
                         },
                         "columnName": {"type": "string"},
                         "operator": {"type": "string"}
                    },
                    "description": "A filter using a single value against a column. Values within the values list have an OR relationship",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.UserSessionData": {
                    "type": "object",
                    "properties": {
                         "session": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.auth.Session",
                              "description": "Holds a session token used for short-term authentication with Synapse"
                         },
                         "isSSO": {"type": "boolean"},
                         "profile": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.UserProfile",
                              "description": "JSON schema for UserProfile POJO"
                         }
                    },
                    "description": "JSON schema for UserSessionData POJO"
               },
               "org.sagebionetworks.repo.model.auth.TotpSecretActivationRequest": {
                    "type": "object",
                    "properties": {
                         "secretId": {"type": "string"},
                         "totp": {"type": "string"}
                    },
                    "description": "Activate the TOTP secret for the user to be used in two factor authentication"
               },
               "org.sagebionetworks.repo.model.sts.StsCredentials": {
                    "type": "object",
                    "properties": {
                         "bucket": {"type": "string"},
                         "baseKey": {"type": "string"},
                         "accessKeyId": {"type": "string"},
                         "secretAccessKey": {"type": "string"},
                         "sessionToken": {"type": "string"},
                         "expiration": {"type": "string"}
                    },
                    "description": "Temporary AWS credentials vended by STS (Security Token Service)."
               },
               "org.sagebionetworks.repo.model.ACCESS_TYPE": {
                    "type": "string",
                    "enum": [
                         "CREATE",
                         "READ",
                         "UPDATE",
                         "DELETE",
                         "CHANGE_PERMISSIONS",
                         "DOWNLOAD",
                         "UPLOAD",
                         "PARTICIPATE",
                         "SUBMIT",
                         "READ_PRIVATE_SUBMISSION",
                         "UPDATE_SUBMISSION",
                         "DELETE_SUBMISSION",
                         "TEAM_MEMBERSHIP_UPDATE",
                         "SEND_MESSAGE",
                         "CHANGE_SETTINGS",
                         "MODERATE",
                         "REVIEW_SUBMISSIONS",
                         "EXEMPTION_ELIGIBLE"
                    ]
               },
               "org.sagebionetworks.repo.model.quiz.ResponseCorrectness": {
                    "type": "object",
                    "properties": {
                         "question": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.quiz.Question",
                              "description": "a single question in a Quiz"
                         },
                         "response": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.quiz.QuestionResponse",
                              "description": "The response to a question"
                         },
                         "isCorrect": {"type": "boolean"}
                    },
                    "description": "A user response and whether it is correct."
               },
               "org.sagebionetworks.repo.model.file.FileEvent": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.file.FileEvent"]
                         },
                         "objectId": {"type": "string"},
                         "objectVersion": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "objectType": {"type": "string"},
                         "timestamp": {"type": "string"},
                         "fileEventType": {"type": "string"},
                         "userId": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "fileHandleId": {"type": "string"},
                         "downloadedFileHandleId": {"type": "string"},
                         "associateType": {"type": "string"},
                         "associateId": {"type": "string"},
                         "stack": {"type": "string"},
                         "instance": {"type": "string"},
                         "sessionId": {"type": "string"}
                    },
                    "description": "File event for file upload and download events",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.table.TableSchemaChangeResponse": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.table.TableSchemaChangeResponse"]
                         },
                         "schema": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.ColumnModel",
                                   "description": "A column model contains the metadata of a single column of a table or view."
                              },
                              "description": "The resulting schema after the change."
                         }
                    },
                    "description": "An response to a table schema change request.",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.drs.AccessMethod": {
                    "type": "object",
                    "properties": {
                         "type": {"type": "string"},
                         "access_id": {"type": "string"}
                    },
                    "description": "The list of access methods that can be used to fetch the DrsObject. Required for single blobs and bundles have no access method."
               },
               "org.sagebionetworks.repo.model.download.AddToDownloadListResponse": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.download.AddToDownloadListResponse"]
                         },
                         "numberOfFilesAdded": {
                              "type": "integer",
                              "format": "int32"
                         }
                    },
                    "description": "The results of a job to add the files from a query result or folder to the user's download list.",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.drs.AccessUrl": {
                    "type": "object",
                    "properties": {"url": {"type": "string"}},
                    "description": "A fully resolvable presigned URL that can be used to download the object bytes without any authentication.As presigned url has tokens included, which expires with time"
               },
               "org.sagebionetworks.repo.model.schema.ListOrganizationsRequest": {
                    "type": "object",
                    "properties": {"nextPageToken": {"type": "string"}},
                    "description": "Request to list a single page of the currently registered Organizations"
               },
               "org.sagebionetworks.repo.model.asynch.CacheableRequestBody": {
                    "type": "object",
                    "properties": {"concreteType": {"type": "string"}},
                    "description": "Jobs that are cacheable will implement this type of AsynchronousRequestBody",
                    "oneOf": [
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.QueryBundleRequest"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.DownloadFromTableRequest"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.QueryNextPageToken"}
                    ],
                    "required": ["concreteType"],
                    "discriminator": {"propertyName": "concreteType"}
               },
               "org.sagebionetworks.repo.model.search.query.SearchQuery": {
                    "type": "object",
                    "properties": {
                         "queryTerm": {
                              "type": "array",
                              "items": {"type": "string"},
                              "description": "The free text search terms. This will search the name of the Entity and its Wiki contents"
                         },
                         "booleanQuery": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.search.query.KeyValue",
                                   "description": "JSON schema for a faceted key-value pair."
                              },
                              "description": "One or more key-value pairs that define a boolean search. Multiple expressions are joined with a top-level AND. Key is the facet field name, value is the facet value."
                         },
                         "rangeQuery": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.search.query.KeyRange",
                                   "description": "JSON schema for a faceted key-value-range. This filter will match for values where min<=value<=max. At least one of either 'min' or 'max' must be set for this range to be valid"
                              },
                              "description": "One or more key-value-range filters that filter values of a key based on the specified range where min<=value<=max. Multiple expressions are joined with a top-level AND."
                         },
                         "facetOptions": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.search.query.SearchFacetOption",
                                   "description": "Specify which field should be returned as facets and the format of the results for each field"
                              },
                              "description": "Specify which fields should be returned as facets and the format of the results for each field"
                         },
                         "returnFields": {
                              "type": "array",
                              "items": {"type": "string"},
                              "description": "Specifies the document fields to include in the response. By default, only the document ids of the hits are returned."
                         },
                         "start": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "size": {
                              "type": "integer",
                              "format": "int32"
                         }
                    },
                    "description": "JSON schema for a search query."
               },
               "org.sagebionetworks.repo.model.table.TableFileHandleResults": {
                    "type": "object",
                    "properties": {
                         "tableId": {"type": "string"},
                         "headers": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.SelectColumn",
                                   "description": "A column model contains the metadata of a single column of a TableEntity"
                              },
                              "description": "The list of ColumnModels ID that describes the rows of this set."
                         },
                         "rows": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.file.FileHandleResults",
                                   "description": "JSON schema for FileHandleResults."
                              },
                              "description": "For each row a list of file handles for each requested column"
                         }
                    },
                    "description": "JSON schema for TableFileHandleResults."
               },
               "org.sagebionetworks.repo.model.quiz.TextFieldQuestion": {
                    "type": "object",
                    "properties": {
                         "questionIndex": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "prompt": {"type": "string"},
                         "reference": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.dao.WikiPageKey",
                              "description": "Reference to a WikiPage"
                         },
                         "docLink": {"type": "string"},
                         "helpText": {"type": "string"},
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.quiz.TextFieldQuestion"]
                         },
                         "answer": {"type": "string"}
                    },
                    "description": "A question whose response is an (unconstrained) text string",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.oauth.OIDCSigningAlgorithm": {
                    "type": "string",
                    "enum": ["RS256"]
               },
               "org.sagebionetworks.repo.model.auth.TwoFactorAuthToken": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.auth.TwoFactorAuthToken"]
                         },
                         "hmac": {"type": "string"},
                         "version": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "expiresOn": {"type": "string"},
                         "createdOn": {"type": "string"},
                         "userId": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "context": {"type": "string"}
                    },
                    "description": "A token returned to the client when two factor authentication is required.",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.form.StateEnum": {
                    "type": "string",
                    "enum": [
                         "WAITING_FOR_SUBMISSION",
                         "SUBMITTED_WAITING_FOR_REVIEW",
                         "ACCEPTED",
                         "REJECTED"
                    ]
               },
               "org.sagebionetworks.repo.model.migration.BatchChecksumRequest": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.migration.BatchChecksumRequest"]
                         },
                         "migrationType": {"type": "string"},
                         "salt": {"type": "string"},
                         "minimumId": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "maximumId": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "batchSize": {
                              "type": "integer",
                              "format": "int32"
                         }
                    },
                    "description": "Get n number of checksums for the given ID range.  The given ID range will be batched into sub-ranges and the checksum for each batch will be calculated.",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.table.ColumnModelPage": {
                    "type": "object",
                    "properties": {
                         "results": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.ColumnModel",
                                   "description": "A column model contains the metadata of a single column of a table or view."
                              },
                              "description": "A single page of ColumnModels"
                         },
                         "nextPageToken": {"type": "string"}
                    },
                    "description": "A single page of ColumnModels"
               },
               "org.sagebionetworks.repo.model.v2.wiki.V2WikiPage": {
                    "type": "object",
                    "properties": {
                         "id": {"type": "string"},
                         "etag": {"type": "string"},
                         "createdOn": {"type": "string"},
                         "createdBy": {"type": "string"},
                         "modifiedOn": {"type": "string"},
                         "modifiedBy": {"type": "string"},
                         "parentWikiId": {"type": "string"},
                         "title": {"type": "string"},
                         "markdownFileHandleId": {"type": "string"},
                         "attachmentFileHandleIds": {
                              "type": "array",
                              "items": {"type": "string"},
                              "description": "The list of attachment file handle ids of this page."
                         }
                    },
                    "description": "The WikiPage model object represent a single user managed wiki page."
               },
               "org.sagebionetworks.repo.model.table.RowReferenceSet": {
                    "type": "object",
                    "properties": {
                         "tableId": {"type": "string"},
                         "etag": {"type": "string"},
                         "headers": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.SelectColumn",
                                   "description": "A column model contains the metadata of a single column of a TableEntity"
                              },
                              "description": "The list of ColumnModels ID that describes the rows of this set."
                         },
                         "rows": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.RowReference",
                                   "description": "Reference for a single Row of a TableEntity"
                              },
                              "description": "Each RowReference of this list refers to a single version of a single row of a TableEntity."
                         }
                    },
                    "description": "Represents a set of RowReferences of a TableEntity"
               },
               "org.sagebionetworks.repo.model.oauth.OIDConnectConfiguration": {
                    "type": "object",
                    "properties": {
                         "issuer": {"type": "string"},
                         "authorization_endpoint": {"type": "string"},
                         "token_endpoint": {"type": "string"},
                         "revocation_endpoint": {"type": "string"},
                         "userinfo_endpoint": {"type": "string"},
                         "jwks_uri": {"type": "string"},
                         "registration_endpoint": {"type": "string"},
                         "scopes_supported": {
                              "type": "array",
                              "items": {"type": "string"},
                              "description": "List of the OAuth 2.0 scope values that Synapse supports."
                         },
                         "response_types_supported": {
                              "type": "array",
                              "items": {"type": "string"},
                              "description": "List of the OAuth 2.0 response types that Synapse supports."
                         },
                         "grant_types_supported": {
                              "type": "array",
                              "items": {"type": "string"},
                              "description": "List of the OAuth 2.0 grant types that Synapse supports."
                         },
                         "subject_types_supported": {
                              "type": "array",
                              "items": {"type": "string"},
                              "description": "List of the subject identified types that Synapse supports."
                         },
                         "id_token_signing_alg_values_supported": {
                              "type": "array",
                              "items": {"type": "string"},
                              "description": "List of the JWS signing algorithms (alg values) supported by Synapse for the ID Token to encode the Claims in a JWT"
                         },
                         "userinfo_signing_alg_values_supported": {
                              "type": "array",
                              "items": {"type": "string"},
                              "description": "List of the JWS signing algorithms (alg values) supported by the UserInfo Endpoint to encode the Claims in a JWT"
                         },
                         "request_object_signing_alg_values_supported": {
                              "type": "array",
                              "items": {"type": "string"},
                              "description": "List of signing algorithms supported for signing request objects, or '[\"none\"]' if passing by 'request' parameter is unsupported.  See <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RequestObject\">OpenID Connect Core 1.0<\/a>"
                         },
                         "claims_supported": {
                              "type": "array",
                              "items": {"type": "string"},
                              "description": "List of the Claim Names of the Claims that the Synapse MAY be able to supply values for."
                         },
                         "service_documentation": {"type": "string"},
                         "claims_parameter_supported": {"type": "boolean"},
                         "token_endpoint_auth_methods_supported": {
                              "type": "array",
                              "items": {"type": "string"},
                              "description": "a list of Client Authentication methods supported by Synapse's Token Endpoint.  See <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#ClientAuthentication\">OpenID Connect Core 1.0 Client Authentication<\/a>"
                         }
                    },
                    "description": "OpenID Provider Configuration, described by <a href=\"https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderConfig\">OpenID Connect Core 1.0<\/a>. Fields are defined by the <a href=\"https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata\">OpenID Provider Metadata<\/a>."
               },
               "org.sagebionetworks.repo.model.project.StorageLocationSetting": {
                    "type": "object",
                    "properties": {
                         "concreteType": {"type": "string"},
                         "storageLocationId": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "uploadType": {"type": "string"},
                         "banner": {"type": "string"},
                         "description": {"type": "string"},
                         "etag": {"type": "string"},
                         "createdOn": {"type": "string"},
                         "createdBy": {
                              "type": "integer",
                              "format": "int32"
                         }
                    },
                    "description": "A storage location setting describes a location where files are uploaded to and downloaded from via Synapse. Storage location settings may be created for external locations, such as user-owned Amazon S3 buckets",
                    "oneOf": [
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.project.ProxyStorageLocationSettings"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.project.ExternalObjectStorageLocationSetting"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.project.S3StorageLocationSetting"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.project.ExternalGoogleCloudStorageLocationSetting"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.project.ExternalStorageLocationSetting"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.project.ExternalS3StorageLocationSetting"}
                    ],
                    "required": ["concreteType"],
                    "discriminator": {"propertyName": "concreteType"}
               },
               "org.sagebionetworks.repo.model.oauth.OAuthClient": {
                    "type": "object",
                    "properties": {
                         "client_id": {"type": "string"},
                         "client_name": {"type": "string"},
                         "redirect_uris": {
                              "type": "array",
                              "items": {"type": "string"},
                              "description": "Array of Redirection URI values used by the Client. One of these registered Redirection URI values MUST exactly match the redirect_uri parameter value used in each Authorization Request. If the 'sector_identifier_uri' is provided then the URIs in this list must be in the list of URIs in the JSON document referenced by the sector_identifier_uri."
                         },
                         "verified": {"type": "boolean"},
                         "client_uri": {"type": "string"},
                         "policy_uri": {"type": "string"},
                         "tos_uri": {"type": "string"},
                         "sector_identifier_uri": {"type": "string"},
                         "sector_identifier": {"type": "string"},
                         "userinfo_signed_response_alg": {"type": "string"},
                         "createdOn": {"type": "string"},
                         "modifiedOn": {"type": "string"},
                         "createdBy": {"type": "string"},
                         "etag": {"type": "string"}
                    },
                    "description": "OAuth 2.0 Client metadata described in <a href=\"https://openid.net/specs/openid-connect-registration-1_0.html#ClientMetadata\">OpenID Connect Core 1.0 Client Metadata<\/a>"
               },
               "org.sagebionetworks.repo.model.pets": {
                    "type": "string",
                    "enum": [
                         "CAT",
                         "DOG",
                         "FISH"
                    ]
               },
               "org.sagebionetworks.repo.model.UserBundle": {
                    "type": "object",
                    "properties": {
                         "userId": {"type": "string"},
                         "userProfile": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.UserProfile",
                              "description": "JSON schema for UserProfile POJO"
                         },
                         "ORCID": {"type": "string"},
                         "verificationSubmission": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.verification.VerificationSubmission",
                              "description": "User info submitted for verification by Synapse ACT"
                         },
                         "isCertified": {"type": "boolean"},
                         "isVerified": {"type": "boolean"},
                         "isACTMember": {"type": "boolean"},
                         "isARReviewer": {"type": "boolean"}
                    },
                    "description": "JSON schema for UserProfile POJO"
               },
               "org.sagebionetworks.repo.model.BaseError": {
                    "type": "object",
                    "properties": {"concreteType": {"type": "string"}},
                    "description": "Base interface for API errors.",
                    "oneOf": [
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.ErrorResponse"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.drs.DrsErrorResponse"}
                    ],
                    "required": ["concreteType"],
                    "discriminator": {"propertyName": "concreteType"}
               },
               "org.sagebionetworks.repo.model.migration.BackupTypeRangeRequest": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.migration.BackupTypeRangeRequest"]
                         },
                         "migrationType": {"type": "string"},
                         "aliasType": {"type": "string"},
                         "batchSize": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "minimumId": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "maximumId": {
                              "type": "integer",
                              "format": "int32"
                         }
                    },
                    "description": "Request to create a migration backup for a given MigrationType using a range of Ids.",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.table.DatasetCollection": {
                    "type": "object",
                    "properties": {
                         "name": {"type": "string"},
                         "description": {"type": "string"},
                         "id": {"type": "string"},
                         "etag": {"type": "string"},
                         "createdOn": {"type": "string"},
                         "modifiedOn": {"type": "string"},
                         "createdBy": {"type": "string"},
                         "modifiedBy": {"type": "string"},
                         "parentId": {"type": "string"},
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.table.DatasetCollection"]
                         },
                         "versionNumber": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "versionLabel": {"type": "string"},
                         "versionComment": {"type": "string"},
                         "isLatestVersion": {"type": "boolean"},
                         "columnIds": {
                              "type": "array",
                              "items": {"type": "string"},
                              "description": "The list of ColumnModel IDs that define the schema of the object."
                         },
                         "isSearchEnabled": {"type": "boolean"},
                         "items": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.EntityRef",
                                   "description": "Represents a reference to the id and version of an entity to be used in collections."
                              },
                              "description": "The flat list of dataset entity references that define this collection.  Limit: 30K items."
                         }
                    },
                    "description": "A dataset collection is a type of view defined by a flat list of datasets.",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.dataaccess.ResearchProject": {
                    "type": "object",
                    "properties": {
                         "id": {"type": "string"},
                         "accessRequirementId": {"type": "string"},
                         "institution": {"type": "string"},
                         "projectLead": {"type": "string"},
                         "intendedDataUseStatement": {"type": "string"},
                         "createdOn": {"type": "string"},
                         "modifiedOn": {"type": "string"},
                         "createdBy": {"type": "string"},
                         "modifiedBy": {"type": "string"},
                         "etag": {"type": "string"}
                    },
                    "description": "A research project describes a project at an institution that used a controlled data set for the purposes that are stated in the Intended Data Use Statement."
               },
               "org.sagebionetworks.repo.model.dataaccess.ManagedACTAccessRequirementStatus": {
                    "type": "object",
                    "properties": {
                         "accessRequirementId": {"type": "string"},
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.dataaccess.ManagedACTAccessRequirementStatus"]
                         },
                         "isApproved": {"type": "boolean"},
                         "expiredOn": {"type": "string"},
                         "currentSubmissionStatus": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.dataaccess.SubmissionStatus",
                              "description": "The status of a Submission."
                         }
                    },
                    "description": "The status of a user meeting an ACTAccessRequirement.",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.EntityHeader": {
                    "type": "object",
                    "properties": {
                         "name": {"type": "string"},
                         "id": {"type": "string"},
                         "type": {"type": "string"},
                         "versionNumber": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "versionLabel": {"type": "string"},
                         "isLatestVersion": {"type": "boolean"},
                         "benefactorId": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "createdOn": {"type": "string"},
                         "modifiedOn": {"type": "string"},
                         "createdBy": {"type": "string"},
                         "modifiedBy": {"type": "string"}
                    },
                    "description": "JSON schema for EntityHeader POJO"
               },
               "org.sagebionetworks.repo.model.project.StsStorageLocationSetting": {
                    "type": "object",
                    "properties": {
                         "concreteType": {"type": "string"},
                         "storageLocationId": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "uploadType": {"type": "string"},
                         "banner": {"type": "string"},
                         "description": {"type": "string"},
                         "etag": {"type": "string"},
                         "createdOn": {"type": "string"},
                         "createdBy": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "baseKey": {"type": "string"},
                         "stsEnabled": {"type": "boolean"}
                    },
                    "description": "An StsStorageLocation provides settings to enable Synapse to call AWS Security Token Service (STS) to get temporary AWS credentials",
                    "oneOf": [
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.project.S3StorageLocationSetting"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.project.ExternalS3StorageLocationSetting"}
                    ],
                    "required": ["concreteType"],
                    "discriminator": {"propertyName": "concreteType"}
               },
               "org.sagebionetworks.repo.model.table.FacetColumnResultRange": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.table.FacetColumnResultRange"]
                         },
                         "columnName": {"type": "string"},
                         "facetType": {"type": "string"},
                         "jsonPath": {"type": "string"},
                         "columnMin": {"type": "string"},
                         "columnMax": {"type": "string"},
                         "selectedMin": {"type": "string"},
                         "selectedMax": {"type": "string"}
                    },
                    "description": "Includes the minimum and maximum values of a range facet column and selected ranges applied to the filter.",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.file.DownloadOrderSummary": {
                    "type": "object",
                    "properties": {
                         "orderId": {"type": "string"},
                         "createdBy": {"type": "string"},
                         "createdOn": {"type": "string"},
                         "zipFileName": {"type": "string"},
                         "totalSizeBytes": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "totalNumberOfFiles": {
                              "type": "integer",
                              "format": "int32"
                         }
                    },
                    "description": "Summary of files included in a download order."
               },
               "org.sagebionetworks.repo.model.ProjectHeaderList": {
                    "type": "object",
                    "properties": {
                         "results": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.ProjectHeader",
                                   "description": "JSON schema for ProjectHeader"
                              }
                         },
                         "nextPageToken": {"type": "string"}
                    },
                    "description": "List of project headers"
               },
               "org.sagebionetworks.repo.model.auth.TwoFactorAuthErrorResponse": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.auth.TwoFactorAuthErrorResponse"]
                         },
                         "userId": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "twoFaToken": {"type": "string"},
                         "reason": {"type": "string"},
                         "errorCode": {"type": "string"}
                    },
                    "description": "JSON schema for an errors related to two factor authentication",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.dataaccess.CreateSubmissionRequest": {
                    "type": "object",
                    "properties": {
                         "requestId": {"type": "string"},
                         "requestEtag": {"type": "string"},
                         "subjectId": {"type": "string"},
                         "subjectType": {"type": "string"}
                    },
                    "description": "A request to create a Submission."
               },
               "org.sagebionetworks.repo.model.LockAccessRequirement": {
                    "type": "object",
                    "properties": {
                         "versionNumber": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "id": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "description": {"type": "string"},
                         "name": {"type": "string"},
                         "etag": {"type": "string"},
                         "createdOn": {"type": "string"},
                         "modifiedOn": {"type": "string"},
                         "createdBy": {"type": "string"},
                         "modifiedBy": {"type": "string"},
                         "subjectsDefinedByAnnotations": {"type": "boolean"},
                         "subjectIds": {
                              "type": "array",
                              "items": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.RestrictableObjectDescriptor"},
                              "description": "The IDs of the items controlled by this Access Requirement when 'subjectsDefinedByAnnotations=false'. This property is mutually exclusive with 'subjectsDefinedByAnnotations'.  When 'subjectsDefinedByAnnotations=true' then this property must be empty or excluded.  Required when creating or updating and 'subjectsDefinedByAnnotations=false' or 'subjectsDefinedByAnnotations' is excluded."
                         },
                         "accessType": {"type": "string"},
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.LockAccessRequirement"]
                         },
                         "jiraKey": {"type": "string"}
                    },
                    "description": "JSON schema for Lock Access Requirement, used to lock down the entity while waiting for ACT to review.",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.MembershipInvtnSignedToken": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.MembershipInvtnSignedToken"]
                         },
                         "hmac": {"type": "string"},
                         "version": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "expiresOn": {"type": "string"},
                         "createdOn": {"type": "string"},
                         "membershipInvitationId": {"type": "string"}
                    },
                    "description": "Signed token containing the information needed to retrieve a membership invitation.",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.agent.AgentSession": {
                    "type": "object",
                    "properties": {
                         "sessionId": {"type": "string"},
                         "agentAccessLevel": {"type": "string"},
                         "startedOn": {"type": "string"},
                         "startedBy": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "modifiedOn": {"type": "string"},
                         "agentId": {"type": "string"},
                         "etag": {"type": "string"}
                    },
                    "description": "Information about a specific session (conversation) with an agent.  Only the acess level can be changed on an existing session.  You will need to start a new session if you wish to use a different agentId."
               },
               "org.sagebionetworks.repo.model.quiz.MultichoiceAnswer": {
                    "type": "object",
                    "properties": {
                         "answerIndex": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "prompt": {"type": "string"},
                         "isCorrect": {"type": "boolean"}
                    },
                    "description": "One of the multiple choices in a multiple choice question"
               },
               "org.sagebionetworks.repo.model.quiz.QuizResponse": {
                    "type": "object",
                    "properties": {
                         "id": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "quizId": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "createdBy": {"type": "string"},
                         "createdOn": {"type": "string"},
                         "questionResponses": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.quiz.QuestionResponse",
                                   "description": "The response to a question"
                              },
                              "description": "The list of responses to the questions in the Quiz"
                         }
                    },
                    "description": "The set of responses to a Quiz"
               },
               "org.sagebionetworks.repo.model.entity.Direction": {
                    "type": "string",
                    "enum": [
                         "ASC",
                         "DESC"
                    ]
               },
               "org.sagebionetworks.repo.model.EnvironmentDescriptor": {
                    "type": "object",
                    "properties": {
                         "type": {"type": "string"},
                         "name": {"type": "string"},
                         "quantifier": {"type": "string"}
                    },
                    "description": "JSON schema for environment descriptor POJO"
               },
               "org.sagebionetworks.repo.model.oauth.JsonWebKey": {
                    "type": "object",
                    "properties": {
                         "kid": {"type": "string"},
                         "kty": {"type": "string"},
                         "use": {"type": "string"},
                         "concreteType": {"type": "string"}
                    },
                    "description": "Public key used to verify JSON Web Token signatures",
                    "oneOf": [{"$ref": "#/components/schemas/org.sagebionetworks.repo.model.oauth.JsonWebKeyRSA"}],
                    "required": ["concreteType"],
                    "discriminator": {"propertyName": "concreteType"}
               },
               "org.sagebionetworks.repo.model.entity.query.SortDirection": {
                    "type": "string",
                    "enum": [
                         "ASC",
                         "DESC"
                    ]
               },
               "ListWrapperOfTeam": {
                    "type": "object",
                    "properties": {"list": {
                         "type": "array",
                         "items": {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.Team"}
                    }}
               },
               "org.sagebionetworks.repo.model.Reference": {
                    "type": "object",
                    "properties": {
                         "targetId": {"type": "string"},
                         "targetVersionNumber": {
                              "type": "integer",
                              "format": "int32"
                         }
                    },
                    "description": "JSON schema for Reference POJO"
               },
               "org.sagebionetworks.repo.model.auth.AuthenticatedOn": {
                    "type": "object",
                    "properties": {"authenticatedOn": {"type": "string"}},
                    "description": "The date/time on which the user was authenticated"
               },
               "org.sagebionetworks.repo.model.dataaccess.RequestInterface": {
                    "type": "object",
                    "properties": {
                         "id": {"type": "string"},
                         "accessRequirementId": {"type": "string"},
                         "researchProjectId": {"type": "string"},
                         "createdOn": {"type": "string"},
                         "modifiedOn": {"type": "string"},
                         "createdBy": {"type": "string"},
                         "modifiedBy": {"type": "string"},
                         "ducFileHandleId": {"type": "string"},
                         "irbFileHandleId": {"type": "string"},
                         "attachments": {
                              "type": "array",
                              "items": {"type": "string"},
                              "description": "The set of file handle ID of attached files to this request."
                         },
                         "accessorChanges": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.dataaccess.AccessorChange",
                                   "description": "Request for a single user change access to a resource."
                              },
                              "description": "List of user changes. A user can gain access, renew access or have access revoked."
                         },
                         "etag": {"type": "string"},
                         "concreteType": {"type": "string"}
                    },
                    "description": "This is the base interface that all Request implements.",
                    "oneOf": [
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.dataaccess.Request"},
                         {"$ref": "#/components/schemas/org.sagebionetworks.repo.model.dataaccess.Renewal"}
                    ],
                    "required": ["concreteType"],
                    "discriminator": {"propertyName": "concreteType"}
               },
               "org.sagebionetworks.repo.model.OAuthErrorResponse": {
                    "type": "object",
                    "properties": {
                         "error": {"type": "string"},
                         "error_description": {"type": "string"},
                         "errorCode": {"type": "string"},
                         "reason": {"type": "string"}
                    },
                    "description": "JSON schema for an error returned by Synapse OAuth 2.0 Services. Used to align error messages with <a href=\"https://tools.ietf.org/html/rfc6749#section-5.2\">RFC 6749 Section 5.2<\/a>"
               },
               "org.sagebionetworks.repo.model.file.ExternalS3UploadDestination": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.file.ExternalS3UploadDestination"]
                         },
                         "storageLocationId": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "uploadType": {"type": "string"},
                         "banner": {"type": "string"},
                         "baseKey": {"type": "string"},
                         "stsEnabled": {"type": "boolean"},
                         "endpointUrl": {"type": "string"},
                         "bucket": {"type": "string"}
                    },
                    "description": "This upload destination contains information to start an upload to an external external S3 bucket connected with Synapse. The destination is mapped from an <a href=\"${org.sagebionetworks.repo.model.project.ExternalS3StorageLocationSetting}\">ExternalS3StorageLocationSetting<\/a>.",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.evaluation.model.EvaluationRoundLimit": {
                    "type": "object",
                    "properties": {
                         "limitType": {"type": "string"},
                         "maximumSubmissions": {
                              "type": "integer",
                              "format": "int32"
                         }
                    },
                    "description": "Sets limits for maximum submissions in a SubmissionRound. Each limitType may only appear once in an EvaluationRound's list of limits",
                    "required": [
                         "limitType",
                         "maximumSubmissions"
                    ]
               },
               "org.sagebionetworks.repo.model.auth.NewUserSignedToken": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.auth.NewUserSignedToken"]
                         },
                         "hmac": {"type": "string"},
                         "version": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "expiresOn": {"type": "string"},
                         "createdOn": {"type": "string"},
                         "email": {"type": "string"},
                         "firstName": {"type": "string"},
                         "lastName": {"type": "string"}
                    },
                    "description": "Signed token containing the information for a new user.",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.dataaccess.SubmissionSortField": {
                    "type": "string",
                    "enum": [
                         "MODIFIED_ON",
                         "CREATED_ON"
                    ]
               },
               "org.sagebionetworks.repo.model.migration.DatasetBackfillRequest": {
                    "type": "object",
                    "properties": {"concreteType": {
                         "type": "string",
                         "enum": ["org.sagebionetworks.repo.model.migration.DatasetBackfillRequest"]
                    }},
                    "description": "Dataset back filling of checksum, size and count request.",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.docker.RegistryEventAction": {
                    "type": "string",
                    "enum": [
                         "push",
                         "pull",
                         "mount"
                    ]
               },
               "org.sagebionetworks.repo.model.UserProfile": {
                    "type": "object",
                    "properties": {
                         "ownerId": {"type": "string"},
                         "etag": {"type": "string"},
                         "firstName": {"type": "string"},
                         "lastName": {"type": "string"},
                         "email": {"type": "string"},
                         "emails": {
                              "type": "array",
                              "items": {"type": "string"},
                              "description": "The list of user email addresses registered to this user."
                         },
                         "openIds": {
                              "type": "array",
                              "items": {"type": "string"},
                              "description": "The list of OpenIds bound to this user's account."
                         },
                         "userName": {"type": "string"},
                         "displayName": {"type": "string"},
                         "rStudioUrl": {"type": "string"},
                         "summary": {"type": "string"},
                         "position": {"type": "string"},
                         "location": {"type": "string"},
                         "industry": {"type": "string"},
                         "company": {"type": "string"},
                         "profilePicureFileHandleId": {"type": "string"},
                         "url": {"type": "string"},
                         "teamName": {"type": "string"},
                         "notificationSettings": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.message.Settings",
                              "description": "Contains a user's notification settings"
                         },
                         "preferences": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.UserPreference",
                                   "description": "User preferences"
                              },
                              "uniqueItems": true
                         },
                         "createdOn": {"type": "string"},
                         "twoFactorAuthEnabled": {"type": "boolean"}
                    },
                    "description": "JSON schema for UserProfile POJO"
               },
               "org.sagebionetworks.repo.model.migration.BatchChecksumResponse": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.migration.BatchChecksumResponse"]
                         },
                         "migrationType": {"type": "string"},
                         "cheksums": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.repo.model.migration.RangeChecksum",
                                   "description": "The calculated checksum for a single batch of rows."
                              }
                         }
                    },
                    "description": "Response of a BatchChecksumRequest",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.ApprovalState": {
                    "type": "string",
                    "enum": [
                         "APPROVED",
                         "REVOKED"
                    ]
               },
               "org.sagebionetworks.repo.model.file.FileHandleAssociationList": {
                    "type": "object",
                    "properties": {"list": {
                         "type": "array",
                         "items": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.file.FileHandleAssociation",
                              "description": "Describes an association of a FileHandle with another object."
                         }
                    }},
                    "description": "List of FileHandleAssociation."
               },
               "org.sagebionetworks.repo.model.file.PartPresignedUrl": {
                    "type": "object",
                    "properties": {
                         "partNumber": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "uploadPresignedUrl": {"type": "string"},
                         "signedHeaders": {
                              "type": "object",
                              "description": "A key/value pair map of additional headers that must be included in the PUT request for the request to succeed.",
                              "additionalProperties": {"type": "string"}
                         }
                    },
                    "description": "A single pre-signed URL for uploading or coping a part of a multi-part request. Note that the headers in the signedHeaders property must be included in the PUT request that is sent to the pre-signed URL. In the case of a multipart copy, when sending the PUT request to the pre-signed URL the body of the request needs to be empty."
               },
               "org.sagebionetworks.evaluation.model.Submission": {
                    "type": "object",
                    "properties": {
                         "id": {"type": "string"},
                         "userId": {"type": "string"},
                         "submitterAlias": {"type": "string"},
                         "evaluationId": {"type": "string"},
                         "evaluationRoundId": {"type": "string"},
                         "entityId": {"type": "string"},
                         "entityBundleJSON": {"type": "string"},
                         "versionNumber": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "dockerRepositoryName": {"type": "string"},
                         "dockerDigest": {"type": "string"},
                         "name": {"type": "string"},
                         "createdOn": {"type": "string"},
                         "teamId": {"type": "string"},
                         "contributors": {
                              "type": "array",
                              "items": {
                                   "$ref": "#/components/schemas/org.sagebionetworks.evaluation.model.SubmissionContributor",
                                   "description": "A contributor to an evaluation Submission"
                              },
                              "description": "User ids of the submitter and (if a team submission) the team members involved in creating the submission.",
                              "uniqueItems": true
                         }
                    },
                    "description": "A Submission to a Synapse Evaluation is a pointer to a versioned Entity. Submissions are immutable, so we archive a copy of the EntityBundle at the time of submission."
               },
               "org.sagebionetworks.repo.model.file.S3FileHandle": {
                    "type": "object",
                    "properties": {
                         "id": {"type": "string"},
                         "etag": {"type": "string"},
                         "createdBy": {"type": "string"},
                         "createdOn": {"type": "string"},
                         "modifiedOn": {"type": "string"},
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.file.S3FileHandle"]
                         },
                         "contentType": {"type": "string"},
                         "contentMd5": {"type": "string"},
                         "fileName": {"type": "string"},
                         "storageLocationId": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "contentSize": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "status": {"type": "string"},
                         "bucketName": {"type": "string"},
                         "key": {"type": "string"},
                         "previewId": {"type": "string"},
                         "isPreview": {"type": "boolean"}
                    },
                    "description": "An S3FileHandle represents a file stored in AWS S3.",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.discussion.DiscussionSearchRequest": {
                    "type": "object",
                    "properties": {
                         "searchString": {"type": "string"},
                         "nextPageToken": {"type": "string"}
                    },
                    "description": "A request to perform a full text search in a discussion forum"
               },
               "org.sagebionetworks.repo.model.file.FileResult": {
                    "type": "object",
                    "properties": {
                         "fileHandleId": {"type": "string"},
                         "fileHandle": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.file.FileHandle",
                              "description": "The FileHandle interface defines all of the fields that are common to all implementations."
                         },
                         "preSignedURL": {"type": "string"},
                         "previewPreSignedURL": {"type": "string"},
                         "failureCode": {"type": "string"}
                    },
                    "description": "Result of a single File request."
               },
               "org.sagebionetworks.repo.model.drs.OrganizationInformation": {
                    "type": "object",
                    "properties": {
                         "name": {"type": "string"},
                         "url": {"type": "string"}
                    },
                    "description": "The information of the organization, which provides DRS API implementation."
               },
               "org.sagebionetworks.repo.model.table.QueryNextPageToken": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.table.QueryNextPageToken"]
                         },
                         "entityId": {"type": "string"},
                         "token": {"type": "string"}
                    },
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.statistics.ObjectStatisticsResponse": {
                    "type": "object",
                    "properties": {
                         "objectId": {"type": "string"},
                         "concreteType": {"type": "string"}
                    },
                    "description": "Common response type containing the statistics computed for a specific object",
                    "oneOf": [{"$ref": "#/components/schemas/org.sagebionetworks.repo.model.statistics.ProjectFilesStatisticsResponse"}],
                    "required": ["concreteType"],
                    "discriminator": {"propertyName": "concreteType"}
               },
               "org.sagebionetworks.repo.model.table.PaginatedRowSet": {
                    "type": "object",
                    "properties": {
                         "results": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.table.RowSet",
                              "description": "Represents a set of row of a TableEntity"
                         },
                         "totalNumberOfResults": {
                              "type": "integer",
                              "format": "int32"
                         }
                    },
                    "description": "Paginated results of a RowSet"
               },
               "org.sagebionetworks.repo.model.Challenge": {
                    "type": "object",
                    "properties": {
                         "id": {"type": "string"},
                         "etag": {"type": "string"},
                         "projectId": {"type": "string"},
                         "participantTeamId": {"type": "string"}
                    },
                    "description": "Settings for a Challenge Project."
               },
               "org.sagebionetworks.repo.model.dataaccess.AccessRequirementSortField": {
                    "type": "string",
                    "enum": [
                         "CREATED_ON",
                         "NAME",
                         "CONCRETE_TYPE"
                    ]
               },
               "org.sagebionetworks.repo.model.principal.NotificationEmail": {
                    "type": "object",
                    "properties": {
                         "email": {"type": "string"},
                         "quarantineStatus": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.principal.EmailQuarantineStatus",
                              "description": "Information about the quarantine status of a notification email"
                         }
                    },
                    "description": "Information about the notification email of the user, including its quarantined status if the email address is currently in quarantine"
               },
               "org.sagebionetworks.repo.model.file.S3UploadDestination": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.file.S3UploadDestination"]
                         },
                         "storageLocationId": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "uploadType": {"type": "string"},
                         "banner": {"type": "string"},
                         "baseKey": {"type": "string"},
                         "stsEnabled": {"type": "boolean"}
                    },
                    "description": "The upload destination contains information to start an upload to the default Synapse storage location that exists on Amazon S3. This destination is mapped from an <a href=\"${org.sagebionetworks.repo.model.project.S3StorageLocationSetting}\">S3StorageLocationSetting<\/a>.",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.table.UploadToTableResult": {
                    "type": "object",
                    "properties": {
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.table.UploadToTableResult"]
                         },
                         "rowsProcessed": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "etag": {"type": "string"}
                    },
                    "description": "The result of a CSV table upload job.",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.auth.ChangePasswordWithTwoFactorAuthToken": {
                    "type": "object",
                    "properties": {
                         "newPassword": {"type": "string"},
                         "concreteType": {
                              "type": "string",
                              "enum": ["org.sagebionetworks.repo.model.auth.ChangePasswordWithTwoFactorAuthToken"]
                         },
                         "userId": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "twoFaToken": {"type": "string"},
                         "otpCode": {"type": "string"},
                         "otpType": {"type": "string"}
                    },
                    "description": "Used to change the user password when two factor authentication is enabled. The twoFaToken is generated by the server and included in the 401 response the user tries to update the password with either the old password or a token. Only TOTP and RECOVERY_CODE otp codes can be used for this operation.",
                    "required": ["concreteType"]
               },
               "org.sagebionetworks.repo.model.download.AddBatchOfFilesToDownloadListRequest": {
                    "type": "object",
                    "properties": {"batchToAdd": {
                         "type": "array",
                         "items": {
                              "$ref": "#/components/schemas/org.sagebionetworks.repo.model.download.DownloadListItem",
                              "description": "A single item for a user's download list."
                         },
                         "description": "The batch of files to add to the user's download list. Note: There is a limit of 1000 files per batch."
                    }},
                    "description": "Request to add a single batch of files to a user's download list."
               },
               "org.sagebionetworks.repo.model.table.IdRange": {
                    "type": "object",
                    "properties": {
                         "minimumId": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "maximumId": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "versionNumber": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "maximumUpdateId": {
                              "type": "integer",
                              "format": "int32"
                         },
                         "etag": {"type": "string"}
                    },
                    "description": "Represents a range of IDs"
               }
          },
          "securitySchemes": {"bearerAuth": {
               "type": "http",
               "scheme": "bearer"
          }}
     }
}