/*
 * OpenChallenges REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.sagebionetworks.openchallenges.api.client.model;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Arrays;
import java.util.List;
import java.util.NoSuchElementException;
import java.util.Objects;
import org.openapitools.jackson.nullable.JsonNullable;
import org.openapitools.jackson.nullable.JsonNullable;
import org.sagebionetworks.openchallenges.api.client.model.ChallengePlatformDirection;
import org.sagebionetworks.openchallenges.api.client.model.ChallengePlatformSort;

/**
 * A challenge platform search query.
 */
@JsonPropertyOrder(
  {
    ChallengePlatformSearchQuery.JSON_PROPERTY_PAGE_NUMBER,
    ChallengePlatformSearchQuery.JSON_PROPERTY_PAGE_SIZE,
    ChallengePlatformSearchQuery.JSON_PROPERTY_SORT,
    ChallengePlatformSearchQuery.JSON_PROPERTY_DIRECTION,
    ChallengePlatformSearchQuery.JSON_PROPERTY_SLUGS,
    ChallengePlatformSearchQuery.JSON_PROPERTY_SEARCH_TERMS,
  }
)
@jakarta.annotation.Generated(
  value = "org.openapitools.codegen.languages.JavaClientCodegen",
  comments = "Generator version: 7.13.0"
)
public class ChallengePlatformSearchQuery {

  public static final String JSON_PROPERTY_PAGE_NUMBER = "pageNumber";

  @jakarta.annotation.Nullable
  private Integer pageNumber = 0;

  public static final String JSON_PROPERTY_PAGE_SIZE = "pageSize";

  @jakarta.annotation.Nullable
  private Integer pageSize = 100;

  public static final String JSON_PROPERTY_SORT = "sort";

  @jakarta.annotation.Nullable
  private ChallengePlatformSort sort = ChallengePlatformSort.RELEVANCE;

  public static final String JSON_PROPERTY_DIRECTION = "direction";

  @jakarta.annotation.Nullable
  private JsonNullable<ChallengePlatformDirection> direction = JsonNullable.<
    ChallengePlatformDirection
  >undefined();

  public static final String JSON_PROPERTY_SLUGS = "slugs";

  @jakarta.annotation.Nullable
  private List<String> slugs = new ArrayList<>();

  public static final String JSON_PROPERTY_SEARCH_TERMS = "searchTerms";

  @jakarta.annotation.Nullable
  private String searchTerms;

  public ChallengePlatformSearchQuery() {}

  public ChallengePlatformSearchQuery pageNumber(@jakarta.annotation.Nullable Integer pageNumber) {
    this.pageNumber = pageNumber;
    return this;
  }

  /**
   * The page number.
   * minimum: 0
   * @return pageNumber
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PAGE_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Integer getPageNumber() {
    return pageNumber;
  }

  @JsonProperty(JSON_PROPERTY_PAGE_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPageNumber(@jakarta.annotation.Nullable Integer pageNumber) {
    this.pageNumber = pageNumber;
  }

  public ChallengePlatformSearchQuery pageSize(@jakarta.annotation.Nullable Integer pageSize) {
    this.pageSize = pageSize;
    return this;
  }

  /**
   * The number of items in a single page.
   * minimum: 1
   * @return pageSize
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PAGE_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Integer getPageSize() {
    return pageSize;
  }

  @JsonProperty(JSON_PROPERTY_PAGE_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPageSize(@jakarta.annotation.Nullable Integer pageSize) {
    this.pageSize = pageSize;
  }

  public ChallengePlatformSearchQuery sort(
    @jakarta.annotation.Nullable ChallengePlatformSort sort
  ) {
    this.sort = sort;
    return this;
  }

  /**
   * Get sort
   * @return sort
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SORT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public ChallengePlatformSort getSort() {
    return sort;
  }

  @JsonProperty(JSON_PROPERTY_SORT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSort(@jakarta.annotation.Nullable ChallengePlatformSort sort) {
    this.sort = sort;
  }

  public ChallengePlatformSearchQuery direction(
    @jakarta.annotation.Nullable ChallengePlatformDirection direction
  ) {
    this.direction = JsonNullable.<ChallengePlatformDirection>of(direction);

    return this;
  }

  /**
   * Get direction
   * @return direction
   */
  @jakarta.annotation.Nullable
  @JsonIgnore
  public ChallengePlatformDirection getDirection() {
    return direction.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DIRECTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public JsonNullable<ChallengePlatformDirection> getDirection_JsonNullable() {
    return direction;
  }

  @JsonProperty(JSON_PROPERTY_DIRECTION)
  public void setDirection_JsonNullable(JsonNullable<ChallengePlatformDirection> direction) {
    this.direction = direction;
  }

  public void setDirection(@jakarta.annotation.Nullable ChallengePlatformDirection direction) {
    this.direction = JsonNullable.<ChallengePlatformDirection>of(direction);
  }

  public ChallengePlatformSearchQuery slugs(@jakarta.annotation.Nullable List<String> slugs) {
    this.slugs = slugs;
    return this;
  }

  public ChallengePlatformSearchQuery addSlugsItem(String slugsItem) {
    if (this.slugs == null) {
      this.slugs = new ArrayList<>();
    }
    this.slugs.add(slugsItem);
    return this;
  }

  /**
   * An array of challenge platform slugs used to filter the results.
   * @return slugs
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SLUGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<String> getSlugs() {
    return slugs;
  }

  @JsonProperty(JSON_PROPERTY_SLUGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSlugs(@jakarta.annotation.Nullable List<String> slugs) {
    this.slugs = slugs;
  }

  public ChallengePlatformSearchQuery searchTerms(@jakarta.annotation.Nullable String searchTerms) {
    this.searchTerms = searchTerms;
    return this;
  }

  /**
   * A string of search terms used to filter the results.
   * @return searchTerms
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SEARCH_TERMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getSearchTerms() {
    return searchTerms;
  }

  @JsonProperty(JSON_PROPERTY_SEARCH_TERMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSearchTerms(@jakarta.annotation.Nullable String searchTerms) {
    this.searchTerms = searchTerms;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ChallengePlatformSearchQuery challengePlatformSearchQuery = (ChallengePlatformSearchQuery) o;
    return (
      Objects.equals(this.pageNumber, challengePlatformSearchQuery.pageNumber) &&
      Objects.equals(this.pageSize, challengePlatformSearchQuery.pageSize) &&
      Objects.equals(this.sort, challengePlatformSearchQuery.sort) &&
      equalsNullable(this.direction, challengePlatformSearchQuery.direction) &&
      Objects.equals(this.slugs, challengePlatformSearchQuery.slugs) &&
      Objects.equals(this.searchTerms, challengePlatformSearchQuery.searchTerms)
    );
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return (
      a == b ||
      (a != null &&
        b != null &&
        a.isPresent() &&
        b.isPresent() &&
        Objects.deepEquals(a.get(), b.get()))
    );
  }

  @Override
  public int hashCode() {
    return Objects.hash(
      pageNumber,
      pageSize,
      sort,
      hashCodeNullable(direction),
      slugs,
      searchTerms
    );
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[] { a.get() }) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ChallengePlatformSearchQuery {\n");
    sb.append("    pageNumber: ").append(toIndentedString(pageNumber)).append("\n");
    sb.append("    pageSize: ").append(toIndentedString(pageSize)).append("\n");
    sb.append("    sort: ").append(toIndentedString(sort)).append("\n");
    sb.append("    direction: ").append(toIndentedString(direction)).append("\n");
    sb.append("    slugs: ").append(toIndentedString(slugs)).append("\n");
    sb.append("    searchTerms: ").append(toIndentedString(searchTerms)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
