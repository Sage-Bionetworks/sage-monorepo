/*
 * OpenChallenges REST API
 * Discover, explore, and contribute to open biomedical challenges.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.sagebionetworks.openchallenges.api.client.model;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Arrays;
import java.util.List;
import java.util.NoSuchElementException;
import java.util.Objects;
import org.openapitools.jackson.nullable.JsonNullable;
import org.openapitools.jackson.nullable.JsonNullable;
import org.sagebionetworks.openchallenges.api.client.model.ChallengeCategory;
import org.sagebionetworks.openchallenges.api.client.model.ChallengeDirection;
import org.sagebionetworks.openchallenges.api.client.model.ChallengeIncentive;
import org.sagebionetworks.openchallenges.api.client.model.ChallengeSort;
import org.sagebionetworks.openchallenges.api.client.model.ChallengeStatus;
import org.sagebionetworks.openchallenges.api.client.model.ChallengeSubmissionType;

/**
 * A challenge search query.
 */
@JsonPropertyOrder(
  {
    ChallengeSearchQuery.JSON_PROPERTY_PAGE_NUMBER,
    ChallengeSearchQuery.JSON_PROPERTY_PAGE_SIZE,
    ChallengeSearchQuery.JSON_PROPERTY_SORT,
    ChallengeSearchQuery.JSON_PROPERTY_SORT_SEED,
    ChallengeSearchQuery.JSON_PROPERTY_DIRECTION,
    ChallengeSearchQuery.JSON_PROPERTY_INCENTIVES,
    ChallengeSearchQuery.JSON_PROPERTY_MIN_START_DATE,
    ChallengeSearchQuery.JSON_PROPERTY_MAX_START_DATE,
    ChallengeSearchQuery.JSON_PROPERTY_PLATFORMS,
    ChallengeSearchQuery.JSON_PROPERTY_ORGANIZATIONS,
    ChallengeSearchQuery.JSON_PROPERTY_STATUS,
    ChallengeSearchQuery.JSON_PROPERTY_SUBMISSION_TYPES,
    ChallengeSearchQuery.JSON_PROPERTY_INPUT_DATA_TYPES,
    ChallengeSearchQuery.JSON_PROPERTY_OPERATIONS,
    ChallengeSearchQuery.JSON_PROPERTY_CATEGORIES,
    ChallengeSearchQuery.JSON_PROPERTY_SEARCH_TERMS,
  }
)
@jakarta.annotation.Generated(
  value = "org.openapitools.codegen.languages.JavaClientCodegen",
  comments = "Generator version: 7.13.0"
)
public class ChallengeSearchQuery {

  public static final String JSON_PROPERTY_PAGE_NUMBER = "pageNumber";

  @jakarta.annotation.Nullable
  private Integer pageNumber = 0;

  public static final String JSON_PROPERTY_PAGE_SIZE = "pageSize";

  @jakarta.annotation.Nullable
  private Integer pageSize = 100;

  public static final String JSON_PROPERTY_SORT = "sort";

  @jakarta.annotation.Nullable
  private ChallengeSort sort = ChallengeSort.RELEVANCE;

  public static final String JSON_PROPERTY_SORT_SEED = "sortSeed";

  @jakarta.annotation.Nullable
  private JsonNullable<Integer> sortSeed = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_DIRECTION = "direction";

  @jakarta.annotation.Nullable
  private JsonNullable<ChallengeDirection> direction = JsonNullable.<ChallengeDirection>undefined();

  public static final String JSON_PROPERTY_INCENTIVES = "incentives";

  @jakarta.annotation.Nullable
  private List<ChallengeIncentive> incentives = new ArrayList<>();

  public static final String JSON_PROPERTY_MIN_START_DATE = "minStartDate";

  @jakarta.annotation.Nullable
  private JsonNullable<LocalDate> minStartDate = JsonNullable.<LocalDate>undefined();

  public static final String JSON_PROPERTY_MAX_START_DATE = "maxStartDate";

  @jakarta.annotation.Nullable
  private JsonNullable<LocalDate> maxStartDate = JsonNullable.<LocalDate>undefined();

  public static final String JSON_PROPERTY_PLATFORMS = "platforms";

  @jakarta.annotation.Nullable
  private List<String> platforms = new ArrayList<>();

  public static final String JSON_PROPERTY_ORGANIZATIONS = "organizations";

  @jakarta.annotation.Nullable
  private List<Long> organizations = new ArrayList<>();

  public static final String JSON_PROPERTY_STATUS = "status";

  @jakarta.annotation.Nullable
  private List<ChallengeStatus> status = new ArrayList<>();

  public static final String JSON_PROPERTY_SUBMISSION_TYPES = "submissionTypes";

  @jakarta.annotation.Nullable
  private List<ChallengeSubmissionType> submissionTypes = new ArrayList<>();

  public static final String JSON_PROPERTY_INPUT_DATA_TYPES = "inputDataTypes";

  @jakarta.annotation.Nullable
  private List<Long> inputDataTypes = new ArrayList<>();

  public static final String JSON_PROPERTY_OPERATIONS = "operations";

  @jakarta.annotation.Nullable
  private List<Long> operations = new ArrayList<>();

  public static final String JSON_PROPERTY_CATEGORIES = "categories";

  @jakarta.annotation.Nullable
  private List<ChallengeCategory> categories = new ArrayList<>();

  public static final String JSON_PROPERTY_SEARCH_TERMS = "searchTerms";

  @jakarta.annotation.Nullable
  private String searchTerms;

  public ChallengeSearchQuery() {}

  public ChallengeSearchQuery pageNumber(@jakarta.annotation.Nullable Integer pageNumber) {
    this.pageNumber = pageNumber;
    return this;
  }

  /**
   * The page number.
   * minimum: 0
   * @return pageNumber
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PAGE_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Integer getPageNumber() {
    return pageNumber;
  }

  @JsonProperty(JSON_PROPERTY_PAGE_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPageNumber(@jakarta.annotation.Nullable Integer pageNumber) {
    this.pageNumber = pageNumber;
  }

  public ChallengeSearchQuery pageSize(@jakarta.annotation.Nullable Integer pageSize) {
    this.pageSize = pageSize;
    return this;
  }

  /**
   * The number of items in a single page.
   * minimum: 1
   * @return pageSize
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PAGE_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Integer getPageSize() {
    return pageSize;
  }

  @JsonProperty(JSON_PROPERTY_PAGE_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPageSize(@jakarta.annotation.Nullable Integer pageSize) {
    this.pageSize = pageSize;
  }

  public ChallengeSearchQuery sort(@jakarta.annotation.Nullable ChallengeSort sort) {
    this.sort = sort;
    return this;
  }

  /**
   * Get sort
   * @return sort
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SORT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public ChallengeSort getSort() {
    return sort;
  }

  @JsonProperty(JSON_PROPERTY_SORT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSort(@jakarta.annotation.Nullable ChallengeSort sort) {
    this.sort = sort;
  }

  public ChallengeSearchQuery sortSeed(@jakarta.annotation.Nullable Integer sortSeed) {
    this.sortSeed = JsonNullable.<Integer>of(sortSeed);

    return this;
  }

  /**
   * The seed that initializes the random sorter.
   * minimum: 0
   * maximum: 2147483647
   * @return sortSeed
   */
  @jakarta.annotation.Nullable
  @JsonIgnore
  public Integer getSortSeed() {
    return sortSeed.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SORT_SEED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public JsonNullable<Integer> getSortSeed_JsonNullable() {
    return sortSeed;
  }

  @JsonProperty(JSON_PROPERTY_SORT_SEED)
  public void setSortSeed_JsonNullable(JsonNullable<Integer> sortSeed) {
    this.sortSeed = sortSeed;
  }

  public void setSortSeed(@jakarta.annotation.Nullable Integer sortSeed) {
    this.sortSeed = JsonNullable.<Integer>of(sortSeed);
  }

  public ChallengeSearchQuery direction(@jakarta.annotation.Nullable ChallengeDirection direction) {
    this.direction = JsonNullable.<ChallengeDirection>of(direction);

    return this;
  }

  /**
   * Get direction
   * @return direction
   */
  @jakarta.annotation.Nullable
  @JsonIgnore
  public ChallengeDirection getDirection() {
    return direction.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DIRECTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public JsonNullable<ChallengeDirection> getDirection_JsonNullable() {
    return direction;
  }

  @JsonProperty(JSON_PROPERTY_DIRECTION)
  public void setDirection_JsonNullable(JsonNullable<ChallengeDirection> direction) {
    this.direction = direction;
  }

  public void setDirection(@jakarta.annotation.Nullable ChallengeDirection direction) {
    this.direction = JsonNullable.<ChallengeDirection>of(direction);
  }

  public ChallengeSearchQuery incentives(
    @jakarta.annotation.Nullable List<ChallengeIncentive> incentives
  ) {
    this.incentives = incentives;
    return this;
  }

  public ChallengeSearchQuery addIncentivesItem(ChallengeIncentive incentivesItem) {
    if (this.incentives == null) {
      this.incentives = new ArrayList<>();
    }
    this.incentives.add(incentivesItem);
    return this;
  }

  /**
   * An array of challenge incentive types used to filter the results.
   * @return incentives
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INCENTIVES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<ChallengeIncentive> getIncentives() {
    return incentives;
  }

  @JsonProperty(JSON_PROPERTY_INCENTIVES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIncentives(@jakarta.annotation.Nullable List<ChallengeIncentive> incentives) {
    this.incentives = incentives;
  }

  public ChallengeSearchQuery minStartDate(@jakarta.annotation.Nullable LocalDate minStartDate) {
    this.minStartDate = JsonNullable.<LocalDate>of(minStartDate);

    return this;
  }

  /**
   * Keep the challenges that start at this date or later.
   * @return minStartDate
   */
  @jakarta.annotation.Nullable
  @JsonIgnore
  public LocalDate getMinStartDate() {
    return minStartDate.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MIN_START_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public JsonNullable<LocalDate> getMinStartDate_JsonNullable() {
    return minStartDate;
  }

  @JsonProperty(JSON_PROPERTY_MIN_START_DATE)
  public void setMinStartDate_JsonNullable(JsonNullable<LocalDate> minStartDate) {
    this.minStartDate = minStartDate;
  }

  public void setMinStartDate(@jakarta.annotation.Nullable LocalDate minStartDate) {
    this.minStartDate = JsonNullable.<LocalDate>of(minStartDate);
  }

  public ChallengeSearchQuery maxStartDate(@jakarta.annotation.Nullable LocalDate maxStartDate) {
    this.maxStartDate = JsonNullable.<LocalDate>of(maxStartDate);

    return this;
  }

  /**
   * Keep the challenges that start at this date or sooner.
   * @return maxStartDate
   */
  @jakarta.annotation.Nullable
  @JsonIgnore
  public LocalDate getMaxStartDate() {
    return maxStartDate.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MAX_START_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public JsonNullable<LocalDate> getMaxStartDate_JsonNullable() {
    return maxStartDate;
  }

  @JsonProperty(JSON_PROPERTY_MAX_START_DATE)
  public void setMaxStartDate_JsonNullable(JsonNullable<LocalDate> maxStartDate) {
    this.maxStartDate = maxStartDate;
  }

  public void setMaxStartDate(@jakarta.annotation.Nullable LocalDate maxStartDate) {
    this.maxStartDate = JsonNullable.<LocalDate>of(maxStartDate);
  }

  public ChallengeSearchQuery platforms(@jakarta.annotation.Nullable List<String> platforms) {
    this.platforms = platforms;
    return this;
  }

  public ChallengeSearchQuery addPlatformsItem(String platformsItem) {
    if (this.platforms == null) {
      this.platforms = new ArrayList<>();
    }
    this.platforms.add(platformsItem);
    return this;
  }

  /**
   * An array of challenge platform ids used to filter the results.
   * @return platforms
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PLATFORMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<String> getPlatforms() {
    return platforms;
  }

  @JsonProperty(JSON_PROPERTY_PLATFORMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPlatforms(@jakarta.annotation.Nullable List<String> platforms) {
    this.platforms = platforms;
  }

  public ChallengeSearchQuery organizations(@jakarta.annotation.Nullable List<Long> organizations) {
    this.organizations = organizations;
    return this;
  }

  public ChallengeSearchQuery addOrganizationsItem(Long organizationsItem) {
    if (this.organizations == null) {
      this.organizations = new ArrayList<>();
    }
    this.organizations.add(organizationsItem);
    return this;
  }

  /**
   * An array of organization ids used to filter the results.
   * @return organizations
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ORGANIZATIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<Long> getOrganizations() {
    return organizations;
  }

  @JsonProperty(JSON_PROPERTY_ORGANIZATIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOrganizations(@jakarta.annotation.Nullable List<Long> organizations) {
    this.organizations = organizations;
  }

  public ChallengeSearchQuery status(@jakarta.annotation.Nullable List<ChallengeStatus> status) {
    this.status = status;
    return this;
  }

  public ChallengeSearchQuery addStatusItem(ChallengeStatus statusItem) {
    if (this.status == null) {
      this.status = new ArrayList<>();
    }
    this.status.add(statusItem);
    return this;
  }

  /**
   * An array of challenge status used to filter the results.
   * @return status
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<ChallengeStatus> getStatus() {
    return status;
  }

  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatus(@jakarta.annotation.Nullable List<ChallengeStatus> status) {
    this.status = status;
  }

  public ChallengeSearchQuery submissionTypes(
    @jakarta.annotation.Nullable List<ChallengeSubmissionType> submissionTypes
  ) {
    this.submissionTypes = submissionTypes;
    return this;
  }

  public ChallengeSearchQuery addSubmissionTypesItem(ChallengeSubmissionType submissionTypesItem) {
    if (this.submissionTypes == null) {
      this.submissionTypes = new ArrayList<>();
    }
    this.submissionTypes.add(submissionTypesItem);
    return this;
  }

  /**
   * An array of challenge submission types used to filter the results.
   * @return submissionTypes
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUBMISSION_TYPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<ChallengeSubmissionType> getSubmissionTypes() {
    return submissionTypes;
  }

  @JsonProperty(JSON_PROPERTY_SUBMISSION_TYPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSubmissionTypes(
    @jakarta.annotation.Nullable List<ChallengeSubmissionType> submissionTypes
  ) {
    this.submissionTypes = submissionTypes;
  }

  public ChallengeSearchQuery inputDataTypes(
    @jakarta.annotation.Nullable List<Long> inputDataTypes
  ) {
    this.inputDataTypes = inputDataTypes;
    return this;
  }

  public ChallengeSearchQuery addInputDataTypesItem(Long inputDataTypesItem) {
    if (this.inputDataTypes == null) {
      this.inputDataTypes = new ArrayList<>();
    }
    this.inputDataTypes.add(inputDataTypesItem);
    return this;
  }

  /**
   * An array of EDAM concept ID used to filter the results.
   * @return inputDataTypes
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INPUT_DATA_TYPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<Long> getInputDataTypes() {
    return inputDataTypes;
  }

  @JsonProperty(JSON_PROPERTY_INPUT_DATA_TYPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInputDataTypes(@jakarta.annotation.Nullable List<Long> inputDataTypes) {
    this.inputDataTypes = inputDataTypes;
  }

  public ChallengeSearchQuery operations(@jakarta.annotation.Nullable List<Long> operations) {
    this.operations = operations;
    return this;
  }

  public ChallengeSearchQuery addOperationsItem(Long operationsItem) {
    if (this.operations == null) {
      this.operations = new ArrayList<>();
    }
    this.operations.add(operationsItem);
    return this;
  }

  /**
   * An array of EDAM concept ID used to filter the results.
   * @return operations
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OPERATIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<Long> getOperations() {
    return operations;
  }

  @JsonProperty(JSON_PROPERTY_OPERATIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOperations(@jakarta.annotation.Nullable List<Long> operations) {
    this.operations = operations;
  }

  public ChallengeSearchQuery categories(
    @jakarta.annotation.Nullable List<ChallengeCategory> categories
  ) {
    this.categories = categories;
    return this;
  }

  public ChallengeSearchQuery addCategoriesItem(ChallengeCategory categoriesItem) {
    if (this.categories == null) {
      this.categories = new ArrayList<>();
    }
    this.categories.add(categoriesItem);
    return this;
  }

  /**
   * The array of challenge categories used to filter the results.
   * @return categories
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CATEGORIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<ChallengeCategory> getCategories() {
    return categories;
  }

  @JsonProperty(JSON_PROPERTY_CATEGORIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCategories(@jakarta.annotation.Nullable List<ChallengeCategory> categories) {
    this.categories = categories;
  }

  public ChallengeSearchQuery searchTerms(@jakarta.annotation.Nullable String searchTerms) {
    this.searchTerms = searchTerms;
    return this;
  }

  /**
   * A string of search terms used to filter the results.
   * @return searchTerms
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SEARCH_TERMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getSearchTerms() {
    return searchTerms;
  }

  @JsonProperty(JSON_PROPERTY_SEARCH_TERMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSearchTerms(@jakarta.annotation.Nullable String searchTerms) {
    this.searchTerms = searchTerms;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ChallengeSearchQuery challengeSearchQuery = (ChallengeSearchQuery) o;
    return (
      Objects.equals(this.pageNumber, challengeSearchQuery.pageNumber) &&
      Objects.equals(this.pageSize, challengeSearchQuery.pageSize) &&
      Objects.equals(this.sort, challengeSearchQuery.sort) &&
      equalsNullable(this.sortSeed, challengeSearchQuery.sortSeed) &&
      equalsNullable(this.direction, challengeSearchQuery.direction) &&
      Objects.equals(this.incentives, challengeSearchQuery.incentives) &&
      equalsNullable(this.minStartDate, challengeSearchQuery.minStartDate) &&
      equalsNullable(this.maxStartDate, challengeSearchQuery.maxStartDate) &&
      Objects.equals(this.platforms, challengeSearchQuery.platforms) &&
      Objects.equals(this.organizations, challengeSearchQuery.organizations) &&
      Objects.equals(this.status, challengeSearchQuery.status) &&
      Objects.equals(this.submissionTypes, challengeSearchQuery.submissionTypes) &&
      Objects.equals(this.inputDataTypes, challengeSearchQuery.inputDataTypes) &&
      Objects.equals(this.operations, challengeSearchQuery.operations) &&
      Objects.equals(this.categories, challengeSearchQuery.categories) &&
      Objects.equals(this.searchTerms, challengeSearchQuery.searchTerms)
    );
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return (
      a == b ||
      (a != null &&
        b != null &&
        a.isPresent() &&
        b.isPresent() &&
        Objects.deepEquals(a.get(), b.get()))
    );
  }

  @Override
  public int hashCode() {
    return Objects.hash(
      pageNumber,
      pageSize,
      sort,
      hashCodeNullable(sortSeed),
      hashCodeNullable(direction),
      incentives,
      hashCodeNullable(minStartDate),
      hashCodeNullable(maxStartDate),
      platforms,
      organizations,
      status,
      submissionTypes,
      inputDataTypes,
      operations,
      categories,
      searchTerms
    );
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[] { a.get() }) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ChallengeSearchQuery {\n");
    sb.append("    pageNumber: ").append(toIndentedString(pageNumber)).append("\n");
    sb.append("    pageSize: ").append(toIndentedString(pageSize)).append("\n");
    sb.append("    sort: ").append(toIndentedString(sort)).append("\n");
    sb.append("    sortSeed: ").append(toIndentedString(sortSeed)).append("\n");
    sb.append("    direction: ").append(toIndentedString(direction)).append("\n");
    sb.append("    incentives: ").append(toIndentedString(incentives)).append("\n");
    sb.append("    minStartDate: ").append(toIndentedString(minStartDate)).append("\n");
    sb.append("    maxStartDate: ").append(toIndentedString(maxStartDate)).append("\n");
    sb.append("    platforms: ").append(toIndentedString(platforms)).append("\n");
    sb.append("    organizations: ").append(toIndentedString(organizations)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    submissionTypes: ").append(toIndentedString(submissionTypes)).append("\n");
    sb.append("    inputDataTypes: ").append(toIndentedString(inputDataTypes)).append("\n");
    sb.append("    operations: ").append(toIndentedString(operations)).append("\n");
    sb.append("    categories: ").append(toIndentedString(categories)).append("\n");
    sb.append("    searchTerms: ").append(toIndentedString(searchTerms)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
