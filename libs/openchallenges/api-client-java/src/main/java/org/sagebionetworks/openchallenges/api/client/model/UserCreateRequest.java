/*
 * OpenChallenges REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.sagebionetworks.openchallenges.api.client.model;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import java.util.NoSuchElementException;
import java.util.Objects;
import org.openapitools.jackson.nullable.JsonNullable;
import org.openapitools.jackson.nullable.JsonNullable;

/**
 * The information required to create a user account
 */
@JsonPropertyOrder(
  {
    UserCreateRequest.JSON_PROPERTY_LOGIN,
    UserCreateRequest.JSON_PROPERTY_EMAIL,
    UserCreateRequest.JSON_PROPERTY_PASSWORD,
    UserCreateRequest.JSON_PROPERTY_NAME,
    UserCreateRequest.JSON_PROPERTY_AVATAR_URL,
    UserCreateRequest.JSON_PROPERTY_BIO,
  }
)
@jakarta.annotation.Generated(
  value = "org.openapitools.codegen.languages.JavaClientCodegen",
  comments = "Generator version: 7.13.0"
)
public class UserCreateRequest {

  public static final String JSON_PROPERTY_LOGIN = "login";

  @jakarta.annotation.Nonnull
  private String login;

  public static final String JSON_PROPERTY_EMAIL = "email";

  @jakarta.annotation.Nonnull
  private String email;

  public static final String JSON_PROPERTY_PASSWORD = "password";

  @jakarta.annotation.Nonnull
  private String password;

  public static final String JSON_PROPERTY_NAME = "name";

  @jakarta.annotation.Nullable
  private JsonNullable<String> name = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_AVATAR_URL = "avatarUrl";

  @jakarta.annotation.Nullable
  private JsonNullable<String> avatarUrl = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_BIO = "bio";

  @jakarta.annotation.Nullable
  private JsonNullable<String> bio = JsonNullable.<String>undefined();

  public UserCreateRequest() {}

  public UserCreateRequest login(@jakarta.annotation.Nonnull String login) {
    this.login = login;
    return this;
  }

  /**
   * Get login
   * @return login
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_LOGIN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getLogin() {
    return login;
  }

  @JsonProperty(JSON_PROPERTY_LOGIN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLogin(@jakarta.annotation.Nonnull String login) {
    this.login = login;
  }

  public UserCreateRequest email(@jakarta.annotation.Nonnull String email) {
    this.email = email;
    return this;
  }

  /**
   * An email address.
   * @return email
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_EMAIL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getEmail() {
    return email;
  }

  @JsonProperty(JSON_PROPERTY_EMAIL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEmail(@jakarta.annotation.Nonnull String email) {
    this.email = email;
  }

  public UserCreateRequest password(@jakarta.annotation.Nonnull String password) {
    this.password = password;
    return this;
  }

  /**
   * Get password
   * @return password
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PASSWORD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getPassword() {
    return password;
  }

  @JsonProperty(JSON_PROPERTY_PASSWORD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPassword(@jakarta.annotation.Nonnull String password) {
    this.password = password;
  }

  public UserCreateRequest name(@jakarta.annotation.Nullable String name) {
    this.name = JsonNullable.<String>of(name);

    return this;
  }

  /**
   * Get name
   * @return name
   */
  @jakarta.annotation.Nullable
  @JsonIgnore
  public String getName() {
    return name.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public JsonNullable<String> getName_JsonNullable() {
    return name;
  }

  @JsonProperty(JSON_PROPERTY_NAME)
  public void setName_JsonNullable(JsonNullable<String> name) {
    this.name = name;
  }

  public void setName(@jakarta.annotation.Nullable String name) {
    this.name = JsonNullable.<String>of(name);
  }

  public UserCreateRequest avatarUrl(@jakarta.annotation.Nullable String avatarUrl) {
    this.avatarUrl = JsonNullable.<String>of(avatarUrl);

    return this;
  }

  /**
   * Get avatarUrl
   * @return avatarUrl
   */
  @jakarta.annotation.Nullable
  @JsonIgnore
  public String getAvatarUrl() {
    return avatarUrl.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_AVATAR_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public JsonNullable<String> getAvatarUrl_JsonNullable() {
    return avatarUrl;
  }

  @JsonProperty(JSON_PROPERTY_AVATAR_URL)
  public void setAvatarUrl_JsonNullable(JsonNullable<String> avatarUrl) {
    this.avatarUrl = avatarUrl;
  }

  public void setAvatarUrl(@jakarta.annotation.Nullable String avatarUrl) {
    this.avatarUrl = JsonNullable.<String>of(avatarUrl);
  }

  public UserCreateRequest bio(@jakarta.annotation.Nullable String bio) {
    this.bio = JsonNullable.<String>of(bio);

    return this;
  }

  /**
   * Get bio
   * @return bio
   */
  @jakarta.annotation.Nullable
  @JsonIgnore
  public String getBio() {
    return bio.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_BIO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public JsonNullable<String> getBio_JsonNullable() {
    return bio;
  }

  @JsonProperty(JSON_PROPERTY_BIO)
  public void setBio_JsonNullable(JsonNullable<String> bio) {
    this.bio = bio;
  }

  public void setBio(@jakarta.annotation.Nullable String bio) {
    this.bio = JsonNullable.<String>of(bio);
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserCreateRequest userCreateRequest = (UserCreateRequest) o;
    return (
      Objects.equals(this.login, userCreateRequest.login) &&
      Objects.equals(this.email, userCreateRequest.email) &&
      Objects.equals(this.password, userCreateRequest.password) &&
      equalsNullable(this.name, userCreateRequest.name) &&
      equalsNullable(this.avatarUrl, userCreateRequest.avatarUrl) &&
      equalsNullable(this.bio, userCreateRequest.bio)
    );
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return (
      a == b ||
      (a != null &&
        b != null &&
        a.isPresent() &&
        b.isPresent() &&
        Objects.deepEquals(a.get(), b.get()))
    );
  }

  @Override
  public int hashCode() {
    return Objects.hash(
      login,
      email,
      password,
      hashCodeNullable(name),
      hashCodeNullable(avatarUrl),
      hashCodeNullable(bio)
    );
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[] { a.get() }) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserCreateRequest {\n");
    sb.append("    login: ").append(toIndentedString(login)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    password: ").append("*").append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    avatarUrl: ").append(toIndentedString(avatarUrl)).append("\n");
    sb.append("    bio: ").append(toIndentedString(bio)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
