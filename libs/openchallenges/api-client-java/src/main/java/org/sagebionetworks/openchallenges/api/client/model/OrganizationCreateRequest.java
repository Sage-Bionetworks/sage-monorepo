/*
 * OpenChallenges API
 * Discover, explore, and contribute to open biomedical challenges.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.sagebionetworks.openchallenges.api.client.model;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import java.util.NoSuchElementException;
import java.util.Objects;
import org.openapitools.jackson.nullable.JsonNullable;
import org.openapitools.jackson.nullable.JsonNullable;

/**
 * The information required to create an org account
 */
@JsonPropertyOrder(
  {
    OrganizationCreateRequest.JSON_PROPERTY_LOGIN,
    OrganizationCreateRequest.JSON_PROPERTY_NAME,
    OrganizationCreateRequest.JSON_PROPERTY_DESCRIPTION,
    OrganizationCreateRequest.JSON_PROPERTY_AVATAR_KEY,
    OrganizationCreateRequest.JSON_PROPERTY_WEBSITE_URL,
    OrganizationCreateRequest.JSON_PROPERTY_ACRONYM,
  }
)
@jakarta.annotation.Generated(
  value = "org.openapitools.codegen.languages.JavaClientCodegen",
  comments = "Generator version: 7.13.0"
)
public class OrganizationCreateRequest {

  public static final String JSON_PROPERTY_LOGIN = "login";

  @jakarta.annotation.Nonnull
  private String login;

  public static final String JSON_PROPERTY_NAME = "name";

  @jakarta.annotation.Nonnull
  private String name;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";

  @jakarta.annotation.Nullable
  private JsonNullable<String> description = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_AVATAR_KEY = "avatarKey";

  @jakarta.annotation.Nullable
  private JsonNullable<String> avatarKey = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_WEBSITE_URL = "websiteUrl";

  @jakarta.annotation.Nullable
  private String websiteUrl;

  public static final String JSON_PROPERTY_ACRONYM = "acronym";

  @jakarta.annotation.Nullable
  private JsonNullable<String> acronym = JsonNullable.<String>undefined();

  public OrganizationCreateRequest() {}

  public OrganizationCreateRequest login(@jakarta.annotation.Nonnull String login) {
    this.login = login;
    return this;
  }

  /**
   * The unique login of an organization.
   * @return login
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_LOGIN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getLogin() {
    return login;
  }

  @JsonProperty(JSON_PROPERTY_LOGIN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLogin(@jakarta.annotation.Nonnull String login) {
    this.login = login;
  }

  public OrganizationCreateRequest name(@jakarta.annotation.Nonnull String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getName() {
    return name;
  }

  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(@jakarta.annotation.Nonnull String name) {
    this.name = name;
  }

  public OrganizationCreateRequest description(@jakarta.annotation.Nullable String description) {
    this.description = JsonNullable.<String>of(description);

    return this;
  }

  /**
   * Get description
   * @return description
   */
  @jakarta.annotation.Nullable
  @JsonIgnore
  public String getDescription() {
    return description.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public JsonNullable<String> getDescription_JsonNullable() {
    return description;
  }

  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  public void setDescription_JsonNullable(JsonNullable<String> description) {
    this.description = description;
  }

  public void setDescription(@jakarta.annotation.Nullable String description) {
    this.description = JsonNullable.<String>of(description);
  }

  public OrganizationCreateRequest avatarKey(@jakarta.annotation.Nullable String avatarKey) {
    this.avatarKey = JsonNullable.<String>of(avatarKey);

    return this;
  }

  /**
   * Get avatarKey
   * @return avatarKey
   */
  @jakarta.annotation.Nullable
  @JsonIgnore
  public String getAvatarKey() {
    return avatarKey.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_AVATAR_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public JsonNullable<String> getAvatarKey_JsonNullable() {
    return avatarKey;
  }

  @JsonProperty(JSON_PROPERTY_AVATAR_KEY)
  public void setAvatarKey_JsonNullable(JsonNullable<String> avatarKey) {
    this.avatarKey = avatarKey;
  }

  public void setAvatarKey(@jakarta.annotation.Nullable String avatarKey) {
    this.avatarKey = JsonNullable.<String>of(avatarKey);
  }

  public OrganizationCreateRequest websiteUrl(@jakarta.annotation.Nullable String websiteUrl) {
    this.websiteUrl = websiteUrl;
    return this;
  }

  /**
   * A URL to the website or image.
   * @return websiteUrl
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_WEBSITE_URL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getWebsiteUrl() {
    return websiteUrl;
  }

  @JsonProperty(JSON_PROPERTY_WEBSITE_URL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setWebsiteUrl(@jakarta.annotation.Nullable String websiteUrl) {
    this.websiteUrl = websiteUrl;
  }

  public OrganizationCreateRequest acronym(@jakarta.annotation.Nullable String acronym) {
    this.acronym = JsonNullable.<String>of(acronym);

    return this;
  }

  /**
   * An acronym of the organization.
   * @return acronym
   */
  @jakarta.annotation.Nullable
  @JsonIgnore
  public String getAcronym() {
    return acronym.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ACRONYM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public JsonNullable<String> getAcronym_JsonNullable() {
    return acronym;
  }

  @JsonProperty(JSON_PROPERTY_ACRONYM)
  public void setAcronym_JsonNullable(JsonNullable<String> acronym) {
    this.acronym = acronym;
  }

  public void setAcronym(@jakarta.annotation.Nullable String acronym) {
    this.acronym = JsonNullable.<String>of(acronym);
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrganizationCreateRequest organizationCreateRequest = (OrganizationCreateRequest) o;
    return (
      Objects.equals(this.login, organizationCreateRequest.login) &&
      Objects.equals(this.name, organizationCreateRequest.name) &&
      equalsNullable(this.description, organizationCreateRequest.description) &&
      equalsNullable(this.avatarKey, organizationCreateRequest.avatarKey) &&
      Objects.equals(this.websiteUrl, organizationCreateRequest.websiteUrl) &&
      equalsNullable(this.acronym, organizationCreateRequest.acronym)
    );
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return (
      a == b ||
      (a != null &&
        b != null &&
        a.isPresent() &&
        b.isPresent() &&
        Objects.deepEquals(a.get(), b.get()))
    );
  }

  @Override
  public int hashCode() {
    return Objects.hash(
      login,
      name,
      hashCodeNullable(description),
      hashCodeNullable(avatarKey),
      websiteUrl,
      hashCodeNullable(acronym)
    );
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[] { a.get() }) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrganizationCreateRequest {\n");
    sb.append("    login: ").append(toIndentedString(login)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    avatarKey: ").append(toIndentedString(avatarKey)).append("\n");
    sb.append("    websiteUrl: ").append(toIndentedString(websiteUrl)).append("\n");
    sb.append("    acronym: ").append(toIndentedString(acronym)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
