/*
 * OpenChallenges API
 * Discover, explore, and contribute to open biomedical challenges.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.sagebionetworks.openchallenges.api.client.model;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.net.URI;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Arrays;
import java.util.List;
import java.util.Objects;
import org.sagebionetworks.openchallenges.api.client.model.AuthScope;
import org.sagebionetworks.openchallenges.api.client.model.UserRole;

/**
 * UserProfile
 */
@JsonPropertyOrder(
  {
    UserProfile.JSON_PROPERTY_ID,
    UserProfile.JSON_PROPERTY_USERNAME,
    UserProfile.JSON_PROPERTY_EMAIL,
    UserProfile.JSON_PROPERTY_FIRST_NAME,
    UserProfile.JSON_PROPERTY_LAST_NAME,
    UserProfile.JSON_PROPERTY_ROLE,
    UserProfile.JSON_PROPERTY_SCOPES,
    UserProfile.JSON_PROPERTY_AVATAR_URL,
    UserProfile.JSON_PROPERTY_BIO,
    UserProfile.JSON_PROPERTY_WEBSITE,
    UserProfile.JSON_PROPERTY_CREATED_AT,
    UserProfile.JSON_PROPERTY_UPDATED_AT,
  }
)
@jakarta.annotation.Generated(
  value = "org.openapitools.codegen.languages.JavaClientCodegen",
  comments = "Generator version: 7.14.0"
)
public class UserProfile {

  public static final String JSON_PROPERTY_ID = "id";

  @jakarta.annotation.Nonnull
  private String id;

  public static final String JSON_PROPERTY_USERNAME = "username";

  @jakarta.annotation.Nonnull
  private String username;

  public static final String JSON_PROPERTY_EMAIL = "email";

  @jakarta.annotation.Nonnull
  private String email;

  public static final String JSON_PROPERTY_FIRST_NAME = "firstName";

  @jakarta.annotation.Nullable
  private String firstName;

  public static final String JSON_PROPERTY_LAST_NAME = "lastName";

  @jakarta.annotation.Nullable
  private String lastName;

  public static final String JSON_PROPERTY_ROLE = "role";

  @jakarta.annotation.Nonnull
  private UserRole role;

  public static final String JSON_PROPERTY_SCOPES = "scopes";

  @jakarta.annotation.Nullable
  private List<AuthScope> scopes = new ArrayList<>();

  public static final String JSON_PROPERTY_AVATAR_URL = "avatarUrl";

  @jakarta.annotation.Nullable
  private URI avatarUrl;

  public static final String JSON_PROPERTY_BIO = "bio";

  @jakarta.annotation.Nullable
  private String bio;

  public static final String JSON_PROPERTY_WEBSITE = "website";

  @jakarta.annotation.Nullable
  private URI website;

  public static final String JSON_PROPERTY_CREATED_AT = "createdAt";

  @jakarta.annotation.Nonnull
  private OffsetDateTime createdAt;

  public static final String JSON_PROPERTY_UPDATED_AT = "updatedAt";

  @jakarta.annotation.Nullable
  private OffsetDateTime updatedAt;

  public UserProfile() {}

  public UserProfile id(@jakarta.annotation.Nonnull String id) {
    this.id = id;
    return this;
  }

  /**
   * Unique user identifier
   * @return id
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getId() {
    return id;
  }

  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(@jakarta.annotation.Nonnull String id) {
    this.id = id;
  }

  public UserProfile username(@jakarta.annotation.Nonnull String username) {
    this.username = username;
    return this;
  }

  /**
   * User&#39;s username
   * @return username
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_USERNAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getUsername() {
    return username;
  }

  @JsonProperty(JSON_PROPERTY_USERNAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUsername(@jakarta.annotation.Nonnull String username) {
    this.username = username;
  }

  public UserProfile email(@jakarta.annotation.Nonnull String email) {
    this.email = email;
    return this;
  }

  /**
   * User&#39;s email address
   * @return email
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_EMAIL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getEmail() {
    return email;
  }

  @JsonProperty(JSON_PROPERTY_EMAIL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEmail(@jakarta.annotation.Nonnull String email) {
    this.email = email;
  }

  public UserProfile firstName(@jakarta.annotation.Nullable String firstName) {
    this.firstName = firstName;
    return this;
  }

  /**
   * User&#39;s first name
   * @return firstName
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FIRST_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getFirstName() {
    return firstName;
  }

  @JsonProperty(JSON_PROPERTY_FIRST_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFirstName(@jakarta.annotation.Nullable String firstName) {
    this.firstName = firstName;
  }

  public UserProfile lastName(@jakarta.annotation.Nullable String lastName) {
    this.lastName = lastName;
    return this;
  }

  /**
   * User&#39;s last name
   * @return lastName
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LAST_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getLastName() {
    return lastName;
  }

  @JsonProperty(JSON_PROPERTY_LAST_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLastName(@jakarta.annotation.Nullable String lastName) {
    this.lastName = lastName;
  }

  public UserProfile role(@jakarta.annotation.Nonnull UserRole role) {
    this.role = role;
    return this;
  }

  /**
   * Get role
   * @return role
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ROLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public UserRole getRole() {
    return role;
  }

  @JsonProperty(JSON_PROPERTY_ROLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRole(@jakarta.annotation.Nonnull UserRole role) {
    this.role = role;
  }

  public UserProfile scopes(@jakarta.annotation.Nullable List<AuthScope> scopes) {
    this.scopes = scopes;
    return this;
  }

  public UserProfile addScopesItem(AuthScope scopesItem) {
    if (this.scopes == null) {
      this.scopes = new ArrayList<>();
    }
    this.scopes.add(scopesItem);
    return this;
  }

  /**
   * User&#39;s authorized scopes/permissions
   * @return scopes
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SCOPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<AuthScope> getScopes() {
    return scopes;
  }

  @JsonProperty(JSON_PROPERTY_SCOPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setScopes(@jakarta.annotation.Nullable List<AuthScope> scopes) {
    this.scopes = scopes;
  }

  public UserProfile avatarUrl(@jakarta.annotation.Nullable URI avatarUrl) {
    this.avatarUrl = avatarUrl;
    return this;
  }

  /**
   * URL to user&#39;s avatar image
   * @return avatarUrl
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AVATAR_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public URI getAvatarUrl() {
    return avatarUrl;
  }

  @JsonProperty(JSON_PROPERTY_AVATAR_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAvatarUrl(@jakarta.annotation.Nullable URI avatarUrl) {
    this.avatarUrl = avatarUrl;
  }

  public UserProfile bio(@jakarta.annotation.Nullable String bio) {
    this.bio = bio;
    return this;
  }

  /**
   * User&#39;s biography or description
   * @return bio
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BIO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getBio() {
    return bio;
  }

  @JsonProperty(JSON_PROPERTY_BIO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBio(@jakarta.annotation.Nullable String bio) {
    this.bio = bio;
  }

  public UserProfile website(@jakarta.annotation.Nullable URI website) {
    this.website = website;
    return this;
  }

  /**
   * User&#39;s website URL
   * @return website
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_WEBSITE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public URI getWebsite() {
    return website;
  }

  @JsonProperty(JSON_PROPERTY_WEBSITE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWebsite(@jakarta.annotation.Nullable URI website) {
    this.website = website;
  }

  public UserProfile createdAt(@jakarta.annotation.Nonnull OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  /**
   * Timestamp when the user account was created
   * @return createdAt
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreatedAt(@jakarta.annotation.Nonnull OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }

  public UserProfile updatedAt(@jakarta.annotation.Nullable OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

  /**
   * Timestamp when the user profile was last updated
   * @return updatedAt
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }

  @JsonProperty(JSON_PROPERTY_UPDATED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdatedAt(@jakarta.annotation.Nullable OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserProfile userProfile = (UserProfile) o;
    return (
      Objects.equals(this.id, userProfile.id) &&
      Objects.equals(this.username, userProfile.username) &&
      Objects.equals(this.email, userProfile.email) &&
      Objects.equals(this.firstName, userProfile.firstName) &&
      Objects.equals(this.lastName, userProfile.lastName) &&
      Objects.equals(this.role, userProfile.role) &&
      Objects.equals(this.scopes, userProfile.scopes) &&
      Objects.equals(this.avatarUrl, userProfile.avatarUrl) &&
      Objects.equals(this.bio, userProfile.bio) &&
      Objects.equals(this.website, userProfile.website) &&
      Objects.equals(this.createdAt, userProfile.createdAt) &&
      Objects.equals(this.updatedAt, userProfile.updatedAt)
    );
  }

  @Override
  public int hashCode() {
    return Objects.hash(
      id,
      username,
      email,
      firstName,
      lastName,
      role,
      scopes,
      avatarUrl,
      bio,
      website,
      createdAt,
      updatedAt
    );
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserProfile {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    role: ").append(toIndentedString(role)).append("\n");
    sb.append("    scopes: ").append(toIndentedString(scopes)).append("\n");
    sb.append("    avatarUrl: ").append(toIndentedString(avatarUrl)).append("\n");
    sb.append("    bio: ").append(toIndentedString(bio)).append("\n");
    sb.append("    website: ").append(toIndentedString(website)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
