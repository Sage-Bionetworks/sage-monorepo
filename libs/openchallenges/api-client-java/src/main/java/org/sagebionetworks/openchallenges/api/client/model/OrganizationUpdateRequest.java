/*
 * OpenChallenges API
 * Discover, explore, and contribute to open biomedical challenges.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.sagebionetworks.openchallenges.api.client.model;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import java.util.Objects;

/**
 * The information required to update an org account
 */
@JsonPropertyOrder(
  {
    OrganizationUpdateRequest.JSON_PROPERTY_NAME,
    OrganizationUpdateRequest.JSON_PROPERTY_DESCRIPTION,
    OrganizationUpdateRequest.JSON_PROPERTY_AVATAR_KEY,
    OrganizationUpdateRequest.JSON_PROPERTY_WEBSITE_URL,
    OrganizationUpdateRequest.JSON_PROPERTY_SHORT_NAME,
  }
)
@jakarta.annotation.Generated(
  value = "org.openapitools.codegen.languages.JavaClientCodegen",
  comments = "Generator version: 7.14.0"
)
public class OrganizationUpdateRequest {

  public static final String JSON_PROPERTY_NAME = "name";

  @jakarta.annotation.Nonnull
  private String name;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";

  @jakarta.annotation.Nullable
  private String description;

  public static final String JSON_PROPERTY_AVATAR_KEY = "avatarKey";

  @jakarta.annotation.Nullable
  private String avatarKey;

  public static final String JSON_PROPERTY_WEBSITE_URL = "websiteUrl";

  @jakarta.annotation.Nullable
  private String websiteUrl;

  public static final String JSON_PROPERTY_SHORT_NAME = "shortName";

  @jakarta.annotation.Nullable
  private String shortName;

  public OrganizationUpdateRequest() {}

  public OrganizationUpdateRequest name(@jakarta.annotation.Nonnull String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getName() {
    return name;
  }

  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(@jakarta.annotation.Nonnull String name) {
    this.name = name;
  }

  public OrganizationUpdateRequest description(@jakarta.annotation.Nullable String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getDescription() {
    return description;
  }

  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDescription(@jakarta.annotation.Nullable String description) {
    this.description = description;
  }

  public OrganizationUpdateRequest avatarKey(@jakarta.annotation.Nullable String avatarKey) {
    this.avatarKey = avatarKey;
    return this;
  }

  /**
   * Get avatarKey
   * @return avatarKey
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AVATAR_KEY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getAvatarKey() {
    return avatarKey;
  }

  @JsonProperty(JSON_PROPERTY_AVATAR_KEY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAvatarKey(@jakarta.annotation.Nullable String avatarKey) {
    this.avatarKey = avatarKey;
  }

  public OrganizationUpdateRequest websiteUrl(@jakarta.annotation.Nullable String websiteUrl) {
    this.websiteUrl = websiteUrl;
    return this;
  }

  /**
   * A URL to the website or image.
   * @return websiteUrl
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_WEBSITE_URL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getWebsiteUrl() {
    return websiteUrl;
  }

  @JsonProperty(JSON_PROPERTY_WEBSITE_URL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setWebsiteUrl(@jakarta.annotation.Nullable String websiteUrl) {
    this.websiteUrl = websiteUrl;
  }

  public OrganizationUpdateRequest shortName(@jakarta.annotation.Nullable String shortName) {
    this.shortName = shortName;
    return this;
  }

  /**
   * The abbreviation, which may be an acronym, initialism, or other short form (e.g., \&quot;AI\&quot;, \&quot;WashU\&quot;, \&quot;etc.\&quot;)
   * @return shortName
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SHORT_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getShortName() {
    return shortName;
  }

  @JsonProperty(JSON_PROPERTY_SHORT_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setShortName(@jakarta.annotation.Nullable String shortName) {
    this.shortName = shortName;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrganizationUpdateRequest organizationUpdateRequest = (OrganizationUpdateRequest) o;
    return (
      Objects.equals(this.name, organizationUpdateRequest.name) &&
      Objects.equals(this.description, organizationUpdateRequest.description) &&
      Objects.equals(this.avatarKey, organizationUpdateRequest.avatarKey) &&
      Objects.equals(this.websiteUrl, organizationUpdateRequest.websiteUrl) &&
      Objects.equals(this.shortName, organizationUpdateRequest.shortName)
    );
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, description, avatarKey, websiteUrl, shortName);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrganizationUpdateRequest {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    avatarKey: ").append(toIndentedString(avatarKey)).append("\n");
    sb.append("    websiteUrl: ").append(toIndentedString(websiteUrl)).append("\n");
    sb.append("    shortName: ").append(toIndentedString(shortName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
