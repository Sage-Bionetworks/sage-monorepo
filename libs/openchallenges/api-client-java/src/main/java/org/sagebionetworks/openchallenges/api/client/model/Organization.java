/*
 * OpenChallenges REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.sagebionetworks.openchallenges.api.client.model;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.NoSuchElementException;
import java.util.Objects;
import org.openapitools.jackson.nullable.JsonNullable;
import org.openapitools.jackson.nullable.JsonNullable;

/**
 * An organization
 */
@JsonPropertyOrder(
  {
    Organization.JSON_PROPERTY_ID,
    Organization.JSON_PROPERTY_NAME,
    Organization.JSON_PROPERTY_LOGIN,
    Organization.JSON_PROPERTY_DESCRIPTION,
    Organization.JSON_PROPERTY_AVATAR_KEY,
    Organization.JSON_PROPERTY_WEBSITE_URL,
    Organization.JSON_PROPERTY_CHALLENGE_COUNT,
    Organization.JSON_PROPERTY_CREATED_AT,
    Organization.JSON_PROPERTY_UPDATED_AT,
    Organization.JSON_PROPERTY_ACRONYM,
  }
)
@jakarta.annotation.Generated(
  value = "org.openapitools.codegen.languages.JavaClientCodegen",
  comments = "Generator version: 7.13.0"
)
public class Organization {

  public static final String JSON_PROPERTY_ID = "id";

  @jakarta.annotation.Nonnull
  private Long id;

  public static final String JSON_PROPERTY_NAME = "name";

  @jakarta.annotation.Nonnull
  private String name;

  public static final String JSON_PROPERTY_LOGIN = "login";

  @jakarta.annotation.Nonnull
  private String login;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";

  @jakarta.annotation.Nullable
  private JsonNullable<String> description = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_AVATAR_KEY = "avatarKey";

  @jakarta.annotation.Nullable
  private String avatarKey;

  public static final String JSON_PROPERTY_WEBSITE_URL = "websiteUrl";

  @jakarta.annotation.Nullable
  private JsonNullable<String> websiteUrl = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CHALLENGE_COUNT = "challengeCount";

  @jakarta.annotation.Nullable
  private Integer challengeCount = 0;

  public static final String JSON_PROPERTY_CREATED_AT = "createdAt";

  @jakarta.annotation.Nonnull
  private OffsetDateTime createdAt;

  public static final String JSON_PROPERTY_UPDATED_AT = "updatedAt";

  @jakarta.annotation.Nonnull
  private OffsetDateTime updatedAt;

  public static final String JSON_PROPERTY_ACRONYM = "acronym";

  @jakarta.annotation.Nullable
  private String acronym;

  public Organization() {}

  public Organization id(@jakarta.annotation.Nonnull Long id) {
    this.id = id;
    return this;
  }

  /**
   * The unique identifier of an organization
   * @return id
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public Long getId() {
    return id;
  }

  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(@jakarta.annotation.Nonnull Long id) {
    this.id = id;
  }

  public Organization name(@jakarta.annotation.Nonnull String name) {
    this.name = name;
    return this;
  }

  /**
   * The name of the organization.
   * @return name
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getName() {
    return name;
  }

  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(@jakarta.annotation.Nonnull String name) {
    this.name = name;
  }

  public Organization login(@jakarta.annotation.Nonnull String login) {
    this.login = login;
    return this;
  }

  /**
   * The unique login of an organization.
   * @return login
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_LOGIN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getLogin() {
    return login;
  }

  @JsonProperty(JSON_PROPERTY_LOGIN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLogin(@jakarta.annotation.Nonnull String login) {
    this.login = login;
  }

  public Organization description(@jakarta.annotation.Nullable String description) {
    this.description = JsonNullable.<String>of(description);

    return this;
  }

  /**
   * A description of the organization.
   * @return description
   */
  @jakarta.annotation.Nullable
  @JsonIgnore
  public String getDescription() {
    return description.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public JsonNullable<String> getDescription_JsonNullable() {
    return description;
  }

  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  public void setDescription_JsonNullable(JsonNullable<String> description) {
    this.description = description;
  }

  public void setDescription(@jakarta.annotation.Nullable String description) {
    this.description = JsonNullable.<String>of(description);
  }

  public Organization avatarKey(@jakarta.annotation.Nullable String avatarKey) {
    this.avatarKey = avatarKey;
    return this;
  }

  /**
   * Get avatarKey
   * @return avatarKey
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AVATAR_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getAvatarKey() {
    return avatarKey;
  }

  @JsonProperty(JSON_PROPERTY_AVATAR_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAvatarKey(@jakarta.annotation.Nullable String avatarKey) {
    this.avatarKey = avatarKey;
  }

  public Organization websiteUrl(@jakarta.annotation.Nullable String websiteUrl) {
    this.websiteUrl = JsonNullable.<String>of(websiteUrl);

    return this;
  }

  /**
   * A URL to the website or image.
   * @return websiteUrl
   */
  @jakarta.annotation.Nullable
  @JsonIgnore
  public String getWebsiteUrl() {
    return websiteUrl.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_WEBSITE_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public JsonNullable<String> getWebsiteUrl_JsonNullable() {
    return websiteUrl;
  }

  @JsonProperty(JSON_PROPERTY_WEBSITE_URL)
  public void setWebsiteUrl_JsonNullable(JsonNullable<String> websiteUrl) {
    this.websiteUrl = websiteUrl;
  }

  public void setWebsiteUrl(@jakarta.annotation.Nullable String websiteUrl) {
    this.websiteUrl = JsonNullable.<String>of(websiteUrl);
  }

  public Organization challengeCount(@jakarta.annotation.Nullable Integer challengeCount) {
    this.challengeCount = challengeCount;
    return this;
  }

  /**
   * The number of challenges involving this organization.
   * minimum: 0
   * @return challengeCount
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CHALLENGE_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Integer getChallengeCount() {
    return challengeCount;
  }

  @JsonProperty(JSON_PROPERTY_CHALLENGE_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setChallengeCount(@jakarta.annotation.Nullable Integer challengeCount) {
    this.challengeCount = challengeCount;
  }

  public Organization createdAt(@jakarta.annotation.Nonnull OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  /**
   * Datetime when the object was added to the database.
   * @return createdAt
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreatedAt(@jakarta.annotation.Nonnull OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }

  public Organization updatedAt(@jakarta.annotation.Nonnull OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

  /**
   * Datetime when the object was last modified in the database.
   * @return updatedAt
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_UPDATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }

  @JsonProperty(JSON_PROPERTY_UPDATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUpdatedAt(@jakarta.annotation.Nonnull OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
  }

  public Organization acronym(@jakarta.annotation.Nullable String acronym) {
    this.acronym = acronym;
    return this;
  }

  /**
   * An acronym of the organization.
   * @return acronym
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACRONYM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getAcronym() {
    return acronym;
  }

  @JsonProperty(JSON_PROPERTY_ACRONYM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAcronym(@jakarta.annotation.Nullable String acronym) {
    this.acronym = acronym;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Organization organization = (Organization) o;
    return (
      Objects.equals(this.id, organization.id) &&
      Objects.equals(this.name, organization.name) &&
      Objects.equals(this.login, organization.login) &&
      equalsNullable(this.description, organization.description) &&
      Objects.equals(this.avatarKey, organization.avatarKey) &&
      equalsNullable(this.websiteUrl, organization.websiteUrl) &&
      Objects.equals(this.challengeCount, organization.challengeCount) &&
      Objects.equals(this.createdAt, organization.createdAt) &&
      Objects.equals(this.updatedAt, organization.updatedAt) &&
      Objects.equals(this.acronym, organization.acronym)
    );
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return (
      a == b ||
      (a != null &&
        b != null &&
        a.isPresent() &&
        b.isPresent() &&
        Objects.deepEquals(a.get(), b.get()))
    );
  }

  @Override
  public int hashCode() {
    return Objects.hash(
      id,
      name,
      login,
      hashCodeNullable(description),
      avatarKey,
      hashCodeNullable(websiteUrl),
      challengeCount,
      createdAt,
      updatedAt,
      acronym
    );
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[] { a.get() }) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Organization {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    login: ").append(toIndentedString(login)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    avatarKey: ").append(toIndentedString(avatarKey)).append("\n");
    sb.append("    websiteUrl: ").append(toIndentedString(websiteUrl)).append("\n");
    sb.append("    challengeCount: ").append(toIndentedString(challengeCount)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    acronym: ").append(toIndentedString(acronym)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
