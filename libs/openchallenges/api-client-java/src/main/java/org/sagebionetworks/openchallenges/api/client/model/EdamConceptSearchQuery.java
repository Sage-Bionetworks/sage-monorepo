/*
 * OpenChallenges REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.sagebionetworks.openchallenges.api.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import org.sagebionetworks.openchallenges.api.client.model.EdamConceptDirection;
import org.sagebionetworks.openchallenges.api.client.model.EdamConceptSort;
import org.sagebionetworks.openchallenges.api.client.model.EdamSection;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * An EDAM concept search query.
 */
@JsonPropertyOrder({
  EdamConceptSearchQuery.JSON_PROPERTY_PAGE_NUMBER,
  EdamConceptSearchQuery.JSON_PROPERTY_PAGE_SIZE,
  EdamConceptSearchQuery.JSON_PROPERTY_SORT,
  EdamConceptSearchQuery.JSON_PROPERTY_DIRECTION,
  EdamConceptSearchQuery.JSON_PROPERTY_IDS,
  EdamConceptSearchQuery.JSON_PROPERTY_SEARCH_TERMS,
  EdamConceptSearchQuery.JSON_PROPERTY_SECTIONS
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.13.0")
public class EdamConceptSearchQuery {
  public static final String JSON_PROPERTY_PAGE_NUMBER = "pageNumber";
  @jakarta.annotation.Nullable
  private Integer pageNumber = 0;

  public static final String JSON_PROPERTY_PAGE_SIZE = "pageSize";
  @jakarta.annotation.Nullable
  private Integer pageSize = 100;

  public static final String JSON_PROPERTY_SORT = "sort";
  @jakarta.annotation.Nullable
  private EdamConceptSort sort = EdamConceptSort.RELEVANCE;

  public static final String JSON_PROPERTY_DIRECTION = "direction";
  @jakarta.annotation.Nullable
  private JsonNullable<EdamConceptDirection> direction = JsonNullable.<EdamConceptDirection>undefined();

  public static final String JSON_PROPERTY_IDS = "ids";
  @jakarta.annotation.Nullable
  private List<Long> ids = new ArrayList<>();

  public static final String JSON_PROPERTY_SEARCH_TERMS = "searchTerms";
  @jakarta.annotation.Nullable
  private String searchTerms;

  public static final String JSON_PROPERTY_SECTIONS = "sections";
  @jakarta.annotation.Nullable
  private List<EdamSection> sections = new ArrayList<>();

  public EdamConceptSearchQuery() {
  }

  public EdamConceptSearchQuery pageNumber(@jakarta.annotation.Nullable Integer pageNumber) {
    
    this.pageNumber = pageNumber;
    return this;
  }

  /**
   * The page number.
   * minimum: 0
   * @return pageNumber
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PAGE_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getPageNumber() {
    return pageNumber;
  }


  @JsonProperty(JSON_PROPERTY_PAGE_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPageNumber(@jakarta.annotation.Nullable Integer pageNumber) {
    this.pageNumber = pageNumber;
  }

  public EdamConceptSearchQuery pageSize(@jakarta.annotation.Nullable Integer pageSize) {
    
    this.pageSize = pageSize;
    return this;
  }

  /**
   * The number of items in a single page.
   * minimum: 1
   * @return pageSize
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PAGE_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getPageSize() {
    return pageSize;
  }


  @JsonProperty(JSON_PROPERTY_PAGE_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPageSize(@jakarta.annotation.Nullable Integer pageSize) {
    this.pageSize = pageSize;
  }

  public EdamConceptSearchQuery sort(@jakarta.annotation.Nullable EdamConceptSort sort) {
    
    this.sort = sort;
    return this;
  }

  /**
   * Get sort
   * @return sort
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SORT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public EdamConceptSort getSort() {
    return sort;
  }


  @JsonProperty(JSON_PROPERTY_SORT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSort(@jakarta.annotation.Nullable EdamConceptSort sort) {
    this.sort = sort;
  }

  public EdamConceptSearchQuery direction(@jakarta.annotation.Nullable EdamConceptDirection direction) {
    this.direction = JsonNullable.<EdamConceptDirection>of(direction);
    
    return this;
  }

  /**
   * Get direction
   * @return direction
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public EdamConceptDirection getDirection() {
        return direction.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DIRECTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<EdamConceptDirection> getDirection_JsonNullable() {
    return direction;
  }
  
  @JsonProperty(JSON_PROPERTY_DIRECTION)
  public void setDirection_JsonNullable(JsonNullable<EdamConceptDirection> direction) {
    this.direction = direction;
  }

  public void setDirection(@jakarta.annotation.Nullable EdamConceptDirection direction) {
    this.direction = JsonNullable.<EdamConceptDirection>of(direction);
  }

  public EdamConceptSearchQuery ids(@jakarta.annotation.Nullable List<Long> ids) {
    
    this.ids = ids;
    return this;
  }

  public EdamConceptSearchQuery addIdsItem(Long idsItem) {
    if (this.ids == null) {
      this.ids = new ArrayList<>();
    }
    this.ids.add(idsItem);
    return this;
  }

  /**
   * An array of EDAM concept ids used to filter the results.
   * @return ids
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Long> getIds() {
    return ids;
  }


  @JsonProperty(JSON_PROPERTY_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIds(@jakarta.annotation.Nullable List<Long> ids) {
    this.ids = ids;
  }

  public EdamConceptSearchQuery searchTerms(@jakarta.annotation.Nullable String searchTerms) {
    
    this.searchTerms = searchTerms;
    return this;
  }

  /**
   * A string of search terms used to filter the results.
   * @return searchTerms
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SEARCH_TERMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSearchTerms() {
    return searchTerms;
  }


  @JsonProperty(JSON_PROPERTY_SEARCH_TERMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSearchTerms(@jakarta.annotation.Nullable String searchTerms) {
    this.searchTerms = searchTerms;
  }

  public EdamConceptSearchQuery sections(@jakarta.annotation.Nullable List<EdamSection> sections) {
    
    this.sections = sections;
    return this;
  }

  public EdamConceptSearchQuery addSectionsItem(EdamSection sectionsItem) {
    if (this.sections == null) {
      this.sections = new ArrayList<>();
    }
    this.sections.add(sectionsItem);
    return this;
  }

  /**
   * An array of EDAM sections (sub-ontologies) used to filter the results.
   * @return sections
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SECTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<EdamSection> getSections() {
    return sections;
  }


  @JsonProperty(JSON_PROPERTY_SECTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSections(@jakarta.annotation.Nullable List<EdamSection> sections) {
    this.sections = sections;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EdamConceptSearchQuery edamConceptSearchQuery = (EdamConceptSearchQuery) o;
    return Objects.equals(this.pageNumber, edamConceptSearchQuery.pageNumber) &&
        Objects.equals(this.pageSize, edamConceptSearchQuery.pageSize) &&
        Objects.equals(this.sort, edamConceptSearchQuery.sort) &&
        equalsNullable(this.direction, edamConceptSearchQuery.direction) &&
        Objects.equals(this.ids, edamConceptSearchQuery.ids) &&
        Objects.equals(this.searchTerms, edamConceptSearchQuery.searchTerms) &&
        Objects.equals(this.sections, edamConceptSearchQuery.sections);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(pageNumber, pageSize, sort, hashCodeNullable(direction), ids, searchTerms, sections);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EdamConceptSearchQuery {\n");
    sb.append("    pageNumber: ").append(toIndentedString(pageNumber)).append("\n");
    sb.append("    pageSize: ").append(toIndentedString(pageSize)).append("\n");
    sb.append("    sort: ").append(toIndentedString(sort)).append("\n");
    sb.append("    direction: ").append(toIndentedString(direction)).append("\n");
    sb.append("    ids: ").append(toIndentedString(ids)).append("\n");
    sb.append("    searchTerms: ").append(toIndentedString(searchTerms)).append("\n");
    sb.append("    sections: ").append(toIndentedString(sections)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

