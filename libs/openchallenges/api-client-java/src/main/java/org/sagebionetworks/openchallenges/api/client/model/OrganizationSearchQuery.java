/*
 * OpenChallenges REST API
 * Discover, explore, and contribute to open biomedical challenges.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.sagebionetworks.openchallenges.api.client.model;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Arrays;
import java.util.List;
import java.util.NoSuchElementException;
import java.util.Objects;
import org.openapitools.jackson.nullable.JsonNullable;
import org.openapitools.jackson.nullable.JsonNullable;
import org.sagebionetworks.openchallenges.api.client.model.ChallengeContributionRole;
import org.sagebionetworks.openchallenges.api.client.model.OrganizationCategory;
import org.sagebionetworks.openchallenges.api.client.model.OrganizationDirection;
import org.sagebionetworks.openchallenges.api.client.model.OrganizationSort;

/**
 * An organization search query.
 */
@JsonPropertyOrder(
  {
    OrganizationSearchQuery.JSON_PROPERTY_PAGE_NUMBER,
    OrganizationSearchQuery.JSON_PROPERTY_PAGE_SIZE,
    OrganizationSearchQuery.JSON_PROPERTY_CATEGORIES,
    OrganizationSearchQuery.JSON_PROPERTY_CHALLENGE_CONTRIBUTION_ROLES,
    OrganizationSearchQuery.JSON_PROPERTY_SORT,
    OrganizationSearchQuery.JSON_PROPERTY_DIRECTION,
    OrganizationSearchQuery.JSON_PROPERTY_IDS,
    OrganizationSearchQuery.JSON_PROPERTY_SEARCH_TERMS,
  }
)
@jakarta.annotation.Generated(
  value = "org.openapitools.codegen.languages.JavaClientCodegen",
  comments = "Generator version: 7.13.0"
)
public class OrganizationSearchQuery {

  public static final String JSON_PROPERTY_PAGE_NUMBER = "pageNumber";

  @jakarta.annotation.Nullable
  private Integer pageNumber = 0;

  public static final String JSON_PROPERTY_PAGE_SIZE = "pageSize";

  @jakarta.annotation.Nullable
  private Integer pageSize = 100;

  public static final String JSON_PROPERTY_CATEGORIES = "categories";

  @jakarta.annotation.Nullable
  private List<OrganizationCategory> categories = new ArrayList<>();

  public static final String JSON_PROPERTY_CHALLENGE_CONTRIBUTION_ROLES =
    "challengeContributionRoles";

  @jakarta.annotation.Nullable
  private List<ChallengeContributionRole> challengeContributionRoles = new ArrayList<>();

  public static final String JSON_PROPERTY_SORT = "sort";

  @jakarta.annotation.Nullable
  private OrganizationSort sort = OrganizationSort.RELEVANCE;

  public static final String JSON_PROPERTY_DIRECTION = "direction";

  @jakarta.annotation.Nullable
  private JsonNullable<OrganizationDirection> direction = JsonNullable.<
    OrganizationDirection
  >undefined();

  public static final String JSON_PROPERTY_IDS = "ids";

  @jakarta.annotation.Nullable
  private List<Long> ids = new ArrayList<>();

  public static final String JSON_PROPERTY_SEARCH_TERMS = "searchTerms";

  @jakarta.annotation.Nullable
  private String searchTerms;

  public OrganizationSearchQuery() {}

  public OrganizationSearchQuery pageNumber(@jakarta.annotation.Nullable Integer pageNumber) {
    this.pageNumber = pageNumber;
    return this;
  }

  /**
   * The page number.
   * minimum: 0
   * @return pageNumber
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PAGE_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Integer getPageNumber() {
    return pageNumber;
  }

  @JsonProperty(JSON_PROPERTY_PAGE_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPageNumber(@jakarta.annotation.Nullable Integer pageNumber) {
    this.pageNumber = pageNumber;
  }

  public OrganizationSearchQuery pageSize(@jakarta.annotation.Nullable Integer pageSize) {
    this.pageSize = pageSize;
    return this;
  }

  /**
   * The number of items in a single page.
   * minimum: 1
   * @return pageSize
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PAGE_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Integer getPageSize() {
    return pageSize;
  }

  @JsonProperty(JSON_PROPERTY_PAGE_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPageSize(@jakarta.annotation.Nullable Integer pageSize) {
    this.pageSize = pageSize;
  }

  public OrganizationSearchQuery categories(
    @jakarta.annotation.Nullable List<OrganizationCategory> categories
  ) {
    this.categories = categories;
    return this;
  }

  public OrganizationSearchQuery addCategoriesItem(OrganizationCategory categoriesItem) {
    if (this.categories == null) {
      this.categories = new ArrayList<>();
    }
    this.categories.add(categoriesItem);
    return this;
  }

  /**
   * The array of organization categories used to filter the results.
   * @return categories
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CATEGORIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<OrganizationCategory> getCategories() {
    return categories;
  }

  @JsonProperty(JSON_PROPERTY_CATEGORIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCategories(@jakarta.annotation.Nullable List<OrganizationCategory> categories) {
    this.categories = categories;
  }

  public OrganizationSearchQuery challengeContributionRoles(
    @jakarta.annotation.Nullable List<ChallengeContributionRole> challengeContributionRoles
  ) {
    this.challengeContributionRoles = challengeContributionRoles;
    return this;
  }

  public OrganizationSearchQuery addChallengeContributionRolesItem(
    ChallengeContributionRole challengeContributionRolesItem
  ) {
    if (this.challengeContributionRoles == null) {
      this.challengeContributionRoles = new ArrayList<>();
    }
    this.challengeContributionRoles.add(challengeContributionRolesItem);
    return this;
  }

  /**
   * An array of challenge contribution roles used to filter the results.
   * @return challengeContributionRoles
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CHALLENGE_CONTRIBUTION_ROLES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<ChallengeContributionRole> getChallengeContributionRoles() {
    return challengeContributionRoles;
  }

  @JsonProperty(JSON_PROPERTY_CHALLENGE_CONTRIBUTION_ROLES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setChallengeContributionRoles(
    @jakarta.annotation.Nullable List<ChallengeContributionRole> challengeContributionRoles
  ) {
    this.challengeContributionRoles = challengeContributionRoles;
  }

  public OrganizationSearchQuery sort(@jakarta.annotation.Nullable OrganizationSort sort) {
    this.sort = sort;
    return this;
  }

  /**
   * Get sort
   * @return sort
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SORT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public OrganizationSort getSort() {
    return sort;
  }

  @JsonProperty(JSON_PROPERTY_SORT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSort(@jakarta.annotation.Nullable OrganizationSort sort) {
    this.sort = sort;
  }

  public OrganizationSearchQuery direction(
    @jakarta.annotation.Nullable OrganizationDirection direction
  ) {
    this.direction = JsonNullable.<OrganizationDirection>of(direction);

    return this;
  }

  /**
   * Get direction
   * @return direction
   */
  @jakarta.annotation.Nullable
  @JsonIgnore
  public OrganizationDirection getDirection() {
    return direction.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DIRECTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public JsonNullable<OrganizationDirection> getDirection_JsonNullable() {
    return direction;
  }

  @JsonProperty(JSON_PROPERTY_DIRECTION)
  public void setDirection_JsonNullable(JsonNullable<OrganizationDirection> direction) {
    this.direction = direction;
  }

  public void setDirection(@jakarta.annotation.Nullable OrganizationDirection direction) {
    this.direction = JsonNullable.<OrganizationDirection>of(direction);
  }

  public OrganizationSearchQuery ids(@jakarta.annotation.Nullable List<Long> ids) {
    this.ids = ids;
    return this;
  }

  public OrganizationSearchQuery addIdsItem(Long idsItem) {
    if (this.ids == null) {
      this.ids = new ArrayList<>();
    }
    this.ids.add(idsItem);
    return this;
  }

  /**
   * An array of organization ids used to filter the results.
   * @return ids
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<Long> getIds() {
    return ids;
  }

  @JsonProperty(JSON_PROPERTY_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIds(@jakarta.annotation.Nullable List<Long> ids) {
    this.ids = ids;
  }

  public OrganizationSearchQuery searchTerms(@jakarta.annotation.Nullable String searchTerms) {
    this.searchTerms = searchTerms;
    return this;
  }

  /**
   * A string of search terms used to filter the results.
   * @return searchTerms
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SEARCH_TERMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getSearchTerms() {
    return searchTerms;
  }

  @JsonProperty(JSON_PROPERTY_SEARCH_TERMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSearchTerms(@jakarta.annotation.Nullable String searchTerms) {
    this.searchTerms = searchTerms;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrganizationSearchQuery organizationSearchQuery = (OrganizationSearchQuery) o;
    return (
      Objects.equals(this.pageNumber, organizationSearchQuery.pageNumber) &&
      Objects.equals(this.pageSize, organizationSearchQuery.pageSize) &&
      Objects.equals(this.categories, organizationSearchQuery.categories) &&
      Objects.equals(
        this.challengeContributionRoles,
        organizationSearchQuery.challengeContributionRoles
      ) &&
      Objects.equals(this.sort, organizationSearchQuery.sort) &&
      equalsNullable(this.direction, organizationSearchQuery.direction) &&
      Objects.equals(this.ids, organizationSearchQuery.ids) &&
      Objects.equals(this.searchTerms, organizationSearchQuery.searchTerms)
    );
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return (
      a == b ||
      (a != null &&
        b != null &&
        a.isPresent() &&
        b.isPresent() &&
        Objects.deepEquals(a.get(), b.get()))
    );
  }

  @Override
  public int hashCode() {
    return Objects.hash(
      pageNumber,
      pageSize,
      categories,
      challengeContributionRoles,
      sort,
      hashCodeNullable(direction),
      ids,
      searchTerms
    );
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[] { a.get() }) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrganizationSearchQuery {\n");
    sb.append("    pageNumber: ").append(toIndentedString(pageNumber)).append("\n");
    sb.append("    pageSize: ").append(toIndentedString(pageSize)).append("\n");
    sb.append("    categories: ").append(toIndentedString(categories)).append("\n");
    sb
      .append("    challengeContributionRoles: ")
      .append(toIndentedString(challengeContributionRoles))
      .append("\n");
    sb.append("    sort: ").append(toIndentedString(sort)).append("\n");
    sb.append("    direction: ").append(toIndentedString(direction)).append("\n");
    sb.append("    ids: ").append(toIndentedString(ids)).append("\n");
    sb.append("    searchTerms: ").append(toIndentedString(searchTerms)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
