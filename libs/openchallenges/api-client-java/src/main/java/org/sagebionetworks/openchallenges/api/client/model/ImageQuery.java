/*
 * OpenChallenges API
 * Discover, explore, and contribute to open biomedical challenges.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.sagebionetworks.openchallenges.api.client.model;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import java.util.Objects;
import org.sagebionetworks.openchallenges.api.client.model.ImageAspectRatio;
import org.sagebionetworks.openchallenges.api.client.model.ImageHeight;

/**
 * An image query.
 */
@JsonPropertyOrder(
  {
    ImageQuery.JSON_PROPERTY_OBJECT_KEY,
    ImageQuery.JSON_PROPERTY_HEIGHT,
    ImageQuery.JSON_PROPERTY_ASPECT_RATIO,
  }
)
@jakarta.annotation.Generated(
  value = "org.openapitools.codegen.languages.JavaClientCodegen",
  comments = "Generator version: 7.14.0"
)
public class ImageQuery {

  public static final String JSON_PROPERTY_OBJECT_KEY = "objectKey";

  @jakarta.annotation.Nonnull
  private String objectKey;

  public static final String JSON_PROPERTY_HEIGHT = "height";

  @jakarta.annotation.Nullable
  private ImageHeight height = ImageHeight.ORIGINAL;

  public static final String JSON_PROPERTY_ASPECT_RATIO = "aspectRatio";

  @jakarta.annotation.Nullable
  private ImageAspectRatio aspectRatio = ImageAspectRatio.ORIGINAL;

  public ImageQuery() {}

  public ImageQuery objectKey(@jakarta.annotation.Nonnull String objectKey) {
    this.objectKey = objectKey;
    return this;
  }

  /**
   * The unique identifier of the image.
   * @return objectKey
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_OBJECT_KEY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getObjectKey() {
    return objectKey;
  }

  @JsonProperty(JSON_PROPERTY_OBJECT_KEY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setObjectKey(@jakarta.annotation.Nonnull String objectKey) {
    this.objectKey = objectKey;
  }

  public ImageQuery height(@jakarta.annotation.Nullable ImageHeight height) {
    this.height = height;
    return this;
  }

  /**
   * Get height
   * @return height
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HEIGHT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public ImageHeight getHeight() {
    return height;
  }

  @JsonProperty(JSON_PROPERTY_HEIGHT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHeight(@jakarta.annotation.Nullable ImageHeight height) {
    this.height = height;
  }

  public ImageQuery aspectRatio(@jakarta.annotation.Nullable ImageAspectRatio aspectRatio) {
    this.aspectRatio = aspectRatio;
    return this;
  }

  /**
   * Get aspectRatio
   * @return aspectRatio
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ASPECT_RATIO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public ImageAspectRatio getAspectRatio() {
    return aspectRatio;
  }

  @JsonProperty(JSON_PROPERTY_ASPECT_RATIO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAspectRatio(@jakarta.annotation.Nullable ImageAspectRatio aspectRatio) {
    this.aspectRatio = aspectRatio;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ImageQuery imageQuery = (ImageQuery) o;
    return (
      Objects.equals(this.objectKey, imageQuery.objectKey) &&
      Objects.equals(this.height, imageQuery.height) &&
      Objects.equals(this.aspectRatio, imageQuery.aspectRatio)
    );
  }

  @Override
  public int hashCode() {
    return Objects.hash(objectKey, height, aspectRatio);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ImageQuery {\n");
    sb.append("    objectKey: ").append(toIndentedString(objectKey)).append("\n");
    sb.append("    height: ").append(toIndentedString(height)).append("\n");
    sb.append("    aspectRatio: ").append(toIndentedString(aspectRatio)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
