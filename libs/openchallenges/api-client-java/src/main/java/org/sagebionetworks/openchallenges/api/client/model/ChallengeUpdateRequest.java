/*
 * OpenChallenges API
 * Discover, explore, and contribute to open biomedical challenges.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.sagebionetworks.openchallenges.api.client.model;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Arrays;
import java.util.List;
import java.util.Objects;
import org.sagebionetworks.openchallenges.api.client.model.ChallengeCategory;
import org.sagebionetworks.openchallenges.api.client.model.ChallengeIncentive;
import org.sagebionetworks.openchallenges.api.client.model.ChallengeStatus;
import org.sagebionetworks.openchallenges.api.client.model.ChallengeSubmissionType;

/**
 * The information required to update a challenge
 */
@JsonPropertyOrder(
  {
    ChallengeUpdateRequest.JSON_PROPERTY_SLUG,
    ChallengeUpdateRequest.JSON_PROPERTY_NAME,
    ChallengeUpdateRequest.JSON_PROPERTY_HEADLINE,
    ChallengeUpdateRequest.JSON_PROPERTY_DESCRIPTION,
    ChallengeUpdateRequest.JSON_PROPERTY_DOI,
    ChallengeUpdateRequest.JSON_PROPERTY_STATUS,
    ChallengeUpdateRequest.JSON_PROPERTY_PLATFORM_ID,
    ChallengeUpdateRequest.JSON_PROPERTY_WEBSITE_URL,
    ChallengeUpdateRequest.JSON_PROPERTY_AVATAR_URL,
    ChallengeUpdateRequest.JSON_PROPERTY_INCENTIVES,
    ChallengeUpdateRequest.JSON_PROPERTY_SUBMISSION_TYPES,
    ChallengeUpdateRequest.JSON_PROPERTY_CATEGORIES,
    ChallengeUpdateRequest.JSON_PROPERTY_INPUT_DATA_TYPES,
    ChallengeUpdateRequest.JSON_PROPERTY_OPERATION,
    ChallengeUpdateRequest.JSON_PROPERTY_START_DATE,
    ChallengeUpdateRequest.JSON_PROPERTY_END_DATE,
  }
)
@jakarta.annotation.Generated(
  value = "org.openapitools.codegen.languages.JavaClientCodegen",
  comments = "Generator version: 7.14.0"
)
public class ChallengeUpdateRequest {

  public static final String JSON_PROPERTY_SLUG = "slug";

  @jakarta.annotation.Nonnull
  private String slug;

  public static final String JSON_PROPERTY_NAME = "name";

  @jakarta.annotation.Nonnull
  private String name;

  public static final String JSON_PROPERTY_HEADLINE = "headline";

  @jakarta.annotation.Nullable
  private String headline;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";

  @jakarta.annotation.Nonnull
  private String description;

  public static final String JSON_PROPERTY_DOI = "doi";

  @jakarta.annotation.Nullable
  private String doi;

  public static final String JSON_PROPERTY_STATUS = "status";

  @jakarta.annotation.Nonnull
  private ChallengeStatus status;

  public static final String JSON_PROPERTY_PLATFORM_ID = "platformId";

  @jakarta.annotation.Nonnull
  private Long platformId;

  public static final String JSON_PROPERTY_WEBSITE_URL = "websiteUrl";

  @jakarta.annotation.Nullable
  private String websiteUrl;

  public static final String JSON_PROPERTY_AVATAR_URL = "avatarUrl";

  @jakarta.annotation.Nullable
  private String avatarUrl;

  public static final String JSON_PROPERTY_INCENTIVES = "incentives";

  @jakarta.annotation.Nonnull
  private List<ChallengeIncentive> incentives = new ArrayList<>();

  public static final String JSON_PROPERTY_SUBMISSION_TYPES = "submissionTypes";

  @jakarta.annotation.Nonnull
  private List<ChallengeSubmissionType> submissionTypes = new ArrayList<>();

  public static final String JSON_PROPERTY_CATEGORIES = "categories";

  @jakarta.annotation.Nonnull
  private List<ChallengeCategory> categories = new ArrayList<>();

  public static final String JSON_PROPERTY_INPUT_DATA_TYPES = "inputDataTypes";

  @jakarta.annotation.Nonnull
  private List<Integer> inputDataTypes = new ArrayList<>();

  public static final String JSON_PROPERTY_OPERATION = "operation";

  @jakarta.annotation.Nonnull
  private Integer operation;

  public static final String JSON_PROPERTY_START_DATE = "startDate";

  @jakarta.annotation.Nullable
  private LocalDate startDate;

  public static final String JSON_PROPERTY_END_DATE = "endDate";

  @jakarta.annotation.Nullable
  private LocalDate endDate;

  public ChallengeUpdateRequest() {}

  public ChallengeUpdateRequest slug(@jakarta.annotation.Nonnull String slug) {
    this.slug = slug;
    return this;
  }

  /**
   * The unique slug of the challenge.
   * @return slug
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SLUG)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getSlug() {
    return slug;
  }

  @JsonProperty(JSON_PROPERTY_SLUG)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSlug(@jakarta.annotation.Nonnull String slug) {
    this.slug = slug;
  }

  public ChallengeUpdateRequest name(@jakarta.annotation.Nonnull String name) {
    this.name = name;
    return this;
  }

  /**
   * The name of the challenge.
   * @return name
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getName() {
    return name;
  }

  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(@jakarta.annotation.Nonnull String name) {
    this.name = name;
  }

  public ChallengeUpdateRequest headline(@jakarta.annotation.Nullable String headline) {
    this.headline = headline;
    return this;
  }

  /**
   * The headline of the challenge.
   * @return headline
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HEADLINE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getHeadline() {
    return headline;
  }

  @JsonProperty(JSON_PROPERTY_HEADLINE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setHeadline(@jakarta.annotation.Nullable String headline) {
    this.headline = headline;
  }

  public ChallengeUpdateRequest description(@jakarta.annotation.Nonnull String description) {
    this.description = description;
    return this;
  }

  /**
   * The description of the challenge.
   * @return description
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getDescription() {
    return description;
  }

  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDescription(@jakarta.annotation.Nonnull String description) {
    this.description = description;
  }

  public ChallengeUpdateRequest doi(@jakarta.annotation.Nullable String doi) {
    this.doi = doi;
    return this;
  }

  /**
   * The DOI of the challenge.
   * @return doi
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DOI)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getDoi() {
    return doi;
  }

  @JsonProperty(JSON_PROPERTY_DOI)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDoi(@jakarta.annotation.Nullable String doi) {
    this.doi = doi;
  }

  public ChallengeUpdateRequest status(@jakarta.annotation.Nonnull ChallengeStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public ChallengeStatus getStatus() {
    return status;
  }

  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStatus(@jakarta.annotation.Nonnull ChallengeStatus status) {
    this.status = status;
  }

  public ChallengeUpdateRequest platformId(@jakarta.annotation.Nonnull Long platformId) {
    this.platformId = platformId;
    return this;
  }

  /**
   * The unique identifier of a challenge platform.
   * @return platformId
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PLATFORM_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public Long getPlatformId() {
    return platformId;
  }

  @JsonProperty(JSON_PROPERTY_PLATFORM_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPlatformId(@jakarta.annotation.Nonnull Long platformId) {
    this.platformId = platformId;
  }

  public ChallengeUpdateRequest websiteUrl(@jakarta.annotation.Nullable String websiteUrl) {
    this.websiteUrl = websiteUrl;
    return this;
  }

  /**
   * A URL to the website or image.
   * @return websiteUrl
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_WEBSITE_URL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getWebsiteUrl() {
    return websiteUrl;
  }

  @JsonProperty(JSON_PROPERTY_WEBSITE_URL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setWebsiteUrl(@jakarta.annotation.Nullable String websiteUrl) {
    this.websiteUrl = websiteUrl;
  }

  public ChallengeUpdateRequest avatarUrl(@jakarta.annotation.Nullable String avatarUrl) {
    this.avatarUrl = avatarUrl;
    return this;
  }

  /**
   * A URL to the website or image.
   * @return avatarUrl
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AVATAR_URL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getAvatarUrl() {
    return avatarUrl;
  }

  @JsonProperty(JSON_PROPERTY_AVATAR_URL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAvatarUrl(@jakarta.annotation.Nullable String avatarUrl) {
    this.avatarUrl = avatarUrl;
  }

  public ChallengeUpdateRequest incentives(
    @jakarta.annotation.Nonnull List<ChallengeIncentive> incentives
  ) {
    this.incentives = incentives;
    return this;
  }

  public ChallengeUpdateRequest addIncentivesItem(ChallengeIncentive incentivesItem) {
    if (this.incentives == null) {
      this.incentives = new ArrayList<>();
    }
    this.incentives.add(incentivesItem);
    return this;
  }

  /**
   * Get incentives
   * @return incentives
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_INCENTIVES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public List<ChallengeIncentive> getIncentives() {
    return incentives;
  }

  @JsonProperty(JSON_PROPERTY_INCENTIVES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIncentives(@jakarta.annotation.Nonnull List<ChallengeIncentive> incentives) {
    this.incentives = incentives;
  }

  public ChallengeUpdateRequest submissionTypes(
    @jakarta.annotation.Nonnull List<ChallengeSubmissionType> submissionTypes
  ) {
    this.submissionTypes = submissionTypes;
    return this;
  }

  public ChallengeUpdateRequest addSubmissionTypesItem(
    ChallengeSubmissionType submissionTypesItem
  ) {
    if (this.submissionTypes == null) {
      this.submissionTypes = new ArrayList<>();
    }
    this.submissionTypes.add(submissionTypesItem);
    return this;
  }

  /**
   * Get submissionTypes
   * @return submissionTypes
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SUBMISSION_TYPES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public List<ChallengeSubmissionType> getSubmissionTypes() {
    return submissionTypes;
  }

  @JsonProperty(JSON_PROPERTY_SUBMISSION_TYPES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSubmissionTypes(
    @jakarta.annotation.Nonnull List<ChallengeSubmissionType> submissionTypes
  ) {
    this.submissionTypes = submissionTypes;
  }

  public ChallengeUpdateRequest categories(
    @jakarta.annotation.Nonnull List<ChallengeCategory> categories
  ) {
    this.categories = categories;
    return this;
  }

  public ChallengeUpdateRequest addCategoriesItem(ChallengeCategory categoriesItem) {
    if (this.categories == null) {
      this.categories = new ArrayList<>();
    }
    this.categories.add(categoriesItem);
    return this;
  }

  /**
   * Get categories
   * @return categories
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CATEGORIES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public List<ChallengeCategory> getCategories() {
    return categories;
  }

  @JsonProperty(JSON_PROPERTY_CATEGORIES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCategories(@jakarta.annotation.Nonnull List<ChallengeCategory> categories) {
    this.categories = categories;
  }

  public ChallengeUpdateRequest inputDataTypes(
    @jakarta.annotation.Nonnull List<Integer> inputDataTypes
  ) {
    this.inputDataTypes = inputDataTypes;
    return this;
  }

  public ChallengeUpdateRequest addInputDataTypesItem(Integer inputDataTypesItem) {
    if (this.inputDataTypes == null) {
      this.inputDataTypes = new ArrayList<>();
    }
    this.inputDataTypes.add(inputDataTypesItem);
    return this;
  }

  /**
   * Get inputDataTypes
   * @return inputDataTypes
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_INPUT_DATA_TYPES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public List<Integer> getInputDataTypes() {
    return inputDataTypes;
  }

  @JsonProperty(JSON_PROPERTY_INPUT_DATA_TYPES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setInputDataTypes(@jakarta.annotation.Nonnull List<Integer> inputDataTypes) {
    this.inputDataTypes = inputDataTypes;
  }

  public ChallengeUpdateRequest operation(@jakarta.annotation.Nonnull Integer operation) {
    this.operation = operation;
    return this;
  }

  /**
   * The unique identifier of the EDAM concept.
   * minimum: 1
   * @return operation
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_OPERATION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public Integer getOperation() {
    return operation;
  }

  @JsonProperty(JSON_PROPERTY_OPERATION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setOperation(@jakarta.annotation.Nonnull Integer operation) {
    this.operation = operation;
  }

  public ChallengeUpdateRequest startDate(@jakarta.annotation.Nullable LocalDate startDate) {
    this.startDate = startDate;
    return this;
  }

  /**
   * The start date of the challenge.
   * @return startDate
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_START_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public LocalDate getStartDate() {
    return startDate;
  }

  @JsonProperty(JSON_PROPERTY_START_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStartDate(@jakarta.annotation.Nullable LocalDate startDate) {
    this.startDate = startDate;
  }

  public ChallengeUpdateRequest endDate(@jakarta.annotation.Nullable LocalDate endDate) {
    this.endDate = endDate;
    return this;
  }

  /**
   * The end date of the challenge.
   * @return endDate
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_END_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public LocalDate getEndDate() {
    return endDate;
  }

  @JsonProperty(JSON_PROPERTY_END_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEndDate(@jakarta.annotation.Nullable LocalDate endDate) {
    this.endDate = endDate;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ChallengeUpdateRequest challengeUpdateRequest = (ChallengeUpdateRequest) o;
    return (
      Objects.equals(this.slug, challengeUpdateRequest.slug) &&
      Objects.equals(this.name, challengeUpdateRequest.name) &&
      Objects.equals(this.headline, challengeUpdateRequest.headline) &&
      Objects.equals(this.description, challengeUpdateRequest.description) &&
      Objects.equals(this.doi, challengeUpdateRequest.doi) &&
      Objects.equals(this.status, challengeUpdateRequest.status) &&
      Objects.equals(this.platformId, challengeUpdateRequest.platformId) &&
      Objects.equals(this.websiteUrl, challengeUpdateRequest.websiteUrl) &&
      Objects.equals(this.avatarUrl, challengeUpdateRequest.avatarUrl) &&
      Objects.equals(this.incentives, challengeUpdateRequest.incentives) &&
      Objects.equals(this.submissionTypes, challengeUpdateRequest.submissionTypes) &&
      Objects.equals(this.categories, challengeUpdateRequest.categories) &&
      Objects.equals(this.inputDataTypes, challengeUpdateRequest.inputDataTypes) &&
      Objects.equals(this.operation, challengeUpdateRequest.operation) &&
      Objects.equals(this.startDate, challengeUpdateRequest.startDate) &&
      Objects.equals(this.endDate, challengeUpdateRequest.endDate)
    );
  }

  @Override
  public int hashCode() {
    return Objects.hash(
      slug,
      name,
      headline,
      description,
      doi,
      status,
      platformId,
      websiteUrl,
      avatarUrl,
      incentives,
      submissionTypes,
      categories,
      inputDataTypes,
      operation,
      startDate,
      endDate
    );
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ChallengeUpdateRequest {\n");
    sb.append("    slug: ").append(toIndentedString(slug)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    headline: ").append(toIndentedString(headline)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    doi: ").append(toIndentedString(doi)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    platformId: ").append(toIndentedString(platformId)).append("\n");
    sb.append("    websiteUrl: ").append(toIndentedString(websiteUrl)).append("\n");
    sb.append("    avatarUrl: ").append(toIndentedString(avatarUrl)).append("\n");
    sb.append("    incentives: ").append(toIndentedString(incentives)).append("\n");
    sb.append("    submissionTypes: ").append(toIndentedString(submissionTypes)).append("\n");
    sb.append("    categories: ").append(toIndentedString(categories)).append("\n");
    sb.append("    inputDataTypes: ").append(toIndentedString(inputDataTypes)).append("\n");
    sb.append("    operation: ").append(toIndentedString(operation)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
