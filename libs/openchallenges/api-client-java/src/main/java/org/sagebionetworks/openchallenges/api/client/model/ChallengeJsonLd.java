/*
 * OpenChallenges API
 * Discover, explore, and contribute to open biomedical challenges.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.sagebionetworks.openchallenges.api.client.model;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Arrays;
import java.util.List;
import java.util.NoSuchElementException;
import java.util.Objects;
import org.openapitools.jackson.nullable.JsonNullable;
import org.openapitools.jackson.nullable.JsonNullable;
import org.sagebionetworks.openchallenges.api.client.model.ChallengeCategory;
import org.sagebionetworks.openchallenges.api.client.model.ChallengeIncentive;
import org.sagebionetworks.openchallenges.api.client.model.ChallengeStatus;
import org.sagebionetworks.openchallenges.api.client.model.ChallengeSubmissionType;
import org.sagebionetworks.openchallenges.api.client.model.EdamConcept;
import org.sagebionetworks.openchallenges.api.client.model.SimpleChallengePlatform;

/**
 * A challenge
 */
@JsonPropertyOrder(
  {
    ChallengeJsonLd.JSON_PROPERTY_ID,
    ChallengeJsonLd.JSON_PROPERTY_SLUG,
    ChallengeJsonLd.JSON_PROPERTY_NAME,
    ChallengeJsonLd.JSON_PROPERTY_HEADLINE,
    ChallengeJsonLd.JSON_PROPERTY_DESCRIPTION,
    ChallengeJsonLd.JSON_PROPERTY_DOI,
    ChallengeJsonLd.JSON_PROPERTY_STATUS,
    ChallengeJsonLd.JSON_PROPERTY_PLATFORM,
    ChallengeJsonLd.JSON_PROPERTY_WEBSITE_URL,
    ChallengeJsonLd.JSON_PROPERTY_AVATAR_URL,
    ChallengeJsonLd.JSON_PROPERTY_INCENTIVES,
    ChallengeJsonLd.JSON_PROPERTY_SUBMISSION_TYPES,
    ChallengeJsonLd.JSON_PROPERTY_INPUT_DATA_TYPES,
    ChallengeJsonLd.JSON_PROPERTY_CATEGORIES,
    ChallengeJsonLd.JSON_PROPERTY_START_DATE,
    ChallengeJsonLd.JSON_PROPERTY_END_DATE,
    ChallengeJsonLd.JSON_PROPERTY_STARRED_COUNT,
    ChallengeJsonLd.JSON_PROPERTY_OPERATION,
    ChallengeJsonLd.JSON_PROPERTY_CREATED_AT,
    ChallengeJsonLd.JSON_PROPERTY_UPDATED_AT,
    ChallengeJsonLd.JSON_PROPERTY_AT_CONTEXT,
    ChallengeJsonLd.JSON_PROPERTY_AT_ID,
    ChallengeJsonLd.JSON_PROPERTY_AT_TYPE,
  }
)
@jakarta.annotation.Generated(
  value = "org.openapitools.codegen.languages.JavaClientCodegen",
  comments = "Generator version: 7.13.0"
)
public class ChallengeJsonLd {

  public static final String JSON_PROPERTY_ID = "id";

  @jakarta.annotation.Nonnull
  private Long id;

  public static final String JSON_PROPERTY_SLUG = "slug";

  @jakarta.annotation.Nonnull
  private String slug;

  public static final String JSON_PROPERTY_NAME = "name";

  @jakarta.annotation.Nonnull
  private String name;

  public static final String JSON_PROPERTY_HEADLINE = "headline";

  @jakarta.annotation.Nullable
  private JsonNullable<String> headline = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_DESCRIPTION = "description";

  @jakarta.annotation.Nonnull
  private String description;

  public static final String JSON_PROPERTY_DOI = "doi";

  @jakarta.annotation.Nullable
  private JsonNullable<String> doi = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_STATUS = "status";

  @jakarta.annotation.Nonnull
  private ChallengeStatus status;

  public static final String JSON_PROPERTY_PLATFORM = "platform";

  @jakarta.annotation.Nullable
  private JsonNullable<SimpleChallengePlatform> platform = JsonNullable.<
    SimpleChallengePlatform
  >undefined();

  public static final String JSON_PROPERTY_WEBSITE_URL = "websiteUrl";

  @jakarta.annotation.Nullable
  private JsonNullable<String> websiteUrl = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_AVATAR_URL = "avatarUrl";

  @jakarta.annotation.Nullable
  private JsonNullable<String> avatarUrl = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_INCENTIVES = "incentives";

  @jakarta.annotation.Nonnull
  private List<ChallengeIncentive> incentives = new ArrayList<>();

  public static final String JSON_PROPERTY_SUBMISSION_TYPES = "submissionTypes";

  @jakarta.annotation.Nonnull
  private List<ChallengeSubmissionType> submissionTypes = new ArrayList<>();

  public static final String JSON_PROPERTY_INPUT_DATA_TYPES = "inputDataTypes";

  @jakarta.annotation.Nullable
  private List<EdamConcept> inputDataTypes = new ArrayList<>();

  public static final String JSON_PROPERTY_CATEGORIES = "categories";

  @jakarta.annotation.Nonnull
  private List<ChallengeCategory> categories = new ArrayList<>();

  public static final String JSON_PROPERTY_START_DATE = "startDate";

  @jakarta.annotation.Nullable
  private JsonNullable<LocalDate> startDate = JsonNullable.<LocalDate>undefined();

  public static final String JSON_PROPERTY_END_DATE = "endDate";

  @jakarta.annotation.Nullable
  private JsonNullable<LocalDate> endDate = JsonNullable.<LocalDate>undefined();

  public static final String JSON_PROPERTY_STARRED_COUNT = "starredCount";

  @jakarta.annotation.Nonnull
  private Integer starredCount = 0;

  public static final String JSON_PROPERTY_OPERATION = "operation";

  @jakarta.annotation.Nullable
  private JsonNullable<EdamConcept> operation = JsonNullable.<EdamConcept>undefined();

  public static final String JSON_PROPERTY_CREATED_AT = "createdAt";

  @jakarta.annotation.Nonnull
  private OffsetDateTime createdAt;

  public static final String JSON_PROPERTY_UPDATED_AT = "updatedAt";

  @jakarta.annotation.Nonnull
  private OffsetDateTime updatedAt;

  public static final String JSON_PROPERTY_AT_CONTEXT = "@context";

  @jakarta.annotation.Nonnull
  private String atContext;

  public static final String JSON_PROPERTY_AT_ID = "@id";

  @jakarta.annotation.Nonnull
  private String atId;

  public static final String JSON_PROPERTY_AT_TYPE = "@type";

  @jakarta.annotation.Nonnull
  private String atType;

  public ChallengeJsonLd() {}

  public ChallengeJsonLd id(@jakarta.annotation.Nonnull Long id) {
    this.id = id;
    return this;
  }

  /**
   * The unique identifier of the challenge.
   * @return id
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public Long getId() {
    return id;
  }

  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(@jakarta.annotation.Nonnull Long id) {
    this.id = id;
  }

  public ChallengeJsonLd slug(@jakarta.annotation.Nonnull String slug) {
    this.slug = slug;
    return this;
  }

  /**
   * The unique slug of the challenge.
   * @return slug
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SLUG)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getSlug() {
    return slug;
  }

  @JsonProperty(JSON_PROPERTY_SLUG)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSlug(@jakarta.annotation.Nonnull String slug) {
    this.slug = slug;
  }

  public ChallengeJsonLd name(@jakarta.annotation.Nonnull String name) {
    this.name = name;
    return this;
  }

  /**
   * The name of the challenge.
   * @return name
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getName() {
    return name;
  }

  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(@jakarta.annotation.Nonnull String name) {
    this.name = name;
  }

  public ChallengeJsonLd headline(@jakarta.annotation.Nullable String headline) {
    this.headline = JsonNullable.<String>of(headline);

    return this;
  }

  /**
   * The headline of the challenge.
   * @return headline
   */
  @jakarta.annotation.Nullable
  @JsonIgnore
  public String getHeadline() {
    return headline.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_HEADLINE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public JsonNullable<String> getHeadline_JsonNullable() {
    return headline;
  }

  @JsonProperty(JSON_PROPERTY_HEADLINE)
  public void setHeadline_JsonNullable(JsonNullable<String> headline) {
    this.headline = headline;
  }

  public void setHeadline(@jakarta.annotation.Nullable String headline) {
    this.headline = JsonNullable.<String>of(headline);
  }

  public ChallengeJsonLd description(@jakarta.annotation.Nonnull String description) {
    this.description = description;
    return this;
  }

  /**
   * The description of the challenge.
   * @return description
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getDescription() {
    return description;
  }

  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDescription(@jakarta.annotation.Nonnull String description) {
    this.description = description;
  }

  public ChallengeJsonLd doi(@jakarta.annotation.Nullable String doi) {
    this.doi = JsonNullable.<String>of(doi);

    return this;
  }

  /**
   * The DOI of the challenge.
   * @return doi
   */
  @jakarta.annotation.Nullable
  @JsonIgnore
  public String getDoi() {
    return doi.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DOI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public JsonNullable<String> getDoi_JsonNullable() {
    return doi;
  }

  @JsonProperty(JSON_PROPERTY_DOI)
  public void setDoi_JsonNullable(JsonNullable<String> doi) {
    this.doi = doi;
  }

  public void setDoi(@jakarta.annotation.Nullable String doi) {
    this.doi = JsonNullable.<String>of(doi);
  }

  public ChallengeJsonLd status(@jakarta.annotation.Nonnull ChallengeStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public ChallengeStatus getStatus() {
    return status;
  }

  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStatus(@jakarta.annotation.Nonnull ChallengeStatus status) {
    this.status = status;
  }

  public ChallengeJsonLd platform(@jakarta.annotation.Nullable SimpleChallengePlatform platform) {
    this.platform = JsonNullable.<SimpleChallengePlatform>of(platform);

    return this;
  }

  /**
   * Get platform
   * @return platform
   */
  @jakarta.annotation.Nullable
  @JsonIgnore
  public SimpleChallengePlatform getPlatform() {
    return platform.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PLATFORM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public JsonNullable<SimpleChallengePlatform> getPlatform_JsonNullable() {
    return platform;
  }

  @JsonProperty(JSON_PROPERTY_PLATFORM)
  public void setPlatform_JsonNullable(JsonNullable<SimpleChallengePlatform> platform) {
    this.platform = platform;
  }

  public void setPlatform(@jakarta.annotation.Nullable SimpleChallengePlatform platform) {
    this.platform = JsonNullable.<SimpleChallengePlatform>of(platform);
  }

  public ChallengeJsonLd websiteUrl(@jakarta.annotation.Nullable String websiteUrl) {
    this.websiteUrl = JsonNullable.<String>of(websiteUrl);

    return this;
  }

  /**
   * A URL to the website or image.
   * @return websiteUrl
   */
  @jakarta.annotation.Nullable
  @JsonIgnore
  public String getWebsiteUrl() {
    return websiteUrl.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_WEBSITE_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public JsonNullable<String> getWebsiteUrl_JsonNullable() {
    return websiteUrl;
  }

  @JsonProperty(JSON_PROPERTY_WEBSITE_URL)
  public void setWebsiteUrl_JsonNullable(JsonNullable<String> websiteUrl) {
    this.websiteUrl = websiteUrl;
  }

  public void setWebsiteUrl(@jakarta.annotation.Nullable String websiteUrl) {
    this.websiteUrl = JsonNullable.<String>of(websiteUrl);
  }

  public ChallengeJsonLd avatarUrl(@jakarta.annotation.Nullable String avatarUrl) {
    this.avatarUrl = JsonNullable.<String>of(avatarUrl);

    return this;
  }

  /**
   * A URL to the website or image.
   * @return avatarUrl
   */
  @jakarta.annotation.Nullable
  @JsonIgnore
  public String getAvatarUrl() {
    return avatarUrl.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_AVATAR_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public JsonNullable<String> getAvatarUrl_JsonNullable() {
    return avatarUrl;
  }

  @JsonProperty(JSON_PROPERTY_AVATAR_URL)
  public void setAvatarUrl_JsonNullable(JsonNullable<String> avatarUrl) {
    this.avatarUrl = avatarUrl;
  }

  public void setAvatarUrl(@jakarta.annotation.Nullable String avatarUrl) {
    this.avatarUrl = JsonNullable.<String>of(avatarUrl);
  }

  public ChallengeJsonLd incentives(
    @jakarta.annotation.Nonnull List<ChallengeIncentive> incentives
  ) {
    this.incentives = incentives;
    return this;
  }

  public ChallengeJsonLd addIncentivesItem(ChallengeIncentive incentivesItem) {
    if (this.incentives == null) {
      this.incentives = new ArrayList<>();
    }
    this.incentives.add(incentivesItem);
    return this;
  }

  /**
   * Get incentives
   * @return incentives
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_INCENTIVES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public List<ChallengeIncentive> getIncentives() {
    return incentives;
  }

  @JsonProperty(JSON_PROPERTY_INCENTIVES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIncentives(@jakarta.annotation.Nonnull List<ChallengeIncentive> incentives) {
    this.incentives = incentives;
  }

  public ChallengeJsonLd submissionTypes(
    @jakarta.annotation.Nonnull List<ChallengeSubmissionType> submissionTypes
  ) {
    this.submissionTypes = submissionTypes;
    return this;
  }

  public ChallengeJsonLd addSubmissionTypesItem(ChallengeSubmissionType submissionTypesItem) {
    if (this.submissionTypes == null) {
      this.submissionTypes = new ArrayList<>();
    }
    this.submissionTypes.add(submissionTypesItem);
    return this;
  }

  /**
   * Get submissionTypes
   * @return submissionTypes
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SUBMISSION_TYPES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public List<ChallengeSubmissionType> getSubmissionTypes() {
    return submissionTypes;
  }

  @JsonProperty(JSON_PROPERTY_SUBMISSION_TYPES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSubmissionTypes(
    @jakarta.annotation.Nonnull List<ChallengeSubmissionType> submissionTypes
  ) {
    this.submissionTypes = submissionTypes;
  }

  public ChallengeJsonLd inputDataTypes(
    @jakarta.annotation.Nullable List<EdamConcept> inputDataTypes
  ) {
    this.inputDataTypes = inputDataTypes;
    return this;
  }

  public ChallengeJsonLd addInputDataTypesItem(EdamConcept inputDataTypesItem) {
    if (this.inputDataTypes == null) {
      this.inputDataTypes = new ArrayList<>();
    }
    this.inputDataTypes.add(inputDataTypesItem);
    return this;
  }

  /**
   * Get inputDataTypes
   * @return inputDataTypes
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INPUT_DATA_TYPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<EdamConcept> getInputDataTypes() {
    return inputDataTypes;
  }

  @JsonProperty(JSON_PROPERTY_INPUT_DATA_TYPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInputDataTypes(@jakarta.annotation.Nullable List<EdamConcept> inputDataTypes) {
    this.inputDataTypes = inputDataTypes;
  }

  public ChallengeJsonLd categories(
    @jakarta.annotation.Nonnull List<ChallengeCategory> categories
  ) {
    this.categories = categories;
    return this;
  }

  public ChallengeJsonLd addCategoriesItem(ChallengeCategory categoriesItem) {
    if (this.categories == null) {
      this.categories = new ArrayList<>();
    }
    this.categories.add(categoriesItem);
    return this;
  }

  /**
   * Get categories
   * @return categories
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CATEGORIES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public List<ChallengeCategory> getCategories() {
    return categories;
  }

  @JsonProperty(JSON_PROPERTY_CATEGORIES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCategories(@jakarta.annotation.Nonnull List<ChallengeCategory> categories) {
    this.categories = categories;
  }

  public ChallengeJsonLd startDate(@jakarta.annotation.Nullable LocalDate startDate) {
    this.startDate = JsonNullable.<LocalDate>of(startDate);

    return this;
  }

  /**
   * The start date of the challenge.
   * @return startDate
   */
  @jakarta.annotation.Nullable
  @JsonIgnore
  public LocalDate getStartDate() {
    return startDate.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_START_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public JsonNullable<LocalDate> getStartDate_JsonNullable() {
    return startDate;
  }

  @JsonProperty(JSON_PROPERTY_START_DATE)
  public void setStartDate_JsonNullable(JsonNullable<LocalDate> startDate) {
    this.startDate = startDate;
  }

  public void setStartDate(@jakarta.annotation.Nullable LocalDate startDate) {
    this.startDate = JsonNullable.<LocalDate>of(startDate);
  }

  public ChallengeJsonLd endDate(@jakarta.annotation.Nullable LocalDate endDate) {
    this.endDate = JsonNullable.<LocalDate>of(endDate);

    return this;
  }

  /**
   * The end date of the challenge.
   * @return endDate
   */
  @jakarta.annotation.Nullable
  @JsonIgnore
  public LocalDate getEndDate() {
    return endDate.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_END_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public JsonNullable<LocalDate> getEndDate_JsonNullable() {
    return endDate;
  }

  @JsonProperty(JSON_PROPERTY_END_DATE)
  public void setEndDate_JsonNullable(JsonNullable<LocalDate> endDate) {
    this.endDate = endDate;
  }

  public void setEndDate(@jakarta.annotation.Nullable LocalDate endDate) {
    this.endDate = JsonNullable.<LocalDate>of(endDate);
  }

  public ChallengeJsonLd starredCount(@jakarta.annotation.Nonnull Integer starredCount) {
    this.starredCount = starredCount;
    return this;
  }

  /**
   * The number of times the challenge has been starred by users.
   * minimum: 0
   * @return starredCount
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_STARRED_COUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public Integer getStarredCount() {
    return starredCount;
  }

  @JsonProperty(JSON_PROPERTY_STARRED_COUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStarredCount(@jakarta.annotation.Nonnull Integer starredCount) {
    this.starredCount = starredCount;
  }

  public ChallengeJsonLd operation(@jakarta.annotation.Nullable EdamConcept operation) {
    this.operation = JsonNullable.<EdamConcept>of(operation);

    return this;
  }

  /**
   * Get operation
   * @return operation
   */
  @jakarta.annotation.Nullable
  @JsonIgnore
  public EdamConcept getOperation() {
    return operation.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_OPERATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public JsonNullable<EdamConcept> getOperation_JsonNullable() {
    return operation;
  }

  @JsonProperty(JSON_PROPERTY_OPERATION)
  public void setOperation_JsonNullable(JsonNullable<EdamConcept> operation) {
    this.operation = operation;
  }

  public void setOperation(@jakarta.annotation.Nullable EdamConcept operation) {
    this.operation = JsonNullable.<EdamConcept>of(operation);
  }

  public ChallengeJsonLd createdAt(@jakarta.annotation.Nonnull OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  /**
   * Datetime when the object was added to the database.
   * @return createdAt
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreatedAt(@jakarta.annotation.Nonnull OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }

  public ChallengeJsonLd updatedAt(@jakarta.annotation.Nonnull OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

  /**
   * Datetime when the object was last modified in the database.
   * @return updatedAt
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_UPDATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }

  @JsonProperty(JSON_PROPERTY_UPDATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUpdatedAt(@jakarta.annotation.Nonnull OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
  }

  public ChallengeJsonLd atContext(@jakarta.annotation.Nonnull String atContext) {
    this.atContext = atContext;
    return this;
  }

  /**
   * Get atContext
   * @return atContext
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_AT_CONTEXT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getAtContext() {
    return atContext;
  }

  @JsonProperty(JSON_PROPERTY_AT_CONTEXT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAtContext(@jakarta.annotation.Nonnull String atContext) {
    this.atContext = atContext;
  }

  public ChallengeJsonLd atId(@jakarta.annotation.Nonnull String atId) {
    this.atId = atId;
    return this;
  }

  /**
   * Get atId
   * @return atId
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_AT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getAtId() {
    return atId;
  }

  @JsonProperty(JSON_PROPERTY_AT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAtId(@jakarta.annotation.Nonnull String atId) {
    this.atId = atId;
  }

  public ChallengeJsonLd atType(@jakarta.annotation.Nonnull String atType) {
    this.atType = atType;
    return this;
  }

  /**
   * Get atType
   * @return atType
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_AT_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getAtType() {
    return atType;
  }

  @JsonProperty(JSON_PROPERTY_AT_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAtType(@jakarta.annotation.Nonnull String atType) {
    this.atType = atType;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ChallengeJsonLd challengeJsonLd = (ChallengeJsonLd) o;
    return (
      Objects.equals(this.id, challengeJsonLd.id) &&
      Objects.equals(this.slug, challengeJsonLd.slug) &&
      Objects.equals(this.name, challengeJsonLd.name) &&
      equalsNullable(this.headline, challengeJsonLd.headline) &&
      Objects.equals(this.description, challengeJsonLd.description) &&
      equalsNullable(this.doi, challengeJsonLd.doi) &&
      Objects.equals(this.status, challengeJsonLd.status) &&
      equalsNullable(this.platform, challengeJsonLd.platform) &&
      equalsNullable(this.websiteUrl, challengeJsonLd.websiteUrl) &&
      equalsNullable(this.avatarUrl, challengeJsonLd.avatarUrl) &&
      Objects.equals(this.incentives, challengeJsonLd.incentives) &&
      Objects.equals(this.submissionTypes, challengeJsonLd.submissionTypes) &&
      Objects.equals(this.inputDataTypes, challengeJsonLd.inputDataTypes) &&
      Objects.equals(this.categories, challengeJsonLd.categories) &&
      equalsNullable(this.startDate, challengeJsonLd.startDate) &&
      equalsNullable(this.endDate, challengeJsonLd.endDate) &&
      Objects.equals(this.starredCount, challengeJsonLd.starredCount) &&
      equalsNullable(this.operation, challengeJsonLd.operation) &&
      Objects.equals(this.createdAt, challengeJsonLd.createdAt) &&
      Objects.equals(this.updatedAt, challengeJsonLd.updatedAt) &&
      Objects.equals(this.atContext, challengeJsonLd.atContext) &&
      Objects.equals(this.atId, challengeJsonLd.atId) &&
      Objects.equals(this.atType, challengeJsonLd.atType)
    );
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return (
      a == b ||
      (a != null &&
        b != null &&
        a.isPresent() &&
        b.isPresent() &&
        Objects.deepEquals(a.get(), b.get()))
    );
  }

  @Override
  public int hashCode() {
    return Objects.hash(
      id,
      slug,
      name,
      hashCodeNullable(headline),
      description,
      hashCodeNullable(doi),
      status,
      hashCodeNullable(platform),
      hashCodeNullable(websiteUrl),
      hashCodeNullable(avatarUrl),
      incentives,
      submissionTypes,
      inputDataTypes,
      categories,
      hashCodeNullable(startDate),
      hashCodeNullable(endDate),
      starredCount,
      hashCodeNullable(operation),
      createdAt,
      updatedAt,
      atContext,
      atId,
      atType
    );
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[] { a.get() }) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ChallengeJsonLd {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    slug: ").append(toIndentedString(slug)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    headline: ").append(toIndentedString(headline)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    doi: ").append(toIndentedString(doi)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    platform: ").append(toIndentedString(platform)).append("\n");
    sb.append("    websiteUrl: ").append(toIndentedString(websiteUrl)).append("\n");
    sb.append("    avatarUrl: ").append(toIndentedString(avatarUrl)).append("\n");
    sb.append("    incentives: ").append(toIndentedString(incentives)).append("\n");
    sb.append("    submissionTypes: ").append(toIndentedString(submissionTypes)).append("\n");
    sb.append("    inputDataTypes: ").append(toIndentedString(inputDataTypes)).append("\n");
    sb.append("    categories: ").append(toIndentedString(categories)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    starredCount: ").append(toIndentedString(starredCount)).append("\n");
    sb.append("    operation: ").append(toIndentedString(operation)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    atContext: ").append(toIndentedString(atContext)).append("\n");
    sb.append("    atId: ").append(toIndentedString(atId)).append("\n");
    sb.append("    atType: ").append(toIndentedString(atType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
