/*
 * OpenChallenges REST API
 * Discover, explore, and contribute to open biomedical challenges.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.sagebionetworks.openchallenges.api.client.model;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.NoSuchElementException;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.openapitools.jackson.nullable.JsonNullable;
import org.openapitools.jackson.nullable.JsonNullable;
import org.sagebionetworks.openchallenges.api.client.model.ChallengeCategory;
import org.sagebionetworks.openchallenges.api.client.model.ChallengeIncentive;
import org.sagebionetworks.openchallenges.api.client.model.ChallengeStatus;
import org.sagebionetworks.openchallenges.api.client.model.ChallengeSubmissionType;
import org.sagebionetworks.openchallenges.api.client.model.EdamConcept;
import org.sagebionetworks.openchallenges.api.client.model.SimpleChallengePlatform;

/**
 * Model tests for Challenge
 */
class ChallengeTest {

  private final Challenge model = new Challenge();

  /**
   * Model tests for Challenge
   */
  @Test
  void testChallenge() {
    // TODO: test Challenge
  }

  /**
   * Test the property 'id'
   */
  @Test
  void idTest() {
    // TODO: test id
  }

  /**
   * Test the property 'slug'
   */
  @Test
  void slugTest() {
    // TODO: test slug
  }

  /**
   * Test the property 'name'
   */
  @Test
  void nameTest() {
    // TODO: test name
  }

  /**
   * Test the property 'headline'
   */
  @Test
  void headlineTest() {
    // TODO: test headline
  }

  /**
   * Test the property 'description'
   */
  @Test
  void descriptionTest() {
    // TODO: test description
  }

  /**
   * Test the property 'doi'
   */
  @Test
  void doiTest() {
    // TODO: test doi
  }

  /**
   * Test the property 'status'
   */
  @Test
  void statusTest() {
    // TODO: test status
  }

  /**
   * Test the property 'platform'
   */
  @Test
  void platformTest() {
    // TODO: test platform
  }

  /**
   * Test the property 'websiteUrl'
   */
  @Test
  void websiteUrlTest() {
    // TODO: test websiteUrl
  }

  /**
   * Test the property 'avatarUrl'
   */
  @Test
  void avatarUrlTest() {
    // TODO: test avatarUrl
  }

  /**
   * Test the property 'incentives'
   */
  @Test
  void incentivesTest() {
    // TODO: test incentives
  }

  /**
   * Test the property 'submissionTypes'
   */
  @Test
  void submissionTypesTest() {
    // TODO: test submissionTypes
  }

  /**
   * Test the property 'inputDataTypes'
   */
  @Test
  void inputDataTypesTest() {
    // TODO: test inputDataTypes
  }

  /**
   * Test the property 'categories'
   */
  @Test
  void categoriesTest() {
    // TODO: test categories
  }

  /**
   * Test the property 'startDate'
   */
  @Test
  void startDateTest() {
    // TODO: test startDate
  }

  /**
   * Test the property 'endDate'
   */
  @Test
  void endDateTest() {
    // TODO: test endDate
  }

  /**
   * Test the property 'starredCount'
   */
  @Test
  void starredCountTest() {
    // TODO: test starredCount
  }

  /**
   * Test the property 'operation'
   */
  @Test
  void operationTest() {
    // TODO: test operation
  }

  /**
   * Test the property 'createdAt'
   */
  @Test
  void createdAtTest() {
    // TODO: test createdAt
  }

  /**
   * Test the property 'updatedAt'
   */
  @Test
  void updatedAtTest() {
    // TODO: test updatedAt
  }
}
