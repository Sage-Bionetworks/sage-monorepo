/*
 * OpenChallenges REST API
 * Discover, explore, and contribute to open biomedical challenges.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.sagebionetworks.openchallenges.api.client.api;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.sagebionetworks.openchallenges.api.client.model.BasicError;
import org.sagebionetworks.openchallenges.api.client.model.Organization;
import org.sagebionetworks.openchallenges.api.client.model.OrganizationCreateRequest;
import org.sagebionetworks.openchallenges.api.client.model.OrganizationSearchQuery;
import org.sagebionetworks.openchallenges.api.client.model.OrganizationUpdateRequest;
import org.sagebionetworks.openchallenges.api.client.model.OrganizationsPage;

/**
 * API tests for OrganizationApi
 */
@Disabled
public class OrganizationApiTest {

  private final OrganizationApi api = new OrganizationApi();

  /**
   * Create an organization
   *
   * Create an organization with the specified account name
   */
  @Test
  public void createOrganizationTest() {
    OrganizationCreateRequest organizationCreateRequest = null;
    Organization response = api.createOrganization(organizationCreateRequest);
    // TODO: test validations
  }

  /**
   * Delete an organization
   *
   * Deletes the organization specified by its login or ID.
   */
  @Test
  public void deleteOrganizationTest() {
    String org = null;
    api.deleteOrganization(org);
    // TODO: test validations
  }

  /**
   * Get an organization
   *
   * Returns the organization identified by its login or ID.
   */
  @Test
  public void getOrganizationTest() {
    String org = null;
    Organization response = api.getOrganization(org);
    // TODO: test validations
  }

  /**
   * List organizations
   *
   * List organizations
   */
  @Test
  public void listOrganizationsTest() {
    OrganizationSearchQuery organizationSearchQuery = null;
    OrganizationsPage response = api.listOrganizations(organizationSearchQuery);
    // TODO: test validations
  }

  /**
   * Update an existing organization
   *
   * Updates an existing organization.
   */
  @Test
  public void updateOrganizationTest() {
    String org = null;
    OrganizationUpdateRequest organizationUpdateRequest = null;
    Organization response = api.updateOrganization(org, organizationUpdateRequest);
    // TODO: test validations
  }
}
