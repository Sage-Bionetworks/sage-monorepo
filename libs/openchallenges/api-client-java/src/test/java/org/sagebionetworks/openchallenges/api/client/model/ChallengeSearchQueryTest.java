/*
 * OpenChallenges REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.sagebionetworks.openchallenges.api.client.model;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.NoSuchElementException;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.openapitools.jackson.nullable.JsonNullable;
import org.openapitools.jackson.nullable.JsonNullable;
import org.sagebionetworks.openchallenges.api.client.model.ChallengeCategory;
import org.sagebionetworks.openchallenges.api.client.model.ChallengeDirection;
import org.sagebionetworks.openchallenges.api.client.model.ChallengeIncentive;
import org.sagebionetworks.openchallenges.api.client.model.ChallengeSort;
import org.sagebionetworks.openchallenges.api.client.model.ChallengeStatus;
import org.sagebionetworks.openchallenges.api.client.model.ChallengeSubmissionType;

/**
 * Model tests for ChallengeSearchQuery
 */
class ChallengeSearchQueryTest {

  private final ChallengeSearchQuery model = new ChallengeSearchQuery();

  /**
   * Model tests for ChallengeSearchQuery
   */
  @Test
  void testChallengeSearchQuery() {
    // TODO: test ChallengeSearchQuery
  }

  /**
   * Test the property 'pageNumber'
   */
  @Test
  void pageNumberTest() {
    // TODO: test pageNumber
  }

  /**
   * Test the property 'pageSize'
   */
  @Test
  void pageSizeTest() {
    // TODO: test pageSize
  }

  /**
   * Test the property 'sort'
   */
  @Test
  void sortTest() {
    // TODO: test sort
  }

  /**
   * Test the property 'sortSeed'
   */
  @Test
  void sortSeedTest() {
    // TODO: test sortSeed
  }

  /**
   * Test the property 'direction'
   */
  @Test
  void directionTest() {
    // TODO: test direction
  }

  /**
   * Test the property 'incentives'
   */
  @Test
  void incentivesTest() {
    // TODO: test incentives
  }

  /**
   * Test the property 'minStartDate'
   */
  @Test
  void minStartDateTest() {
    // TODO: test minStartDate
  }

  /**
   * Test the property 'maxStartDate'
   */
  @Test
  void maxStartDateTest() {
    // TODO: test maxStartDate
  }

  /**
   * Test the property 'platforms'
   */
  @Test
  void platformsTest() {
    // TODO: test platforms
  }

  /**
   * Test the property 'organizations'
   */
  @Test
  void organizationsTest() {
    // TODO: test organizations
  }

  /**
   * Test the property 'status'
   */
  @Test
  void statusTest() {
    // TODO: test status
  }

  /**
   * Test the property 'submissionTypes'
   */
  @Test
  void submissionTypesTest() {
    // TODO: test submissionTypes
  }

  /**
   * Test the property 'inputDataTypes'
   */
  @Test
  void inputDataTypesTest() {
    // TODO: test inputDataTypes
  }

  /**
   * Test the property 'operations'
   */
  @Test
  void operationsTest() {
    // TODO: test operations
  }

  /**
   * Test the property 'categories'
   */
  @Test
  void categoriesTest() {
    // TODO: test categories
  }

  /**
   * Test the property 'searchTerms'
   */
  @Test
  void searchTermsTest() {
    // TODO: test searchTerms
  }
}
