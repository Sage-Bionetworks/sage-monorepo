/*
 * OpenChallenges REST API
 * Discover, explore, and contribute to open biomedical challenges.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.sagebionetworks.openchallenges.api.client.api;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.sagebionetworks.openchallenges.api.client.model.BasicError;
import org.sagebionetworks.openchallenges.api.client.model.Challenge;
import org.sagebionetworks.openchallenges.api.client.model.ChallengeJsonLd;
import org.sagebionetworks.openchallenges.api.client.model.ChallengeSearchQuery;
import org.sagebionetworks.openchallenges.api.client.model.ChallengesPage;

/**
 * API tests for ChallengeApi
 */
@Disabled
public class ChallengeApiTest {

  private final ChallengeApi api = new ChallengeApi();

  /**
   * Delete a challenge
   *
   * Deletes a challenge by its unique ID. This action is irreversible.
   */
  @Test
  public void deleteChallengeByIdTest() {
    Long challengeId = null;
    api.deleteChallengeById(challengeId);
    // TODO: test validations
  }

  /**
   * Get a challenge
   *
   * Returns the challenge specified
   */
  @Test
  public void getChallengeTest() {
    Long challengeId = null;
    Challenge response = api.getChallenge(challengeId);
    // TODO: test validations
  }

  /**
   * Get a challenge in JSON-LD format
   *
   * Returns the challenge specified in JSON-LD format
   */
  @Test
  public void getChallengeJsonLdTest() {
    Long challengeId = null;
    ChallengeJsonLd response = api.getChallengeJsonLd(challengeId);
    // TODO: test validations
  }

  /**
   * List challenges
   *
   * List challenges
   */
  @Test
  public void listChallengesTest() {
    ChallengeSearchQuery challengeSearchQuery = null;
    ChallengesPage response = api.listChallenges(challengeSearchQuery);
    // TODO: test validations
  }
}
