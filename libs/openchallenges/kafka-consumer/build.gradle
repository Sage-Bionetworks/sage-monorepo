buildscript {
  repositories {
    mavenCentral()
  }
}

plugins {
  id 'java'
  id 'maven-publish'
  id 'org.springframework.boot' version "${springBootVersion}"
  id "io.spring.dependency-management" version "${springDependencyManagementVersion}"
}

repositories {
  mavenCentral()
  maven {
    url "https://packages.confluent.io/maven/"
  }
  mavenLocal()
}

dependencies {
  // Lombok (needs org.springframework.data:spring-data-commons)
  annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
  compileOnly "org.projectlombok:lombok:${lombokVersion}"

  // implementation "org.apache.httpcomponents.client5:httpclient5-fluent:${apacheHttpcomponentsVersion}"
  // implementation "org.apache.httpcomponents.client5:httpclient5:${apacheHttpcomponentsVersion}"
  // implementation "com.fasterxml.jackson.core:jackson-databind:${fasterxmlVersion}"
  implementation "org.sagebionetworks.openchallenges:openchallenges-kafka-model:${openchallengesVersion}"
  implementation "org.sagebionetworks.openchallenges:openchallenges-kafka-admin:${openchallengesVersion}"
  implementation "org.sagebionetworks.openchallenges:openchallenges-app-config-data:${openchallengesVersion}"
  implementation "org.springframework.boot:spring-boot-devtools:${springBootVersion}"
  implementation "org.springframework.data:spring-data-commons:${springDataVersion}"
  testImplementation "org.springframework.boot:spring-boot-starter-test:${springBootVersion}"
  implementation "org.springframework.kafka:spring-kafka:${springKafkaVersion}"
  implementation('io.confluent:kafka-avro-serializer:5.5.13') {
    exclude module: 'org.slf4j:slf4j-log4j12'
    exclude module: 'log4j:log4j'
    exclude module: 'io.swagger:swagger-annotations'
    exclude module: 'swagger-core'
  }
  implementation 'javax.annotation:javax.annotation-api:1.3.2'
  // implementation "org.springframework.retry:spring-retry:${springRetryVersion}"
  // implementation "org.springframework.boot:spring-boot-starter-aop:${springBootVersion}"
  // implementation "org.springframework.boot:spring-boot-starter-webflux:${springBootVersion}"
}

group = 'org.sagebionetworks.openchallenges'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

tasks.named('test') {
	useJUnitPlatform()
}

tasks.withType(JavaCompile) {
  options.encoding = 'UTF-8'
}

publishing {
  publications {
    maven(MavenPublication) {
      from(components.java)
    }
  }
}

// spring boot library projects don't need an executable jar, so we disable it
bootJar {
	enabled = false
}
jar {
	enabled = true
  archiveClassifier = '' // use empty string
}
