# coding: utf-8

"""
    OpenChallenges API

    Discover, explore, and contribute to open biomedical challenges.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openchallenges_api_client_python.models.challenge_create_request import ChallengeCreateRequest

class TestChallengeCreateRequest(unittest.TestCase):
    """ChallengeCreateRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ChallengeCreateRequest:
        """Test ChallengeCreateRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ChallengeCreateRequest`
        """
        model = ChallengeCreateRequest()
        if include_optional:
            return ChallengeCreateRequest(
                slug = 'awesome-challenge',
                name = 'Awesome Challenge',
                headline = 'Example challenge headline',
                description = 'This is an example description of the challenge.',
                doi = 'https://doi.org/123/abc',
                status = 'active',
                platform_id = 1,
                website_url = 'https://openchallenges.io',
                avatar_url = 'https://openchallenges.io',
                start_date = 'Fri Jul 21 00:00:00 UTC 2017',
                end_date = 'Fri Jul 21 00:00:00 UTC 2017',
                incentives = [
                    'publication'
                    ],
                submission_types = [
                    'container_image'
                    ],
                categories = [
                    'featured'
                    ],
                input_data_types = [
                    1
                    ],
                operation = 1
            )
        else:
            return ChallengeCreateRequest(
                slug = 'awesome-challenge',
                name = 'Awesome Challenge',
                status = 'active',
                website_url = 'https://openchallenges.io',
        )
        """

    def testChallengeCreateRequest(self):
        """Test ChallengeCreateRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
