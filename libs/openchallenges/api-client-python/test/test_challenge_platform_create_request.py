# coding: utf-8

"""
OpenChallenges API

Discover, explore, and contribute to open biomedical challenges.

The version of the OpenAPI document: 1.0.0
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""  # noqa: E501

import unittest

from openchallenges_api_client.models.challenge_platform_create_request import (
    ChallengePlatformCreateRequest,
)


class TestChallengePlatformCreateRequest(unittest.TestCase):
    """ChallengePlatformCreateRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ChallengePlatformCreateRequest:
        """Test ChallengePlatformCreateRequest
        include_optional is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `ChallengePlatformCreateRequest`
        """
        model = ChallengePlatformCreateRequest()
        if include_optional:
            return ChallengePlatformCreateRequest(
                slug = 'example-challenge-platform',
                name = 'Example Challenge Platform',
                avatar_key = 'logo/dream.png',
                website_url = 'https://openchallenges.io'
            )
        else:
            return ChallengePlatformCreateRequest(
                slug = 'example-challenge-platform',
                name = 'Example Challenge Platform',
                avatar_key = 'logo/dream.png',
                website_url = 'https://openchallenges.io',
        )
        """

    def testChallengePlatformCreateRequest(self):
        """Test ChallengePlatformCreateRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
