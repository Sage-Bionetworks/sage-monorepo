# coding: utf-8

"""
OpenChallenges API

Discover, explore, and contribute to open biomedical challenges.

The version of the OpenAPI document: 1.0.0
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""  # noqa: E501

import unittest

from openchallenges_api_client_python.models.organization import Organization


class TestOrganization(unittest.TestCase):
    """Organization unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Organization:
        """Test Organization
        include_optional is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `Organization`
        """
        model = Organization()
        if include_optional:
            return Organization(
                id = 1,
                name = 'Example organization',
                login = 'example-org',
                description = 'A description of the organization.',
                avatar_key = 'logo/dream.png',
                website_url = 'https://openchallenges.io',
                challenge_count = 10,
                acronym = 'OC',
                created_at = '2022-07-04T22:19:11Z',
                updated_at = '2022-07-04T22:19:11Z'
            )
        else:
            return Organization(
                id = 1,
                name = 'Example organization',
                login = 'example-org',
                website_url = 'https://openchallenges.io',
                challenge_count = 10,
                created_at = '2022-07-04T22:19:11Z',
                updated_at = '2022-07-04T22:19:11Z',
        )
        """

    def testOrganization(self):
        """Test Organization"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
