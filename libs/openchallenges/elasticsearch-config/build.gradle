buildscript {
  repositories {
    mavenCentral()
  }
}

plugins {
  id 'com.diffplug.spotless' version "${spotlessVersion}"
  id 'java'
  id 'maven-publish'
  id 'org.springframework.boot' version "${springBootVersion}"
  id "io.spring.dependency-management" version "${springDependencyManagementVersion}"
}

repositories {
  mavenCentral()
  mavenLocal()
}

dependencies {
  // annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
  // compileOnly "org.projectlombok:lombok:${lombokVersion}"
  implementation "org.sagebionetworks.openchallenges:openchallenges-app-config-data:${openchallengesVersion}"
  implementation "org.springframework.boot:spring-boot-devtools:${springBootVersion}"
  implementation "org.springframework.boot:spring-boot-starter-data-elasticsearch:${springBootVersion}"
  implementation 'org.springframework:spring-web:6.0.5'
  implementation 'org.elasticsearch:elasticsearch:7.17.8'
  implementation 'org.elasticsearch.client:elasticsearch-rest-high-level-client:7.17.8'
  testImplementation "org.springframework.boot:spring-boot-starter-test:${springBootVersion}"
}

group = 'org.sagebionetworks.openchallenges'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

tasks.named('test') {
	useJUnitPlatform()
}

tasks.withType(JavaCompile) {
  options.encoding = 'UTF-8'
}

publishing {
  publications {
    maven(MavenPublication) {
      from(components.java)
    }
  }
}

// spring boot library projects don't need an executable jar, so we disable it
bootJar {
	enabled = false
}

jar {
	enabled = true
  archiveClassifier = '' // use empty string
}

spotless {
  // format 'misc', {
  //   target '*.gradle', '*.md', '.gitignore'

  //   trimTrailingWhitespace()
  //   indentWithSpaces(2)
  //   endWithNewline()
  // }

  java {
    target 'src/*/java/**/*.java'

    importOrder()
    removeUnusedImports()
    googleJavaFormat()
  }
}