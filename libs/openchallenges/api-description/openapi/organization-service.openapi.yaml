openapi: 3.0.3
info:
  version: 1.0.0
  title: OpenChallenges Organization API
  description: Discover, explore, and contribute to open biomedical challenges.
  license:
    name: Apache 2.0
    url: https://github.com/Sage-Bionetworks/sage-monorepo/blob/main/LICENSE.txt
  contact:
    name: Support
    url: https://github.com/Sage-Bionetworks/sage-monorepo
  x-logo:
    url: https://dev.openchallenges.io/img/unsafe/logo/OpenChallenges-logo.png
servers:
  - url: http://localhost/v1
tags:
  - name: Organization
    description: Operations about organizations
    x-audience:
      - public
  - name: Challenge Participation
    description: Operations about a challenge participation
    x-audience:
      - internal
paths:
  /organizations:
    get:
      tags:
        - Organization
      summary: List organizations
      description: List organizations
      operationId: listOrganizations
      x-audience:
        - public
      parameters:
        - $ref: '#/components/parameters/organizationSearchQuery'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationsPage'
          description: Success
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'
    post:
      tags:
        - Organization
      summary: Create an organization
      description: Create an organization with the specified account name
      operationId: createOrganization
      x-audience:
        - public
      security:
        - apiBearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationCreateRequest'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: Organization created successfully
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /organizations/{org}:
    parameters:
      - $ref: '#/components/parameters/org'
    get:
      tags:
        - Organization
      summary: Get an organization
      description: Returns the organization identified by its login or ID.
      operationId: getOrganization
      x-audience:
        - public
      responses:
        '200':
          description: Organization retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
    put:
      tags:
        - Organization
      summary: Update an existing organization
      description: Updates an existing organization.
      operationId: updateOrganization
      x-audience:
        - public
      security:
        - apiBearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationUpdateRequest'
      responses:
        '200':
          description: Organization successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      tags:
        - Organization
      summary: Delete an organization
      description: Deletes the organization specified by its login or ID.
      operationId: deleteOrganization
      x-audience:
        - public
      security:
        - apiBearerAuth: []
      responses:
        '204':
          description: Organization successfully deleted
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /organizations/{org}/participations:
    parameters:
      - $ref: '#/components/parameters/org'
    post:
      tags:
        - Challenge Participation
      summary: Create a new challenge participation
      description: Creates a new challenge participation.
      operationId: createChallengeParticipation
      x-audience:
        - internal
      security:
        - apiBearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChallengeParticipationCreateRequest'
      responses:
        '201':
          description: Participation created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChallengeParticipation'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /organizations/{org}/participations/{challengeId}/roles/{role}:
    parameters:
      - $ref: '#/components/parameters/org'
      - $ref: '#/components/parameters/challengeId'
      - $ref: '#/components/parameters/challengeParticipationRole'
    delete:
      tags:
        - Challenge Participation
      summary: Delete a specific challenge participation
      description: Delete a specific challenge participation.
      operationId: deleteChallengeParticipation
      x-audience:
        - internal
      security:
        - apiBearerAuth: []
      responses:
        '204':
          description: Participation deleted successfully
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  securitySchemes:
    apiBearerAuth:
      type: http
      scheme: bearer
      bearerFormat: api_key
      description: API key obtained from /auth/login endpoint
  schemas:
    OrganizationCategory:
      description: The category of the organization.
      type: string
      enum:
        - featured
      example: featured
    ChallengeContributionRole:
      description: The nature of a challenge contribution.
      type: string
      enum:
        - challenge_organizer
        - data_contributor
        - sponsor
      example: challenge_organizer
    OrganizationSort:
      description: What to sort results by.
      type: string
      default: relevance
      enum:
        - challenge_count
        - created
        - name
        - relevance
    OrganizationDirection:
      description: The direction to sort the results by.
      type: string
      nullable: true
      enum:
        - asc
        - desc
    OrganizationId:
      description: The unique identifier of an organization
      type: integer
      format: int64
      example: 1
    OrganizationSearchQuery:
      type: object
      description: An organization search query.
      properties:
        pageNumber:
          description: The page number.
          type: integer
          format: int32
          default: 0
          minimum: 0
        pageSize:
          description: The number of items in a single page.
          type: integer
          format: int32
          default: 100
          minimum: 1
        categories:
          description: The array of organization categories used to filter the results.
          type: array
          items:
            $ref: '#/components/schemas/OrganizationCategory'
        challengeContributionRoles:
          description: An array of challenge contribution roles used to filter the results.
          type: array
          items:
            $ref: '#/components/schemas/ChallengeContributionRole'
        sort:
          $ref: '#/components/schemas/OrganizationSort'
        direction:
          $ref: '#/components/schemas/OrganizationDirection'
        ids:
          description: An array of organization ids used to filter the results.
          type: array
          items:
            $ref: '#/components/schemas/OrganizationId'
        searchTerms:
          description: A string of search terms used to filter the results.
          type: string
          example: data provider
    PageMetadata:
      type: object
      description: The metadata of a page.
      properties:
        number:
          description: The page number.
          type: integer
          format: int32
          example: 99
        size:
          description: The number of items in a single page.
          type: integer
          format: int32
          example: 99
        totalElements:
          description: Total number of elements in the result set.
          type: integer
          format: int64
          example: 99
        totalPages:
          description: Total number of pages in the result set.
          type: integer
          format: int32
          example: 99
        hasNext:
          description: Returns if there is a next page.
          type: boolean
          example: true
        hasPrevious:
          description: Returns if there is a previous page.
          type: boolean
          example: true
      required:
        - number
        - size
        - totalElements
        - totalPages
        - hasNext
        - hasPrevious
    OrganizationLogin:
      description: The unique login of an organization.
      type: string
      minLength: 2
      maxLength: 64
      pattern: ^[a-z0-9]+(?:-[a-z0-9]+)*$
      example: example-org
    Url:
      description: A URL to the website or image.
      type: string
      format: url
      maxLength: 500
      nullable: true
      example: https://openchallenges.io
    CreatedDateTime:
      description: Datetime when the object was added to the database.
      type: string
      format: date-time
      example: '2022-07-04T22:19:11Z'
    UpdatedDateTime:
      description: Datetime when the object was last modified in the database.
      type: string
      format: date-time
      example: '2022-07-04T22:19:11Z'
    Organization:
      type: object
      description: An organization
      properties:
        id:
          $ref: '#/components/schemas/OrganizationId'
        name:
          description: The name of the organization.
          type: string
          example: Example organization
        login:
          $ref: '#/components/schemas/OrganizationLogin'
        description:
          description: A description of the organization.
          type: string
          nullable: true
          example: A description of the organization.
        avatarKey:
          type: string
          example: logo/dream.png
          nullable: true
        websiteUrl:
          $ref: '#/components/schemas/Url'
        challengeCount:
          description: The number of challenges involving this organization.
          type: integer
          minimum: 0
          default: 0
          example: 10
        acronym:
          description: An acronym of the organization.
          type: string
          maxLength: 10
          example: OC
          nullable: true
        createdAt:
          $ref: '#/components/schemas/CreatedDateTime'
        updatedAt:
          $ref: '#/components/schemas/UpdatedDateTime'
      required:
        - id
        - name
        - login
        - websiteUrl
        - challengeCount
        - createdAt
        - updatedAt
    OrganizationsPage:
      type: object
      description: A page of organizations
      allOf:
        - $ref: '#/components/schemas/PageMetadata'
        - type: object
          properties:
            organizations:
              description: A list of organizations
              type: array
              items:
                $ref: '#/components/schemas/Organization'
          required:
            - organizations
    BasicError:
      type: object
      description: Problem details (tools.ietf.org/html/rfc7807)
      properties:
        title:
          type: string
          description: A human readable documentation for the problem type
        status:
          type: integer
          description: The HTTP status code
        detail:
          type: string
          description: A human readable explanation specific to this occurrence of the problem
        type:
          type: string
          description: An absolute URI that identifies the problem type
      required:
        - title
        - status
    OrganizationCreateRequest:
      type: object
      description: The information required to create an org account
      properties:
        login:
          $ref: '#/components/schemas/OrganizationLogin'
        name:
          type: string
          example: Example organization
        description:
          type: string
          example: A short description of the organization.
          nullable: true
        avatarKey:
          type: string
          example: logo/300.png
          nullable: true
        websiteUrl:
          $ref: '#/components/schemas/Url'
        acronym:
          description: An acronym of the organization.
          type: string
          maxLength: 10
          example: OC
          nullable: true
      required:
        - login
        - name
        - websiteUrl
    OrganizationUpdateRequest:
      type: object
      description: The information required to update an org account
      properties:
        name:
          type: string
          example: Example organization
        description:
          type: string
          example: A short description of the organization.
          nullable: true
        avatarKey:
          type: string
          format: url
          example: https://via.placeholder.com/300.png
          nullable: true
        websiteUrl:
          $ref: '#/components/schemas/Url'
        acronym:
          description: An acronym of the organization.
          type: string
          maxLength: 10
          example: OC
          nullable: true
      required:
        - name
        - description
        - avatarKey
        - websiteUrl
        - acronym
    ChallengeId:
      description: The unique identifier of the challenge.
      type: integer
      format: int64
      example: 1
    ChallengeParticipationRole:
      description: The nature of a challenge participation.
      type: string
      enum:
        - challenge_organizer
        - data_contributor
        - sponsor
      example: challenge_organizer
    ChallengeParticipationCreateRequest:
      type: object
      description: |
        A request to create a challenge participation for an organization, defined by a challenge ID and a
        role.
      properties:
        challengeId:
          $ref: '#/components/schemas/ChallengeId'
        role:
          $ref: '#/components/schemas/ChallengeParticipationRole'
      required:
        - challengeId
        - role
    ChallengeParticipationId:
      description: The unique identifier of a challenge participation
      type: integer
      format: int64
      example: 1
    ChallengeParticipation:
      type: object
      description: An challenge participation.
      properties:
        id:
          $ref: '#/components/schemas/ChallengeParticipationId'
        challengeId:
          $ref: '#/components/schemas/ChallengeId'
        organizationId:
          $ref: '#/components/schemas/OrganizationId'
        role:
          $ref: '#/components/schemas/ChallengeParticipationRole'
      required:
        - id
        - challengeId
        - organizationId
        - role
  parameters:
    organizationSearchQuery:
      name: organizationSearchQuery
      description: The search query used to find organizations.
      in: query
      schema:
        $ref: '#/components/schemas/OrganizationSearchQuery'
    org:
      name: org
      in: path
      description: The id or login of the organization.
      required: true
      schema:
        type: string
        minLength: 1
        maxLength: 64
      examples:
        byString:
          value: dream
        byId:
          value: '1'
    challengeId:
      name: challengeId
      in: path
      description: The unique identifier of the challenge.
      required: true
      schema:
        $ref: '#/components/schemas/ChallengeId'
    challengeParticipationRole:
      name: role
      in: path
      description: A challenge participation role.
      required: true
      schema:
        $ref: '#/components/schemas/ChallengeParticipationRole'
  responses:
    BadRequest:
      description: Invalid request
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/BasicError'
    InternalServerError:
      description: The request cannot be fulfilled due to an unexpected server error
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/BasicError'
    Unauthorized:
      description: Unauthorized
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/BasicError'
    Forbidden:
      description: The user does not have the permission to perform this action
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/BasicError'
    Conflict:
      description: The request conflicts with current state of the target resource
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/BasicError'
    NotFound:
      description: The specified resource was not found
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/BasicError'
