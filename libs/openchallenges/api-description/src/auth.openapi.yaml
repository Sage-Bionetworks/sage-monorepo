openapi: 3.0.3
info:
  version: 1.0.0
  title: OpenChallenges Auth API
  description: Discover, explore, and contribute to open biomedical challenges.
  license:
    name: Apache 2.0
    url: https://github.com/Sage-Bionetworks/sage-monorepo/blob/main/LICENSE.txt
  contact:
    name: Support
    url: https://github.com/Sage-Bionetworks/sage-monorepo
  x-logo:
    url: https://dev.openchallenges.io/img/unsafe/logo/OpenChallenges-logo.png
servers:
  - url: http://localhost
    description: Local/dev base
tags:
  - name: Authentication
    description: Operations about authentication
    x-audience: [public]
  - name: API Key
    description: Operations about API key management
    x-audience: [public]
  - name: OAuth2
    description: Standard OAuth2 and OIDC endpoints for authorization and authentication
    x-audience: [public]
  - name: User
    description: Operations about user management and profile information
    x-audience: [public]
paths:
  # OAuth2 & OIDC endpoints (UNVERSIONED - standard OAuth2/OIDC specification)
  /oauth2/authorize:
    $ref: paths/oauth2/authorize.yaml
  /oauth2/token:
    $ref: paths/oauth2/token.yaml
  /oauth2/revoke:
    $ref: paths/oauth2/revoke.yaml
  /oauth2/introspect:
    $ref: paths/oauth2/introspect.yaml
  /oauth2/userinfo:
    $ref: paths/oauth2/userinfo.yaml

  # Well-known discovery endpoints (UNVERSIONED - standard OIDC specification)
  /.well-known/openid-configuration:
    $ref: paths/well-known/openid-configuration.yaml
  /.well-known/jwks.json:
    $ref: paths/well-known/jwks.yaml
  /.well-known/oauth-authorization-server:
    $ref: paths/well-known/oauth-authorization-server.yaml

  # API Resources (VERSIONED - custom OpenChallenges API)
  /v1/auth/login:
    $ref: paths/auth/login.yaml
  /v1/auth/oauth2/authorize:
    $ref: paths/auth/oauth2-authorize.yaml
  /v1/auth/oauth2/callback:
    $ref: paths/auth/oauth2-callback.yaml
  /v1/auth/oauth2/revoke:
    $ref: paths/auth/oauth2-revoke.yaml
  /v1/auth/jwt/validate:
    $ref: paths/auth/jwt-validate.yaml
  /v1/auth/jwt/refresh:
    $ref: paths/auth/jwt-refresh.yaml
  /v1/auth/logout:
    $ref: paths/auth/logout.yaml
  /v1/auth/api-keys:
    $ref: paths/auth/api-keys.yaml
  /v1/auth/api-keys/{keyId}:
    $ref: paths/auth/api-keys/{keyId}.yaml
  /v1/auth/validate:
    $ref: paths/auth/validate.yaml

  # User management (VERSIONED)
  /v1/user:
    $ref: paths/user.yaml
components:
  securitySchemes:
    # OAuth2 Authorization Code Flow with PKCE
    OAuth2:
      type: oauth2
      description: OAuth2 Authorization Code Flow with PKCE for secure authentication
      flows:
        authorizationCode:
          authorizationUrl: /oauth2/authorize
          tokenUrl: /oauth2/token
          refreshUrl: /oauth2/token
          scopes:
            # OpenID Connect scopes
            openid: OpenID Connect authentication
            profile: Access to user's basic profile information
            email: Access to user's email address

            # User management scopes
            user:profile: Access to user profile information
            user:email: Access to user email settings
            user:keys: Manage API keys

            # Organization scopes
            read:org: Read organization information
            write:org: Create and update organizations
            delete:org: Delete organizations
            admin:org: Administrative access to organizations

            # System administration
            admin:auth: Administrative access to authentication service
            admin:all: Full administrative access to all resources

    # JWT Bearer for existing APIs (use shared definition)
    jwtBearerAuth:
      $ref: components/securitySchemes/JwtBearerAuth.yaml

    # API Key for service-to-service communication (use shared definition)
    apiBearerAuth:
      $ref: components/securitySchemes/ApiBearerAuth.yaml
